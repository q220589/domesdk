var Laya = window.Laya = function (t, e) {
  var i = {
    __internals: [],
    __packages: {},
    __classmap: {
      Object: Object,
      Function: Function,
      Array: Array,
      String: String
    },
    __sysClass: {
      object: "Object",
      array: "Array",
      string: "String",
      dictionary: "Dictionary"
    },
    __propun: {
      writable: !0,
      enumerable: !1,
      configurable: !0
    },
    __presubstr: String.prototype.substr,
    __substr: function (t, e) {
      return 1 == arguments.length ? i.__presubstr.call(this, t) : i.__presubstr.call(this, t, e > 0 ? e : this.length + e);
    },
    __init: function (t) {
      t.forEach(function (t) {
        t.__init$ && t.__init$();
      });
    },
    __isClass: function (t) {
      return t && (t.__isclass || t == Object || t == String || t == Array);
    },
    __newvec: function (t, e) {
      var i = [];
      i.length = t;
      for (var n = 0; n < t; n++) i[n] = e;
      return i;
    },
    __extend: function (t, e) {
      function n() {
        i.un(this, "constructor", t);
      }
      for (var r in e)
        if (e.hasOwnProperty(r)) {
          var a = Object.getOwnPropertyDescriptor(e, r),
            s = a.get,
            o = a.set;
          s || o ? s && o ? Object.defineProperty(t, r, a) : (s && Object.defineProperty(t, r, s), o && Object.defineProperty(t, r, o)) : t[r] = e[r];
        }
      n.prototype = e.prototype, t.prototype = new n(), i.un(t.prototype, "__imps", i.__copy({}, e.prototype.__imps));
    },
    __copy: function (t, e) {
      if (!e) return null;
      t = t || {};
      for (var i in e) t[i] = e[i];
      return t;
    },
    __package: function (e, n) {
      if (!i.__packages[e]) {
        i.__packages[e] = !0;
        var r = t,
          a = e.split(".");
        if (a.length > 1)
          for (var s = 0, o = a.length - 1; s < o; s++) {
            var h = r[a[s]];
            r = h || (r[a[s]] = {});
          }
        r[a[a.length - 1]] || (r[a[a.length - 1]] = n || {});
      }
    },
    __hasOwnProperty: function (t, e) {
      function i(t, e) {
        if (Object.hasOwnProperty.call(e.prototype, t)) return !0;
        var n = e.prototype.__super;
        return null == n ? null : i(t, n);
      }
      return e = e || this, Object.hasOwnProperty.call(e, t) || i(t, e.__class);
    },
    __typeof: function (t, e) {
      if (!t || !e) return !1;
      if (e === String) return "string" == typeof t;
      if (e === Number) return "number" == typeof t;
      if (e.__interface__) e = e.__interface__;
      else if ("string" != typeof e) return t instanceof e;
      return t.__imps && t.__imps[e] || t.__class == e;
    },
    __as: function (t, e) {
      return this.__typeof(t, e) ? t : null;
    },
    __int: function (t) {
      return t ? parseInt(t) : 0;
    },
    interface: function (e, n) {
      i.__package(e, {});
      var r = i.__internals,
        a = r[e] = r[e] || {
          self: e
        };
      if (n) {
        var s = n.split(",");
        a.extend = [];
        for (u = 0; u < s.length; u++) {
          var o = s[u];
          r[o] = r[o] || {
            self: o
          }, a.extend.push(r[o]);
        }
      }
      for (var h = t, l = e.split("."), u = 0; u < l.length - 1; u++) h = h[l[u]];
      h[l[l.length - 1]] = {
        __interface__: e
      };
    },
    class: function (e, n, r, a) {
      if (r && i.__extend(e, r), n)
        if (i.__package(n, e), i.__classmap[n] = e, n.indexOf(".") > 0) {
          if (0 == n.indexOf("laya.")) {
            var s = n.split(".");
            a = a || s[s.length - 1], i[a] && console.log("Warning!,this class[" + a + "] already exist:", i[a]), i[a] = e;
          }
        } else "Main" == n ? t.Main = e : (i[n] && console.log("Error!,this class[" + n + "] already exist:", i[n]), i[n] = e);
      var o = i.un,
        h = e.prototype;
      o(h, "hasOwnProperty", i.__hasOwnProperty), o(h, "__class", e), o(h, "__super", r), o(h, "__className", n), o(e, "__super", r), o(e, "__className", n), o(e, "__isclass", !0), o(e, "super", function (t) {
        this.__super.call(t);
      });
    },
    imps: function (t, e) {
      function n(t) {
        var e, a;
        if ((e = i.__internals[t]) && (r[t] = !0, a = e.extend))
          for (var s = 0; s < a.length; s++) n(a[s].self);
      }
      if (!e) return null;
      var r = t.__imps || i.un(t, "__imps", {});
      for (var a in e) n(a);
    },
    superSet: function (t, e, i, n) {
      var r = t.prototype["_$set_" + i];
      r && r.call(e, n);
    },
    superGet: function (t, e, i) {
      var n = t.prototype["_$get_" + i];
      return n ? n.call(e) : null;
    },
    getset: function (t, e, n, r, a) {
      t ? (r && (e["_$GET_" + n] = r), a && (e["_$SET_" + n] = a)) : (r && i.un(e, "_$get_" + n, r), a && i.un(e, "_$set_" + n, a)), r && a ? Object.defineProperty(e, n, {
        get: r,
        set: a,
        enumerable: !1,
        configurable: !0
      }) : (r && Object.defineProperty(e, n, {
        get: r,
        enumerable: !1,
        configurable: !0
      }), a && Object.defineProperty(e, n, {
        set: a,
        enumerable: !1,
        configurable: !0
      }));
    },
    static: function (t, e) {
      for (var i = 0, n = e.length; i < n; i += 2) "length" == e[i] ? t.length = e[i + 1].call(t) : function () {
        var n = e[i],
          r = e[i + 1];
        Object.defineProperty(t, n, {
          get: function () {
            return delete this[n], this[n] = r.call(this);
          },
          set: function (t) {
            delete this[n], this[n] = t;
          },
          enumerable: !0,
          configurable: !0
        });
      }();
    },
    un: function (t, e, n) {
      return n || (n = t[e]), i.__propun.value = n, Object.defineProperty(t, e, i.__propun), n;
    },
    uns: function (t, e) {
      e.forEach(function (e) {
        i.un(t, e);
      });
    }
  };
  return t.console = t.console || {
    log: function () {}
  }, t.trace = t.console.log, Error.prototype.throwError = function () {
    throw arguments;
  }, Object.defineProperty(Array.prototype, "fixed", {
    enumerable: !1
  }), i;
}(window, document);
! function (t, e, i) {
  i.un, i.uns, i.static, i.class, i.getset, i.__newvec;
}(window, document, Laya),
function (t, e, i) {
  i.un, i.uns;
  var n = i.static,
    r = i.class,
    a = i.getset;
  i.__newvec;
  i.interface("laya.runtime.IMarket"), i.interface("laya.filters.IFilter"), i.interface("laya.display.ILayout"), i.interface("laya.resource.IDispose"), i.interface("laya.runtime.IPlatform"), i.interface("laya.resource.IDestroy"), i.interface("laya.runtime.IConchNode"), i.interface("laya.filters.IFilterAction"), i.interface("laya.runtime.ICPlatformClass"), i.interface("laya.resource.ICreateResource"), i.interface("laya.runtime.IConchRenderObject"), i.interface("laya.runtime.IPlatformClass", "laya.runtime.IPlatform");
  var s = function () {
      function e() {}
      return r(e, "laya.utils.RunDriver"), e.FILTER_ACTIONS = [], e.pixelRatio = -1, e._charSizeTestDiv = null, e.now = function () {
        return Date.now();
      }, e.getWindow = function () {
        return t;
      }, e.getPixelRatio = function () {
        if (e.pixelRatio < 0) {
          var t = F.context,
            i = t.backingStorePixelRatio || t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1;
          (e.pixelRatio = (F.window.devicePixelRatio || 1) / i) < 1 && (e.pixelRatio = 1);
        }
        return e.pixelRatio;
      }, e.getIncludeStr = function (t) {
        return null;
      }, e.createShaderCondition = function (t) {
        var e = "(function() {return " + t + ";})";
        return i._runScript(e);
      }, e.fontMap = [], e.measureText = function (t, i) {
        var n = e.hanzi.test(t);
        if (n && e.fontMap[i]) return e.fontMap[i];
        var r = F.context;
        r.font = i;
        var a = r.measureText(t);
        return n && (e.fontMap[i] = a), a;
      }, e.getWebGLContext = function (t) {}, e.beginFlush = function () {}, e.endFinish = function () {}, e.addToAtlas = null, e.flashFlushImage = function (t) {}, e.drawToCanvas = function (t, e, i, n, r, a) {
        var s = yt.create("2D"),
          o = new L(i, n, s);
        return O.renders[e]._fun(t, o, r, a), s;
      }, e.createParticleTemplate2D = null, e.createGLTextur = null, e.createWebGLContext2D = null, e.changeWebGLSize = function (t, e) {}, e.createRenderSprite = function (t, e) {
        return new O(t, e);
      }, e.createFilterAction = function (t) {
        return new T();
      }, e.createGraphics = function () {
        return new f();
      }, e.clear = function (t) {
        P._context.ctx.clear();
      }, e.cancelLoadByUrl = function (t) {}, e.clearAtlas = function (t) {}, e.isAtlas = function (t) {
        return !1;
      }, e.addTextureToAtlas = function (t) {}, e.getTexturePixels = function (t, e, i, n, r) {
        return null;
      }, e.skinAniSprite = function () {
        return null;
      }, e.update3DLoop = function () {}, n(e, ["hanzi", function () {
        return this.hanzi = new RegExp("^[一-龥]$");
      }]), e;
    }(),
    o = (a(1, i, "alertGlobalError", null, function (t) {
      var e = 0;
      F.window.onerror = t ? function (t, i, n, r, a) {
        e++ < 5 && a && alert("出错啦，请把此信息截图给研发商\n" + t + "\n" + a.stack || a);
      } : null;
    }), i.init = function (t, e, n) {
      for (var r = [], a = 2, s = arguments.length; a < s; a++) r.push(arguments[a]);
      if (!i._isinit) {
        ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = i._arrayBufferSlice), i._isinit = !0, F.__init__(), N.__init__(), f.__init__(), i.timer = new Y(), i.scaleTimer = new Y(), i.loader = new ot(), Z.__init__();
        for (var a = 0, o = r.length; a < o; a++) r[a].enable && r[a].enable();
        return _.__init__(), c.__init__(), V.__init__(), U.beginCheck(), i._currentStage = i.stage = new gt(), i.stage.conchModel && i.stage.conchModel.setRootNode(), i._getUrlPath(), i.render = new P(0, 0), i.stage.size(t, e), O.__init__(), g.__init__(), v.instance.__init__(i.stage, P.canvas), Tt.__init__(), I.autoStopMusic = !0, D.__init__(), P.canvas;
      }
    }, i._getUrlPath = function () {
      var t = F.window.location,
        e = t.pathname;
      e = ":" == e.charAt(2) ? e.substring(1) : e, R.rootPath = R.basePath = R.getPath("file:" == t.protocol ? e : t.protocol + "//" + t.host + t.pathname);
    }, i._arrayBufferSlice = function (t, e) {
      var i = new Uint8Array(this, t, e - t),
        n = new Uint8Array(i.length);
      return n.set(i), n.buffer;
    }, i._runScript = function (t) {
      return F.window[i._evcode](t);
    }, i.stage = null, i.timer = null, i.scaleTimer = null, i.loader = null, i.version = "1.7.20.1beta", i.render = null, i._currentStage = null, i._isinit = !1, i.MiniAdpter = {
      init: function () {
        t.navigator && t.navigator.userAgent && t.navigator.userAgent.indexOf("MiniGame") > -1 && console.error("请先引用小游戏适配库laya.wxmini.js,详细教程：https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0");
      }
    }, n(i, ["conchMarket", function () {
      return this.conchMarket = t.conch ? conchMarket : null;
    }, "PlatformClass", function () {
      return this.PlatformClass = t.PlatformClass;
    }, "_evcode", function () {
      return this._evcode = "e" + String.fromCharCode(118) + "al";
    }]), function () {
      function t() {}
      return r(t, "Config"), t.WebGLTextCacheCount = 500, t.atlasEnable = !1, t.showCanvasMark = !1, t.animationInterval = 50, t.isAntialias = !1, t.isAlpha = !1, t.premultipliedAlpha = !0, t.isStencil = !0, t.preserveDrawingBuffer = !1, t;
    }()),
    h = function () {
      function t() {
        this._events = null;
      }
      var e;
      r(t, "laya.events.EventDispatcher");
      var i = t.prototype;
      return i.hasListener = function (t) {
        return !!(this._events && this._events[t]);
      }, i.event = function (t, e) {
        if (!this._events || !this._events[t]) return !1;
        var i = this._events[t];
        if (i.run) i.once && delete this._events[t], null != e ? i.runWith(e) : i.run();
        else {
          for (var n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            a && (null != e ? a.runWith(e) : a.run()), a && !a.once || (i.splice(n, 1), n--, r--);
          }
          0 === i.length && this._events && delete this._events[t];
        }
        return !0;
      }, i.on = function (t, e, i, n) {
        return this._createListener(t, e, i, n, !1);
      }, i.once = function (t, e, i, n) {
        return this._createListener(t, e, i, n, !0);
      }, i._createListener = function (t, i, n, r, a, s) {
        void 0 === s && (s = !0), s && this.off(t, i, n, a);
        var o = e.create(i || this, n, r, a);
        this._events || (this._events = {});
        var h = this._events;
        return h[t] ? h[t].run ? h[t] = [h[t], o] : h[t].push(o) : h[t] = o, this;
      }, i.off = function (t, e, i, n) {
        if (void 0 === n && (n = !1), !this._events || !this._events[t]) return this;
        var r = this._events[t];
        if (null != i)
          if (r.run) e && r.caller !== e || r.method !== i || n && !r.once || (delete this._events[t], r.recover());
          else {
            for (var a = 0, s = 0, o = r.length; s < o; s++) {
              var h = r[s];
              h ? !h || e && h.caller !== e || h.method !== i || n && !h.once || (a++, r[s] = null, h.recover()) : a++;
            }
            a === o && delete this._events[t];
          }
        return this;
      }, i.offAll = function (t) {
        var e = this._events;
        if (!e) return this;
        if (t) this._recoverHandlers(e[t]), delete e[t];
        else {
          for (var i in e) this._recoverHandlers(e[i]);
          this._events = null;
        }
        return this;
      }, i._recoverHandlers = function (t) {
        if (t)
          if (t.run) t.recover();
          else
            for (var e = t.length - 1; e > -1; e--) t[e] && (t[e].recover(), t[e] = null);
      }, i.isMouseEvent = function (e) {
        return t.MOUSE_EVENTS[e];
      }, t.MOUSE_EVENTS = {
        rightmousedown: !0,
        rightmouseup: !0,
        rightclick: !0,
        mousedown: !0,
        mouseup: !0,
        mousemove: !0,
        mouseover: !0,
        mouseout: !0,
        click: !0,
        doubleclick: !0
      }, t.__init$ = function () {
        Object.defineProperty(laya.events.EventDispatcher.prototype, "_events", {
          enumerable: !1,
          writable: !0
        }), e = function (t) {
          function e(t, i, n, r) {
            e.__super.call(this, t, i, n, r);
          }
          r(e, "", l);
          return e.prototype.recover = function () {
            this._id > 0 && (this._id = 0, e._pool.push(this.clear()));
          }, e.create = function (t, i, n, r) {
            return void 0 === r && (r = !0), e._pool.length ? e._pool.pop().setTo(t, i, n, r) : new e(t, i, n, r);
          }, e._pool = [], e;
        }();
      }, t;
    }(),
    l = function () {
      function t(t, e, i, n) {
        this.once = !1, this._id = 0, void 0 === n && (n = !1), this.setTo(t, e, i, n);
      }
      r(t, "laya.utils.Handler");
      var e = t.prototype;
      return e.setTo = function (e, i, n, r) {
        return this._id = t._gid++, this.caller = e, this.method = i, this.args = n, this.once = r, this;
      }, e.run = function () {
        if (null == this.method) return null;
        var t = this._id,
          e = this.method.apply(this.caller, this.args);
        return this._id === t && this.once && this.recover(), e;
      }, e.runWith = function (t) {
        if (null == this.method) return null;
        var e = this._id;
        if (null == t) var i = this.method.apply(this.caller, this.args);
        else i = this.args || t.unshift ? this.args ? this.method.apply(this.caller, this.args.concat(t)) : this.method.apply(this.caller, t) : this.method.call(this.caller, t);
        return this._id === e && this.once && this.recover(), i;
      }, e.clear = function () {
        return this.caller = null, this.method = null, this.args = null, this;
      }, e.recover = function () {
        this._id > 0 && (this._id = 0, t._pool.push(this.clear()));
      }, t.create = function (e, i, n, r) {
        return void 0 === r && (r = !0), t._pool.length ? t._pool.pop().setTo(e, i, n, r) : new t(e, i, n, r);
      }, t._pool = [], t._gid = 1, t;
    }(),
    u = function () {
      function t() {
        this._texture = null, this._fontCharDic = {}, this._fontWidthMap = {}, this._complete = null, this._path = null, this._maxWidth = 0, this._spaceWidth = 10, this._padding = null, this.fontSize = 12, this.autoScaleSize = !1, this.letterSpacing = 0;
      }
      r(t, "laya.display.BitmapFont");
      var e = t.prototype;
      return e.loadFont = function (t, e) {
        this._path = t, this._complete = e, i.loader.load([{
          url: this._path,
          type: "xml"
        }, {
          url: this._path.replace(".fnt", ".png"),
          type: "image"
        }], l.create(this, this.onLoaded));
      }, e.onLoaded = function () {
        this.parseFont(st.getRes(this._path), st.getRes(this._path.replace(".fnt", ".png"))), this._complete && this._complete.runWith(this._texture ? this : null);
      }, e.parseFont = function (t, e) {
        if (null != t && null != e) {
          this._texture = e;
          var i = t.getElementsByTagName("info");
          if (!i[0].getAttributeNode) return this.parseFont2(t, e);
          this.fontSize = parseInt(i[0].getAttributeNode("size").nodeValue);
          var n = i[0].getAttributeNode("padding").nodeValue.split(",");
          this._padding = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];
          var r;
          r = t.getElementsByTagName("char");
          var a = 0;
          for (a = 0; a < r.length; a++) {
            var s = r[a],
              o = parseInt(s.getAttributeNode("id").nodeValue),
              h = parseInt(s.getAttributeNode("xoffset").nodeValue) / 1,
              l = parseInt(s.getAttributeNode("yoffset").nodeValue) / 1,
              u = parseInt(s.getAttributeNode("xadvance").nodeValue) / 1,
              c = new M();
            c.x = parseInt(s.getAttributeNode("x").nodeValue), c.y = parseInt(s.getAttributeNode("y").nodeValue), c.width = parseInt(s.getAttributeNode("width").nodeValue), c.height = parseInt(s.getAttributeNode("height").nodeValue);
            var _ = lt.create(e, c.x, c.y, c.width, c.height, h, l);
            this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing), this._fontCharDic[o] = _, this._fontWidthMap[o] = u;
          }
        }
      }, e.parseFont2 = function (t, e) {
        if (null != t && null != e) {
          this._texture = e;
          var i = t.getElementsByTagName("info");
          this.fontSize = parseInt(i[0].attributes.size.nodeValue);
          var n = i[0].attributes.padding.nodeValue.split(",");
          this._padding = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];
          var r = t.getElementsByTagName("char"),
            a = 0;
          for (a = 0; a < r.length; a++) {
            var s = r[a].attributes,
              o = parseInt(s.id.nodeValue),
              h = parseInt(s.xoffset.nodeValue) / 1,
              l = parseInt(s.yoffset.nodeValue) / 1,
              u = parseInt(s.xadvance.nodeValue) / 1,
              c = new M();
            c.x = parseInt(s.x.nodeValue), c.y = parseInt(s.y.nodeValue), c.width = parseInt(s.width.nodeValue), c.height = parseInt(s.height.nodeValue);
            var _ = lt.create(e, c.x, c.y, c.width, c.height, h, l);
            this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing), this._fontCharDic[o] = _, this._fontWidthMap[o] = u;
          }
        }
      }, e.getCharTexture = function (t) {
        return this._fontCharDic[t.charCodeAt(0)];
      }, e.destroy = function () {
        if (this._texture) {
          for (var t in this._fontCharDic) {
            var e = this._fontCharDic[t];
            e && e.destroy();
          }
          this._texture.destroy(), this._fontCharDic = null, this._fontWidthMap = null, this._texture = null;
        }
      }, e.setSpaceWidth = function (t) {
        this._spaceWidth = t;
      }, e.getCharWidth = function (t) {
        var e = t.charCodeAt(0);
        return this._fontWidthMap[e] ? this._fontWidthMap[e] + this.letterSpacing : " " == t ? this._spaceWidth + this.letterSpacing : 0;
      }, e.getTextWidth = function (t) {
        for (var e = 0, i = 0, n = t.length; i < n; i++) e += this.getCharWidth(t.charAt(i));
        return e;
      }, e.getMaxWidth = function () {
        return this._maxWidth;
      }, e.getMaxHeight = function () {
        return this.fontSize;
      }, e.drawText = function (t, e, i, n, r, a) {
        var s, o = this.getTextWidth(t),
          h = 0;
        "center" === r && (h = (a - o) / 2), "right" === r && (h = a - o);
        for (var l = 0, u = 0, c = t.length; u < c; u++)(s = this.getCharTexture(t.charAt(u))) && (e.graphics.drawTexture(s, i + l + h, n), l += this.getCharWidth(t.charAt(u)));
      }, t;
    }(),
    c = function () {
      function t() {
        this.alpha = 1, this.visible = !0, this.scrollRect = null, this.blendMode = null, this._type = 0, this._tf = t._TF_EMPTY;
      }
      r(t, "laya.display.css.Style");
      var e = t.prototype;
      return e.getTransform = function () {
        return this._tf;
      }, e.setTransform = function (e) {
        this._tf = "none" !== e && e ? e : t._TF_EMPTY;
      }, e.setTranslateX = function (e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.translateX = e;
      }, e.setTranslateY = function (e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.translateY = e;
      }, e.setScaleX = function (e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.scaleX = e;
      }, e.setScale = function (e, i) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.scaleX = e, this._tf.scaleY = i;
      }, e.setScaleY = function (e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.scaleY = e;
      }, e.setRotate = function (e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.rotate = e;
      }, e.setSkewX = function (e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.skewX = e;
      }, e.setSkewY = function (e) {
        this._tf === t._TF_EMPTY && (this._tf = new d()), this._tf.skewY = e;
      }, e.destroy = function () {
        this.scrollRect = null;
      }, e.render = function (t, e, i, n) {}, e.getCSSStyle = function () {
        return tt.EMPTY;
      }, e._enableLayout = function () {
        return !1;
      }, a(0, e, "scaleX", function () {
        return this._tf.scaleX;
      }, function (t) {
        this.setScaleX(t);
      }), a(0, e, "transform", function () {
        return this.getTransform();
      }, function (t) {
        this.setTransform(t);
      }), a(0, e, "translateX", function () {
        return this._tf.translateX;
      }, function (t) {
        this.setTranslateX(t);
      }), a(0, e, "translateY", function () {
        return this._tf.translateY;
      }, function (t) {
        this.setTranslateY(t);
      }), a(0, e, "scaleY", function () {
        return this._tf.scaleY;
      }, function (t) {
        this.setScaleY(t);
      }), a(0, e, "block", function () {
        return 0 != (1 & this._type);
      }), a(0, e, "skewY", function () {
        return this._tf.skewY;
      }, function (t) {
        this.setSkewY(t);
      }), a(0, e, "rotate", function () {
        return this._tf.rotate;
      }, function (t) {
        this.setRotate(t);
      }), a(0, e, "skewX", function () {
        return this._tf.skewX;
      }, function (t) {
        this.setSkewX(t);
      }), a(0, e, "paddingLeft", function () {
        return 0;
      }), a(0, e, "paddingTop", function () {
        return 0;
      }), a(0, e, "absolute", function () {
        return !0;
      }), t.__init__ = function () {
        t._TF_EMPTY = new d(), t.EMPTY = new t();
      }, t.EMPTY = null, t._TF_EMPTY = null, t;
    }(),
    _ = function () {
      function t(e) {
        this._type = 0, this._weight = 0, this._decoration = null, this._text = null, this.indent = 0, this._color = G.create(t.defaultColor), this.family = t.defaultFamily, this.stroke = t._STROKE, this.size = t.defaultSize, e && e !== t.EMPTY && e.copyTo(this);
      }
      r(t, "laya.display.css.Font");
      var e = t.prototype;
      return e.set = function (t) {
        this._text = null;
        for (var e = t.split(" "), i = 0, n = e.length; i < n; i++) {
          var r = e[i];
          switch (r) {
            case "italic":
              this.italic = !0;
              continue;
            case "bold":
              this.bold = !0;
              continue;
          }
          r.indexOf("px") > 0 && (this.size = parseInt(r), this.family = e[i + 1], i++);
        }
      }, e.toString = function () {
        return this._text = "", this.italic && (this._text += "italic "), this.bold && (this._text += "bold "), this._text += this.size + "px " + this.family;
      }, e.copyTo = function (e) {
        e._type = this._type, e._text = this._text, e._weight = this._weight, e._color = this._color, e.family = this.family, e.stroke = this.stroke != t._STROKE ? this.stroke.slice() : t._STROKE, e.indent = this.indent, e.size = this.size;
      }, a(0, e, "password", function () {
        return 0 != (1024 & this._type);
      }, function (t) {
        t ? this._type |= 1024 : this._type &= -1025;
      }), a(0, e, "color", function () {
        return this._color.strColor;
      }, function (t) {
        this._color = G.create(t);
      }), a(0, e, "italic", function () {
        return 0 != (512 & this._type);
      }, function (t) {
        t ? this._type |= 512 : this._type &= -513;
      }), a(0, e, "bold", function () {
        return 0 != (2048 & this._type);
      }, function (t) {
        t ? this._type |= 2048 : this._type &= -2049;
      }), a(0, e, "weight", function () {
        return "" + this._weight;
      }, function (t) {
        var e = 0;
        switch (t) {
          case "normal":
            break;
          case "bold":
            this.bold = !0, e = 700;
            break;
          case "bolder":
            e = 800;
            break;
          case "lighter":
            e = 100;
            break;
          default:
            e = parseInt(t);
        }
        this._weight = e, this._text = null;
      }), a(0, e, "decoration", function () {
        return this._decoration ? this._decoration.value : null;
      }, function (t) {
        var e = t.split(" ");
        switch (this._decoration || (this._decoration = {}), e[0]) {
          case "_":
            this._decoration.type = "underline";
            break;
          case "-":
            this._decoration.type = "line-through";
            break;
          case "overline":
            this._decoration.type = "overline";
            break;
          default:
            this._decoration.type = e[0];
        }
        e[1] && (this._decoration.color = G.create(e)), this._decoration.value = t;
      }), t.__init__ = function () {
        t.EMPTY = new t(null);
      }, t.EMPTY = null, t.defaultColor = "#000000", t.defaultSize = 12, t.defaultFamily = "Arial", t.defaultFont = "12px Arial", t._STROKE = [0, "#000000"], t._ITALIC = 512, t._PASSWORD = 1024, t._BOLD = 2048, t;
    }(),
    d = function () {
      function t() {
        this.translateX = 0, this.translateY = 0, this.scaleX = 1, this.scaleY = 1, this.rotate = 0, this.skewX = 0, this.skewY = 0;
      }
      return r(t, "laya.display.css.TransformInfo"), t;
    }(),
    f = function () {
      function e() {
        if (this._one = null, this._cmds = null, this._render = this._renderEmpty, P.isConchNode) {
          this._nativeObj = new t._conchGraphics(), this.id = this._nativeObj.conchID;
        }
      }
      r(e, "laya.display.Graphics");
      var n = e.prototype;
      return n.destroy = function () {
        this.clear(), this._graphicBounds && this._graphicBounds.destroy(), this._graphicBounds = null, this._vectorgraphArray = null, this._sp && (this._sp._renderType = 0), this._sp = null;
      }, n.clear = function (t) {
        void 0 === t && (t = !1);
        var i = 0,
          n = 0;
        if (t) {
          var r = this._one;
          if (this._cmds) {
            for (n = this._cmds.length, i = 0; i < n; i++) !(r = this._cmds[i]) || r.callee !== P._context._drawTexture && r.callee !== P._context._drawTextureWithTransform || (r[0] = null, e._cache.push(r));
            this._cmds.length = 0;
          } else r && (!r || r.callee !== P._context._drawTexture && r.callee !== P._context._drawTextureWithTransform || (r[0] = null, e._cache.push(r)));
        } else this._cmds = null;
        if (this._one = null, this._render = this._renderEmpty, this._sp && (this._sp._renderType &= -514), this._repaint(), this._vectorgraphArray) {
          for (i = 0, n = this._vectorgraphArray.length; i < n; i++) K.getInstance().deleteShape(this._vectorgraphArray[i]);
          this._vectorgraphArray.length = 0;
        }
      }, n._clearBoundsCache = function () {
        this._graphicBounds && this._graphicBounds.reset();
      }, n._initGraphicBounds = function () {
        this._graphicBounds || (this._graphicBounds = new p(), this._graphicBounds._graphics = this);
      }, n._repaint = function () {
        this._clearBoundsCache(), this._sp && this._sp.repaint();
      }, n._isOnlyOne = function () {
        return !this._cmds || 0 === this._cmds.length;
      }, n.getBounds = function (t) {
        return void 0 === t && (t = !1), this._initGraphicBounds(), this._graphicBounds.getBounds(t);
      }, n.getBoundPoints = function (t) {
        return void 0 === t && (t = !1), this._initGraphicBounds(), this._graphicBounds.getBoundPoints(t);
      }, n._addCmd = function (t) {
        this._cmds = this._cmds || [], t.callee = t.shift(), this._cmds.push(t);
      }, n.setFilters = function (t) {
        this._saveToCmd(P._context._setFilters, t);
      }, n.drawTexture = function (t, i, n, r, a, s, o) {
        if (void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === r && (r = 0), void 0 === a && (a = 0), void 0 === o && (o = 1), !t || o < .01) return null;
        r || (r = t.sourceWidth), a || (a = t.sourceHeight), o = o < 0 ? 0 : o > 1 ? 1 : o;
        var h = !P.isWebGL && (F.onFirefox || F.onEdge || F.onIE || F.onSafari) ? .5 : 0,
          l = r / t.sourceWidth,
          u = a / t.sourceHeight;
        if (r = t.width * l, a = t.height * u, t.loaded && (r <= 0 || a <= 0)) return null;
        i += t.offsetX * l, n += t.offsetY * u, this._sp && (this._sp._renderType |= 512);
        var c;
        return i -= h, n -= h, r += 2 * h, a += 2 * h, e._cache.length ? ((c = e._cache.pop())[0] = t, c[1] = i, c[2] = n, c[3] = r, c[4] = a, c[5] = s, c[6] = o) : c = [t, i, n, r, a, s, o], c.callee = s || 1 != o ? P._context._drawTextureWithTransform : P._context._drawTexture, null != this._one || s || 1 != o ? this._saveToCmd(c.callee, c) : (this._one = c, this._render = this._renderOneImg), t.loaded || t.once("loaded", this, this._textureLoaded, [t, c]), this._repaint(), c;
      }, n.cleanByTexture = function (t, e, i, n, r) {
        if (void 0 === n && (n = 0), void 0 === r && (r = 0), !t) return this.clear();
        if (this._one && this._render === this._renderOneImg) {
          n || (n = t.sourceWidth), r || (r = t.sourceHeight);
          var a = n / t.sourceWidth,
            s = r / t.sourceHeight;
          n = t.width * a, r = t.height * s, e += t.offsetX * a, i += t.offsetY * s, this._one[0] = t, this._one[1] = e, this._one[2] = i, this._one[3] = n, this._one[4] = r, this._repaint();
        } else this.clear(), t && this.drawTexture(t, e, i, n, r);
      }, n.drawTextures = function (t, e) {
        t && this._saveToCmd(P._context._drawTextures, [t, e]);
      }, n.fillTexture = function (t, e, i, n, r, a, s) {
        if (void 0 === n && (n = 0), void 0 === r && (r = 0), void 0 === a && (a = "repeat"), t) {
          var o = [t, e, i, n, r, a, s || C.EMPTY, {}];
          t.loaded || t.once("loaded", this, this._textureLoaded, [t, o]), this._saveToCmd(P._context._fillTexture, o);
        }
      }, n._textureLoaded = function (t, e) {
        e[3] = e[3] || t.width, e[4] = e[4] || t.height, this._repaint();
      }, n.fillCircle = function (t, e, i, n, r, a, s) {
        i.bitmap.enableMerageInAtlas = !1;
        var o = new Float32Array(2 * (s + 1)),
          h = new Float32Array(2 * (s + 1)),
          l = new Uint16Array(3 * s),
          u = 2 * Math.PI / s,
          c = 0;
        o[0] = n, o[1] = r, h[0] = n / i.width, h[1] = r / i.height;
        for (var _ = 2, d = 0; d < s; d++) {
          var f = a * Math.cos(c) + n,
            p = a * Math.sin(c) + r;
          o[_] = f, o[_ + 1] = p, h[_] = f / i.width, h[_ + 1] = p / i.height, c += u, _ += 2;
        }
        for (_ = 0, d = 0; d < s; d++) l[_++] = 0, l[_++] = d + 1, l[_++] = d + 2 >= s + 1 ? 1 : d + 2;
        this.drawTriangles(i, t, e, o, h, l);
      }, n.drawTriangles = function (t, e, i, n, r, a, s, o, h, l) {
        void 0 === o && (o = 1), this._saveToCmd(P._context.drawTriangles, [t, e, i, n, r, a, s, o, h, l]);
      }, n._saveToCmd = function (t, e) {
        return this._sp && (this._sp._renderType |= 512), null == this._one ? (this._one = e, this._render = this._renderOne) : (this._sp && (this._sp._renderType &= -2), this._render = this._renderAll, 0 === (this._cmds || (this._cmds = [])).length && this._cmds.push(this._one), this._cmds.push(e)), e.callee = t, this._repaint(), e;
      }, n.clipRect = function (t, e, i, n) {
        this._saveToCmd(P._context._clipRect, [t, e, i, n]);
      }, n.fillText = function (t, e, i, n, r, a, s) {
        void 0 === s && (s = 0), this._saveToCmd(P._context._fillText, [t, e, i, n || _.defaultFont, r, a]);
      }, n.fillBorderText = function (t, e, i, n, r, a, s, o) {
        this._saveToCmd(P._context._fillBorderText, [t, e, i, n || _.defaultFont, r, a, s, o]);
      }, n.strokeText = function (t, e, i, n, r, a, s) {
        this._saveToCmd(P._context._strokeText, [t, e, i, n || _.defaultFont, r, a, s]);
      }, n.alpha = function (t) {
        t = t < 0 ? 0 : t > 1 ? 1 : t, this._saveToCmd(P._context._alpha, [t]);
      }, n.setAlpha = function (t) {
        t = t < 0 ? 0 : t > 1 ? 1 : t, this._saveToCmd(P._context._setAlpha, [t]);
      }, n.transform = function (t, e, i) {
        void 0 === e && (e = 0), void 0 === i && (i = 0), this._saveToCmd(P._context._transform, [t, e, i]);
      }, n.rotate = function (t, e, i) {
        void 0 === e && (e = 0), void 0 === i && (i = 0), this._saveToCmd(P._context._rotate, [t, e, i]);
      }, n.scale = function (t, e, i, n) {
        void 0 === i && (i = 0), void 0 === n && (n = 0), this._saveToCmd(P._context._scale, [t, e, i, n]);
      }, n.translate = function (t, e) {
        this._saveToCmd(P._context._translate, [t, e]);
      }, n.save = function () {
        this._saveToCmd(P._context._save, []);
      }, n.restore = function () {
        this._saveToCmd(P._context._restore, []);
      }, n.replaceText = function (t) {
        this._repaint();
        var e = this._cmds;
        if (e) {
          for (var i = e.length - 1; i > -1; i--)
            if (this._isTextCmd(e[i].callee)) return e[i][0].toUpperCase ? e[i][0] = t : e[i][0].setText(t), !0;
        } else if (this._one && this._isTextCmd(this._one.callee)) return this._one[0].toUpperCase ? this._one[0] = t : this._one[0].setText(t), !0;
        return !1;
      }, n._isTextCmd = function (t) {
        return t === P._context._fillText || t === P._context._fillBorderText || t === P._context._strokeText;
      }, n.replaceTextColor = function (t) {
        this._repaint();
        var e = this._cmds;
        if (e)
          for (var i = e.length - 1; i > -1; i--) this._isTextCmd(e[i].callee) && (e[i][4] = t, e[i][0].toUpperCase || (e[i][0].changed = !0));
        else this._one && this._isTextCmd(this._one.callee) && (this._one[4] = t, this._one[0].toUpperCase || (this._one[0].changed = !0));
      }, n.loadImage = function (t, e, n, r, a, s) {
        function o(t) {
          t && (h.drawTexture(t, e, n, r, a), null != s && s.call(h._sp, t));
        }
        var h = this;
        void 0 === e && (e = 0), void 0 === n && (n = 0), void 0 === r && (r = 0), void 0 === a && (a = 0);
        var u = st.getRes(t);
        u ? o(u) : i.loader.load(t, l.create(null, o), null, "image");
      }, n._renderEmpty = function (t, e, i, n) {}, n._renderAll = function (t, e, i, n) {
        for (var r, a = this._cmds, s = 0, o = a.length; s < o; s++)(r = a[s]).callee.call(e, i, n, r);
      }, n._renderOne = function (t, e, i, n) {
        this._one.callee.call(e, i, n, this._one);
      }, n._renderOneImg = function (t, e, i, n) {
        this._one.callee.call(e, i, n, this._one), 2305 !== t._renderType && (t._renderType |= 1);
      }, n.drawLine = function (t, e, i, n, r, a) {
        void 0 === a && (a = 1);
        var s = 0;
        P.isWebGL && (s = K.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(s));
        var o = a % 2 == 0 ? 0 : .5,
          h = [t + o, e + o, i + o, n + o, r, a, s];
        this._saveToCmd(P._context._drawLine, h);
      }, n.drawLines = function (t, e, i, n, r) {
        void 0 === r && (r = 1);
        var a = 0;
        if (i && !(i.length < 4)) {
          P.isWebGL && (a = K.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(a));
          var s = r % 2 == 0 ? 0 : .5,
            o = [t + s, e + s, i, n, r, a];
          this._saveToCmd(P._context._drawLines, o);
        }
      }, n.drawCurves = function (t, e, i, n, r) {
        void 0 === r && (r = 1);
        var a = [t, e, i, n, r];
        this._saveToCmd(P._context._drawCurves, a);
      }, n.drawRect = function (t, e, i, n, r, a, s) {
        void 0 === s && (s = 1);
        var o = a ? s / 2 : 0,
          h = a ? s : 0,
          l = [t + o, e + o, i - h, n - h, r, a, s];
        this._saveToCmd(P._context._drawRect, l);
      }, n.drawCircle = function (t, e, i, n, r, a) {
        void 0 === a && (a = 1);
        var s = r ? a / 2 : 0,
          o = 0;
        P.isWebGL && (o = K.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(o));
        var h = [t, e, i - s, n, r, a, o];
        this._saveToCmd(P._context._drawCircle, h);
      }, n.drawPie = function (t, e, i, n, r, a, s, o) {
        void 0 === o && (o = 1);
        var h = s ? o / 2 : 0,
          l = s ? o : 0,
          u = 0;
        P.isWebGL && (u = K.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(u));
        var c = [t + h, e + h, i - l, n, r, a, s, o, u];
        c[3] = Q.toRadian(n), c[4] = Q.toRadian(r), this._saveToCmd(P._context._drawPie, c);
      }, n.drawPoly = function (t, e, i, n, r, a) {
        void 0 === a && (a = 1);
        var s = 0,
          o = !1;
        P.isWebGL && (s = K.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(s), o = !(i.length > 6));
        var h = r ? a % 2 == 0 ? 0 : .5 : 0,
          l = [t + h, e + h, i, n, r, a, s, o];
        this._saveToCmd(P._context._drawPoly, l);
      }, n.drawPath = function (t, e, i, n, r) {
        var a = [t, e, i, n, r];
        this._saveToCmd(P._context._drawPath, a);
      }, a(0, n, "cmds", function () {
        return this._cmds;
      }, function (t) {
        this._sp && (this._sp._renderType |= 512), this._cmds = t, this._render = this._renderAll, this._repaint();
      }), e.__init__ = function () {
        if (P.isConchNode) {
          for (var t = laya.display.Graphics.prototype, e = F.window.ConchGraphics.prototype, i = ["clear", "destroy", "alpha", "rotate", "transform", "scale", "translate", "save", "restore", "clipRect", "blendMode", "fillText", "fillBorderText", "_fands", "drawRect", "drawCircle", "drawPie", "drawPoly", "drawPath", "drawImageM", "drawLine", "drawLines", "_drawPs", "drawCurves", "replaceText", "replaceTextColor", "_fillImage", "fillTexture", "setSkinMesh", "drawParticle", "drawImageS"], n = 0, r = i.length; n <= r; n++) {
            var a = i[n];
            t[a] = e[a];
          }
          t._saveToCmd = null, e.drawImageS && (t.drawTextures = function (t, e) {
            if (t && t.loaded && t.bitmap && t.source) {
              var i = t.uv,
                n = t.bitmap.width,
                r = t.bitmap.height;
              this.drawImageS(t.bitmap.source, i[0] * n, i[1] * r, (i[2] - i[0]) * n, (i[5] - i[3]) * r, t.offsetX, t.offsetY, t.width, t.height, e);
            }
          }), t.drawTexture = function (t, e, i, n, r, a, s) {
            if (void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === r && (r = 0), void 0 === s && (s = 1), t)
              if (t.loaded) {
                if (t.loaded && t.bitmap && t.source && (n || (n = t.sourceWidth), r || (r = t.sourceHeight), s = s < 0 ? 0 : s > 1 ? 1 : s, n = n - t.sourceWidth + t.width, r = r - t.sourceHeight + t.height, !(n <= 0 || r <= 0))) {
                  e += t.offsetX, i += t.offsetY;
                  var o = t.uv,
                    h = t.bitmap.width,
                    l = t.bitmap.height;
                  o[4] < o[0] && o[5] < o[1] ? this.drawImageM(t.bitmap.source, o[4] * h, o[5] * l, (o[0] - o[4]) * h, (o[1] - o[5]) * l, e, i, n, r, a, s) : this.drawImageM(t.bitmap.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e, i, n, r, a, s), this._repaint();
                }
              } else t.once("loaded", this, function () {
                this.drawTexture(t, e, i, n, r, a);
              });
          }, t.fillTexture = function (t, e, i, n, r, a, s) {
            if (void 0 === n && (n = 0), void 0 === r && (r = 0), void 0 === a && (a = "repeat"), t && t.loaded) {
              var o, h = P._context.ctx,
                l = t.bitmap.width,
                u = t.bitmap.height,
                c = t.uv;
              o = t.uv != lt.DEF_UV ? h.createPattern(t.bitmap.source, a, c[0] * l, c[1] * u, (c[2] - c[0]) * l, (c[5] - c[3]) * u) : h.createPattern(t.bitmap.source, a);
              var _ = 0,
                d = 0;
              s && (e += s.x % t.width, i += s.y % t.height, _ -= s.x % t.width, d -= s.y % t.height), this._fillImage(o, e, i, _, d, n, r);
            }
          };
        }
      }, e._cache = [], e;
    }(),
    p = function () {
      function t() {
        this._cacheBoundsType = !1;
      }
      r(t, "laya.display.GraphicsBounds");
      var e = t.prototype;
      return e.destroy = function () {
        this._graphics = null, this._temp = null, this._rstBoundPoints = null, this._bounds = null;
      }, e.reset = function () {
        this._temp && (this._temp.length = 0);
      }, e.getBounds = function (t) {
        return void 0 === t && (t = !1), (!this._bounds || !this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._bounds = M._getWrapRec(this.getBoundPoints(t), this._bounds)), this._cacheBoundsType = t, this._bounds;
      }, e.getBoundPoints = function (t) {
        return void 0 === t && (t = !1), (!this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._temp = this._getCmdPoints(t)), this._cacheBoundsType = t, this._rstBoundPoints = Q.copyArray(this._rstBoundPoints, this._temp);
      }, e._getCmdPoints = function (e) {
        void 0 === e && (e = !1);
        var i, n = P._context,
          r = this._graphics.cmds;
        if (i = this._temp || (this._temp = []), i.length = 0, r || null == this._graphics._one || (t._tempCmds.length = 0, t._tempCmds.push(this._graphics._one), r = t._tempCmds), !r) return i;
        var a;
        (a = t._tempMatrixArrays).length = 0;
        var s = t._initMatrix;
        s.identity();
        for (var o, h, l = t._tempMatrix, u = NaN, c = NaN, _ = NaN, d = NaN, f = NaN, p = NaN, m = 0, g = r.length; m < g; m++)
          if ((o = r[m]).callee) switch (o.callee) {
            case n._save:
            case 7:
              a.push(s), s = s.clone();
              break;
            case n._restore:
            case 8:
              s = a.pop();
              break;
            case n._scale:
            case 5:
              l.identity(), l.translate(-o[2], -o[3]), l.scale(o[0], o[1]), l.translate(o[2], o[3]), this._switchMatrix(s, l);
              break;
            case n._rotate:
            case 3:
              l.identity(), l.translate(-o[1], -o[2]), l.rotate(o[0]), l.translate(o[1], o[2]), this._switchMatrix(s, l);
              break;
            case n._translate:
            case 6:
              l.identity(), l.translate(o[0], o[1]), this._switchMatrix(s, l);
              break;
            case n._transform:
            case 4:
              l.identity(), l.translate(-o[1], -o[2]), l.concat(o[0]), l.translate(o[1], o[2]), this._switchMatrix(s, l);
              break;
            case 16:
            case 24:
              t._addPointArrToRst(i, M._getBoundPointS(o[0], o[1], o[2], o[3]), s);
              break;
            case 17:
              s.copyTo(l), l.concat(o[4]), t._addPointArrToRst(i, M._getBoundPointS(o[0], o[1], o[2], o[3]), l);
              break;
            case n._drawTexture:
              h = o[0], e ? o[3] && o[4] ? t._addPointArrToRst(i, M._getBoundPointS(o[1], o[2], o[3], o[4]), s) : (h = o[0], t._addPointArrToRst(i, M._getBoundPointS(o[1], o[2], h.width, h.height), s)) : (u = (o[3] || h.sourceWidth) / h.width, c = (o[4] || h.sourceHeight) / h.height, _ = u * h.sourceWidth, d = c * h.sourceHeight, f = h.offsetX > 0 ? h.offsetX : 0, p = h.offsetY > 0 ? h.offsetY : 0, f *= u, p *= c, t._addPointArrToRst(i, M._getBoundPointS(o[1] - f, o[2] - p, _, d), s));
              break;
            case n._fillTexture:
              o[3] && o[4] ? t._addPointArrToRst(i, M._getBoundPointS(o[1], o[2], o[3], o[4]), s) : (h = o[0], t._addPointArrToRst(i, M._getBoundPointS(o[1], o[2], h.width, h.height), s));
              break;
            case n._drawTextureWithTransform:
              var v;
              o[5] ? (s.copyTo(l), l.concat(o[5]), v = l) : v = s, e ? o[3] && o[4] ? t._addPointArrToRst(i, M._getBoundPointS(o[1], o[2], o[3], o[4]), v) : (h = o[0], t._addPointArrToRst(i, M._getBoundPointS(o[1], o[2], h.width, h.height), v)) : (h = o[0], u = (o[3] || h.sourceWidth) / h.width, c = (o[4] || h.sourceHeight) / h.height, _ = u * h.sourceWidth, d = c * h.sourceHeight, f = h.offsetX > 0 ? h.offsetX : 0, p = h.offsetY > 0 ? h.offsetY : 0, f *= u, p *= c, t._addPointArrToRst(i, M._getBoundPointS(o[1] - f, o[2] - p, _, d), v));
              break;
            case n._drawRect:
            case 13:
              t._addPointArrToRst(i, M._getBoundPointS(o[0], o[1], o[2], o[3]), s);
              break;
            case n._drawCircle:
            case n._fillCircle:
            case 14:
              t._addPointArrToRst(i, M._getBoundPointS(o[0] - o[2], o[1] - o[2], o[2] + o[2], o[2] + o[2]), s);
              break;
            case n._drawLine:
            case 20:
              t._tempPoints.length = 0;
              var y = NaN;
              y = .5 * o[5], o[0] == o[2] ? t._tempPoints.push(o[0] + y, o[1], o[2] + y, o[3], o[0] - y, o[1], o[2] - y, o[3]) : o[1] == o[3] ? t._tempPoints.push(o[0], o[1] + y, o[2], o[3] + y, o[0], o[1] - y, o[2], o[3] - y) : t._tempPoints.push(o[0], o[1], o[2], o[3]), t._addPointArrToRst(i, t._tempPoints, s);
              break;
            case n._drawCurves:
            case 22:
              t._addPointArrToRst(i, S.I.getBezierPoints(o[2]), s, o[0], o[1]);
              break;
            case n._drawPoly:
            case n._drawLines:
            case 18:
              t._addPointArrToRst(i, o[2], s, o[0], o[1]);
              break;
            case n._drawPath:
            case 19:
              t._addPointArrToRst(i, this._getPathPoints(o[2]), s, o[0], o[1]);
              break;
            case n._drawPie:
            case 15:
              t._addPointArrToRst(i, this._getPiePoints(o[0], o[1], o[2], o[3], o[4]), s);
          }
        return i.length > 200 ? i = Q.copyArray(i, M._getWrapRec(i)._getBoundPoints()) : i.length > 8 && (i = w.scanPList(i)), i;
      }, e._switchMatrix = function (t, e) {
        e.concat(t), e.copyTo(t);
      }, e._getPiePoints = function (e, i, n, r, a) {
        var s = t._tempPoints;
        t._tempPoints.length = 0, s.push(e, i);
        var o = (a - r) % (2 * Math.PI) / 10,
          h = NaN,
          l = r;
        for (h = 0; h <= 10; h++) s.push(e + n * Math.cos(l), i + n * Math.sin(l)), l += o;
        return s;
      }, e._getPathPoints = function (e) {
        var i = 0,
          n = 0,
          r = t._tempPoints;
        r.length = 0, n = e.length;
        var a;
        for (i = 0; i < n; i++)(a = e[i]).length > 1 && (r.push(a[1], a[2]), a.length > 3 && r.push(a[3], a[4]));
        return r;
      }, t._addPointArrToRst = function (e, i, n, r, a) {
        void 0 === r && (r = 0), void 0 === a && (a = 0);
        var s = 0,
          o = 0;
        for (o = i.length, s = 0; s < o; s += 2) t._addPointToRst(e, i[s] + r, i[s + 1] + a, n);
      }, t._addPointToRst = function (t, e, i, n) {
        var r = C.TEMP;
        r.setTo(e || 0, i || 0), n.transformPoint(r), t.push(r.x, r.y);
      }, t._tempPoints = [], t._tempMatrixArrays = [], t._tempCmds = [], n(t, ["_tempMatrix", function () {
        return this._tempMatrix = new b();
      }, "_initMatrix", function () {
        return this._initMatrix = new b();
      }]), t;
    }(),
    m = function () {
      function t() {}
      r(t, "laya.events.Event");
      var e = t.prototype;
      return e.setTo = function (t, e, i) {
        return this.type = t, this.currentTarget = e, this.target = i, this;
      }, e.stopPropagation = function () {
        this._stoped = !0;
      }, a(0, e, "stageY", function () {
        return i.stage.mouseY;
      }), a(0, e, "charCode", function () {
        return this.nativeEvent.charCode;
      }), a(0, e, "touches", function () {
        var t = this.nativeEvent.touches;
        if (t)
          for (var e = i.stage, n = 0, r = t.length; n < r; n++) {
            var a = t[n],
              s = C.TEMP;
            s.setTo(a.clientX, a.clientY), e._canvasTransform.invertTransformPoint(s), e.transform.invertTransformPoint(s), a.stageX = s.x, a.stageY = s.y;
          }
        return t;
      }), a(0, e, "keyLocation", function () {
        return this.nativeEvent.keyLocation;
      }), a(0, e, "ctrlKey", function () {
        return this.nativeEvent.ctrlKey;
      }), a(0, e, "altKey", function () {
        return this.nativeEvent.altKey;
      }), a(0, e, "shiftKey", function () {
        return this.nativeEvent.shiftKey;
      }), a(0, e, "stageX", function () {
        return i.stage.mouseX;
      }), t.EMPTY = new t(), t.MOUSE_DOWN = "mousedown", t.MOUSE_UP = "mouseup", t.CLICK = "click", t.RIGHT_MOUSE_DOWN = "rightmousedown", t.RIGHT_MOUSE_UP = "rightmouseup", t.RIGHT_CLICK = "rightclick", t.MOUSE_MOVE = "mousemove", t.MOUSE_OVER = "mouseover", t.MOUSE_OUT = "mouseout", t.MOUSE_WHEEL = "mousewheel", t.ROLL_OVER = "mouseover", t.ROLL_OUT = "mouseout", t.DOUBLE_CLICK = "doubleclick", t.CHANGE = "change", t.CHANGED = "changed", t.RESIZE = "resize", t.ADDED = "added", t.REMOVED = "removed", t.DISPLAY = "display", t.UNDISPLAY = "undisplay", t.ERROR = "error", t.COMPLETE = "complete", t.LOADED = "loaded", t.PROGRESS = "progress", t.INPUT = "input", t.RENDER = "render", t.OPEN = "open", t.MESSAGE = "message", t.CLOSE = "close", t.KEY_DOWN = "keydown", t.KEY_PRESS = "keypress", t.KEY_UP = "keyup", t.FRAME = "enterframe", t.DRAG_START = "dragstart", t.DRAG_MOVE = "dragmove", t.DRAG_END = "dragend", t.ENTER = "enter", t.SELECT = "select", t.BLUR = "blur", t.FOCUS = "focus", t.VISIBILITY_CHANGE = "visibilitychange", t.FOCUS_CHANGE = "focuschange", t.PLAYED = "played", t.PAUSED = "paused", t.STOPPED = "stopped", t.START = "start", t.END = "end", t.ENABLE_CHANGED = "enablechanged", t.ACTIVE_IN_HIERARCHY_CHANGED = "activeinhierarchychanged", t.COMPONENT_ADDED = "componentadded", t.COMPONENT_REMOVED = "componentremoved", t.LAYER_CHANGED = "layerchanged", t.HIERARCHY_LOADED = "hierarchyloaded", t.RECOVERED = "recovered", t.RELEASED = "released", t.LINK = "link", t.LABEL = "label", t.FULL_SCREEN_CHANGE = "fullscreenchange", t.DEVICE_LOST = "devicelost", t.MESH_CHANGED = "meshchanged", t.MATERIAL_CHANGED = "materialchanged", t.WORLDMATRIX_NEEDCHANGE = "worldmatrixneedchanged", t.ANIMATION_CHANGED = "animationchanged", t.TRIGGER_ENTER = "triggerenter", t.TRIGGER_STAY = "triggerstay", t.TRIGGER_EXIT = "triggerexit", t.TRAIL_FILTER_CHANGE = "trailfilterchange", t.DOMINO_FILTER_CHANGE = "dominofilterchange", t;
    }(),
    g = (function () {
      function t() {}
      r(t, "laya.events.Keyboard"), t.NUMBER_0 = 48, t.NUMBER_1 = 49, t.NUMBER_2 = 50, t.NUMBER_3 = 51, t.NUMBER_4 = 52, t.NUMBER_5 = 53, t.NUMBER_6 = 54, t.NUMBER_7 = 55, t.NUMBER_8 = 56, t.NUMBER_9 = 57, t.A = 65, t.B = 66, t.C = 67, t.D = 68, t.E = 69, t.F = 70, t.G = 71, t.H = 72, t.I = 73, t.J = 74, t.K = 75, t.L = 76, t.M = 77, t.N = 78, t.O = 79, t.P = 80, t.Q = 81, t.R = 82, t.S = 83, t.T = 84, t.U = 85, t.V = 86, t.W = 87, t.X = 88, t.Y = 89, t.Z = 90, t.F1 = 112, t.F2 = 113, t.F3 = 114, t.F4 = 115, t.F5 = 116, t.F6 = 117, t.F7 = 118, t.F8 = 119, t.F9 = 120, t.F10 = 121, t.F11 = 122, t.F12 = 123, t.F13 = 124, t.F14 = 125, t.F15 = 126, t.NUMPAD = 21, t.NUMPAD_0 = 96, t.NUMPAD_1 = 97, t.NUMPAD_2 = 98, t.NUMPAD_3 = 99, t.NUMPAD_4 = 100, t.NUMPAD_5 = 101, t.NUMPAD_6 = 102, t.NUMPAD_7 = 103, t.NUMPAD_8 = 104, t.NUMPAD_9 = 105, t.NUMPAD_ADD = 107, t.NUMPAD_DECIMAL = 110, t.NUMPAD_DIVIDE = 111, t.NUMPAD_ENTER = 108, t.NUMPAD_MULTIPLY = 106, t.NUMPAD_SUBTRACT = 109, t.SEMICOLON = 186, t.EQUAL = 187, t.COMMA = 188, t.MINUS = 189, t.PERIOD = 190, t.SLASH = 191, t.BACKQUOTE = 192, t.LEFTBRACKET = 219, t.BACKSLASH = 220, t.RIGHTBRACKET = 221, t.QUOTE = 222, t.ALTERNATE = 18, t.BACKSPACE = 8, t.CAPS_LOCK = 20, t.COMMAND = 15, t.CONTROL = 17, t.DELETE = 46, t.ENTER = 13, t.ESCAPE = 27, t.PAGE_UP = 33, t.PAGE_DOWN = 34, t.END = 35, t.HOME = 36, t.LEFT = 37, t.UP = 38, t.RIGHT = 39, t.DOWN = 40, t.SHIFT = 16, t.SPACE = 32, t.TAB = 9, t.INSERT = 45;
    }(), function () {
      function t() {}
      return r(t, "laya.events.KeyBoardManager"), t.__init__ = function () {
        t._addEvent("keydown"), t._addEvent("keypress"), t._addEvent("keyup");
      }, t._addEvent = function (t) {
        F.document.addEventListener(t, function (e) {
          laya.events.KeyBoardManager._dispatch(e, t);
        }, !0);
      }, t._dispatch = function (e, n) {
        if (t.enabled) {
          t._event._stoped = !1, t._event.nativeEvent = e, t._event.keyCode = e.keyCode || e.which || e.charCode, "keydown" === n ? t._pressKeys[t._event.keyCode] = !0 : "keyup" === n && (t._pressKeys[t._event.keyCode] = null);
          for (var r = i.stage.focus && null != i.stage.focus.event && i.stage.focus.displayedInStage ? i.stage.focus : i.stage, a = r; a;) a.event(n, t._event.setTo(n, a, r)), a = a.parent;
        }
      }, t.hasKeyDown = function (e) {
        return t._pressKeys[e];
      }, t._pressKeys = {}, t.enabled = !0, n(t, ["_event", function () {
        return this._event = new m();
      }]), t;
    }()),
    v = (function () {
      function t() {}
      r(t, "laya.events.KeyLocation"), t.STANDARD = 0, t.LEFT = 1, t.RIGHT = 2, t.NUM_PAD = 3;
    }(), function () {
      function t() {
        this.mouseX = 0, this.mouseY = 0, this.disableMouseEvent = !1, this.mouseDownTime = 0, this.mouseMoveAccuracy = 2, this._stage = null, this._target = null, this._lastMoveTimer = 0, this._isLeftMouse = !1, this._eventList = [], this._touchIDs = {}, this._id = 1, this._tTouchID = 0, this._event = new m(), this._matrix = new b(), this._point = new C(), this._rect = new M(), this._prePoint = new C(), this._curTouchID = NaN;
      }
      r(t, "laya.events.MouseManager");
      var e = t.prototype;
      return e.__init__ = function (e, i) {
        var n = this;
        this._stage = e;
        var r = this,
          a = this._eventList;
        i.oncontextmenu = function (e) {
          if (t.enabled) return !1;
        }, i.addEventListener("mousedown", function (e) {
          t.enabled && (F.onIE || e.preventDefault(), a.push(e), r.mouseDownTime = F.now());
        }), i.addEventListener("mouseup", function (e) {
          t.enabled && (e.preventDefault(), a.push(e), r.mouseDownTime = -F.now());
        }, !0), i.addEventListener("mousemove", function (e) {
          if (t.enabled) {
            e.preventDefault();
            var i = F.now();
            if (i - r._lastMoveTimer < 10) return;
            r._lastMoveTimer = i, a.push(e);
          }
        }, !0), i.addEventListener("mouseout", function (e) {
          t.enabled && a.push(e);
        }), i.addEventListener("mouseover", function (e) {
          t.enabled && a.push(e);
        }), i.addEventListener("touchstart", function (e) {
          t.enabled && (a.push(e), t._isFirstTouch || Tt.isInputting || e.preventDefault(), r.mouseDownTime = F.now());
        }), i.addEventListener("touchend", function (e) {
          t.enabled ? (t._isFirstTouch || Tt.isInputting || e.preventDefault(), t._isFirstTouch = !1, a.push(e), r.mouseDownTime = -F.now()) : n._curTouchID = NaN;
        }, !0), i.addEventListener("touchmove", function (e) {
          t.enabled && (e.preventDefault(), a.push(e));
        }, !0), i.addEventListener("touchcancel", function (e) {
          t.enabled ? (e.preventDefault(), a.push(e)) : n._curTouchID = NaN;
        }, !0), i.addEventListener("mousewheel", function (e) {
          t.enabled && a.push(e);
        }), i.addEventListener("DOMMouseScroll", function (e) {
          t.enabled && a.push(e);
        });
      }, e.initEvent = function (t, e) {
        this._event._stoped = !1, this._event.nativeEvent = e || t, this._target = null, this._point.setTo(t.pageX || t.clientX, t.pageY || t.clientY), this._stage._canvasTransform.invertTransformPoint(this._point), this.mouseX = this._point.x, this.mouseY = this._point.y, this._event.touchId = t.identifier || 0, this._tTouchID = this._event.touchId;
        var i;
        (i = y.I._event)._stoped = !1, i.nativeEvent = this._event.nativeEvent, i.touchId = this._event.touchId;
      }, e.checkMouseWheel = function (t) {
        this._event.delta = t.wheelDelta ? .025 * t.wheelDelta : -t.detail;
        for (var e = y.I.getLastOvers(), i = 0, n = e.length; i < n; i++) {
          var r = e[i];
          r.event("mousewheel", this._event.setTo("mousewheel", r, this._target));
        }
      }, e.onMouseMove = function (t) {
        y.I.onMouseMove(t, this._tTouchID);
      }, e.onMouseDown = function (t) {
        if (Tt.isInputting && i.stage.focus && i.stage.focus.focus && !i.stage.focus.contains(this._target)) {
          var e = i.stage.focus._tf || i.stage.focus,
            n = t._tf || t;
          n instanceof laya.display.Input && n.multiline == e.multiline ? e._focusOut() : e.focus = !1;
        }
        y.I.onMouseDown(t, this._tTouchID, this._isLeftMouse);
      }, e.onMouseUp = function (t) {
        y.I.onMouseUp(t, this._tTouchID, this._isLeftMouse);
      }, e.check = function (t, e, i, n) {
        this._point.setTo(e, i), t.fromParentPoint(this._point), e = this._point.x, i = this._point.y;
        var r = t.scrollRect;
        if (r && (this._rect.setTo(r.x, r.y, r.width, r.height), !this._rect.contains(e, i))) return !1;
        if (!this.disableMouseEvent) {
          if (t.hitTestPrior && !t.mouseThrough && !this.hitTest(t, e, i)) return !1;
          for (var a = t._childs.length - 1; a > -1; a--) {
            var s = t._childs[a];
            if (!s.destroyed && s.mouseEnabled && s.visible && this.check(s, e, i, n)) return !0;
          }
        }
        var o = !(!t.hitTestPrior || t.mouseThrough || this.disableMouseEvent) || this.hitTest(t, e, i);
        return o ? (this._target = t, n.call(this, t)) : n === this.onMouseUp && t === this._stage && (this._target = this._stage, n.call(this, this._target)), o;
      }, e.hitTest = function (t, e, i) {
        var n = !1;
        if (t.scrollRect && (e -= t.scrollRect.x, i -= t.scrollRect.y), t.hitArea instanceof laya.utils.HitArea) return t.hitArea.isHit(e, i);
        if (t.width > 0 && t.height > 0 || t.mouseThrough || t.hitArea)
          if (t.mouseThrough) n = t.getGraphicBounds().contains(e, i);
          else {
            var r = this._rect;
            t.hitArea ? r = t.hitArea : r.setTo(0, 0, t.width, t.height), n = r.contains(e, i);
          }
        return n;
      }, e.runEvent = function () {
        var e = this._eventList.length;
        if (e) {
          for (var i, n = 0, r = 0, a = 0; n < e;) {
            var s = this._eventList[n];
            switch ("mousemove" !== s.type && (this._prePoint.x = this._prePoint.y = -1e6), s.type) {
              case "mousedown":
                this._touchIDs[0] = this._id++, t._isTouchRespond ? t._isTouchRespond = !1 : (this._isLeftMouse = 0 === s.button, this.initEvent(s), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseDown));
                break;
              case "mouseup":
                this._isLeftMouse = 0 === s.button, this.initEvent(s), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseUp);
                break;
              case "mousemove":
                Math.abs(this._prePoint.x - s.clientX) + Math.abs(this._prePoint.y - s.clientY) >= this.mouseMoveAccuracy && (this._prePoint.x = s.clientX, this._prePoint.y = s.clientY, this.initEvent(s), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseMove));
                break;
              case "touchstart":
                t._isTouchRespond = !0, this._isLeftMouse = !0;
                var o = s.changedTouches;
                for (r = 0, a = o.length; r < a; r++) i = o[r], (t.multiTouchEnabled || isNaN(this._curTouchID)) && (this._curTouchID = i.identifier, this._id % 200 == 0 && (this._touchIDs = {}), this._touchIDs[i.identifier] = this._id++, this.initEvent(i, s), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseDown));
                break;
              case "touchend":
              case "touchcancel":
                t._isTouchRespond = !0, this._isLeftMouse = !0;
                var h = s.changedTouches;
                for (r = 0, a = h.length; r < a; r++)
                  if (i = h[r], t.multiTouchEnabled || i.identifier == this._curTouchID) {
                    this._curTouchID = NaN, this.initEvent(i, s);
                    this.check(this._stage, this.mouseX, this.mouseY, this.onMouseUp) || this.onMouseUp(null);
                  }
                break;
              case "touchmove":
                var l = s.changedTouches;
                for (r = 0, a = l.length; r < a; r++) i = l[r], (t.multiTouchEnabled || i.identifier == this._curTouchID) && (this.initEvent(i, s), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseMove));
                break;
              case "wheel":
              case "mousewheel":
              case "DOMMouseScroll":
                this.checkMouseWheel(s);
                break;
              case "mouseout":
                y.I.stageMouseOut();
                break;
              case "mouseover":
                this._stage.event("mouseover", this._event.setTo("mouseover", this._stage, this._stage));
            }
            n++;
          }
          this._eventList.length = 0;
        }
      }, t.enabled = !0, t.multiTouchEnabled = !0, t._isTouchRespond = !1, t._isFirstTouch = !0, n(t, ["instance", function () {
        return this.instance = new t();
      }]), t;
    }()),
    y = function () {
      function t() {
        this.preOvers = [], this.preDowns = [], this.preRightDowns = [], this.enable = !0, this._lastClickTime = 0, this._event = new m();
      }
      r(t, "laya.events.TouchManager");
      var e = t.prototype;
      return e._clearTempArrs = function () {
        t._oldArr.length = 0, t._newArr.length = 0, t._tEleArr.length = 0;
      }, e.getTouchFromArr = function (t, e) {
        var i = 0,
          n = 0;
        n = e.length;
        var r;
        for (i = 0; i < n; i++)
          if ((r = e[i]).id == t) return r;
        return null;
      }, e.removeTouchFromArr = function (t, e) {
        var i = 0;
        for (i = e.length - 1; i >= 0; i--) e[i].id == t && e.splice(i, 1);
      }, e.createTouchO = function (t, e) {
        var i;
        return i = j.getItem("TouchData") || {}, i.id = e, i.tar = t, i;
      }, e.onMouseDown = function (e, i, n) {
        if (void 0 === n && (n = !1), this.enable) {
          var r, a, s;
          r = this.getTouchFromArr(i, this.preOvers), s = this.getEles(e, null, t._tEleArr), r ? r.tar = e : (a = this.createTouchO(e, i), this.preOvers.push(a)), F.onMobile && this.sendEvents(s, "mouseover", i);
          var o;
          o = n ? this.preDowns : this.preRightDowns, (r = this.getTouchFromArr(i, o)) ? r.tar = e : (a = this.createTouchO(e, i), o.push(a)), this.sendEvents(s, n ? "mousedown" : "rightmousedown", i), this._clearTempArrs();
        }
      }, e.sendEvents = function (t, e, i) {
        void 0 === i && (i = 0);
        var n = 0,
          r = 0;
        r = t.length, this._event._stoped = !1;
        var a;
        a = t[0];
        var s;
        for (n = 0; n < r; n++) {
          if ((s = t[n]).destroyed) return;
          if (s.event(e, this._event.setTo(e, s, a)), this._event._stoped) break;
        }
      }, e.getEles = function (t, e, i) {
        for (i ? i.length = 0 : i = []; t && t != e;) i.push(t), t = t.parent;
        return i;
      }, e.checkMouseOutAndOverOfMove = function (e, i, n) {
        if (void 0 === n && (n = 0), i != e) {
          var r, a, s = 0,
            o = 0;
          if (i.contains(e)) a = this.getEles(e, i, t._tEleArr), this.sendEvents(a, "mouseover", n);
          else if (e.contains(i)) a = this.getEles(i, e, t._tEleArr), this.sendEvents(a, "mouseout", n);
          else {
            (a = t._tEleArr).length = 0;
            var h;
            h = this.getEles(i, null, t._oldArr);
            var l;
            l = this.getEles(e, null, t._newArr), o = h.length;
            var u = 0;
            for (s = 0; s < o; s++) {
              if (r = h[s], (u = l.indexOf(r)) >= 0) {
                l.splice(u, l.length - u);
                break;
              }
              a.push(r);
            }
            a.length > 0 && this.sendEvents(a, "mouseout", n), l.length > 0 && this.sendEvents(l, "mouseover", n);
          }
        }
      }, e.onMouseMove = function (e, i) {
        if (this.enable) {
          var n, r;
          (n = this.getTouchFromArr(i, this.preOvers)) ? (this.checkMouseOutAndOverOfMove(e, n.tar), n.tar = e, r = this.getEles(e, null, t._tEleArr)) : (r = this.getEles(e, null, t._tEleArr), this.sendEvents(r, "mouseover", i), this.preOvers.push(this.createTouchO(e, i))), this.sendEvents(r, "mousemove", i), this._clearTempArrs();
        }
      }, e.getLastOvers = function () {
        return t._tEleArr.length = 0, this.preOvers.length > 0 && this.preOvers[0].tar ? this.getEles(this.preOvers[0].tar, null, t._tEleArr) : (t._tEleArr.push(i.stage), t._tEleArr);
      }, e.stageMouseOut = function () {
        var t;
        t = this.getLastOvers(), this.preOvers.length = 0, this.sendEvents(t, "mouseout", 0);
      }, e.onMouseUp = function (e, i, n) {
        if (void 0 === n && (n = !1), this.enable) {
          var r, a, s, o, h, l = 0,
            u = 0,
            c = F.onMobile;
          a = this.getEles(e, null, t._tEleArr), this.sendEvents(a, n ? "mouseup" : "rightmouseup", i);
          var _;
          if (_ = n ? this.preDowns : this.preRightDowns, r = this.getTouchFromArr(i, _)) {
            var d = !1,
              f = F.now();
            if (d = f - this._lastClickTime < 300, this._lastClickTime = f, e == r.tar) h = a;
            else
              for (s = this.getEles(r.tar, null, t._oldArr), (h = t._newArr).length = 0, u = s.length, l = 0; l < u; l++) o = s[l], a.indexOf(o) >= 0 && h.push(o);
            h.length > 0 && this.sendEvents(h, n ? "click" : "rightclick", i), n && d && this.sendEvents(h, "doubleclick", i), this.removeTouchFromArr(i, _), r.tar = null, j.recover("TouchData", r);
          } else;
          (r = this.getTouchFromArr(i, this.preOvers)) && c && ((h = this.getEles(r.tar, null, h)) && h.length > 0 && this.sendEvents(h, "mouseout", i), this.removeTouchFromArr(i, this.preOvers), r.tar = null, j.recover("TouchData", r)), this._clearTempArrs();
        }
      }, t._oldArr = [], t._newArr = [], t._tEleArr = [], n(t, ["I", function () {
        return this.I = new t();
      }]), t;
    }(),
    x = function () {
      function t() {
        this._action = null;
      }
      r(t, "laya.filters.Filter");
      var e = t.prototype;
      return i.imps(e, {
        "laya.filters.IFilter": !0
      }), e.callNative = function (t) {}, a(0, e, "type", function () {
        return -1;
      }), a(0, e, "action", function () {
        return this._action;
      }), t.BLUR = 16, t.COLOR = 32, t.GLOW = 8, t._filterStart = null, t._filterEnd = null, t._EndTarget = null, t._recycleScope = null, t._filter = null, t._useSrc = null, t._endSrc = null, t._useOut = null, t._endOut = null, t;
    }(),
    T = function () {
      function t() {
        this.data = null;
      }
      r(t, "laya.filters.ColorFilterAction");
      var e = t.prototype;
      return i.imps(e, {
        "laya.filters.IFilterAction": !0
      }), e.apply = function (t) {
        var e = t.ctx.ctx,
          i = t.ctx.ctx.canvas;
        if (0 == i.width || 0 == i.height) return i;
        for (var n, r = e.getImageData(0, 0, i.width, i.height), a = r.data, s = 0, o = a.length; s < o; s += 4) n = this.getColor(a[s], a[s + 1], a[s + 2], a[s + 3]), 0 != a[s + 3] && (a[s] = n[0], a[s + 1] = n[1], a[s + 2] = n[2], a[s + 3] = n[3]);
        return e.putImageData(r, 0, 0), t;
      }, e.getColor = function (t, e, i, n) {
        var r = [];
        if (this.data._mat && this.data._alpha) {
          var a = this.data._mat,
            s = this.data._alpha;
          r[0] = a[0] * t + a[1] * e + a[2] * i + a[3] * n + s[0], r[1] = a[4] * t + a[5] * e + a[6] * i + a[7] * n + s[1], r[2] = a[8] * t + a[9] * e + a[10] * i + a[11] * n + s[2], r[3] = a[12] * t + a[13] * e + a[14] * i + a[15] * n + s[3];
        }
        return r;
      }, t;
    }(),
    S = (function () {
      function t() {}
      r(t, "laya.maths.Arith"), t.formatR = function (t) {
        return t > Math.PI && (t -= 2 * Math.PI), t < -Math.PI && (t += 2 * Math.PI), t;
      }, t.isPOT = function (t, e) {
        return t > 0 && 0 == (t & t - 1) && e > 0 && 0 == (e & e - 1);
      }, t.setMatToArray = function (t, e) {
        t.a, t.b, t.c, t.d, t.tx, t.ty, e[0] = t.a, e[1] = t.b, e[4] = t.c, e[5] = t.d, e[12] = t.tx, e[13] = t.ty;
      };
    }(), function () {
      function t() {
        this._controlPoints = [new C(), new C(), new C()], this._calFun = this.getPoint2;
      }
      r(t, "laya.maths.Bezier");
      var e = t.prototype;
      return e._switchPoint = function (t, e) {
        var i = this._controlPoints.shift();
        i.setTo(t, e), this._controlPoints.push(i);
      }, e.getPoint2 = function (t, e) {
        var i = this._controlPoints[0],
          n = this._controlPoints[1],
          r = this._controlPoints[2],
          a = Math.pow(1 - t, 2) * i.x + 2 * t * (1 - t) * n.x + Math.pow(t, 2) * r.x,
          s = Math.pow(1 - t, 2) * i.y + 2 * t * (1 - t) * n.y + Math.pow(t, 2) * r.y;
        e.push(a, s);
      }, e.getPoint3 = function (t, e) {
        var i = this._controlPoints[0],
          n = this._controlPoints[1],
          r = this._controlPoints[2],
          a = this._controlPoints[3],
          s = Math.pow(1 - t, 3) * i.x + 3 * n.x * t * (1 - t) * (1 - t) + 3 * r.x * t * t * (1 - t) + a.x * Math.pow(t, 3),
          o = Math.pow(1 - t, 3) * i.y + 3 * n.y * t * (1 - t) * (1 - t) + 3 * r.y * t * t * (1 - t) + a.y * Math.pow(t, 3);
        e.push(s, o);
      }, e.insertPoints = function (t, e) {
        var i = NaN,
          n = NaN;
        for (n = 1 / (t = t > 0 ? t : 5), i = 0; i <= 1; i += n) this._calFun(i, e);
      }, e.getBezierPoints = function (t, e, i) {
        void 0 === e && (e = 5), void 0 === i && (i = 2);
        var n = 0,
          r = 0;
        if ((r = t.length) < 2 * (i + 1)) return [];
        var a;
        switch (a = [], i) {
          case 2:
            this._calFun = this.getPoint2;
            break;
          case 3:
            this._calFun = this.getPoint3;
            break;
          default:
            return [];
        }
        for (; this._controlPoints.length <= i;) this._controlPoints.push(new C());
        for (n = 0; n < 2 * i; n += 2) this._switchPoint(t[n], t[n + 1]);
        for (n = 2 * i; n < r; n += 2) this._switchPoint(t[n], t[n + 1]), n / 2 % i == 0 && this.insertPoints(e, a);
        return a;
      }, n(t, ["I", function () {
        return this.I = new t();
      }]), t;
    }()),
    w = function () {
      function t() {}
      return r(t, "laya.maths.GrahamScan"), t.multiply = function (t, e, i) {
        return (t.x - i.x) * (e.y - i.y) - (e.x - i.x) * (t.y - i.y);
      }, t.dis = function (t, e) {
        return (t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y);
      }, t._getPoints = function (e, i, n) {
        for (void 0 === i && (i = !1), t._mPointList || (t._mPointList = []); t._mPointList.length < e;) t._mPointList.push(new C());
        return n || (n = []), n.length = 0, i ? t.getFrom(n, t._mPointList, e) : t.getFromR(n, t._mPointList, e), n;
      }, t.getFrom = function (t, e, i) {
        var n = 0;
        for (n = 0; n < i; n++) t.push(e[n]);
        return t;
      }, t.getFromR = function (t, e, i) {
        var n = 0;
        for (n = 0; n < i; n++) t.push(e.pop());
        return t;
      }, t.pListToPointList = function (e, i) {
        void 0 === i && (i = !1);
        var n = 0,
          r = e.length / 2,
          a = t._getPoints(r, i, t._tempPointList);
        for (n = 0; n < r; n++) a[n].setTo(e[n + n], e[n + n + 1]);
        return a;
      }, t.pointListToPlist = function (e) {
        var i, n = 0,
          r = e.length,
          a = t._temPList;
        for (a.length = 0, n = 0; n < r; n++) i = e[n], a.push(i.x, i.y);
        return a;
      }, t.scanPList = function (e) {
        return Q.copyArray(e, t.pointListToPlist(t.scan(t.pListToPointList(e, !0))));
      }, t.scan = function (e) {
        var i, n, r, a = 0,
          s = 0,
          o = 0,
          h = e.length,
          l = {};
        for ((n = t._temArr).length = 0, a = (h = e.length) - 1; a >= 0; a--) r = (i = e[a]).x + "_" + i.y, l.hasOwnProperty(r) || (l[r] = !0, n.push(i));
        for (h = n.length, Q.copyArray(e, n), a = 1; a < h; a++)(e[a].y < e[o].y || e[a].y == e[o].y && e[a].x < e[o].x) && (o = a);
        for (i = e[0], e[0] = e[o], e[o] = i, a = 1; a < h - 1; a++) {
          for (o = a, s = a + 1; s < h; s++)(t.multiply(e[s], e[o], e[0]) > 0 || 0 == t.multiply(e[s], e[o], e[0]) && t.dis(e[0], e[s]) < t.dis(e[0], e[o])) && (o = s);
          i = e[a], e[a] = e[o], e[o] = i;
        }
        if (n = t._temArr, n.length = 0, e.length < 3) return Q.copyArray(n, e);
        for (n.push(e[0], e[1], e[2]), a = 3; a < h; a++) {
          for (; n.length >= 2 && t.multiply(e[a], n[n.length - 1], n[n.length - 2]) >= 0;) n.pop();
          e[a] && n.push(e[a]);
        }
        return n;
      }, t._mPointList = null, t._tempPointList = [], t._temPList = [], t._temArr = [], t;
    }(),
    E = function () {
      function t() {}
      return r(t, "laya.maths.MathUtil"), t.subtractVector3 = function (t, e, i) {
        i[0] = t[0] - e[0], i[1] = t[1] - e[1], i[2] = t[2] - e[2];
      }, t.lerp = function (t, e, i) {
        return t * (1 - i) + e * i;
      }, t.scaleVector3 = function (t, e, i) {
        i[0] = t[0] * e, i[1] = t[1] * e, i[2] = t[2] * e;
      }, t.lerpVector3 = function (t, e, i, n) {
        var r = t[0],
          a = t[1],
          s = t[2];
        n[0] = r + i * (e[0] - r), n[1] = a + i * (e[1] - a), n[2] = s + i * (e[2] - s);
      }, t.lerpVector4 = function (t, e, i, n) {
        var r = t[0],
          a = t[1],
          s = t[2],
          o = t[3];
        n[0] = r + i * (e[0] - r), n[1] = a + i * (e[1] - a), n[2] = s + i * (e[2] - s), n[3] = o + i * (e[3] - o);
      }, t.slerpQuaternionArray = function (t, e, i, n, r, a, s) {
        var o, h, l, u, c, _ = t[e + 0],
          d = t[e + 1],
          f = t[e + 2],
          p = t[e + 3],
          m = i[n + 0],
          g = i[n + 1],
          v = i[n + 2],
          y = i[n + 3];
        return (h = _ * m + d * g + f * v + p * y) < 0 && (h = -h, m = -m, g = -g, v = -v, y = -y), 1 - h > 1e-6 ? (o = Math.acos(h), l = Math.sin(o), u = Math.sin((1 - r) * o) / l, c = Math.sin(r * o) / l) : (u = 1 - r, c = r), a[s + 0] = u * _ + c * m, a[s + 1] = u * d + c * g, a[s + 2] = u * f + c * v, a[s + 3] = u * p + c * y, a;
      }, t.getRotation = function (t, e, i, n) {
        return Math.atan2(n - e, i - t) / Math.PI * 180;
      }, t.sortBigFirst = function (t, e) {
        return t == e ? 0 : e > t ? 1 : -1;
      }, t.sortSmallFirst = function (t, e) {
        return t == e ? 0 : e > t ? -1 : 1;
      }, t.sortNumBigFirst = function (t, e) {
        return parseFloat(e) - parseFloat(t);
      }, t.sortNumSmallFirst = function (t, e) {
        return parseFloat(t) - parseFloat(e);
      }, t.sortByKey = function (e, i, n) {
        void 0 === i && (i = !1), void 0 === n && (n = !0);
        var r;
        return r = i ? n ? t.sortNumBigFirst : t.sortBigFirst : n ? t.sortNumSmallFirst : t.sortSmallFirst,
          function (t, i) {
            return r(t[e], i[e]);
          };
      }, t;
    }(),
    b = function () {
      function t(t, e, i, n, r, a) {
        this.inPool = !1, this.bTransform = !1, void 0 === t && (t = 1), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 1), void 0 === r && (r = 0), void 0 === a && (a = 0), this.a = t, this.b = e, this.c = i, this.d = n, this.tx = r, this.ty = a, this._checkTransform();
      }
      r(t, "laya.maths.Matrix");
      var e = t.prototype;
      return e.identity = function () {
        return this.a = this.d = 1, this.b = this.tx = this.ty = this.c = 0, this.bTransform = !1, this;
      }, e._checkTransform = function () {
        return this.bTransform = 1 !== this.a || 0 !== this.b || 0 !== this.c || 1 !== this.d;
      }, e.setTranslate = function (t, e) {
        return this.tx = t, this.ty = e, this;
      }, e.translate = function (t, e) {
        return this.tx += t, this.ty += e, this;
      }, e.scale = function (t, e) {
        this.a *= t, this.d *= e, this.c *= t, this.b *= e, this.tx *= t, this.ty *= e, this.bTransform = !0;
      }, e.rotate = function (t) {
        var e = Math.cos(t),
          i = Math.sin(t),
          n = this.a,
          r = this.c,
          a = this.tx;
        this.a = n * e - this.b * i, this.b = n * i + this.b * e, this.c = r * e - this.d * i, this.d = r * i + this.d * e, this.tx = a * e - this.ty * i, this.ty = a * i + this.ty * e, this.bTransform = !0;
      }, e.skew = function (t, e) {
        var i = Math.tan(t),
          n = Math.tan(e),
          r = this.a,
          a = this.b;
        return this.a += n * this.c, this.b += n * this.d, this.c += i * r, this.d += i * a, this;
      }, e.invertTransformPoint = function (t) {
        var e = this.a,
          i = this.b,
          n = this.c,
          r = this.d,
          a = this.tx,
          s = e * r - i * n,
          o = r / s,
          h = -i / s,
          l = -n / s,
          u = e / s,
          c = (n * this.ty - r * a) / s,
          _ = -(e * this.ty - i * a) / s;
        return t.setTo(o * t.x + l * t.y + c, h * t.x + u * t.y + _);
      }, e.transformPoint = function (t) {
        return t.setTo(this.a * t.x + this.c * t.y + this.tx, this.b * t.x + this.d * t.y + this.ty);
      }, e.transformPointN = function (t) {
        return t.setTo(this.a * t.x + this.c * t.y, this.b * t.x + this.d * t.y);
      }, e.transformPointArray = function (t, e) {
        for (var i = t.length, n = 0; n < i; n += 2) {
          var r = t[n],
            a = t[n + 1];
          e[n] = this.a * r + this.c * a + this.tx, e[n + 1] = this.b * r + this.d * a + this.ty;
        }
        return e;
      }, e.transformPointArrayScale = function (t, e) {
        for (var i = t.length, n = 0; n < i; n += 2) {
          var r = t[n],
            a = t[n + 1];
          e[n] = this.a * r + this.c * a, e[n + 1] = this.b * r + this.d * a;
        }
        return e;
      }, e.getScaleX = function () {
        return 0 === this.b ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);
      }, e.getScaleY = function () {
        return 0 === this.c ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);
      }, e.invert = function () {
        var t = this.a,
          e = this.b,
          i = this.c,
          n = this.d,
          r = this.tx,
          a = t * n - e * i;
        return this.a = n / a, this.b = -e / a, this.c = -i / a, this.d = t / a, this.tx = (i * this.ty - n * r) / a, this.ty = -(t * this.ty - e * r) / a, this;
      }, e.setTo = function (t, e, i, n, r, a) {
        return this.a = t, this.b = e, this.c = i, this.d = n, this.tx = r, this.ty = a, this;
      }, e.concat = function (t) {
        var e = this.a,
          i = this.c,
          n = this.tx;
        return this.a = e * t.a + this.b * t.c, this.b = e * t.b + this.b * t.d, this.c = i * t.a + this.d * t.c, this.d = i * t.b + this.d * t.d, this.tx = n * t.a + this.ty * t.c + t.tx, this.ty = n * t.b + this.ty * t.d + t.ty, this;
      }, e.scaleEx = function (t, e) {
        var i = this.a,
          n = this.b,
          r = this.c,
          a = this.d;
        0 !== n || 0 !== r ? (this.a = t * i, this.b = t * n, this.c = e * r, this.d = e * a) : (this.a = t * i, this.b = 0 * a, this.c = 0 * i, this.d = e * a), this.bTransform = !0;
      }, e.rotateEx = function (t) {
        var e = Math.cos(t),
          i = Math.sin(t),
          n = this.a,
          r = this.b,
          a = this.c,
          s = this.d;
        0 !== r || 0 !== a ? (this.a = e * n + i * a, this.b = e * r + i * s, this.c = -i * n + e * a, this.d = -i * r + e * s) : (this.a = e * n, this.b = i * s, this.c = -i * n, this.d = e * s), this.bTransform = !0;
      }, e.clone = function () {
        var e = t.create();
        return e.a = this.a, e.b = this.b, e.c = this.c, e.d = this.d, e.tx = this.tx, e.ty = this.ty, e.bTransform = this.bTransform, e;
      }, e.copyTo = function (t) {
        return t.a = this.a, t.b = this.b, t.c = this.c, t.d = this.d, t.tx = this.tx, t.ty = this.ty, t.bTransform = this.bTransform, t;
      }, e.toString = function () {
        return this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.tx + "," + this.ty;
      }, e.destroy = function () {
        if (!this.inPool) {
          var e = t._cache;
          this.inPool = !0, e._length || (e._length = 0), e[e._length++] = this, this.a = this.d = 1, this.b = this.c = this.tx = this.ty = 0, this.bTransform = !1;
        }
      }, t.mul = function (t, e, i) {
        var n = t.a,
          r = t.b,
          a = t.c,
          s = t.d,
          o = t.tx,
          h = t.ty,
          l = e.a,
          u = e.b,
          c = e.c,
          _ = e.d,
          d = e.tx,
          f = e.ty;
        return 0 !== u || 0 !== c ? (i.a = n * l + r * c, i.b = n * u + r * _, i.c = a * l + s * c, i.d = a * u + s * _, i.tx = l * o + c * h + d, i.ty = u * o + _ * h + f) : (i.a = n * l, i.b = r * _, i.c = a * l, i.d = s * _, i.tx = l * o + d, i.ty = _ * h + f), i;
      }, t.mul16 = function (t, e, i) {
        var n = t.a,
          r = t.b,
          a = t.c,
          s = t.d,
          o = t.tx,
          h = t.ty,
          l = e.a,
          u = e.b,
          c = e.c,
          _ = e.d,
          d = e.tx,
          f = e.ty;
        return 0 !== u || 0 !== c ? (i[0] = n * l + r * c, i[1] = n * u + r * _, i[4] = a * l + s * c, i[5] = a * u + s * _, i[12] = l * o + c * h + d, i[13] = u * o + _ * h + f) : (i[0] = n * l, i[1] = r * _, i[4] = a * l, i[5] = s * _, i[12] = l * o + d, i[13] = _ * h + f), i;
      }, t.mulPre = function (t, e, i, n, r, a, s, o) {
        var h = t.a,
          l = t.b,
          u = t.c,
          c = t.d,
          _ = t.tx,
          d = t.ty;
        return 0 !== i || 0 !== n ? (o.a = h * e + l * n, o.b = h * i + l * r, o.c = u * e + c * n, o.d = u * i + c * r, o.tx = e * _ + n * d + a, o.ty = i * _ + r * d + s) : (o.a = h * e, o.b = l * r, o.c = u * e, o.d = c * r, o.tx = e * _ + a, o.ty = r * d + s), o;
      }, t.mulPos = function (t, e, i, n, r, a, s, o) {
        var h = t.a,
          l = t.b,
          u = t.c,
          c = t.d,
          _ = t.tx,
          d = t.ty;
        return 0 !== l || 0 !== u ? (o.a = e * h + i * u, o.b = e * l + i * c, o.c = n * h + r * u, o.d = n * l + r * c, o.tx = h * a + u * s + _, o.ty = l * a + c * s + d) : (o.a = e * h, o.b = i * c, o.c = n * h, o.d = r * c, o.tx = h * a + _, o.ty = c * s + d), o;
      }, t.preMul = function (t, e, i) {
        var n = t.a,
          r = t.b,
          a = t.c,
          s = t.d,
          o = e.a,
          h = e.b,
          l = e.c,
          u = e.d,
          c = e.tx,
          _ = e.ty;
        return i.a = o * n, i.b = i.c = 0, i.d = u * s, i.tx = c * n + t.tx, i.ty = _ * s + t.ty, 0 === h && 0 === l && 0 === r && 0 === a || (i.a += h * a, i.d += l * r, i.b += o * r + h * s, i.c += l * n + u * a, i.tx += _ * a, i.ty += c * r), i;
      }, t.preMulXY = function (t, e, i, n) {
        var r = t.a,
          a = t.b,
          s = t.c,
          o = t.d;
        return n.a = r, n.b = a, n.c = s, n.d = o, n.tx = e * r + t.tx + i * s, n.ty = i * o + t.ty + e * a, n;
      }, t.create = function () {
        var e = t._cache,
          i = e._length ? e[--e._length] : new t();
        return i.inPool = !1, i;
      }, t.EMPTY = new t(), t.TEMP = new t(), t._cache = [], t;
    }(),
    C = function () {
      function t(t, e) {
        void 0 === t && (t = 0), void 0 === e && (e = 0), this.x = t, this.y = e;
      }
      r(t, "laya.maths.Point");
      var e = t.prototype;
      return e.setTo = function (t, e) {
        return this.x = t, this.y = e, this;
      }, e.distance = function (t, e) {
        return Math.sqrt((this.x - t) * (this.x - t) + (this.y - e) * (this.y - e));
      }, e.toString = function () {
        return this.x + "," + this.y;
      }, e.normalize = function () {
        var t = Math.sqrt(this.x * this.x + this.y * this.y);
        if (t > 0) {
          var e = 1 / t;
          this.x *= e, this.y *= e;
        }
      }, t.TEMP = new t(), t.EMPTY = new t(), t;
    }(),
    M = function () {
      function t(t, e, i, n) {
        void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), this.x = t, this.y = e, this.width = i, this.height = n;
      }
      r(t, "laya.maths.Rectangle");
      var e = t.prototype;
      return e.setTo = function (t, e, i, n) {
        return this.x = t, this.y = e, this.width = i, this.height = n, this;
      }, e.copyFrom = function (t) {
        return this.x = t.x, this.y = t.y, this.width = t.width, this.height = t.height, this;
      }, e.contains = function (t, e) {
        return !(this.width <= 0 || this.height <= 0) && (t >= this.x && t < this.right && e >= this.y && e < this.bottom);
      }, e.intersects = function (t) {
        return !(t.x > this.x + this.width || t.x + t.width < this.x || t.y > this.y + this.height || t.y + t.height < this.y);
      }, e.intersection = function (e, i) {
        return this.intersects(e) ? (i || (i = new t()), i.x = Math.max(this.x, e.x), i.y = Math.max(this.y, e.y), i.width = Math.min(this.right, e.right) - i.x, i.height = Math.min(this.bottom, e.bottom) - i.y, i) : null;
      }, e.union = function (e, i) {
        return i || (i = new t()), this.clone(i), e.width <= 0 || e.height <= 0 ? i : (i.addPoint(e.x, e.y), i.addPoint(e.right, e.bottom), this);
      }, e.clone = function (e) {
        return e || (e = new t()), e.x = this.x, e.y = this.y, e.width = this.width, e.height = this.height, e;
      }, e.toString = function () {
        return this.x + "," + this.y + "," + this.width + "," + this.height;
      }, e.equals = function (t) {
        return !(!t || t.x !== this.x || t.y !== this.y || t.width !== this.width || t.height !== this.height);
      }, e.addPoint = function (t, e) {
        return this.x > t && (this.width += this.x - t, this.x = t), this.y > e && (this.height += this.y - e, this.y = e), this.width < t - this.x && (this.width = t - this.x), this.height < e - this.y && (this.height = e - this.y), this;
      }, e._getBoundPoints = function () {
        var e = t._temB;
        return e.length = 0, 0 == this.width || 0 == this.height ? e : (e.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height), e);
      }, e.isEmpty = function () {
        return this.width <= 0 || this.height <= 0;
      }, a(0, e, "right", function () {
        return this.x + this.width;
      }), a(0, e, "bottom", function () {
        return this.y + this.height;
      }), t._getBoundPointS = function (e, i, n, r) {
        var a = t._temA;
        return a.length = 0, 0 == n || 0 == r ? a : (a.push(e, i, e + n, i, e, i + r, e + n, i + r), a);
      }, t._getWrapRec = function (e, i) {
        if (!e || e.length < 1) return i ? i.setTo(0, 0, 0, 0) : t.TEMP.setTo(0, 0, 0, 0);
        i = i || new t();
        var n, r, a, s, o, h = e.length,
          l = C.TEMP;
        for (a = o = -(r = s = 99999), n = 0; n < h; n += 2) l.x = e[n], l.y = e[n + 1], r = r < l.x ? r : l.x, s = s < l.y ? s : l.y, a = a > l.x ? a : l.x, o = o > l.y ? o : l.y;
        return i.setTo(r, s, a - r, o - s);
      }, t.EMPTY = new t(), t.TEMP = new t(), t._temB = [], t._temA = [], t;
    }(),
    I = function () {
      function t() {}
      return r(t, "laya.media.SoundManager"), a(1, t, "useAudioMusic", function () {
        return t._useAudioMusic;
      }, function (e) {
        t._useAudioMusic = e, t._musicClass = e ? et : null;
      }), a(1, t, "autoStopMusic", function () {
        return t._autoStopMusic;
      }, function (e) {
        i.stage.off("blur", null, t._stageOnBlur), i.stage.off("focus", null, t._stageOnFocus), i.stage.off("visibilitychange", null, t._visibilityChange), t._autoStopMusic = e, e && (i.stage.on("blur", null, t._stageOnBlur), i.stage.on("focus", null, t._stageOnFocus), i.stage.on("visibilitychange", null, t._visibilityChange));
      }), a(1, t, "muted", function () {
        return t._muted;
      }, function (e) {
        e != t._muted && (e && t.stopAllSound(), t.musicMuted = e, t._muted = e);
      }), a(1, t, "musicMuted", function () {
        return t._musicMuted;
      }, function (e) {
        e != t._musicMuted && (e ? (t._tMusic && t._musicChannel && !t._musicChannel.isStopped ? t._musicChannel.pause() : t._musicChannel = null, t._musicMuted = e) : (t._musicMuted = e, t._tMusic && t._musicChannel && t._musicChannel.resume()));
      }), a(1, t, "soundMuted", function () {
        return t._soundMuted;
      }, function (e) {
        t._soundMuted = e;
      }), t.addChannel = function (e) {
        t._channels.indexOf(e) >= 0 || t._channels.push(e);
      }, t.removeChannel = function (e) {
        var i = 0;
        for (i = t._channels.length - 1; i >= 0; i--) t._channels[i] == e && t._channels.splice(i, 1);
      }, t.disposeSoundIfNotUsed = function (e) {
        var i = 0;
        for (i = t._channels.length - 1; i >= 0; i--)
          if (t._channels[i].url == e) return;
        t.destroySound(e);
      }, t._visibilityChange = function () {
        i.stage.isVisibility ? t._stageOnFocus() : t._stageOnBlur();
      }, t._stageOnBlur = function () {
        t._isActive = !1, t._musicChannel && (t._musicChannel.isStopped || (t._blurPaused = !0, t._musicChannel.pause())), t.stopAllSound(), i.stage.once("mousedown", null, t._stageOnFocus);
      }, t._recoverWebAudio = function () {
        rt.ctx && "running" != rt.ctx.state && rt.ctx.resume && rt.ctx.resume();
      }, t._stageOnFocus = function () {
        t._isActive = !0, t._recoverWebAudio(), i.stage.off("mousedown", null, t._stageOnFocus), t._blurPaused && t._musicChannel && t._musicChannel.isStopped && (t._blurPaused = !1, t._musicChannel.resume());
      }, t.playSound = function (e, n, r, a, s) {
        if (void 0 === n && (n = 1), void 0 === s && (s = 0), !t._isActive || !e) return null;
        if (t._muted) return null;
        if (t._recoverWebAudio(), (e = R.formatURL(e)) == t._tMusic) {
          if (t._musicMuted) return null;
        } else {
          if (P.isConchApp) {
            var o = Q.getFileExtension(e);
            if ("wav" != o && "ogg" != o) return alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document."), null;
          }
          if (t._soundMuted) return null;
        }
        var h;
        F.onMiniGame || (h = i.loader.getRes(e)), a || (a = t._soundClass), h || ((h = new a()).load(e), F.onMiniGame || st.cacheRes(e, h));
        var l;
        return (l = h.play(s, n)) ? (l.url = e, l.volume = e == t._tMusic ? t.musicVolume : t.soundVolume, l.completeHandler = r, l) : null;
      }, t.destroySound = function (t) {
        var e = i.loader.getRes(t);
        e && (st.clearRes(t), e.dispose());
      }, t.playMusic = function (e, i, n, r) {
        return void 0 === i && (i = 0), void 0 === r && (r = 0), e = R.formatURL(e), t._tMusic = e, t._musicChannel && t._musicChannel.stop(), t._musicChannel = t.playSound(e, i, n, t._musicClass, r);
      }, t.stopSound = function (e) {
        e = R.formatURL(e);
        var i, n = 0;
        for (n = t._channels.length - 1; n >= 0; n--)(i = t._channels[n]).url == e && i.stop();
      }, t.stopAll = function () {
        t._tMusic = null;
        var e = 0;
        for (e = t._channels.length - 1; e >= 0; e--) t._channels[e].stop();
      }, t.stopAllSound = function () {
        var e, i = 0;
        for (i = t._channels.length - 1; i >= 0; i--)(e = t._channels[i]).url != t._tMusic && e.stop();
      }, t.stopMusic = function () {
        t._musicChannel && t._musicChannel.stop(), t._tMusic = null;
      }, t.setSoundVolume = function (e, i) {
        if (i) i = R.formatURL(i), t._setVolume(i, e);
        else {
          t.soundVolume = e;
          var n, r = 0;
          for (r = t._channels.length - 1; r >= 0; r--)(n = t._channels[r]).url != t._tMusic && (n.volume = e);
        }
      }, t.setMusicVolume = function (e) {
        t.musicVolume = e, t._setVolume(t._tMusic, e);
      }, t._setVolume = function (e, i) {
        e = R.formatURL(e);
        var n, r = 0;
        for (r = t._channels.length - 1; r >= 0; r--)(n = t._channels[r]).url == e && (n.volume = i);
      }, t.musicVolume = 1, t.soundVolume = 1, t.playbackRate = 1, t._useAudioMusic = !0, t._muted = !1, t._soundMuted = !1, t._musicMuted = !1, t._tMusic = null, t._musicChannel = null, t._channels = [], t._autoStopMusic = !1, t._blurPaused = !1, t._isActive = !0, t._soundClass = null, t._musicClass = null, t.autoReleaseSound = !0, t;
    }(),
    D = function () {
      function e() {}
      var i;
      return r(e, "laya.net.LocalStorage"), e.__init__ = function () {
        e._baseClass || (e._baseClass = i, i.init()), e.items = e._baseClass.items, e.support = e._baseClass.support;
      }, e.setItem = function (t, i) {
        e._baseClass.setItem(t, i);
      }, e.getItem = function (t) {
        return e._baseClass.getItem(t);
      }, e.setJSON = function (t, i) {
        e._baseClass.setJSON(t, i);
      }, e.getJSON = function (t) {
        return e._baseClass.getJSON(t);
      }, e.removeItem = function (t) {
        e._baseClass.removeItem(t);
      }, e.clear = function () {
        e._baseClass.clear();
      }, e._baseClass = null, e.items = null, e.support = !1, e.__init$ = function () {
        i = function () {
          function e() {}
          return r(e, ""), e.init = function () {
            try {
              e.support = !0, e.items = t.localStorage, e.setItem("laya", "1"), e.removeItem("laya");
            } catch (t) {
              e.support = !1;
            }
            e.support || console.log("LocalStorage is not supprot or browser is private mode.");
          }, e.setItem = function (t, i) {
            try {
              e.support && e.items.setItem(t, i);
            } catch (t) {
              console.warn("set localStorage failed", t);
            }
          }, e.getItem = function (t) {
            return e.support ? e.items.getItem(t) : null;
          }, e.setJSON = function (t, i) {
            try {
              e.support && e.items.setItem(t, JSON.stringify(i));
            } catch (t) {
              console.warn("set localStorage failed", t);
            }
          }, e.getJSON = function (t) {
            return JSON.parse(e.support ? e.items.getItem(t) : null);
          }, e.removeItem = function (t) {
            e.support && e.items.removeItem(t);
          }, e.clear = function () {
            e.support && e.items.clear();
          }, e.items = null, e.support = !1, e;
        }();
      }, e;
    }(),
    A = (function () {
      function t() {}
      r(t, "laya.net.ResourceVersion"), t.enable = function (e, n, r) {
        void 0 === r && (r = 2), laya.net.ResourceVersion.type = r, i.loader.load(e, l.create(null, t.onManifestLoaded, [n]), null, "json"), R.customFormat = t.addVersionPrefix;
      }, t.onManifestLoaded = function (e, i) {
        t.manifest = i, e.run(), i || console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。");
      }, t.addVersionPrefix = function (e) {
        return t.manifest && t.manifest[e] ? 2 == t.type ? t.manifest[e] : t.manifest[e] + "/" + e : e;
      }, t.FOLDER_VERSION = 1, t.FILENAME_VERSION = 2, t.manifest = null, t.type = 1;
    }(), function () {
      function t() {
        this.fontName = null, this.complete = null, this.err = null, this._fontTxt = null, this._url = null, this._div = null, this._txtWidth = NaN, this._http = null;
      }
      r(t, "laya.net.TTFLoader");
      var e = t.prototype;
      return e.load = function (t) {
        this._url = t;
        var e = t.split(".ttf")[0].split("/");
        this.fontName = e[e.length - 1], F.window.conch ? this._loadConch() : F.window.FontFace ? this._loadWithFontFace() : this._loadWithCSS();
      }, e._loadConch = function () {
        this._http = new at(), this._http.on("error", this, this._onErr), this._http.on("complete", this, this._onHttpLoaded), this._http.send(this._url, null, "get", "arraybuffer");
      }, e._onHttpLoaded = function (t) {
        F.window.conch.setFontFaceFromBuffer(this.fontName, t), this._clearHttp(), this._complete();
      }, e._clearHttp = function () {
        this._http && (this._http.off("error", this, this._onErr), this._http.off("complete", this, this._onHttpLoaded), this._http = null);
      }, e._onErr = function () {
        this._clearHttp(), this.err && (this.err.runWith("fail:" + this._url), this.err = null);
      }, e._complete = function () {
        i.timer.clear(this, this._complete), i.timer.clear(this, this._checkComplete), this._div && this._div.parentNode && (this._div.parentNode.removeChild(this._div), this._div = null), this.complete && (this.complete.runWith(this), this.complete = null);
      }, e._checkComplete = function () {
        s.measureText("LayaTTFFont", this._fontTxt).width != this._txtWidth && this._complete();
      }, e._loadWithFontFace = function () {
        var t = new F.window.FontFace(this.fontName, "url('" + this._url + "')");
        F.window.document.fonts.add(t);
        var e = this;
        t.loaded.then(function () {
          e._complete();
        }), t.load();
      }, e._createDiv = function () {
        this._div = F.createElement("div"), this._div.innerHTML = "laya";
        var t = this._div.style;
        t.fontFamily = this.fontName, t.position = "absolute", t.left = "-100px", t.top = "-100px", F.document.body.appendChild(this._div);
      }, e._loadWithCSS = function () {
        var t = this,
          e = F.createElement("style");
        e.type = "text/css", F.document.body.appendChild(e), e.textContent = "@font-face { font-family:'" + this.fontName + "'; src:url('" + this._url + "');}", this._fontTxt = "40px " + this.fontName, this._txtWidth = s.measureText("LayaTTFFont", this._fontTxt).width;
        var n = this;
        e.onload = function () {
          i.timer.once(1e4, n, t._complete);
        }, i.timer.loop(20, this, this._checkComplete), this._createDiv();
      }, t._testString = "LayaTTFFont", t;
    }()),
    R = function () {
      function t(e) {
        this._url = null, this._path = null, this._url = t.formatURL(e), this._path = t.getPath(e);
      }
      r(t, "laya.net.URL");
      var e = t.prototype;
      return a(0, e, "path", function () {
        return this._path;
      }), a(0, e, "url", function () {
        return this._url;
      }), t.formatURL = function (e, i) {
        if (!e) return "null path";
        if (e.indexOf(":") > 0) return e;
        null != t.customFormat && -1 == e.indexOf("wxlocal") && (e = t.customFormat(e, i));
        var n = e.charAt(0);
        if ("." === n) return t.formatRelativePath((i || t.basePath) + e);
        if ("~" === n) return t.rootPath + e.substring(1);
        if ("d" === n) {
          if (0 === e.indexOf("data:image")) return e;
        } else if ("/" === n) return e;
        return -1 == e.indexOf("wxlocal") ? (i || t.basePath) + e : e;
      }, t.formatRelativePath = function (t) {
        for (var e = t.split("/"), i = 0, n = e.length; i < n; i++) ".." == e[i] && (e.splice(i - 1, 2), i -= 2);
        return e.join("/");
      }, t.isAbsolute = function (t) {
        return t.indexOf(":") > 0 || "/" == t.charAt(0);
      }, t.getPath = function (t) {
        var e = t.lastIndexOf("/");
        return e > 0 ? t.substr(0, e + 1) : "";
      }, t.getFileName = function (t) {
        var e = t.lastIndexOf("/");
        return e > 0 ? t.substr(e + 1) : t;
      }, t.version = {}, t.basePath = "", t.rootPath = "", t.customFormat = function (e) {
        var i = t.version[e];
        return !P.isConchApp && i && (e += "?v=" + i), e;
      }, t;
    }(),
    P = function () {
      function e(t, n) {
        function r(t) {
          i.stage._loop(), F.window.requestAnimationFrame(r);
        }
        this._timeId = 0;
        var a = e._mainCanvas.source.style;
        a.position = "absolute", a.top = a.left = "0px", a.background = "#000000", e._mainCanvas.source.id = "layaCanvas";
        var s = laya.renders.Render.isWebGL;
        e._mainCanvas.source.width = t, e._mainCanvas.source.height = n, s && e.WebGL.init(e._mainCanvas, t, n), F.container.appendChild(e._mainCanvas.source), (e._context = new L(t, n, s ? null : e._mainCanvas)).ctx.setIsMainContext(), F.window.requestAnimationFrame(r), i.stage.on("visibilitychange", this, this._onVisibilitychange);
      }
      r(e, "laya.renders.Render");
      var n = e.prototype;
      return n._onVisibilitychange = function () {
        i.stage.isVisibility ? 0 != this._timeId && F.window.clearInterval(this._timeId) : this._timeId = F.window.setInterval(this._enterFrame, 1e3);
      }, n._enterFrame = function (t) {
        i.stage._loop();
      }, a(1, e, "context", function () {
        return e._context;
      }), a(1, e, "canvas", function () {
        return e._mainCanvas.source;
      }), e._context = null, e._mainCanvas = null, e.WebGL = null, e.isConchNode = !1, e.isConchApp = !1, e.isConchWebGL = !1, e.isWebGL = !1, e.is3DMode = !1, e.optimizeTextureMemory = function (t, e) {
        return !0;
      }, e.__init$ = function () {
        t.ConchRenderType = t.ConchRenderType || 1, t.ConchRenderType |= t.conch ? 4 : 0, e.isConchNode = 5 == (5 & t.ConchRenderType), e.isConchApp = 4 == (4 & t.ConchRenderType), e.isConchWebGL = 6 == t.ConchRenderType;
      }, e;
    }(),
    L = function () {
      function t(e, i, n) {
        this.x = 0, this.y = 0, this._drawTexture = function (t, e, i) {
          i[0].loaded && this.ctx.drawTexture(i[0], i[1], i[2], i[3], i[4], t, e);
        }, this._fillTexture = function (t, e, i) {
          i[0].loaded && this.ctx.fillTexture(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
        }, this._drawTextureWithTransform = function (t, e, i) {
          i[0].loaded && this.ctx.drawTextureWithTransform(i[0], i[1], i[2], i[3], i[4], i[5], t, e, i[6]);
        }, this._fillQuadrangle = function (t, e, i) {
          this.ctx.fillQuadrangle(i[0], i[1], i[2], i[3], i[4]);
        }, this._drawRect = function (t, e, i) {
          var n = this.ctx;
          null != i[4] && (n.fillStyle = i[4], n.fillRect(t + i[0], e + i[1], i[2], i[3], null)), null != i[5] && (n.strokeStyle = i[5], n.lineWidth = i[6], n.strokeRect(t + i[0], e + i[1], i[2], i[3], i[6]));
        }, this._drawPie = function (t, e, i) {
          var n = this.ctx;
          P.isWebGL && n.setPathId(i[8]), n.beginPath(), P.isWebGL ? (n.movePath(i[0] + t, i[1] + e), n.moveTo(0, 0)) : n.moveTo(t + i[0], e + i[1]), n.arc(t + i[0], e + i[1], i[2], i[3], i[4]), n.closePath(), this._fillAndStroke(i[5], i[6], i[7], !0);
        }, this._clipRect = function (t, e, i) {
          this.ctx.clipRect(t + i[0], e + i[1], i[2], i[3]);
        }, this._fillRect = function (t, e, i) {
          this.ctx.fillRect(t + i[0], e + i[1], i[2], i[3], i[4]);
        }, this._drawCircle = function (e, i, n) {
          var r = this.ctx;
          P.isWebGL && r.setPathId(n[6]), X.drawCall++, r.beginPath(), P.isWebGL && r.movePath(n[0] + e, n[1] + i), r.arc(n[0] + e, n[1] + i, n[2], 0, t.PI2), r.closePath(), this._fillAndStroke(n[3], n[4], n[5], !0);
        }, this._fillCircle = function (e, i, n) {
          X.drawCall++;
          var r = this.ctx;
          r.beginPath(), r.fillStyle = n[3], r.arc(n[0] + e, n[1] + i, n[2], 0, t.PI2), r.fill();
        }, this._setShader = function (t, e, i) {
          this.ctx.setShader(i[0]);
        }, this._drawLine = function (t, e, i) {
          var n = this.ctx;
          P.isWebGL && n.setPathId(i[6]), n.beginPath(), n.strokeStyle = i[4], n.lineWidth = i[5], P.isWebGL ? (n.movePath(t, e), n.moveTo(i[0], i[1]), n.lineTo(i[2], i[3])) : (n.moveTo(t + i[0], e + i[1]), n.lineTo(t + i[2], e + i[3])), n.stroke();
        }, this._drawLines = function (t, e, i) {
          var n = this.ctx;
          P.isWebGL && n.setPathId(i[5]), n.beginPath(), t += i[0], e += i[1], P.isWebGL && n.movePath(t, e), n.strokeStyle = i[3], n.lineWidth = i[4];
          var r = i[2],
            a = 2,
            s = r.length;
          if (P.isWebGL)
            for (n.moveTo(r[0], r[1]); a < s;) n.lineTo(r[a++], r[a++]);
          else
            for (n.moveTo(t + r[0], e + r[1]); a < s;) n.lineTo(t + r[a++], e + r[a++]);
          n.stroke();
        }, this._drawLinesWebGL = function (t, e, i) {
          this.ctx.drawLines(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4]);
        }, this._drawCurves = function (t, e, i) {
          this.ctx.drawCurves(t, e, i);
        }, this._draw = function (t, e, i) {
          i[0].call(null, this, t, e);
        }, this._transformByMatrix = function (t, e, i) {
          this.ctx.transformByMatrix(i[0]);
        }, this._setTransform = function (t, e, i) {
          this.ctx.setTransform(i[0], i[1], i[2], i[3], i[4], i[5]);
        }, this._setTransformByMatrix = function (t, e, i) {
          this.ctx.setTransformByMatrix(i[0]);
        }, this._save = function (t, e, i) {
          this.ctx.save();
        }, this._restore = function (t, e, i) {
          this.ctx.restore();
        }, this._translate = function (t, e, i) {
          this.ctx.translate(i[0], i[1]);
        }, this._transform = function (t, e, i) {
          this.ctx.translate(i[1] + t, i[2] + e);
          var n = i[0];
          this.ctx.transform(n.a, n.b, n.c, n.d, n.tx, n.ty), this.ctx.translate(-t - i[1], -e - i[2]);
        }, this._rotate = function (t, e, i) {
          this.ctx.translate(i[1] + t, i[2] + e), this.ctx.rotate(i[0]), this.ctx.translate(-t - i[1], -e - i[2]);
        }, this._scale = function (t, e, i) {
          this.ctx.translate(i[2] + t, i[3] + e), this.ctx.scale(i[0], i[1]), this.ctx.translate(-t - i[2], -e - i[3]);
        }, this._alpha = function (t, e, i) {
          this.ctx.globalAlpha *= i[0];
        }, this._setAlpha = function (t, e, i) {
          this.ctx.globalAlpha = i[0];
        }, this._fillText = function (t, e, i) {
          this.ctx.fillText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5]);
        }, this._strokeText = function (t, e, i) {
          this.ctx.strokeText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6]);
        }, this._fillBorderText = function (t, e, i) {
          this.ctx.fillBorderText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
        }, this._blendMode = function (t, e, i) {
          this.ctx.globalCompositeOperation = i[0];
        }, this._beginClip = function (t, e, i) {
          this.ctx.beginClip && this.ctx.beginClip(t + i[0], e + i[1], i[2], i[3]);
        }, this._setIBVB = function (t, e, i) {
          this.ctx.setIBVB(i[0] + t, i[1] + e, i[2], i[3], i[4], i[5], i[6], i[7]);
        }, this._fillTrangles = function (t, e, i) {
          this.ctx.fillTrangles(i[0], i[1] + t, i[2] + e, i[3], i[4]);
        }, this._drawPath = function (t, e, i) {
          var n = this.ctx;
          P.isWebGL && n.setPathId(-1), n.beginPath(), t += i[0], e += i[1], P.isWebGL && n.movePath(t, e);
          for (var r = i[2], a = 0, s = r.length; a < s; a++) {
            var o = r[a];
            switch (o[0]) {
              case "moveTo":
                P.isWebGL ? n.moveTo(o[1], o[2]) : n.moveTo(t + o[1], e + o[2]);
                break;
              case "lineTo":
                P.isWebGL ? n.lineTo(o[1], o[2]) : n.lineTo(t + o[1], e + o[2]);
                break;
              case "arcTo":
                P.isWebGL ? n.arcTo(o[1], o[2], o[3], o[4], o[5]) : n.arcTo(t + o[1], e + o[2], t + o[3], e + o[4], o[5]);
                break;
              case "closePath":
                n.closePath();
            }
          }
          var h = i[3];
          null != h && (n.fillStyle = h.fillStyle, n.fill());
          var l = i[4];
          null != l && (n.strokeStyle = l.strokeStyle, n.lineWidth = l.lineWidth || 1, n.lineJoin = l.lineJoin, n.lineCap = l.lineCap, n.miterLimit = l.miterLimit, n.stroke());
        }, this.drawPoly = function (t, e, i) {
          this.ctx.drawPoly(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4], i[5], i[6]);
        }, this._drawPoly = function (t, e, i) {
          var n = this.ctx,
            r = i[2],
            a = 2,
            s = r.length;
          if (P.isWebGL)
            for (n.setPathId(i[6]), n.beginPath(), t += i[0], e += i[1], n.movePath(t, e), n.moveTo(r[0], r[1]); a < s;) n.lineTo(r[a++], r[a++]);
          else
            for (n.beginPath(), t += i[0], e += i[1], n.moveTo(t + r[0], e + r[1]); a < s;) n.lineTo(t + r[a++], e + r[a++]);
          n.closePath(), this._fillAndStroke(i[3], i[4], i[5], i[7]);
        }, this._drawSkin = function (t, e, i) {
          var n = i[0];
          if (n) {
            var r = this.ctx;
            n.render(r, t, e);
          }
        }, this._drawParticle = function (t, e, i) {
          this.ctx.drawParticle(t + this.x, e + this.y, i[0]);
        }, this._setFilters = function (t, e, i) {
          this.ctx.setFilters(i);
        }, n ? this.ctx = n.getContext("2d") : (n = yt.create("3D"), this.ctx = s.createWebGLContext2D(n), n._setContext(this.ctx)), n.size(e, i), this.canvas = n;
      }
      r(t, "laya.renders.RenderContext");
      var e = t.prototype;
      return e.destroy = function () {
        this.canvas && (this.canvas.destroy(), this.canvas = null, this.ctx = null), this.ctx && (this.ctx.destroy(), this.ctx = null);
      }, e.drawTexture = function (t, e, i, n, r) {
        t.loaded && this.ctx.drawTexture(t, e, i, n, r, this.x, this.y);
      }, e._drawTextures = function (t, e, i) {
        i[0].loaded && this.ctx.drawTextures(i[0], i[1], t + this.x, e + this.y);
      }, e.drawTextureWithTransform = function (t, e, i, n, r, a, s) {
        t.loaded && this.ctx.drawTextureWithTransform(t, e, i, n, r, a, this.x, this.y, s);
      }, e.fillQuadrangle = function (t, e, i, n, r) {
        this.ctx.fillQuadrangle(t, e, i, n, r);
      }, e.drawCanvas = function (t, e, i, n, r) {
        this.ctx.drawCanvas(t, e + this.x, i + this.y, n, r);
      }, e.drawRect = function (t, e, i, n, r, a) {
        void 0 === a && (a = 1);
        var s = this.ctx;
        s.strokeStyle = r, s.lineWidth = a, s.strokeRect(t + this.x, e + this.y, i, n, a);
      }, e._fillAndStroke = function (t, e, i, n) {
        void 0 === n && (n = !1);
        var r = this.ctx;
        null != t && (r.fillStyle = t, P.isWebGL ? r.fill(n) : r.fill()), null != e && i > 0 && (r.strokeStyle = e, r.lineWidth = i, r.stroke());
      }, e.clipRect = function (t, e, i, n) {
        this.ctx.clipRect(t + this.x, e + this.y, i, n);
      }, e.fillRect = function (t, e, i, n, r) {
        this.ctx.fillRect(t + this.x, e + this.y, i, n, r);
      }, e.drawCircle = function (e, i, n, r, a) {
        void 0 === a && (a = 1), X.drawCall++;
        var s = this.ctx;
        s.beginPath(), s.strokeStyle = r, s.lineWidth = a, s.arc(e + this.x, i + this.y, n, 0, t.PI2), s.stroke();
      }, e.drawTriangles = function (t, e, i) {
        if (P.isWebGL) this.ctx.drawTriangles(i[0], t + i[1], e + i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9]);
        else {
          var n = i[5],
            r = 0,
            a = n.length,
            s = this.ctx;
          for (r = 0; r < a; r += 3) {
            var o = 2 * n[r],
              h = 2 * n[r + 1],
              l = 2 * n[r + 2];
            s.drawTriangle(i[0], i[3], i[4], o, h, l, i[6], !0);
          }
        }
      }, e.fillCircle = function (e, i, n, r) {
        X.drawCall++;
        var a = this.ctx;
        a.beginPath(), a.fillStyle = r, a.arc(e + this.x, i + this.y, n, 0, t.PI2), a.fill();
      }, e.setShader = function (t) {
        this.ctx.setShader(t);
      }, e.drawLine = function (t, e, i, n, r, a) {
        void 0 === a && (a = 1);
        var s = this.ctx;
        s.beginPath(), s.strokeStyle = r, s.lineWidth = a, s.moveTo(this.x + t, this.y + e), s.lineTo(this.x + i, this.y + n), s.stroke();
      }, e.clear = function () {
        this.ctx.clear();
      }, e.transformByMatrix = function (t) {
        this.ctx.transformByMatrix(t);
      }, e.setTransform = function (t, e, i, n, r, a) {
        this.ctx.setTransform(t, e, i, n, r, a);
      }, e.setTransformByMatrix = function (t) {
        this.ctx.setTransformByMatrix(t);
      }, e.save = function () {
        this.ctx.save();
      }, e.restore = function () {
        this.ctx.restore();
      }, e.translate = function (t, e) {
        this.ctx.translate(t, e);
      }, e.transform = function (t, e, i, n, r, a) {
        this.ctx.transform(t, e, i, n, r, a);
      }, e.rotate = function (t) {
        this.ctx.rotate(t);
      }, e.scale = function (t, e) {
        this.ctx.scale(t, e);
      }, e.alpha = function (t) {
        this.ctx.globalAlpha *= t;
      }, e.setAlpha = function (t) {
        this.ctx.globalAlpha = t;
      }, e.fillWords = function (t, e, i, n, r, a) {
        void 0 === a && (a = 0), this.ctx.fillWords(t, e, i, n, r, a);
      }, e.fillBorderWords = function (t, e, i, n, r, a, s) {
        this.ctx.fillBorderWords(t, e, i, n, r, a, s);
      }, e.fillText = function (t, e, i, n, r, a) {
        this.ctx.fillText(t, e + this.x, i + this.y, n, r, a);
      }, e.strokeText = function (t, e, i, n, r, a, s) {
        this.ctx.strokeText(t, e + this.x, i + this.y, n, r, a, s);
      }, e.blendMode = function (t) {
        this.ctx.globalCompositeOperation = t;
      }, e.flush = function () {
        this.ctx.flush && this.ctx.flush();
      }, e.addRenderObject = function (t) {
        this.ctx.addRenderObject(t);
      }, e.beginClip = function (t, e, i, n) {
        this.ctx.beginClip && this.ctx.beginClip(t, e, i, n);
      }, e.endClip = function () {
        this.ctx.endClip && this.ctx.endClip();
      }, e.fillTrangles = function (t, e, i) {
        this.ctx.fillTrangles(i[0], i[1], i[2], i[3], i.length > 4 ? i[4] : null);
      }, t.PI2 = 2 * Math.PI, t;
    }(),
    O = function () {
      function t(e, i) {
        switch (this._next = i || t.NORENDER, e) {
          case 0:
            return void(this._fun = this._no);
          case 1:
            return void(this._fun = this._image);
          case 2:
            return void(this._fun = this._alpha);
          case 4:
            return void(this._fun = this._transform);
          case 8:
            return void(this._fun = this._blend);
          case 16:
            return void(this._fun = this._canvas);
          case 64:
            return void(this._fun = this._mask);
          case 128:
            return void(this._fun = this._clip);
          case 256:
            return void(this._fun = this._style);
          case 512:
            return void(this._fun = this._graphics);
          case 2048:
            return void(this._fun = this._childs);
          case 1024:
            return void(this._fun = this._custom);
          case 513:
          case 517:
            return void(this._fun = this._image2);
          case 32:
            return void(this._fun = x._filter);
          case 69905:
            return void(this._fun = t._initRenderFun);
        }
        this.onCreate(e);
      }
      r(t, "laya.renders.RenderSprite");
      var e = t.prototype;
      return e.onCreate = function (t) {}, e._style = function (t, e, i, n) {
        t._style.render(t, e, i, n);
        var r = this._next;
        r._fun.call(r, t, e, i, n);
      }, e._no = function (t, e, i, n) {}, e._custom = function (t, e, i, n) {
        t.customRender(e, i, n);
        var r = t._style._tf;
        this._next._fun.call(this._next, t, e, i - r.translateX, n - r.translateY);
      }, e._clip = function (e, i, n, r) {
        var a = this._next;
        if (a != t.NORENDER) {
          var s = e._style.scrollRect;
          i.ctx.save(), i.ctx.clipRect(n, r, s.width, s.height), a._fun.call(a, e, i, n - s.x, r - s.y), i.ctx.restore();
        }
      }, e._blend = function (t, e, i, n) {
        var r = t._style;
        r.blendMode && (e.ctx.globalCompositeOperation = r.blendMode);
        var a = this._next;
        a._fun.call(a, t, e, i, n), e.ctx.globalCompositeOperation = "source-over";
      }, e._mask = function (t, e, i, n) {
        var r = this._next;
        r._fun.call(r, t, e, i, n);
        var a = t.mask;
        a && (e.ctx.globalCompositeOperation = "destination-in", (a.numChildren > 0 || !a.graphics._isOnlyOne()) && (a.cacheAsBitmap = !0), a.render(e, i - t.pivotX, n - t.pivotY)), e.ctx.globalCompositeOperation = "source-over";
      }, e._graphics = function (t, e, i, n) {
        var r = t._style._tf;
        t._graphics && t._graphics._render(t, e, i - r.translateX, n - r.translateY);
        var a = this._next;
        a._fun.call(a, t, e, i, n);
      }, e._image = function (t, e, i, n) {
        var r = t._style;
        e.ctx.drawTexture2(i, n, r._tf.translateX, r._tf.translateY, t.transform, r.alpha, r.blendMode, t._graphics._one);
      }, e._image2 = function (t, e, i, n) {
        var r = t._style._tf;
        e.ctx.drawTexture2(i, n, r.translateX, r.translateY, t.transform, 1, null, t._graphics._one);
      }, e._alpha = function (t, e, i, n) {
        var r;
        if ((r = t._style.alpha) > .01 || t._needRepaint()) {
          var a = e.ctx.globalAlpha;
          e.ctx.globalAlpha *= r;
          var s = this._next;
          s._fun.call(s, t, e, i, n), e.ctx.globalAlpha = a;
        }
      }, e._transform = function (e, i, n, r) {
        var a = e.transform,
          s = this._next;
        a && s != t.NORENDER ? (i.save(), i.transform(a.a, a.b, a.c, a.d, a.tx + n, a.ty + r), s._fun.call(s, e, i, 0, 0), i.restore()) : s._fun.call(s, e, i, n, r);
      }, e._childs = function (t, e, i, n) {
        var r = t._style,
          a = r._tf;
        if (i = i - a.translateX + r.paddingLeft, n = n - a.translateY + r.paddingTop, r._calculation) {
          var s = t._getWords();
          if (s) {
            var o = r;
            o && (o.stroke ? e.fillBorderWords(s, i, n, o.font, o.color, o.strokeColor, o.stroke) : e.fillWords(s, i, n, o.font, o.color, "none" != o.textDecoration && o.underLine ? 1 : 0));
          }
        }
        var h, l = t._childs,
          u = l.length;
        if (t.viewport || t.optimizeScrollRect && t._style.scrollRect) {
          var c = t.viewport || t._style.scrollRect,
            _ = c.x,
            d = c.y,
            f = c.right,
            p = c.bottom,
            m = NaN,
            g = NaN;
          for (v = 0; v < u; ++v)(h = l[v]).visible && (m = h._x) < f && m + h.width > _ && (g = h._y) < p && g + h.height > d && h.render(e, i, n);
        } else
          for (var v = 0; v < u; ++v)(h = l[v])._style.visible && h.render(e, i, n);
      }, e._canvas = function (t, e, i, n) {
        var r = t._$P.cacheCanvas;
        if (r) {
          "bitmap" === r.type ? X.canvasBitmap++ : X.canvasNormal++;
          var a = r.ctx;
          if (t._needRepaint() || !a) this._canvas_repaint(t, e, i, n);
          else {
            var s = r._cacheRec;
            e.drawCanvas(a.canvas, i + s.x, n + s.y, s.width, s.height);
          }
        } else this._next._fun.call(this._next, t, e, i, n);
      }, e._canvas_repaint = function (t, e, n, r) {
        var a = t._$P.cacheCanvas,
          s = this._next;
        if (a) {
          var o, h, l, u, c = a.ctx,
            _ = t._needRepaint() || !c,
            d = a.type;
          if ("bitmap" === d ? X.canvasBitmap++ : X.canvasNormal++, _) {
            a._cacheRec || (a._cacheRec = new M());
            var f, p;
            P.isWebGL && "bitmap" !== d ? a._cacheRec.setTo(-t.pivotX, -t.pivotY, 1, 1) : ((u = t.getSelfBounds()).x = u.x - t.pivotX, u.y = u.y - t.pivotY, u.x = u.x - 16, u.y = u.y - 16, u.width = u.width + 32, u.height = u.height + 32, u.x = Math.floor(u.x + n) - n, u.y = Math.floor(u.y + r) - r, u.width = Math.floor(u.width), u.height = Math.floor(u.height), a._cacheRec.copyFrom(u)), u = a._cacheRec;
            var m = P.isWebGL ? 1 : F.pixelRatio * i.stage.clientScaleX,
              g = P.isWebGL ? 1 : F.pixelRatio * i.stage.clientScaleY;
            if (!P.isWebGL) {
              var v, y = 1,
                x = 1;
              for (v = t; v && v != i.stage;) y *= v.scaleX, x *= v.scaleY, v = v.parent;
              P.isWebGL ? (y < 1 && (m *= y), x < 1 && (g *= x)) : (y > 1 && (m *= y), x > 1 && (g *= x));
            }
            if (t.scrollRect) {
              var T = t.scrollRect;
              u.x -= T.x, u.y -= T.y;
            }
            if (f = u.width * m, p = u.height * g, h = u.x, l = u.y, P.isWebGL && "bitmap" === d && (f > 2048 || p > 2048)) return console.warn("cache bitmap size larger than 2048,cache ignored"), a.ctx && (j.recover("RenderContext", a.ctx), a.ctx.canvas.size(0, 0), a.ctx = null), void s._fun.call(s, t, e, n, r);
            c || (c = a.ctx = j.getItem("RenderContext") || new L(f, p, yt.create("AUTO"))), c.ctx.sprite = t, (o = c.canvas).clear(), (o.width != f || o.height != p) && o.size(f, p), "bitmap" === d ? o.context.asBitmap = !0 : "normal" === d && (o.context.asBitmap = !1);
            var S;
            if (1 != m || 1 != g) {
              var w = c.ctx;
              w.save(), w.scale(m, g), !P.isConchWebGL && P.isConchApp && (S = t._$P.cf) && w.setFilterMatrix && w.setFilterMatrix(S._mat, S._alpha), s._fun.call(s, t, c, -h, -l), w.restore(), P.isConchApp && !P.isConchWebGL || t._applyFilters();
            } else w = c.ctx, !P.isConchWebGL && P.isConchApp && (S = t._$P.cf) && w.setFilterMatrix && w.setFilterMatrix(S._mat, S._alpha), s._fun.call(s, t, c, -h, -l), P.isConchApp && !P.isConchWebGL || t._applyFilters();
            t._$P.staticCache && (a.reCache = !1), X.canvasReCache++;
          } else h = (u = a._cacheRec).x, l = u.y, o = c.canvas;
          e.drawCanvas(o, n + h, r + l, u.width, u.height);
        } else s._fun.call(s, t, c, n, r);
      }, t.__init__ = function () {
        var e, i = 0,
          n = 0;
        for (e = s.createRenderSprite(69905, null), n = t.renders.length = 4096, i = 0; i < n; i++) t.renders[i] = e;
        t.renders[0] = s.createRenderSprite(0, null),
          function (e, i) {
            for (var n = 0, r = 0; r < e.length; r++) n |= e[r], t.renders[n] = i;
          }([1, 512, 4, 2], new t(1, null)), t.renders[513] = s.createRenderSprite(513, null), t.renders[517] = new t(517, null);
      }, t._initRenderFun = function (e, i, n, r) {
        var a = e._renderType;
        (t.renders[a] = t._getTypeRender(a))._fun(e, i, n, r);
      }, t._getTypeRender = function (t) {
        for (var e = null, i = 2048; i > 1;) i & t && (e = s.createRenderSprite(i, e)), i >>= 1;
        return e;
      }, t.IMAGE = 1, t.ALPHA = 2, t.TRANSFORM = 4, t.BLEND = 8, t.CANVAS = 16, t.FILTERS = 32, t.MASK = 64, t.CLIP = 128, t.STYLE = 256, t.GRAPHICS = 512, t.CUSTOM = 1024, t.CHILDS = 2048, t.INIT = 69905, t.renders = [], t.NORENDER = new t(0, null), t;
    }(),
    N = function () {
      function t() {
        this._repaint = !1;
      }
      r(t, "laya.resource.Context");
      var e = t.prototype;
      return e.replaceReset = function () {
        var e = 0,
          i = 0;
        i = t.replaceKeys.length;
        var n;
        for (e = 0; e < i; e++) n = t.replaceKeys[e], this[t.newKeys[e]] = this[n];
      }, e.replaceResotre = function () {
        this.__restore(), this.__reset();
      }, e.setIsMainContext = function () {}, e.drawTextures = function (t, e, i, n) {
        X.drawCall += e.length / 2;
        for (var r = t.width, a = t.height, s = 0, o = e.length; s < o; s += 2) this.drawTexture(t, e[s], e[s + 1], r, a, i, n);
      }, e.drawCanvas = function (t, e, i, n, r) {
        X.drawCall++, this.drawImage(t.source, e, i, n, r);
      }, e.fillRect = function (t, e, i, n, r) {
        X.drawCall++, r && (this.fillStyle = r), this.__fillRect(t, e, i, n);
      }, e.fillText = function (t, e, i, n, r, a) {
        X.drawCall++, arguments.length > 3 && null != n && (this.font = n, this.fillStyle = r, this.textAlign = a, this.textBaseline = "top"), this.__fillText(t, e, i);
      }, e.fillBorderText = function (t, e, i, n, r, a, s, o) {
        X.drawCall++, this.font = n, this.fillStyle = r, this.textBaseline = "top", this.strokeStyle = a, this.lineWidth = s, this.textAlign = o, this.__strokeText(t, e, i), this.__fillText(t, e, i);
      }, e.strokeText = function (t, e, i, n, r, a, s) {
        X.drawCall++, arguments.length > 3 && null != n && (this.font = n, this.strokeStyle = r, this.lineWidth = a, this.textAlign = s, this.textBaseline = "top"), this.__strokeText(t, e, i);
      }, e.transformByMatrix = function (t) {
        this.transform(t.a, t.b, t.c, t.d, t.tx, t.ty);
      }, e.setTransformByMatrix = function (t) {
        this.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty);
      }, e.clipRect = function (t, e, i, n) {
        X.drawCall++, this.beginPath(), this.rect(t, e, i, n), this.clip();
      }, e.drawTexture = function (t, e, i, n, r, a, s) {
        X.drawCall++;
        var o = t.uv,
          h = t.bitmap.width,
          l = t.bitmap.height;
        this.drawImage(t.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e + a, i + s, n, r);
      }, e.drawTextureWithTransform = function (t, e, i, n, r, a, s, o, h) {
        X.drawCall++;
        var l = t.uv,
          u = t.bitmap.width,
          c = t.bitmap.height;
        this.save(), 1 != h && (this.globalAlpha *= h), a ? (this.transform(a.a, a.b, a.c, a.d, a.tx + s, a.ty + o), this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e, i, n, r)) : this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e + s, i + o, n, r), this.restore();
      }, e.drawTexture2 = function (t, e, i, n, r, a, s, o) {
        var h = o[0];
        if (h.loaded && h.bitmap && h.source) {
          X.drawCall++;
          var l = 1 !== a;
          if (l) {
            var u = this.globalAlpha;
            this.globalAlpha *= a;
          }
          var c = h.uv,
            _ = h.bitmap.width,
            d = h.bitmap.height;
          r ? (this.save(), this.transform(r.a, r.b, r.c, r.d, r.tx + t, r.ty + e), this.drawImage(h.source, c[0] * _, c[1] * d, (c[2] - c[0]) * _, (c[5] - c[3]) * d, o[1] - i, o[2] - n, o[3], o[4]), this.restore()) : this.drawImage(h.source, c[0] * _, c[1] * d, (c[2] - c[0]) * _, (c[5] - c[3]) * d, o[1] - i + t, o[2] - n + e, o[3], o[4]), l && (this.globalAlpha = u);
        }
      }, e.fillTexture = function (t, e, i, n, r, a, s, o) {
        if (!o.pat) {
          if (t.uv != lt.DEF_UV) {
            var h = new yt("2D");
            h.getContext("2d"), h.size(t.width, t.height), h.context.drawTexture(t, 0, 0, t.width, t.height, 0, 0), t = new lt(h);
          }
          o.pat = this.createPattern(t.bitmap.source, a);
        }
        var l = e,
          u = i,
          c = 0,
          _ = 0;
        s && (l += s.x % t.width, u += s.y % t.height, c -= s.x % t.width, _ -= s.y % t.height), this.translate(l, u), this.fillRect(c, _, n, r, o.pat), this.translate(-l, -u);
      }, e.drawTriangle = function (t, e, i, n, r, a, s, o) {
        var h = t.bitmap,
          l = h.source,
          u = t.width,
          c = t.height,
          _ = h.width,
          d = h.height,
          f = i[n] * _,
          p = i[r] * _,
          m = i[a] * _,
          g = i[n + 1] * d,
          v = i[r + 1] * d,
          y = i[a + 1] * d,
          x = e[n],
          T = e[r],
          S = e[a],
          w = e[n + 1],
          E = e[r + 1],
          b = e[a + 1];
        if (o) {
          var C = (x + T + S) / 3,
            M = (w + E + b) / 3,
            I = x - C,
            D = w - M,
            A = Math.sqrt(I * I + D * D);
          x = C + I / A * (A + 1), w = M + D / A * (A + 1), D = E - M, T = C + (I = T - C) / (A = Math.sqrt(I * I + D * D)) * (A + 1), E = M + D / A * (A + 1), D = b - M, S = C + (I = S - C) / (A = Math.sqrt(I * I + D * D)) * (A + 1), b = M + D / A * (A + 1);
        }
        this.save(), s && this.transform(s.a, s.b, s.c, s.d, s.tx, s.ty), this.beginPath(), this.moveTo(x, w), this.lineTo(T, E), this.lineTo(S, b), this.closePath(), this.clip();
        var R = 1 / (f * v + g * m + p * y - v * m - g * p - f * y),
          P = x * v + g * S + T * y - v * S - g * T - x * y,
          L = f * T + x * m + p * S - T * m - x * p - f * S,
          O = f * v * S + g * T * m + x * p * y - x * v * m - g * p * S - f * T * y,
          N = w * v + g * b + E * y - v * b - g * E - w * y,
          V = f * E + w * m + p * b - E * m - w * p - f * b,
          F = f * v * b + g * E * m + w * p * y - w * v * m - g * p * b - f * E * y;
        this.transform(P * R, N * R, L * R, V * R, O * R, F * R), this.drawImage(l, t.uv[0] * _, t.uv[1] * d, u, c, t.uv[0] * _, t.uv[1] * d, u, c), this.restore();
      }, e.flush = function () {
        return 0;
      }, e.fillWords = function (t, e, i, n, r, a) {
        n && (this.font = n), r && (this.fillStyle = r);
        this.textBaseline = "top", this.textAlign = "left";
        for (var s = 0, o = t.length; s < o; s++) {
          var h = t[s];
          if (this.__fillText(h.char, h.x + e, h.y + i), 1 === a) {
            var l = h.height,
              u = .5 * h.style.letterSpacing;
            u || (u = 0), this.beginPath(), this.strokeStyle = r, this.lineWidth = 1, this.moveTo(e + h.x - u + .5, i + h.y + l + .5), this.lineTo(e + h.x + h.width + u + .5, i + h.y + l + .5), this.stroke();
          }
        }
      }, e.fillBorderWords = function (t, e, i, n, r, a, s) {
        n && (this.font = n), r && (this.fillStyle = r), this.textBaseline = "top", this.lineWidth = s, this.textAlign = "left", this.strokeStyle = a;
        for (var o = 0, h = t.length; o < h; o++) {
          var l = t[o];
          this.__strokeText(l.char, l.x + e, l.y + i), this.__fillText(l.char, l.x + e, l.y + i);
        }
      }, e.destroy = function () {
        this.canvas.width = this.canvas.height = 0;
      }, e.clear = function () {
        this.clearRect(0, 0, this._canvas.width, this._canvas.height), this._repaint = !1;
      }, e.drawCurves = function (t, e, i) {
        this.beginPath(), this.strokeStyle = i[3], this.lineWidth = i[4];
        var n = i[2];
        t += i[0], e += i[1], this.moveTo(t + n[0], e + n[1]);
        for (var r = 2, a = n.length; r < a;) this.quadraticCurveTo(t + n[r++], e + n[r++], t + n[r++], e + n[r++]);
        this.stroke();
      }, t.__init__ = function (t) {
        var e = laya.resource.Context.prototype;
        if (!(t = t || CanvasRenderingContext2D.prototype).inited) {
          t.inited = !0, t.__fillText = t.fillText, t.__fillRect = t.fillRect, t.__strokeText = t.strokeText;
          ["drawTextures", "drawTriangle", "fillWords", "fillBorderWords", "setIsMainContext", "fillRect", "strokeText", "fillTexture", "fillText", "transformByMatrix", "setTransformByMatrix", "clipRect", "drawTexture", "drawTexture2", "drawTextureWithTransform", "flush", "clear", "destroy", "drawCanvas", "fillBorderText", "drawCurves"].forEach(function (i) {
            t[i] = e[i];
          });
        }
      }, t.replaceCanvasGetSet = function (t, e) {
        var i = Object.getOwnPropertyDescriptor(t, e);
        if (!i || !i.configurable) return !1;
        var n, r = {};
        for (n in i) "set" != n && (r[n] = i[n]);
        var a = i.set;
        return r.set = function (t) {
          a.call(this, t);
          var e = this.getContext("2d");
          e && "__reset" in e && e.__reset();
        }, Object.defineProperty(t, e, r), !0;
      }, t.replaceGetSet = function (e, i) {
        var n = Object.getOwnPropertyDescriptor(e, i);
        if (!n || !n.configurable) return !1;
        var r, a = {};
        for (r in n) "set" != r && (a[r] = n[r]);
        var s = n.set,
          o = "___" + i + "__";
        return t.newKeys.push(o), a.set = function (t) {
          t != this[o] && (this[o] = t, s.call(this, t));
        }, Object.defineProperty(e, i, a), !0;
      }, t._default = new t(), t.newKeys = [], n(t, ["replaceKeys", function () {
        return this.replaceKeys = ["font", "fillStyle", "textBaseline"];
      }]), t;
    }(),
    V = function () {
      function t(e) {
        this._id = 0, this._name = null, this._resources = null, this._memorySize = 0, this._garbageCollectionRate = NaN, this._isOverflow = !1, this.autoRelease = !1, this.autoReleaseMaxSize = 0, this._id = ++t._uniqueIDCounter, this._name = e || "Content Manager", t._isResourceManagersSorted = !1, this._memorySize = 0, this._isOverflow = !1, this.autoRelease = !1, this.autoReleaseMaxSize = 536870912, this._garbageCollectionRate = .2, t._resourceManagers.push(this), this._resources = [];
      }
      r(t, "laya.resource.ResourceManager");
      var e = t.prototype;
      return i.imps(e, {
        "laya.resource.IDispose": !0
      }), e.getResourceByIndex = function (t) {
        return this._resources[t];
      }, e.getResourcesLength = function () {
        return this._resources.length;
      }, e.addResource = function (t) {
        t.resourceManager && t.resourceManager.removeResource(t);
        return -1 === this._resources.indexOf(t) && (t._resourceManager = this, this._resources.push(t), this.addSize(t.memorySize), !0);
      }, e.removeResource = function (t) {
        var e = this._resources.indexOf(t);
        return -1 !== e && (this._resources.splice(e, 1), t._resourceManager = null, this._memorySize -= t.memorySize, !0);
      }, e.unload = function () {
        for (var t = this._resources.slice(0, this._resources.length), e = 0; e < t.length; e++) {
          t[e].destroy();
        }
        t.length = 0;
      }, e.dispose = function () {
        if (this === t._systemResourceManager) throw new Error("systemResourceManager不能被释放！");
        t._resourceManagers.splice(t._resourceManagers.indexOf(this), 1), t._isResourceManagersSorted = !1;
        for (var e = this._resources.slice(0, this._resources.length), i = 0; i < e.length; i++) {
          var n = e[i];
          n.resourceManager.removeResource(n), n.destroy();
        }
        e.length = 0;
      }, e.addSize = function (t) {
        t && (this.autoRelease && t > 0 && this._memorySize + t > this.autoReleaseMaxSize && this.garbageCollection((1 - this._garbageCollectionRate) * this.autoReleaseMaxSize), this._memorySize += t);
      }, e.garbageCollection = function (t) {
        var e = this._resources;
        (e = e.slice()).sort(function (t, e) {
          if (!t || !e) throw new Error("a或b不能为空！");
          return t.released && e.released ? 0 : t.released ? 1 : e.released ? -1 : t._lastUseFrameCount - e._lastUseFrameCount;
        });
        for (var i = X.loopCount, n = 0, r = e.length; n < r; n++) {
          var a = e[n];
          if (!(i - a._lastUseFrameCount > 1)) return void(this._memorySize >= t && (this._isOverflow = !0));
          if (a.releaseResource(), this._memorySize < t) return void(this._isOverflow = !1);
        }
      }, a(0, e, "id", function () {
        return this._id;
      }), a(0, e, "name", function () {
        return this._name;
      }, function (e) {
        !e && "" === e || this._name === e || (this._name = e, t._isResourceManagersSorted = !1);
      }), a(0, e, "memorySize", function () {
        return this._memorySize;
      }), a(1, t, "systemResourceManager", function () {
        return t._systemResourceManager;
      }), t.__init__ = function () {
        t.currentResourceManager = t.systemResourceManager;
      }, t.getLoadedResourceManagerByIndex = function (e) {
        return t._resourceManagers[e];
      }, t.getLoadedResourceManagersCount = function () {
        return t._resourceManagers.length;
      }, t.recreateContentManagers = function (e) {
        void 0 === e && (e = !1);
        for (var i = t.currentResourceManager, n = 0; n < t._resourceManagers.length; n++) {
          t.currentResourceManager = t._resourceManagers[n];
          for (var r = 0; r < t.currentResourceManager._resources.length; r++) t.currentResourceManager._resources[r].releaseResource(e), t.currentResourceManager._resources[r].activeResource(e);
        }
        t.currentResourceManager = i;
      }, t.releaseContentManagers = function (e) {
        void 0 === e && (e = !1);
        for (var i = t.currentResourceManager, n = 0; n < t._resourceManagers.length; n++) {
          t.currentResourceManager = t._resourceManagers[n];
          for (var r = 0; r < t.currentResourceManager._resources.length; r++) {
            var a = t.currentResourceManager._resources[r];
            !a.released && a.releaseResource(e);
          }
        }
        t.currentResourceManager = i;
      }, t._uniqueIDCounter = 0, t._isResourceManagersSorted = !1, t._resourceManagers = [], n(t, ["_systemResourceManager", function () {
        return this._systemResourceManager = new t("System Resource Manager");
      }, "currentResourceManager", function () {
        return this.currentResourceManager = t._systemResourceManager;
      }]), t;
    }(),
    F = (function () {
      function t() {}
      r(t, "laya.system.System"), t.changeDefinition = function (t, e) {
        i[t] = e;
        var n = t + "=classObj";
        i._runScript(n);
      }, t.__init__ = function () {
        P.isConchApp && (conch.disableConchResManager(), conch.disableConchAutoRestoreLostedDevice());
      };
    }(), function () {
      function n() {}
      return r(n, "laya.utils.Browser"), a(1, n, "pixelRatio", function () {
        return n.__init__(), n.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)") > -1 ? 2 : s.getPixelRatio();
      }), a(1, n, "height", function () {
        return n.__init__(), (i.stage && i.stage.canvasRotation ? n.clientWidth : n.clientHeight) * n.pixelRatio;
      }), a(1, n, "clientWidth", function () {
        return n.__init__(), n.window.innerWidth || n.document.body.clientWidth;
      }), a(1, n, "window", function () {
        return n.__init__(), n._window;
      }), a(1, n, "clientHeight", function () {
        return n.__init__(), n.window.innerHeight || n.document.body.clientHeight || n.document.documentElement.clientHeight;
      }), a(1, n, "width", function () {
        return n.__init__(), (i.stage && i.stage.canvasRotation ? n.clientHeight : n.clientWidth) * n.pixelRatio;
      }), a(1, n, "container", function () {
        return n.__init__(), n._container || ((n._container = n.createElement("div")).id = "layaContainer", n.document.body.appendChild(n._container)), n._container;
      }, function (t) {
        n._container = t;
      }), a(1, n, "document", function () {
        return n.__init__(), n._document;
      }), n.__init__ = function () {
        if (!n._window) {
          n._window = s.getWindow(), n._document = n.window.document, n._window.addEventListener("message", function (t) {
            laya.utils.Browser._onMessage(t);
          }, !1), n.document.__createElement = n.document.createElement, t.requestAnimationFrame = t.requestAnimationFrame || t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || t.oRequestAnimationFrame || t.msRequestAnimationFrame || function (e) {
            return t.setTimeout(e, 1e3 / 60);
          };
          var i = t.document.body.style;
          i["-webkit-user-select"] = "none", i["-webkit-tap-highlight-color"] = "rgba(200,200,200,0)", n.userAgent = n.window.navigator.userAgent, n.onIOS = !!(n.u = n.userAgent).match(/\(i[^;]+;(U;)? CPU.+Mac OS X/), n.onMobile = n.u.indexOf("Mobile") > -1, n.onIPhone = n.u.indexOf("iPhone") > -1, n.onMac = n.u.indexOf("Mac OS X") > -1, n.onIPad = n.u.indexOf("iPad") > -1, n.onAndroid = n.u.indexOf("Android") > -1 || n.u.indexOf("Adr") > -1, n.onWP = n.u.indexOf("Windows Phone") > -1, n.onQQBrowser = n.u.indexOf("QQBrowser") > -1, n.onMQQBrowser = n.u.indexOf("MQQBrowser") > -1 || n.u.indexOf("Mobile") > -1 && n.u.indexOf("QQ") > -1, n.onIE = !!n.window.ActiveXObject || "ActiveXObject" in n.window, n.onWeiXin = n.u.indexOf("MicroMessenger") > -1, n.onPC = !n.onMobile, n.onSafari = n.u.indexOf("Safari") > -1, n.onFirefox = n.u.indexOf("Firefox") > -1, n.onEdge = n.u.indexOf("Edge") > -1, n.onMiniGame = n.u.indexOf("MiniGame") > -1, n.onLimixiu = n.u.indexOf("limixiu") > -1, n.httpProtocol = "http:" == n.window.location.protocol, n.onMiniGame && null == n.window.focus && console.error("请先初始化小游戏适配库，详细教程https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0"), n.webAudioEnabled = !!(n.window.AudioContext || n.window.webkitAudioContext || n.window.mozAudioContext), n.soundType = n.webAudioEnabled ? "WEBAUDIOSOUND" : "AUDIOSOUND", nt = n.webAudioEnabled ? rt : et, n.webAudioEnabled && rt.initWebAudio(), et._initMusicAudio(), n.enableTouch = "ontouchstart" in t || t.DocumentTouch && e instanceof DocumentTouch, t.focus(), I._soundClass = nt, I._musicClass = et, P._mainCanvas = P._mainCanvas || yt.create("2D"), n.canvas || (n.canvas = yt.create("2D"), n.context = n.canvas.getContext("2d"));
        }
      }, n._onMessage = function (t) {
        if (t.data && "size" == t.data.name) {
          if (n.window.innerWidth = t.data.width, n.window.innerHeight = t.data.height, n.window.__innerHeight = t.data.clientHeight, !n.document.createEvent) return void console.warn("no document.createEvent");
          var e = n.document.createEvent("HTMLEvents");
          return e.initEvent("resize", !1, !1), void n.window.dispatchEvent(e);
        }
      }, n.createElement = function (t) {
        return n.__init__(), n.document.__createElement(t);
      }, n.getElementById = function (t) {
        return n.__init__(), n.document.getElementById(t);
      }, n.removeElement = function (t) {
        t && t.parentNode && t.parentNode.removeChild(t);
      }, n.now = function () {
        return s.now();
      }, n._window = null, n._document = null, n._container = null, n.userAgent = null, n.u = null, n.onIOS = !1, n.onMac = !1, n.onMobile = !1, n.onIPhone = !1, n.onIPad = !1, n.onAndroid = !1, n.onWP = !1, n.onQQBrowser = !1, n.onMQQBrowser = !1, n.onSafari = !1, n.onFirefox = !1, n.onEdge = !1, n.onIE = !1, n.onWeiXin = !1, n.onMiniGame = !1, n.onLimixiu = !1, n.onPC = !1, n.httpProtocol = !1, n.webAudioEnabled = !1, n.soundType = null, n.enableTouch = !1, n.canvas = null, n.context = null, n.__init$ = function () {}, n;
    }()),
    B = function () {
      function t(t) {
        this._xd_ = !0, this._allocated_ = 8, this._pos_ = 0, this._length = 0, t ? (this._u8d_ = new Uint8Array(t), this._d_ = new DataView(this._u8d_.buffer), this._length = this._d_.byteLength) : this.___resizeBuffer(this._allocated_);
      }
      r(t, "laya.utils.Byte");
      var e = t.prototype;
      return e.___resizeBuffer = function (t) {
        try {
          var e = new Uint8Array(t);
          null != this._u8d_ && (this._u8d_.length <= t ? e.set(this._u8d_) : e.set(this._u8d_.subarray(0, t))), this._u8d_ = e, this._d_ = new DataView(e.buffer);
        } catch (e) {
          throw "___resizeBuffer err:" + t;
        }
      }, e.getString = function () {
        return this.rUTF(this.getUint16());
      }, e.getFloat32Array = function (t, e) {
        var i = t + e;
        i = i > this._length ? this._length : i;
        var n = new Float32Array(this._d_.buffer.slice(t, i));
        return this._pos_ = i, n;
      }, e.getUint8Array = function (t, e) {
        var i = t + e;
        i = i > this._length ? this._length : i;
        var n = new Uint8Array(this._d_.buffer.slice(t, i));
        return this._pos_ = i, n;
      }, e.getInt16Array = function (t, e) {
        var i = t + e;
        i = i > this._length ? this._length : i;
        var n = new Int16Array(this._d_.buffer.slice(t, i));
        return this._pos_ = i, n;
      }, e.getFloat32 = function () {
        if (this._pos_ + 4 > this._length) throw "getFloat32 error - Out of bounds";
        var t = this._d_.getFloat32(this._pos_, this._xd_);
        return this._pos_ += 4, t;
      }, e.getFloat64 = function () {
        if (this._pos_ + 8 > this._length) throw "getFloat64 error - Out of bounds";
        var t = this._d_.getFloat64(this._pos_, this._xd_);
        return this._pos_ += 8, t;
      }, e.writeFloat32 = function (t) {
        this.ensureWrite(this._pos_ + 4), this._d_.setFloat32(this._pos_, t, this._xd_), this._pos_ += 4;
      }, e.writeFloat64 = function (t) {
        this.ensureWrite(this._pos_ + 8), this._d_.setFloat64(this._pos_, t, this._xd_), this._pos_ += 8;
      }, e.getInt32 = function () {
        if (this._pos_ + 4 > this._length) throw "getInt32 error - Out of bounds";
        var t = this._d_.getInt32(this._pos_, this._xd_);
        return this._pos_ += 4, t;
      }, e.getUint32 = function () {
        if (this._pos_ + 4 > this._length) throw "getUint32 error - Out of bounds";
        var t = this._d_.getUint32(this._pos_, this._xd_);
        return this._pos_ += 4, t;
      }, e.writeInt32 = function (t) {
        this.ensureWrite(this._pos_ + 4), this._d_.setInt32(this._pos_, t, this._xd_), this._pos_ += 4;
      }, e.writeUint32 = function (t) {
        this.ensureWrite(this._pos_ + 4), this._d_.setUint32(this._pos_, t, this._xd_), this._pos_ += 4;
      }, e.getInt16 = function () {
        if (this._pos_ + 2 > this._length) throw "getInt16 error - Out of bounds";
        var t = this._d_.getInt16(this._pos_, this._xd_);
        return this._pos_ += 2, t;
      }, e.getUint16 = function () {
        if (this._pos_ + 2 > this._length) throw "getUint16 error - Out of bounds";
        var t = this._d_.getUint16(this._pos_, this._xd_);
        return this._pos_ += 2, t;
      }, e.writeUint16 = function (t) {
        this.ensureWrite(this._pos_ + 2), this._d_.setUint16(this._pos_, t, this._xd_), this._pos_ += 2;
      }, e.writeInt16 = function (t) {
        this.ensureWrite(this._pos_ + 2), this._d_.setInt16(this._pos_, t, this._xd_), this._pos_ += 2;
      }, e.getUint8 = function () {
        if (this._pos_ + 1 > this._length) throw "getUint8 error - Out of bounds";
        return this._d_.getUint8(this._pos_++);
      }, e.writeUint8 = function (t) {
        this.ensureWrite(this._pos_ + 1), this._d_.setUint8(this._pos_, t), this._pos_++;
      }, e._getUInt8 = function (t) {
        return this._d_.getUint8(t);
      }, e._getUint16 = function (t) {
        return this._d_.getUint16(t, this._xd_);
      }, e._getMatrix = function () {
        return new b(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());
      }, e.rUTF = function (t) {
        for (var e = "", i = this._pos_ + t, n = 0, r = String.fromCharCode, a = this._u8d_; this._pos_ < i;)(n = a[this._pos_++]) < 128 ? 0 != n && (e += r(n)) : e += r(n < 224 ? (63 & n) << 6 | 127 & a[this._pos_++] : n < 240 ? (31 & n) << 12 | (127 & a[this._pos_++]) << 6 | 127 & a[this._pos_++] : (15 & n) << 18 | (127 & a[this._pos_++]) << 12 | a[this._pos_++] << 6 & 127 | 127 & a[this._pos_++]), 0;
        return e;
      }, e.getCustomString = function (t) {
        for (var e = "", i = 0, n = 0, r = String.fromCharCode, a = this._u8d_; t > 0;)
          if ((n = a[this._pos_]) < 128) e += r(n), this._pos_++, t--;
          else
            for (i = n - 128, this._pos_++, t -= i; i > 0;) n = a[this._pos_++], e += r(a[this._pos_++] << 8 | n), i--;
        return e;
      }, e.clear = function () {
        this._pos_ = 0, this.length = 0;
      }, e.__getBuffer = function () {
        return this._d_.buffer;
      }, e.writeUTFBytes = function (t) {
        for (var e = 0, i = (t += "").length; e < i; e++) {
          var n = t.charCodeAt(e);
          n <= 127 ? this.writeByte(n) : n <= 2047 ? (this.ensureWrite(this._pos_ + 2), this._u8d_.set([192 | n >> 6, 128 | 63 & n], this._pos_), this._pos_ += 2) : n <= 65535 ? (this.ensureWrite(this._pos_ + 3), this._u8d_.set([224 | n >> 12, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_), this._pos_ += 3) : (this.ensureWrite(this._pos_ + 4), this._u8d_.set([240 | n >> 18, 128 | n >> 12 & 63, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_), this._pos_ += 4);
        }
      }, e.writeUTFString = function (t) {
        var e = this.pos;
        this.writeUint16(1), this.writeUTFBytes(t);
        var i = this.pos - e - 2;
        if (i >= 65536) throw "writeUTFString byte len more than 65536";
        this._d_.setUint16(e, i, this._xd_);
      }, e.readUTFString = function () {
        return this.readUTFBytes(this.getUint16());
      }, e.getUTFString = function () {
        return this.readUTFString();
      }, e.readUTFBytes = function (t) {
        if (void 0 === t && (t = -1), 0 == t) return "";
        var e = this.bytesAvailable;
        if (t > e) throw "readUTFBytes error - Out of bounds";
        return t = t > 0 ? t : e, this.rUTF(t);
      }, e.getUTFBytes = function (t) {
        return void 0 === t && (t = -1), this.readUTFBytes(t);
      }, e.writeByte = function (t) {
        this.ensureWrite(this._pos_ + 1), this._d_.setInt8(this._pos_, t), this._pos_ += 1;
      }, e.readByte = function () {
        if (this._pos_ + 1 > this._length) throw "readByte error - Out of bounds";
        return this._d_.getInt8(this._pos_++);
      }, e.getByte = function () {
        return this.readByte();
      }, e.ensureWrite = function (t) {
        this._length < t && (this._length = t), this._allocated_ < t && (this.length = t);
      }, e.writeArrayBuffer = function (t, e, i) {
        if (void 0 === e && (e = 0), void 0 === i && (i = 0), e < 0 || i < 0) throw "writeArrayBuffer error - Out of bounds";
        0 == i && (i = t.byteLength - e), this.ensureWrite(this._pos_ + i);
        var n = new Uint8Array(t);
        this._u8d_.set(n.subarray(e, e + i), this._pos_), this._pos_ += i;
      }, a(0, e, "buffer", function () {
        var t = this._d_.buffer;
        return t.byteLength == this.length ? t : t.slice(0, this.length);
      }), a(0, e, "endian", function () {
        return this._xd_ ? "littleEndian" : "bigEndian";
      }, function (t) {
        this._xd_ = "littleEndian" == t;
      }), a(0, e, "length", function () {
        return this._length;
      }, function (t) {
        this._allocated_ < t ? this.___resizeBuffer(this._allocated_ = Math.floor(Math.max(t, 2 * this._allocated_))) : this._allocated_ > t && this.___resizeBuffer(this._allocated_ = t), this._length = t;
      }), a(0, e, "pos", function () {
        return this._pos_;
      }, function (t) {
        this._pos_ = t;
      }), a(0, e, "bytesAvailable", function () {
        return this._length - this._pos_;
      }), t.getSystemEndian = function () {
        if (!t._sysEndian) {
          var e = new ArrayBuffer(2);
          new DataView(e).setInt16(0, 256, !0), t._sysEndian = 256 === new Int16Array(e)[0] ? "littleEndian" : "bigEndian";
        }
        return t._sysEndian;
      }, t.BIG_ENDIAN = "bigEndian", t.LITTLE_ENDIAN = "littleEndian", t._sysEndian = null, t;
    }(),
    U = function () {
      function t() {}
      return r(t, "laya.utils.CacheManager"), t.regCacheByFunction = function (e, i) {
        t.unRegCacheByFunction(e, i);
        var n;
        n = {
          tryDispose: e,
          getCacheList: i
        }, t._cacheList.push(n);
      }, t.unRegCacheByFunction = function (e, i) {
        var n = 0,
          r = 0;
        for (r = t._cacheList.length, n = 0; n < r; n++)
          if (t._cacheList[n].tryDispose == e && t._cacheList[n].getCacheList == i) return void t._cacheList.splice(n, 1);
      }, t.forceDispose = function () {
        var e = 0,
          i = t._cacheList.length;
        for (e = 0; e < i; e++) t._cacheList[e].tryDispose(!0);
      }, t.beginCheck = function (e) {
        void 0 === e && (e = 15e3), i.timer.loop(e, null, t._checkLoop);
      }, t.stopCheck = function () {
        i.timer.clear(null, t._checkLoop);
      }, t._checkLoop = function () {
        var e = t._cacheList;
        if (!(e.length < 1)) {
          var i = F.now(),
            n = 0,
            r = 0;
          for (r = n = e.length; n > 0 && (t._index++, t._index = t._index % r, e[t._index].tryDispose(!1), !(F.now() - i > t.loopTimeLimit));) n--;
        }
      }, t.loopTimeLimit = 2, t._cacheList = [], t._index = 0, t;
    }(),
    k = function () {
      function t() {}
      return r(t, "laya.utils.ClassUtils"), t.regClass = function (e, i) {
        t._classMap[e] = i;
      }, t.getRegClass = function (e) {
        return t._classMap[e];
      }, t.getInstance = function (e) {
        var i = t.getClass(e);
        return i ? new i() : (console.warn("[error] Undefined class:", e), null);
      }, t.createByJson = function (e, i, n, r, a) {
        "string" == typeof e && (e = JSON.parse(e));
        var s = e.props;
        if (!i && !(i = a ? a.runWith(e) : t.getInstance(s.runtime || e.type))) return null;
        var o = e.child;
        if (o)
          for (var h = 0, l = o.length; h < l; h++) {
            var u = o[h];
            if ("render" !== u.props.name && "render" !== u.props.renderType || !i._$set_itemRender)
              if ("Graphic" == u.type) t.addGraphicsToSprite(u, i);
              else if (t.isDrawType(u.type)) t.addGraphicToSprite(u, i, !0);
            else {
              var c = t.createByJson(u, null, n, r, a);
              "Script" == u.type ? c.hasOwnProperty("owner") ? c.owner = i : c.hasOwnProperty("target") && (c.target = i) : "mask" == u.props.renderType ? i.mask = c : i.addChild(c);
            } else i.itemRender = u;
          }
        if (s)
          for (var _ in s) {
            var d = s[_];
            "var" === _ && n ? n[d] = i : d instanceof Array && "function" == typeof i[_] ? i[_].apply(i, d) : i[_] = d;
          }
        return r && e.customProps && r.runWith([i, e]), i.created && i.created(), i;
      }, t.addGraphicsToSprite = function (e, i) {
        var n;
        if ((n = e.child) && !(n.length < 1)) {
          var r;
          r = t._getGraphicsFromSprite(e, i);
          var a = 0,
            s = 0;
          e.props && (a = t._getObjVar(e.props, "x", 0), s = t._getObjVar(e.props, "y", 0)), 0 != a && 0 != s && r.translate(a, s);
          var o = 0,
            h = 0;
          for (h = n.length, o = 0; o < h; o++) t._addGraphicToGraphics(n[o], r);
          0 != a && 0 != s && r.translate(-a, -s);
        }
      }, t.addGraphicToSprite = function (e, i, n) {
        void 0 === n && (n = !1);
        var r;
        r = n ? t._getGraphicsFromSprite(e, i) : i.graphics, t._addGraphicToGraphics(e, r);
      }, t._getGraphicsFromSprite = function (t, e) {
        var i;
        if (!t || !t.props) return e.graphics;
        var n;
        switch (n = t.props.renderType) {
          case "hit":
          case "unHit":
            var r;
            e.hitArea || (e.hitArea = new W()), (r = e.hitArea)[n] || (r[n] = new f()), i = r[n];
        }
        return i || (i = e.graphics), i;
      }, t._getTransformData = function (e) {
        var i;
        (e.hasOwnProperty("pivotX") || e.hasOwnProperty("pivotY")) && (i = i || new b()).translate(-t._getObjVar(e, "pivotX", 0), -t._getObjVar(e, "pivotY", 0));
        var n = t._getObjVar(e, "scaleX", 1),
          r = t._getObjVar(e, "scaleY", 1),
          a = t._getObjVar(e, "rotation", 0);
        t._getObjVar(e, "skewX", 0), t._getObjVar(e, "skewY", 0);
        return 1 == n && 1 == r && 0 == a || ((i = i || new b()).scale(n, r), i.rotate(.0174532922222222 * a)), i;
      }, t._addGraphicToGraphics = function (e, i) {
        var n;
        if (n = e.props) {
          var r;
          if (r = t.DrawTypeDic[e.type]) {
            var a;
            a = i;
            var s, o = t._getParams(n, r[1], r[2], r[3]);
            ((s = t._tM) || 1 != t._alpha) && (a.save(), s && a.transform(s), 1 != t._alpha && a.alpha(t._alpha)), a[r[0]].apply(a, o), (s || 1 != t._alpha) && a.restore();
          }
        }
      }, t._adptLineData = function (t) {
        return t[2] = parseFloat(t[0]) + parseFloat(t[2]), t[3] = parseFloat(t[1]) + parseFloat(t[3]), t;
      }, t._adptTextureData = function (t) {
        return t[0] = st.getRes(t[0]), t;
      }, t._adptLinesData = function (e) {
        return e[2] = t._getPointListByStr(e[2]), e;
      }, t.isDrawType = function (e) {
        return "Image" != e && t.DrawTypeDic.hasOwnProperty(e);
      }, t._getParams = function (e, i, n, r) {
        void 0 === n && (n = 0);
        var a;
        (a = t._temParam).length = i.length;
        var s = 0,
          o = 0;
        for (o = i.length, s = 0; s < o; s++) a[s] = t._getObjVar(e, i[s][0], i[s][1]);
        t._alpha = t._getObjVar(e, "alpha", 1);
        var h;
        return (h = t._getTransformData(e)) ? (n || (n = 0), h.translate(a[n], a[n + 1]), a[n] = a[n + 1] = 0, t._tM = h) : t._tM = null, r && t[r] && (a = t[r](a)), a;
      }, t._getPointListByStr = function (t) {
        var e, i = 0,
          n = 0;
        for (n = (e = t.split(",")).length, i = 0; i < n; i++) e[i] = parseFloat(e[i]);
        return e;
      }, t._getObjVar = function (t, e, i) {
        return t.hasOwnProperty(e) ? t[e] : i;
      }, t._temParam = [], t._classMap = {
        Sprite: "laya.display.Sprite",
        Text: "laya.display.Text",
        Animation: "laya.display.Animation",
        Skeleton: "laya.ani.bone.Skeleton",
        Particle2D: "laya.particle.Particle2D",
        div: "laya.html.dom.HTMLDivElement",
        p: "laya.html.dom.HTMLElement",
        img: "laya.html.dom.HTMLImageElement",
        span: "laya.html.dom.HTMLElement",
        br: "laya.html.dom.HTMLBrElement",
        style: "laya.html.dom.HTMLStyleElement",
        font: "laya.html.dom.HTMLElement",
        a: "laya.html.dom.HTMLElement",
        "#text": "laya.html.dom.HTMLElement"
      }, t.getClass = function (e) {
        var n = t._classMap[e] || e;
        return "string" == typeof n ? i.__classmap[n] : n;
      }, t._tM = null, t._alpha = NaN, n(t, ["DrawTypeDic", function () {
        return this.DrawTypeDic = {
          Rect: ["drawRect", [
            ["x", 0],
            ["y", 0],
            ["width", 0],
            ["height", 0],
            ["fillColor", null],
            ["lineColor", null],
            ["lineWidth", 1]
          ]],
          Circle: ["drawCircle", [
            ["x", 0],
            ["y", 0],
            ["radius", 0],
            ["fillColor", null],
            ["lineColor", null],
            ["lineWidth", 1]
          ]],
          Pie: ["drawPie", [
            ["x", 0],
            ["y", 0],
            ["radius", 0],
            ["startAngle", 0],
            ["endAngle", 0],
            ["fillColor", null],
            ["lineColor", null],
            ["lineWidth", 1]
          ]],
          Image: ["drawTexture", [
            ["x", 0],
            ["y", 0],
            ["width", 0],
            ["height", 0]
          ]],
          Texture: ["drawTexture", [
            ["skin", null],
            ["x", 0],
            ["y", 0],
            ["width", 0],
            ["height", 0]
          ], 1, "_adptTextureData"],
          FillTexture: ["fillTexture", [
            ["skin", null],
            ["x", 0],
            ["y", 0],
            ["width", 0],
            ["height", 0],
            ["repeat", null]
          ], 1, "_adptTextureData"],
          FillText: ["fillText", [
            ["text", ""],
            ["x", 0],
            ["y", 0],
            ["font", null],
            ["color", null],
            ["textAlign", null]
          ], 1],
          Line: ["drawLine", [
            ["x", 0],
            ["y", 0],
            ["toX", 0],
            ["toY", 0],
            ["lineColor", null],
            ["lineWidth", 0]
          ], 0, "_adptLineData"],
          Lines: ["drawLines", [
            ["x", 0],
            ["y", 0],
            ["points", ""],
            ["lineColor", null],
            ["lineWidth", 0]
          ], 0, "_adptLinesData"],
          Curves: ["drawCurves", [
            ["x", 0],
            ["y", 0],
            ["points", ""],
            ["lineColor", null],
            ["lineWidth", 0]
          ], 0, "_adptLinesData"],
          Poly: ["drawPoly", [
            ["x", 0],
            ["y", 0],
            ["points", ""],
            ["fillColor", null],
            ["lineColor", null],
            ["lineWidth", 1]
          ], 0, "_adptLinesData"]
        };
      }]), t;
    }(),
    G = function () {
      function t(e) {
        if (this._color = [], "string" == typeof e) {
          this.strColor = e, null === e && (e = "#000000"), "#" == e.charAt(0) && (e = e.substr(1));
          var i = e.length;
          if (3 == i || 4 == i) {
            for (var n = "", r = 0; r < i; r++) n += e[r] + e[r];
            e = n;
          }
          var a = this.numColor = parseInt(e, 16);
          if (8 == e.length) return void(this._color = [parseInt(e.substr(0, 2), 16) / 255, ((16711680 & a) >> 16) / 255, ((65280 & a) >> 8) / 255, (255 & a) / 255]);
        } else a = this.numColor = e, this.strColor = Q.toHexColor(a);
        this._color = [((16711680 & a) >> 16) / 255, ((65280 & a) >> 8) / 255, (255 & a) / 255, 1], this._color.__id = ++t._COLODID;
      }
      return r(t, "laya.utils.Color"), t._initDefault = function () {
        t._DEFAULT = {};
        for (var e in t._COLOR_MAP) t._SAVE[e] = t._DEFAULT[e] = new t(t._COLOR_MAP[e]);
        return t._DEFAULT;
      }, t._initSaveMap = function () {
        t._SAVE_SIZE = 0, t._SAVE = {};
        for (var e in t._DEFAULT) t._SAVE[e] = t._DEFAULT[e];
      }, t.create = function (e) {
        var i = t._SAVE[e + ""];
        return null != i ? i : (t._SAVE_SIZE < 1e3 || t._initSaveMap(), t._SAVE[e + ""] = new t(e));
      }, t._SAVE = {}, t._SAVE_SIZE = 0, t._COLOR_MAP = {
        white: "#FFFFFF",
        red: "#FF0000",
        green: "#00FF00",
        blue: "#0000FF",
        black: "#000000",
        yellow: "#FFFF00",
        gray: "#AAAAAA"
      }, t._DEFAULT = t._initDefault(), t._COLODID = 1, t;
    }(),
    H = (function () {
      function t() {
        this._values = [], this._keys = [];
      }
      r(t, "laya.utils.Dictionary");
      var e = t.prototype;
      e.set = function (t, e) {
        var i = this.indexOf(t);
        i >= 0 ? this._values[i] = e : (this._keys.push(t), this._values.push(e));
      }, e.indexOf = function (t) {
        var e = this._keys.indexOf(t);
        return e >= 0 ? e : (t = "string" == typeof t ? Number(t) : "number" == typeof t ? t.toString() : t, this._keys.indexOf(t));
      }, e.get = function (t) {
        var e = this.indexOf(t);
        return e < 0 ? null : this._values[e];
      }, e.remove = function (t) {
        var e = this.indexOf(t);
        return e >= 0 && (this._keys.splice(e, 1), this._values.splice(e, 1), !0);
      }, e.clear = function () {
        this._values.length = 0, this._keys.length = 0;
      }, a(0, e, "values", function () {
        return this._values;
      }), a(0, e, "keys", function () {
        return this._keys;
      });
    }(), function () {
      function t() {
        this.ratio = .92, this.maxOffset = 60, this._dragging = !1, this._clickOnly = !0;
      }
      r(t, "laya.utils.Dragging");
      var e = t.prototype;
      return e.start = function (t, e, n, r, a, s, o, h) {
        void 0 === h && (h = .92), this.clearTimer(), this.target = t, this.area = e, this.hasInertia = n, this.elasticDistance = e ? r : 0, this.elasticBackTime = a, this.data = s, this._disableMouseEvent = o, this.ratio = h, 1 != t.globalScaleX || 1 != t.globalScaleY ? this._parent = t.parent : this._parent = i.stage, this._clickOnly = !0, this._dragging = !0, this._elasticRateX = this._elasticRateY = 1, this._lastX = this._parent.mouseX, this._lastY = this._parent.mouseY, i.stage.on("mouseup", this, this.onStageMouseUp), i.stage.on("mouseout", this, this.onStageMouseUp), i.timer.frameLoop(1, this, this.loop);
      }, e.clearTimer = function () {
        i.timer.clear(this, this.loop), i.timer.clear(this, this.tweenMove), this._tween && (this._tween.recover(), this._tween = null);
      }, e.stop = function () {
        this._dragging && (v.instance.disableMouseEvent = !1, i.stage.off("mouseup", this, this.onStageMouseUp), i.stage.off("mouseout", this, this.onStageMouseUp), this._dragging = !1, this.target && this.area && this.backToArea(), this.clear());
      }, e.loop = function () {
        var t = this._parent.getMousePoint(),
          e = t.x,
          n = t.y,
          r = e - this._lastX,
          a = n - this._lastY;
        if (this._clickOnly) {
          if (!(Math.abs(r * i.stage._canvasTransform.getScaleX()) > 1 || Math.abs(a * i.stage._canvasTransform.getScaleY()) > 1)) return;
          this._clickOnly = !1, this._offsets || (this._offsets = []), this._offsets.length = 0, this.target.event("dragstart", this.data), v.instance.disableMouseEvent = this._disableMouseEvent, this.target._set$P("$_MOUSEDOWN", !1);
        } else this._offsets.push(r, a);
        0 === r && 0 === a || (this._lastX = e, this._lastY = n, this.target.x += r * this._elasticRateX, this.target.y += a * this._elasticRateY, this.area && this.checkArea(), this.target.event("dragmove", this.data));
      }, e.checkArea = function () {
        if (this.elasticDistance <= 0) this.backToArea();
        else {
          if (this.target.x < this.area.x) var t = this.area.x - this.target.x;
          else t = this.target.x > this.area.x + this.area.width ? this.target.x - this.area.x - this.area.width : 0;
          if (this._elasticRateX = Math.max(0, 1 - t / this.elasticDistance), this.target.y < this.area.y) var e = this.area.y - this.target.y;
          else e = this.target.y > this.area.y + this.area.height ? this.target.y - this.area.y - this.area.height : 0;
          this._elasticRateY = Math.max(0, 1 - e / this.elasticDistance);
        }
      }, e.backToArea = function () {
        this.target.x = Math.min(Math.max(this.target.x, this.area.x), this.area.x + this.area.width), this.target.y = Math.min(Math.max(this.target.y, this.area.y), this.area.y + this.area.height);
      }, e.onStageMouseUp = function (t) {
        if (v.instance.disableMouseEvent = !1, i.stage.off("mouseup", this, this.onStageMouseUp), i.stage.off("mouseout", this, this.onStageMouseUp), i.timer.clear(this, this.loop), !this._clickOnly && this.target)
          if (this.hasInertia) {
            this._offsets.length < 1 && this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY), this._offsetX = this._offsetY = 0;
            for (var e = this._offsets.length, n = Math.min(e, 6), r = this._offsets.length - n, a = e - 1; a > r; a--) this._offsetY += this._offsets[a--], this._offsetX += this._offsets[a];
            this._offsetX = this._offsetX / n * 2, this._offsetY = this._offsetY / n * 2, Math.abs(this._offsetX) > this.maxOffset && (this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset), Math.abs(this._offsetY) > this.maxOffset && (this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset), i.timer.frameLoop(1, this, this.tweenMove);
          } else this.elasticDistance > 0 ? this.checkElastic() : this.clear();
      }, e.checkElastic = function () {
        var t = NaN,
          e = NaN;
        if (this.target.x < this.area.x ? t = this.area.x : this.target.x > this.area.x + this.area.width && (t = this.area.x + this.area.width), this.target.y < this.area.y ? e = this.area.y : this.target.y > this.area.y + this.area.height && (e = this.area.y + this.area.height), isNaN(t) && isNaN(e)) this.clear();
        else {
          var i = {};
          isNaN(t) || (i.x = t), isNaN(e) || (i.y = e), this._tween = q.to(this.target, i, this.elasticBackTime, z.sineOut, l.create(this, this.clear), 0, !1, !1);
        }
      }, e.tweenMove = function () {
        this._offsetX *= this.ratio * this._elasticRateX, this._offsetY *= this.ratio * this._elasticRateY, this.target.x += this._offsetX, this.target.y += this._offsetY, this.area && this.checkArea(), this.target.event("dragmove", this.data), (Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1 || this._elasticRateX < .5 || this._elasticRateY < .5) && (i.timer.clear(this, this.tweenMove), this.elasticDistance > 0 ? this.checkElastic() : this.clear());
      }, e.clear = function () {
        if (this.target) {
          this.clearTimer();
          var t = this.target;
          this.target = null, this._parent = null, t.event("dragend", this.data);
        }
      }, t;
    }()),
    z = function () {
      function t() {}
      return r(t, "laya.utils.Ease"), t.linearNone = function (t, e, i, n) {
        return i * t / n + e;
      }, t.linearIn = function (t, e, i, n) {
        return i * t / n + e;
      }, t.linearInOut = function (t, e, i, n) {
        return i * t / n + e;
      }, t.linearOut = function (t, e, i, n) {
        return i * t / n + e;
      }, t.bounceIn = function (e, i, n, r) {
        return n - t.bounceOut(r - e, 0, n, r) + i;
      }, t.bounceInOut = function (e, i, n, r) {
        return e < .5 * r ? .5 * t.bounceIn(2 * e, 0, n, r) + i : .5 * t.bounceOut(2 * e - r, 0, n, r) + .5 * n + i;
      }, t.bounceOut = function (t, e, i, n) {
        return (t /= n) < 1 / 2.75 ? i * (7.5625 * t * t) + e : t < 2 / 2.75 ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : t < 2.5 / 2.75 ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e;
      }, t.backIn = function (t, e, i, n, r) {
        return void 0 === r && (r = 1.70158), i * (t /= n) * t * ((r + 1) * t - r) + e;
      }, t.backInOut = function (t, e, i, n, r) {
        return void 0 === r && (r = 1.70158), (t /= .5 * n) < 1 ? .5 * i * (t * t * ((1 + (r *= 1.525)) * t - r)) + e : i / 2 * ((t -= 2) * t * ((1 + (r *= 1.525)) * t + r) + 2) + e;
      }, t.backOut = function (t, e, i, n, r) {
        return void 0 === r && (r = 1.70158), i * ((t = t / n - 1) * t * ((r + 1) * t + r) + 1) + e;
      }, t.elasticIn = function (e, i, n, r, a, s) {
        void 0 === a && (a = 0), void 0 === s && (s = 0);
        var o;
        return 0 == e ? i : 1 == (e /= r) ? i + n : (s || (s = .3 * r), !a || n > 0 && a < n || n < 0 && a < -n ? (a = n, o = s / 4) : o = s / t.PI2 * Math.asin(n / a), -a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * r - o) * t.PI2 / s) + i);
      }, t.elasticInOut = function (e, i, n, r, a, s) {
        void 0 === a && (a = 0), void 0 === s && (s = 0);
        var o;
        return 0 == e ? i : 2 == (e /= .5 * r) ? i + n : (s || (s = r * (.3 * 1.5)), !a || n > 0 && a < n || n < 0 && a < -n ? (a = n, o = s / 4) : o = s / t.PI2 * Math.asin(n / a), e < 1 ? a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * r - o) * t.PI2 / s) * -.5 + i : a * Math.pow(2, -10 * (e -= 1)) * Math.sin((e * r - o) * t.PI2 / s) * .5 + n + i);
      }, t.elasticOut = function (e, i, n, r, a, s) {
        void 0 === a && (a = 0), void 0 === s && (s = 0);
        var o;
        return 0 == e ? i : 1 == (e /= r) ? i + n : (s || (s = .3 * r), !a || n > 0 && a < n || n < 0 && a < -n ? (a = n, o = s / 4) : o = s / t.PI2 * Math.asin(n / a), a * Math.pow(2, -10 * e) * Math.sin((e * r - o) * t.PI2 / s) + n + i);
      }, t.strongIn = function (t, e, i, n) {
        return i * (t /= n) * t * t * t * t + e;
      }, t.strongInOut = function (t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
      }, t.strongOut = function (t, e, i, n) {
        return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
      }, t.sineInOut = function (t, e, i, n) {
        return .5 * -i * (Math.cos(Math.PI * t / n) - 1) + e;
      }, t.sineIn = function (e, i, n, r) {
        return -n * Math.cos(e / r * t.HALF_PI) + n + i;
      }, t.sineOut = function (e, i, n, r) {
        return n * Math.sin(e / r * t.HALF_PI) + i;
      }, t.quintIn = function (t, e, i, n) {
        return i * (t /= n) * t * t * t * t + e;
      }, t.quintInOut = function (t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
      }, t.quintOut = function (t, e, i, n) {
        return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
      }, t.quartIn = function (t, e, i, n) {
        return i * (t /= n) * t * t * t + e;
      }, t.quartInOut = function (t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t + e : .5 * -i * ((t -= 2) * t * t * t - 2) + e;
      }, t.quartOut = function (t, e, i, n) {
        return -i * ((t = t / n - 1) * t * t * t - 1) + e;
      }, t.cubicIn = function (t, e, i, n) {
        return i * (t /= n) * t * t + e;
      }, t.cubicInOut = function (t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t * t + e : .5 * i * ((t -= 2) * t * t + 2) + e;
      }, t.cubicOut = function (t, e, i, n) {
        return i * ((t = t / n - 1) * t * t + 1) + e;
      }, t.quadIn = function (t, e, i, n) {
        return i * (t /= n) * t + e;
      }, t.quadInOut = function (t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * i * t * t + e : .5 * -i * (--t * (t - 2) - 1) + e;
      }, t.quadOut = function (t, e, i, n) {
        return -i * (t /= n) * (t - 2) + e;
      }, t.expoIn = function (t, e, i, n) {
        return 0 == t ? e : i * Math.pow(2, 10 * (t / n - 1)) + e - .001 * i;
      }, t.expoInOut = function (t, e, i, n) {
        return 0 == t ? e : t == n ? e + i : (t /= .5 * n) < 1 ? .5 * i * Math.pow(2, 10 * (t - 1)) + e : .5 * i * (2 - Math.pow(2, -10 * --t)) + e;
      }, t.expoOut = function (t, e, i, n) {
        return t == n ? e + i : i * (1 - Math.pow(2, -10 * t / n)) + e;
      }, t.circIn = function (t, e, i, n) {
        return -i * (Math.sqrt(1 - (t /= n) * t) - 1) + e;
      }, t.circInOut = function (t, e, i, n) {
        return (t /= .5 * n) < 1 ? .5 * -i * (Math.sqrt(1 - t * t) - 1) + e : .5 * i * (Math.sqrt(1 - (t -= 2) * t) + 1) + e;
      }, t.circOut = function (t, e, i, n) {
        return i * Math.sqrt(1 - (t = t / n - 1) * t) + e;
      }, t.HALF_PI = .5 * Math.PI, t.PI2 = 2 * Math.PI, t;
    }(),
    W = function () {
      function t() {
        this._hit = null, this._unHit = null;
      }
      r(t, "laya.utils.HitArea");
      var e = t.prototype;
      return e.isHit = function (e, i) {
        return !!t.isHitGraphic(e, i, this.hit) && !t.isHitGraphic(e, i, this.unHit);
      }, e.contains = function (t, e) {
        return this.isHit(t, e);
      }, a(0, e, "hit", function () {
        return this._hit || (this._hit = new f()), this._hit;
      }, function (t) {
        this._hit = t;
      }), a(0, e, "unHit", function () {
        return this._unHit || (this._unHit = new f()), this._unHit;
      }, function (t) {
        this._unHit = t;
      }), t.isHitGraphic = function (e, i, n) {
        if (!n) return !1;
        var r;
        if (!(r = n.cmds) && n._one && ((r = t._cmds).length = 1, r[0] = n._one), !r) return !1;
        var a = 0,
          s = 0;
        s = r.length;
        var o;
        for (a = 0; a < s; a++)
          if (o = r[a]) {
            var h = P._context;
            switch (o.callee) {
              case h._translate:
              case 6:
                e -= o[0], i -= o[1];
            }
            if (t.isHitCmd(e, i, o)) return !0;
          }
        return !1;
      }, t.isHitCmd = function (e, i, n) {
        if (!n) return !1;
        var r = P._context,
          a = !1;
        switch (n.callee) {
          case r._drawRect:
          case 13:
            t._rec.setTo(n[0], n[1], n[2], n[3]), a = t._rec.contains(e, i);
            break;
          case r._drawCircle:
          case r._fillCircle:
          case 14:
            a = (e -= n[0]) * e + (i -= n[1]) * i < n[2] * n[2];
            break;
          case r._drawPoly:
          case 18:
            e -= n[0], i -= n[1], a = t.ptInPolygon(e, i, n[2]);
        }
        return a;
      }, t.ptInPolygon = function (e, i, n) {
        var r;
        (r = t._ptPoint).setTo(e, i);
        var a = 0,
          s = NaN,
          o = NaN,
          h = NaN,
          l = NaN,
          u = 0;
        u = n.length;
        for (var c = 0; c < u; c += 2)
          if (s = n[c], o = n[c + 1], h = n[(c + 2) % u], l = n[(c + 3) % u], o != l && !(r.y < Math.min(o, l) || r.y >= Math.max(o, l))) {
            (r.y - o) * (h - s) / (l - o) + s > r.x && a++;
          }
        return a % 2 == 1;
      }, t._cmds = [], n(t, ["_rec", function () {
        return this._rec = new M();
      }, "_ptPoint", function () {
        return this._ptPoint = new C();
      }]), t;
    }(),
    j = (function () {
      function t(e, i, n, r) {
        this.char = e, this.charNum = e.charCodeAt(0), this._x = this._y = 0, this.width = i, this.height = n, this.style = r, this.isWord = !t._isWordRegExp.test(e);
      }
      r(t, "laya.utils.HTMLChar");
      var e = t.prototype;
      i.imps(e, {
        "laya.display.ILayout": !0
      }), e.setSprite = function (t) {
        this._sprite = t;
      }, e.getSprite = function () {
        return this._sprite;
      }, e._isChar = function () {
        return !0;
      }, e._getCSSStyle = function () {
        return this.style;
      }, a(0, e, "width", function () {
        return this._w;
      }, function (t) {
        this._w = t;
      }), a(0, e, "x", function () {
        return this._x;
      }, function (t) {
        this._sprite && (this._sprite.x = t), this._x = t;
      }), a(0, e, "y", function () {
        return this._y;
      }, function (t) {
        this._sprite && (this._sprite.y = t), this._y = t;
      }), a(0, e, "height", function () {
        return this._h;
      }, function (t) {
        this._h = t;
      }), t._isWordRegExp = new RegExp("[\\w.]", "");
    }(), function () {
      function t() {}
      r(t, "laya.utils.Log"), t.enable = function () {
        t._logdiv || (t._logdiv = F.window.document.createElement("div"), F.window.document.body.appendChild(t._logdiv), t._logdiv.style.cssText = "pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;");
      }, t.toggle = function () {
        var e = t._logdiv.style;
        "1px" == e.width ? e.width = e.height = "50%" : e.width = e.height = "1px";
      }, t.print = function (e) {
        t._logdiv && (t._count >= t.maxCount && t.clear(), t._count++, t._logdiv.innerText += e + "\n", t._logdiv.scrollTop = t._logdiv.scrollHeight);
      }, t.clear = function () {
        t._logdiv.innerText = "", t._count = 0;
      }, t._logdiv = null, t._count = 0, t.maxCount = 20;
    }(), function () {
      function t() {}
      r(t, "laya.utils.Mouse"), a(1, t, "cursor", function () {
        return t._style.cursor;
      }, function (e) {
        t._style.cursor = e;
      }), t.hide = function () {
        "none" != t.cursor && (t._preCursor = t.cursor, t.cursor = "none");
      }, t.show = function () {
        "none" == t.cursor && (t.cursor = t._preCursor ? t._preCursor : "auto");
      }, t._preCursor = null, n(t, ["_style", function () {
        return this._style = F.document.body.style;
      }]);
    }(), function () {
      function t() {}
      return r(t, "laya.utils.Pool"), t.getPoolBySign = function (e) {
        return t._poolDic[e] || (t._poolDic[e] = []);
      }, t.clearBySign = function (e) {
        t._poolDic[e] && (t._poolDic[e].length = 0);
      }, t.recover = function (e, i) {
        i.__InPool || (i.__InPool = !0, t.getPoolBySign(e).push(i));
      }, t.getItemByClass = function (e, i) {
        var n = t.getPoolBySign(e),
          r = n.length ? n.pop() : new i();
        return r.__InPool = !1, r;
      }, t.getItemByCreateFun = function (e, i, n) {
        var r = t.getPoolBySign(e),
          a = r.length ? r.pop() : i.call(n);
        return a.__InPool = !1, a;
      }, t.getItem = function (e) {
        var i = t.getPoolBySign(e),
          n = i.length ? i.pop() : null;
        return n && (n.__InPool = !1), n;
      }, t._poolDic = {}, t.InPoolSign = "__InPool", t;
    }()),
    X = (function () {
      function t() {
        this.sign = null, this.maxCount = 1e3;
      }
      r(t, "laya.utils.PoolCache");
      var e = t.prototype;
      e.getCacheList = function () {
        return j.getPoolBySign(this.sign);
      }, e.tryDispose = function (t) {
        var e;
        (e = j.getPoolBySign(this.sign)).length > this.maxCount && e.splice(this.maxCount, e.length - this.maxCount);
      }, t.addPoolCacheManager = function (e, i) {
        void 0 === i && (i = 100);
        var n;
        (n = new t()).sign = e, n.maxCount = i, U.regCacheByFunction(Q.bind(n.tryDispose, n), Q.bind(n.getCacheList, n));
      };
    }(), function () {
      function t() {}
      return r(t, "laya.utils.Stat"), a(1, t, "onclick", null, function (e) {
        t._sp && t._sp.on("click", t._sp, e), t._canvas && (t._canvas.source.onclick = e, t._canvas.source.style.pointerEvents = "");
      }), t.show = function (e, i) {
        void 0 === e && (e = 0), void 0 === i && (i = 0), !P.isConchApp || P.isConchWebGL ? (P.isConchWebGL || F.onMiniGame || F.onLimixiu || (t._useCanvas = !0), t._show = !0, t._fpsData.length = 60, t._view[0] = {
          title: "FPS(Canvas)",
          value: "_fpsStr",
          color: "yellow",
          units: "int"
        }, t._view[1] = {
          title: "Sprite",
          value: "_spriteStr",
          color: "white",
          units: "int"
        }, t._view[2] = {
          title: "DrawCall",
          value: "drawCall",
          color: "white",
          units: "int"
        }, t._view[3] = {
          title: "CurMem",
          value: "currentMemorySize",
          color: "yellow",
          units: "M"
        }, P.isWebGL ? (t._view[4] = {
          title: "Shader",
          value: "shaderCall",
          color: "white",
          units: "int"
        }, P.is3DMode ? (t._view[0].title = "FPS(3D)", t._view[5] = {
          title: "TriFaces",
          value: "trianglesFaces",
          color: "white",
          units: "int"
        }, t._view[6] = {
          title: "treeNodeColl",
          value: "treeNodeCollision",
          color: "white",
          units: "int"
        }, t._view[7] = {
          title: "treeSpriteColl",
          value: "treeSpriteCollision",
          color: "white",
          units: "int"
        }) : (t._view[0].title = "FPS(WebGL)", t._view[5] = {
          title: "Canvas",
          value: "_canvasStr",
          color: "white",
          units: "int"
        })) : t._view[4] = {
          title: "Canvas",
          value: "_canvasStr",
          color: "white",
          units: "int"
        }, t._useCanvas ? t.createUIPre(e, i) : t.createUI(e, i), t.enable()) : F.window.conch.showFPS && F.window.conch.showFPS(e, i);
      }, t.createUIPre = function (e, i) {
        var n = F.pixelRatio;
        t._width = 130 * n, t._vx = 75 * n, t._height = n * (12 * t._view.length + 3 * n) + 4, t._fontSize = 12 * n;
        for (var r = 0; r < t._view.length; r++) t._view[r].x = 4, t._view[r].y = r * t._fontSize + 2 * n;
        t._canvas || ((t._canvas = new yt("2D")).size(t._width, t._height), (t._ctx = t._canvas.getContext("2d")).textBaseline = "top", t._ctx.font = t._fontSize + "px Sans-serif", t._canvas.source.style.cssText = "pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:" + e + "px;top:" + i + "px;width:" + t._width / n + "px;height:" + t._height / n + "px;"), t._first = !0, t.loop(), t._first = !1, F.container.appendChild(t._canvas.source);
      }, t.createUI = function (e, i) {
        var n = t._sp,
          r = F.pixelRatio;
        n || (n = new ct(), (t._leftText = new mt()).pos(5, 5), t._leftText.color = "#ffffff", n.addChild(t._leftText), (t._txt = new mt()).pos(80 * r, 5), t._txt.color = "#ffffff", n.addChild(t._txt), t._sp = n), n.pos(e, i);
        for (var a = "", s = 0; s < t._view.length; s++) {
          a += t._view[s].title + "\n";
        }
        t._leftText.text = a;
        var o = 138 * r,
          h = r * (12 * t._view.length + 3 * r) + 4;
        t._txt.fontSize = t._fontSize * r, t._leftText.fontSize = t._fontSize * r, n.size(o, h), n.graphics.clear(), n.graphics.setAlpha(.5), n.graphics.drawRect(0, 0, o, h, "#999999"), n.graphics.setAlpha(1), t.loop();
      }, t.enable = function () {
        i.timer.frameLoop(1, t, t.loop);
      }, t.hide = function () {
        t._show = !1, i.timer.clear(t, t.loop), t._canvas && F.removeElement(t._canvas.source);
      }, t.clear = function () {
        t.trianglesFaces = t.drawCall = t.shaderCall = t.spriteCount = t.spriteRenderUseCacheCount = t.treeNodeCollision = t.treeSpriteCollision = t.canvasNormal = t.canvasBitmap = t.canvasReCache = 0;
      }, t.loop = function () {
        t._count++;
        var e = F.now();
        if (!(e - t._timer < 1e3)) {
          var i = t._count;
          if (t.FPS = Math.round(1e3 * i / (e - t._timer)), t._show) {
            t.trianglesFaces = Math.round(t.trianglesFaces / i), t._useCanvas ? (t.drawCall = Math.round(t.drawCall / i) - 2, t.shaderCall = Math.round(t.shaderCall / i), t.spriteCount = Math.round(t.spriteCount / i) - 1) : (t.drawCall = Math.round(t.drawCall / i) - 2, t.shaderCall = Math.round(t.shaderCall / i) - 4, t.spriteCount = Math.round(t.spriteCount / i) - 4), t.spriteRenderUseCacheCount = Math.round(t.spriteRenderUseCacheCount / i), t.canvasNormal = Math.round(t.canvasNormal / i), t.canvasBitmap = Math.round(t.canvasBitmap / i), t.canvasReCache = Math.ceil(t.canvasReCache / i), t.treeNodeCollision = Math.round(t.treeNodeCollision / i), t.treeSpriteCollision = Math.round(t.treeSpriteCollision / i);
            var n = t.FPS > 0 ? Math.floor(1e3 / t.FPS).toString() : " ";
            t._fpsStr = t.FPS + (t.renderSlow ? " slow" : "") + " " + n, t._spriteStr = t.spriteCount + (t.spriteRenderUseCacheCount ? "/" + t.spriteRenderUseCacheCount : ""), t._canvasStr = t.canvasReCache + "/" + t.canvasNormal + "/" + t.canvasBitmap, t.currentMemorySize = V.systemResourceManager.memorySize, t._useCanvas ? t.renderInfoPre() : t.renderInfo(), t.clear();
          }
          t._count = 0, t._timer = e;
        }
      }, t.renderInfoPre = function () {
        if (t._canvas) {
          var e = t._ctx;
          e.clearRect(t._first ? 0 : t._vx, 0, t._width, t._height);
          for (var i = 0; i < t._view.length; i++) {
            var n = t._view[i];
            t._first && (e.fillStyle = "white", e.fillText(n.title, n.x, n.y, null, null, null)), e.fillStyle = n.color;
            var r = t[n.value];
            "M" == n.units && (r = Math.floor(r / 1048576 * 100) / 100 + " M"), e.fillText(r + "", n.x + t._vx, n.y, null, null, null);
          }
        }
      }, t.renderInfo = function () {
        for (var e = "", i = 0; i < t._view.length; i++) {
          var n = t._view[i],
            r = t[n.value];
          "M" == n.units && (r = Math.floor(r / 1048576 * 100) / 100 + " M"), "K" == n.units && (r = Math.floor(r / 1024 * 100) / 100 + " K"), e += r + "\n";
        }
        t._txt.text = e;
      }, t.FPS = 0, t.loopCount = 0, t.shaderCall = 0, t.drawCall = 0, t.trianglesFaces = 0, t.spriteCount = 0, t.spriteRenderUseCacheCount = 0, t.treeNodeCollision = 0, t.treeSpriteCollision = 0, t.canvasNormal = 0, t.canvasBitmap = 0, t.canvasReCache = 0, t.renderSlow = !1, t.currentMemorySize = 0, t._fpsStr = null, t._canvasStr = null, t._spriteStr = null, t._fpsData = [], t._timer = 0, t._count = 0, t._view = [], t._fontSize = 12, t._txt = null, t._leftText = null, t._sp = null, t._show = !1, t._useCanvas = !1, t._canvas = null, t._ctx = null, t._first = !1, t._vx = NaN, t._width = 0, t._height = 100, t;
    }()),
    Y = (function () {
      function t() {
        this._strsToID = {}, this._idToStrs = [], this._length = 0;
      }
      r(t, "laya.utils.StringKey");
      var e = t.prototype;
      e.add = function (t) {
        var e = this._strsToID[t];
        return null != e ? e : (this._idToStrs[this._length] = t, this._strsToID[t] = this._length++);
      }, e.getID = function (t) {
        var e = this._strsToID[t];
        return null == e ? -1 : e;
      }, e.getName = function (t) {
        var e = this._idToStrs[t];
        return null == e ? void 0 : e;
      };
    }(), function () {
      function t() {
        this._delta = 0, this.scale = 1, this.currFrame = 0, this._mid = 1, this._map = [], this._laters = [], this._handlers = [], this._temp = [], this._count = 0, this.currTimer = this._now(), this._lastTimer = this._now(), this._init();
      }
      var e;
      r(t, "laya.utils.Timer");
      var n = t.prototype;
      return n._init = function () {
        i.timer && i.timer.frameLoop(1, this, this._update);
      }, n._now = function () {
        return Date.now();
      }, n._update = function () {
        if (this.scale <= 0) this._lastTimer = this._now();
        else {
          var t = this.currFrame = this.currFrame + this.scale,
            e = this._now();
          this._delta = (e - this._lastTimer) * this.scale;
          var i = this.currTimer = this.currTimer + this._delta;
          this._lastTimer = e;
          var n = this._handlers;
          for (this._count = 0, s = 0, o = n.length; s < o; s++)
            if (null !== (h = n[s]).method) {
              var r = h.userFrame ? t : i;
              if (r >= h.exeTime)
                if (h.repeat)
                  if (h.jumpFrame)
                    for (; r >= h.exeTime;) h.exeTime += h.delay, h.run(!1);
                  else h.exeTime += h.delay, h.run(!1), r > h.exeTime && (h.exeTime += Math.ceil((r - h.exeTime) / h.delay) * h.delay);
              else h.run(!0);
            } else this._count++;
          (this._count > 30 || t % 200 == 0) && this._clearHandlers();
          for (var a = this._laters, s = 0, o = a.length - 1; s <= o; s++) {
            var h = a[s];
            null !== h.method && (this._map[h.key] = null, h.run(!1)), this._recoverHandler(h), s === o && (o = a.length - 1);
          }
          a.length = 0;
        }
      }, n._clearHandlers = function () {
        for (var t = this._handlers, e = 0, i = t.length; e < i; e++) {
          var n = t[e];
          null !== n.method ? this._temp.push(n) : this._recoverHandler(n);
        }
        this._handlers = this._temp, this._temp = t, this._temp.length = 0;
      }, n._recoverHandler = function (e) {
        this._map[e.key] == e && (this._map[e.key] = null), e.clear(), t._pool.push(e);
      }, n._create = function (i, n, r, a, s, o, h) {
        if (!r) return s.apply(a, o), null;
        if (h) {
          var l = this._getHandler(a, s);
          if (l) return l.repeat = n, l.userFrame = i, l.delay = r, l.caller = a, l.method = s, l.args = o, l.exeTime = r + (i ? this.currFrame : this.currTimer + this._now() - this._lastTimer), l;
        }
        return l = t._pool.length > 0 ? t._pool.pop() : new e(), l.repeat = n, l.userFrame = i, l.delay = r, l.caller = a, l.method = s, l.args = o, l.exeTime = r + (i ? this.currFrame : this.currTimer + this._now() - this._lastTimer) + 1, this._indexHandler(l), this._handlers.push(l), l;
      }, n._indexHandler = function (t) {
        var e = t.caller,
          i = t.method,
          n = e ? e.$_GID || (e.$_GID = Q.getGID()) : 0,
          r = i.$_TID || (i.$_TID = 1e5 * this._mid++);
        t.key = n + r, this._map[t.key] = t;
      }, n.once = function (t, e, i, n, r) {
        void 0 === r && (r = !0), this._create(!1, !1, t, e, i, n, r);
      }, n.loop = function (t, e, i, n, r, a) {
        void 0 === r && (r = !0), void 0 === a && (a = !1);
        var s = this._create(!1, !0, t, e, i, n, r);
        s && (s.jumpFrame = a);
      }, n.frameOnce = function (t, e, i, n, r) {
        void 0 === r && (r = !0), this._create(!0, !1, t, e, i, n, r);
      }, n.frameLoop = function (t, e, i, n, r) {
        void 0 === r && (r = !0), this._create(!0, !0, t, e, i, n, r);
      }, n.toString = function () {
        return "callLater:" + this._laters.length + " handlers:" + this._handlers.length + " pool:" + t._pool.length;
      }, n.clear = function (t, e) {
        var i = this._getHandler(t, e);
        i && (this._map[i.key] = null, i.key = 0, i.clear());
      }, n.clearAll = function (t) {
        if (t)
          for (var e = 0, i = this._handlers.length; e < i; e++) {
            var n = this._handlers[e];
            n.caller === t && (this._map[n.key] = null, n.key = 0, n.clear());
          }
      }, n._getHandler = function (t, e) {
        var i = t ? t.$_GID || (t.$_GID = Q.getGID()) : 0,
          n = e.$_TID || (e.$_TID = 1e5 * this._mid++);
        return this._map[i + n];
      }, n.callLater = function (i, n, r) {
        if (null == this._getHandler(i, n)) {
          if (t._pool.length) var a = t._pool.pop();
          else a = new e();
          a.caller = i, a.method = n, a.args = r, this._indexHandler(a), this._laters.push(a);
        }
      }, n.runCallLater = function (t, e) {
        var i = this._getHandler(t, e);
        i && null != i.method && (this._map[i.key] = null, i.run(!0));
      }, n.runTimer = function (t, e) {
        this.runCallLater(t, e);
      }, a(0, n, "delta", function () {
        return this._delta;
      }), t._pool = [], t.__init$ = function () {
        e = function () {
          function t() {
            this.key = 0, this.repeat = !1, this.delay = 0, this.userFrame = !1, this.exeTime = 0, this.caller = null, this.method = null, this.args = null, this.jumpFrame = !1;
          }
          r(t, "");
          var e = t.prototype;
          return e.clear = function () {
            this.caller = null, this.method = null, this.args = null;
          }, e.run = function (t) {
            var e = this.caller;
            if (e && e.destroyed) return this.clear();
            var i = this.method,
              n = this.args;
            t && this.clear(), null != i && (n ? i.apply(e, n) : i.call(e));
          }, t;
        }();
      }, t;
    }()),
    q = function () {
      function t() {
        this.gid = 0;
      }
      r(t, "laya.utils.Tween");
      var e = t.prototype;
      return e.to = function (t, e, i, n, r, a, s) {
        return void 0 === a && (a = 0), void 0 === s && (s = !1), this._create(t, e, i, n, r, a, s, !0, !1, !0);
      }, e.from = function (t, e, i, n, r, a, s) {
        return void 0 === a && (a = 0), void 0 === s && (s = !1), this._create(t, e, i, n, r, a, s, !1, !1, !0);
      }, e._create = function (e, n, r, a, s, o, h, l, u, c) {
        if (!e) throw new Error("Tween:target is null");
        this._target = e, this._duration = r, this._ease = a || n.ease || t.easeNone, this._complete = s || n.complete, this._delay = o, this._props = [], this._usedTimer = 0, this._startTimer = F.now(), this._usedPool = u, this._delayParam = null, this.update = n.update;
        var _ = e.$_GID || (e.$_GID = Q.getGID());
        return t.tweenMap[_] ? (h && t.clearTween(e), t.tweenMap[_].push(this)) : t.tweenMap[_] = [this], c ? o <= 0 ? this.firstStart(e, n, l) : (this._delayParam = [e, n, l], i.scaleTimer.once(o, this, this.firstStart, this._delayParam)) : this._initProps(e, n, l), this;
      }, e.firstStart = function (t, e, i) {
        this._delayParam = null, t.destroyed ? this.clear() : (this._initProps(t, e, i), this._beginLoop());
      }, e._initProps = function (t, e, i) {
        for (var n in e)
          if ("number" == typeof t[n]) {
            var r = i ? t[n] : e[n],
              a = i ? e[n] : t[n];
            this._props.push([n, r, a - r]), i || (t[n] = r);
          }
      }, e._beginLoop = function () {
        i.scaleTimer.frameLoop(1, this, this._doEase);
      }, e._doEase = function () {
        this._updateEase(F.now());
      }, e._updateEase = function (e) {
        var i = this._target;
        if (i) {
          if (i.destroyed) return t.clearTween(i);
          var n = this._usedTimer = e - this._startTimer - this._delay;
          if (!(n < 0)) {
            if (n >= this._duration) return this.complete();
            for (var r = n > 0 ? this._ease(n, 0, 1, this._duration) : 0, a = this._props, s = 0, o = a.length; s < o; s++) {
              var h = a[s];
              i[h[0]] = h[1] + r * h[2];
            }
            this.update && this.update.run();
          }
        }
      }, e.complete = function () {
        if (this._target) {
          i.scaleTimer.runTimer(this, this.firstStart);
          for (var t = this._target, e = this._props, n = this._complete, r = 0, a = e.length; r < a; r++) {
            var s = e[r];
            t[s[0]] = s[1] + s[2];
          }
          this.update && this.update.run(), this.clear(), n && n.run();
        }
      }, e.pause = function () {
        i.scaleTimer.clear(this, this._beginLoop), i.scaleTimer.clear(this, this._doEase), i.scaleTimer.clear(this, this.firstStart);
        var t = NaN;
        (t = F.now() - this._startTimer - this._delay) < 0 && (this._usedTimer = t);
      }, e.setStartTime = function (t) {
        this._startTimer = t;
      }, e.clear = function () {
        this._target && (this._remove(), this._clear());
      }, e._clear = function () {
        this.pause(), i.scaleTimer.clear(this, this.firstStart), this._complete = null, this._target = null, this._ease = null, this._props = null, this._delayParam = null, this._usedPool && (this.update = null, j.recover("tween", this));
      }, e.recover = function () {
        this._usedPool = !0, this._clear();
      }, e._remove = function () {
        var e = t.tweenMap[this._target.$_GID];
        if (e)
          for (var i = 0, n = e.length; i < n; i++)
            if (e[i] === this) {
              e.splice(i, 1);
              break;
            }
      }, e.restart = function () {
        if (this.pause(), this._usedTimer = 0, this._startTimer = F.now(), this._delayParam) i.scaleTimer.once(this._delay, this, this.firstStart, this._delayParam);
        else {
          for (var t = this._props, e = 0, n = t.length; e < n; e++) {
            var r = t[e];
            this._target[r[0]] = r[1];
          }
          i.scaleTimer.once(this._delay, this, this._beginLoop);
        }
      }, e.resume = function () {
        this._usedTimer >= this._duration || (this._startTimer = F.now() - this._usedTimer - this._delay, this._delayParam ? this._usedTimer < 0 ? i.scaleTimer.once(-this._usedTimer, this, this.firstStart, this._delayParam) : this.firstStart.apply(this, this._delayParam) : this._beginLoop());
      }, a(0, e, "progress", null, function (t) {
        var e = t * this._duration;
        this._startTimer = F.now() - this._delay - e;
      }), t.to = function (e, i, n, r, a, s, o, h) {
        return void 0 === s && (s = 0), void 0 === o && (o = !1), void 0 === h && (h = !0), j.getItemByClass("tween", t)._create(e, i, n, r, a, s, o, !0, h, !0);
      }, t.from = function (e, i, n, r, a, s, o, h) {
        return void 0 === s && (s = 0), void 0 === o && (o = !1), void 0 === h && (h = !0), j.getItemByClass("tween", t)._create(e, i, n, r, a, s, o, !1, h, !0);
      }, t.clearAll = function (e) {
        if (e && e.$_GID) {
          var i = t.tweenMap[e.$_GID];
          if (i) {
            for (var n = 0, r = i.length; n < r; n++) i[n]._clear();
            i.length = 0;
          }
        }
      }, t.clear = function (t) {
        t.clear();
      }, t.clearTween = function (e) {
        t.clearAll(e);
      }, t.easeNone = function (t, e, i, n) {
        return i * t / n + e;
      }, t.tweenMap = {}, t;
    }(),
    Q = function () {
      function t() {}
      return r(t, "laya.utils.Utils"), t.toRadian = function (e) {
        return e * t._pi2;
      }, t.toAngle = function (e) {
        return e * t._pi;
      }, t.toHexColor = function (t) {
        if (t < 0 || isNaN(t)) return null;
        for (var e = t.toString(16); e.length < 6;) e = "0" + e;
        return "#" + e;
      }, t.getGID = function () {
        return t._gid++;
      }, t.concatArray = function (t, e) {
        if (!e) return t;
        if (!t) return e;
        var i = 0,
          n = e.length;
        for (i = 0; i < n; i++) t.push(e[i]);
        return t;
      }, t.clearArray = function (t) {
        return t ? (t.length = 0, t) : t;
      }, t.copyArray = function (t, e) {
        if (t || (t = []), !e) return t;
        t.length = e.length;
        var i = 0,
          n = e.length;
        for (i = 0; i < n; i++) t[i] = e[i];
        return t;
      }, t.getGlobalRecByPoints = function (t, e, i, n, r) {
        var a;
        a = new C(e, i), a = t.localToGlobal(a);
        var s;
        return s = new C(n, r), s = t.localToGlobal(s), M._getWrapRec([a.x, a.y, s.x, s.y]);
      }, t.getGlobalPosAndScale = function (e) {
        return t.getGlobalRecByPoints(e, 0, 0, 1, 1);
      }, t.bind = function (t, e) {
        return t.bind(e);
      }, t.measureText = function (t, e) {
        return s.measureText(t, e);
      }, t.updateOrder = function (t) {
        if (!t || t.length < 2) return !1;
        for (var e, i = 1, n = 0, r = t.length, a = NaN; i < r;) {
          for (e = t[n = i], a = t[n]._zOrder; --n > -1 && t[n]._zOrder > a;) t[n + 1] = t[n];
          t[n + 1] = e, i++;
        }
        var s = e.parent.conchModel;
        if (s)
          if (null != s.updateZOrder) s.updateZOrder();
          else {
            for (i = 0; i < r; i++) s.removeChild(t[i].conchModel);
            for (i = 0; i < r; i++) s.addChildAt(t[i].conchModel, i);
          }
        return !0;
      }, t.transPointList = function (t, e, i) {
        var n = 0,
          r = t.length;
        for (n = 0; n < r; n += 2) t[n] += e, t[n + 1] += i;
      }, t.parseInt = function (t, e) {
        void 0 === e && (e = 0);
        var i = F.window.parseInt(t, e);
        return isNaN(i) ? 0 : i;
      }, t.getFileExtension = function (e) {
        t._extReg.lastIndex = e.lastIndexOf(".");
        var i = t._extReg.exec(e);
        return i && i.length > 1 ? i[1].toLowerCase() : null;
      }, t.getTransformRelativeToWindow = function (t, e, n) {
        var r = i.stage,
          a = laya.utils.Utils.getGlobalPosAndScale(t),
          s = r._canvasTransform.clone(),
          o = s.tx,
          h = s.ty;
        s.rotate(-Math.PI / 180 * i.stage.canvasDegree), s.scale(i.stage.clientScaleX, i.stage.clientScaleY);
        var l = i.stage.canvasDegree % 180 != 0,
          u = NaN,
          c = NaN;
        l ? (u = n + a.y, c = e + a.x, u *= s.d, c *= s.a, 90 == i.stage.canvasDegree ? (u = o - u, c += h) : (u += o, c = h - c)) : (u = e + a.x, c = n + a.y, u *= s.a, c *= s.d, u += o, c += h);
        var _ = NaN,
          d = NaN;
        return l ? (_ = s.d * a.height, d = s.a * a.width) : (_ = s.a * a.width, d = s.d * a.height), {
          x: u,
          y: c,
          scaleX: _,
          scaleY: d
        };
      }, t.fitDOMElementInArea = function (e, n, r, a, s, o) {
        e._fitLayaAirInitialized || (e._fitLayaAirInitialized = !0, e.style.transformOrigin = e.style.webKittransformOrigin = "left top", e.style.position = "absolute");
        var h = t.getTransformRelativeToWindow(n, r, a);
        e.style.transform = e.style.webkitTransform = "scale(" + h.scaleX + "," + h.scaleY + ") rotate(" + i.stage.canvasDegree + "deg)", e.style.width = s + "px", e.style.height = o + "px", e.style.left = h.x + "px", e.style.top = h.y + "px";
      }, t.isOkTextureList = function (t) {
        if (!t) return !1;
        var e, i = 0,
          n = t.length;
        for (i = 0; i < n; i++)
          if (!(e = t[i]) || !e.source) return !1;
        return !0;
      }, t.isOKCmdList = function (t) {
        if (!t) return !1;
        var e, i, n = 0,
          r = t.length,
          a = P._context;
        for (n = 0; n < r; n++) switch ((e = t[n]).callee) {
          case a._drawTexture:
          case a._fillTexture:
          case a._drawTextureWithTransform:
            if (!(i = e[0]) || !i.source) return !1;
        }
        return !0;
      }, t._gid = 1, t._pi = 180 / Math.PI, t._pi2 = Math.PI / 180, t._extReg = /\.(\w+)\??/g, t.parseXMLFromString = function (t) {
        var e;
        if (t = t.replace(/>\s+</g, "><"), (e = new DOMParser().parseFromString(t, "text/xml")).firstChild.textContent.indexOf("This page contains the following errors") > -1) throw new Error(e.firstChild.firstChild.textContent);
        return e;
      }, t;
    }(),
    K = function () {
      function t() {
        this.useDic = {}, this.shapeDic = {}, this.shapeLineDic = {}, this._id = 0, this._checkKey = !1, this._freeIdArray = [], P.isWebGL && U.regCacheByFunction(Q.bind(this.startDispose, this), Q.bind(this.getCacheList, this));
      }
      r(t, "laya.utils.VectorGraphManager");
      var e = t.prototype;
      return e.getId = function () {
        return this._id++;
      }, e.addShape = function (t, e) {
        this.shapeDic[t] = e, this.useDic[t] || (this.useDic[t] = !0);
      }, e.addLine = function (t, e) {
        this.shapeLineDic[t] = e, this.shapeLineDic[t] || (this.shapeLineDic[t] = !0);
      }, e.getShape = function (t) {
        this._checkKey && null != this.useDic[t] && (this.useDic[t] = !0);
      }, e.deleteShape = function (t) {
        this.shapeDic[t] && (this.shapeDic[t] = null, delete this.shapeDic[t]), this.shapeLineDic[t] && (this.shapeLineDic[t] = null, delete this.shapeLineDic[t]), null != this.useDic[t] && delete this.useDic[t];
      }, e.getCacheList = function () {
        var t, e = [];
        for (t in this.shapeDic) e.push(this.shapeDic[t]);
        for (t in this.shapeLineDic) e.push(this.shapeLineDic[t]);
        return e;
      }, e.startDispose = function (t) {
        var e;
        for (e in this.useDic) this.useDic[e] = !1;
        this._checkKey = !0;
      }, e.endDispose = function () {
        if (this._checkKey) {
          var t;
          for (t in this.useDic) this.useDic[t] || this.deleteShape(t);
          this._checkKey = !1;
        }
      }, t.getInstance = function () {
        return t.instance = t.instance || new t();
      }, t.instance = null, t;
    }(),
    Z = function () {
      function t() {
        this._obj = null, this._obj = t.supportWeakMap ? new F.window.WeakMap() : {}, t.supportWeakMap || t._maps.push(this);
      }
      r(t, "laya.utils.WeakObject");
      var e = t.prototype;
      return e.set = function (e, i) {
        if (null != e)
          if (t.supportWeakMap) {
            var n = e;
            "string" != typeof e && "number" != typeof e || (n = t._keys[e]) || (n = t._keys[e] = {
              k: e
            }), this._obj.set(n, i);
          } else "string" == typeof e || "number" == typeof e ? this._obj[e] = i : (e.$_GID || (e.$_GID = Q.getGID()), this._obj[e.$_GID] = i);
      }, e.get = function (e) {
        if (null == e) return null;
        if (t.supportWeakMap) {
          var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;
          return i ? this._obj.get(i) : null;
        }
        return "string" == typeof e || "number" == typeof e ? this._obj[e] : this._obj[e.$_GID];
      }, e.del = function (e) {
        if (null != e)
          if (t.supportWeakMap) {
            var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;
            if (!i) return;
            this._obj.delete(i);
          } else "string" == typeof e || "number" == typeof e ? delete this._obj[e] : delete this._obj[this._obj.$_GID];
      }, e.has = function (e) {
        if (null == e) return !1;
        if (t.supportWeakMap) {
          var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;
          return this._obj.has(i);
        }
        return "string" == typeof e || "number" == typeof e ? null != this._obj[e] : null != this._obj[this._obj.$_GID];
      }, t.__init__ = function () {
        (t.supportWeakMap = null != F.window.WeakMap) || i.timer.loop(t.delInterval, null, t.clearCache);
      }, t.clearCache = function () {
        for (var e = 0, i = t._maps.length; e < i; e++) {
          t._maps[e]._obj = {};
        }
      }, t.supportWeakMap = !1, t.delInterval = 3e5, t._keys = {}, t._maps = [], n(t, ["I", function () {
        return this.I = new t();
      }]), t;
    }(),
    $ = function () {
      function t() {
        this.id = NaN, this.save = [], this.toUpperCase = null, this.changed = !1, this._text = null;
      }
      r(t, "laya.utils.WordText");
      var e = t.prototype;
      return e.setText = function (t) {
        this.changed = !0, this._text = t;
      }, e.toString = function () {
        return this._text;
      }, e.charCodeAt = function (t) {
        return this._text ? this._text.charCodeAt(t) : NaN;
      }, e.charAt = function (t) {
        return this._text ? this._text.charAt(t) : null;
      }, a(0, e, "length", function () {
        return this._text ? this._text.length : 0;
      }), t;
    }(),
    J = function (t) {
      function e() {
        this._bits = 0, this._displayedInStage = !1, this._parent = null, this.conchModel = null, this.name = "", this._destroyed = !1, e.__super.call(this), this._childs = e.ARRAY_EMPTY, this._$P = e.PROP_EMPTY, this.timer = i.scaleTimer, this.conchModel = P.isConchNode ? this.createConchModel() : null;
      }
      r(e, "laya.display.Node", h);
      var n = e.prototype;
      return n._setBit = function (t, e) {
        if (1 == t) {
          this._getBit(t) != e && this._updateDisplayedInstage();
        }
        e ? this._bits |= t : this._bits &= ~t;
      }, n._getBit = function (t) {
        return 0 != (this._bits & t);
      }, n._setUpNoticeChain = function () {
        this._getBit(1) && this._setUpNoticeType(1);
      }, n._setUpNoticeType = function (t) {
        var e = this;
        for (e._setBit(t, !0), e = e.parent; e;) {
          if (e._getBit(t)) return;
          e._setBit(t, !0), e = e.parent;
        }
      }, n.on = function (t, e, i, n) {
        return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1), this._createListener(t, e, i, n, !1);
      }, n.once = function (t, e, i, n) {
        return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1), this._createListener(t, e, i, n, !0);
      }, n.createConchModel = function () {
        return null;
      }, n.destroy = function (t) {
        void 0 === t && (t = !0), this._destroyed = !0, this._parent && this._parent.removeChild(this), this._childs && (t ? this.destroyChildren() : this.removeChildren()), this._childs = null, this._$P = null, this.offAll(), this.timer.clearAll(this);
      }, n.destroyChildren = function () {
        if (this._childs)
          for (var t = this._childs.length - 1; t > -1; t--) this._childs[t].destroy(!0);
      }, n.addChild = function (t) {
        if (!t || this.destroyed || t === this) return t;
        if (t.zOrder && this._set$P("hasZorder", !0), t._parent === this) {
          var i = this.getChildIndex(t);
          i !== this._childs.length - 1 && (this._childs.splice(i, 1), this._childs.push(t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, this._childs.length - 1)), this._childChanged());
        } else t.parent && t.parent.removeChild(t), this._childs === e.ARRAY_EMPTY && (this._childs = []), this._childs.push(t), this.conchModel && this.conchModel.addChildAt(t.conchModel, this._childs.length - 1), t.parent = this, this._childChanged();
        return t;
      }, n.addChildren = function (t) {
        for (var e = arguments, i = 0, n = e.length; i < n;) this.addChild(e[i++]);
      }, n.addChildAt = function (t, i) {
        if (!t || this.destroyed || t === this) return t;
        if (t.zOrder && this._set$P("hasZorder", !0), i >= 0 && i <= this._childs.length) {
          if (t._parent === this) {
            var n = this.getChildIndex(t);
            this._childs.splice(n, 1), this._childs.splice(i, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, i)), this._childChanged();
          } else t.parent && t.parent.removeChild(t), this._childs === e.ARRAY_EMPTY && (this._childs = []), this._childs.splice(i, 0, t), this.conchModel && this.conchModel.addChildAt(t.conchModel, i), t.parent = this;
          return t;
        }
        throw new Error("appendChildAt:The index is out of bounds");
      }, n.getChildIndex = function (t) {
        return this._childs.indexOf(t);
      }, n.getChildByName = function (t) {
        var e = this._childs;
        if (e)
          for (var i = 0, n = e.length; i < n; i++) {
            var r = e[i];
            if (r.name === t) return r;
          }
        return null;
      }, n._get$P = function (t) {
        return this._$P[t];
      }, n._set$P = function (t, i) {
        return this.destroyed || (this._$P === e.PROP_EMPTY && (this._$P = {}), this._$P[t] = i), i;
      }, n.getChildAt = function (t) {
        return this._childs[t];
      }, n.setChildIndex = function (t, e) {
        var i = this._childs;
        if (e < 0 || e >= i.length) throw new Error("setChildIndex:The index is out of bounds.");
        var n = this.getChildIndex(t);
        if (n < 0) throw new Error("setChildIndex:node is must child of this object.");
        return i.splice(n, 1), i.splice(e, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, e)), this._childChanged(), t;
      }, n._childChanged = function (t) {}, n.removeChild = function (t) {
        if (!this._childs) return t;
        var e = this._childs.indexOf(t);
        return this.removeChildAt(e);
      }, n.removeSelf = function () {
        return this._parent && this._parent.removeChild(this), this;
      }, n.removeChildByName = function (t) {
        var e = this.getChildByName(t);
        return e && this.removeChild(e), e;
      }, n.removeChildAt = function (t) {
        var e = this.getChildAt(t);
        return e && (this._childs.splice(t, 1), this.conchModel && this.conchModel.removeChild(e.conchModel), e.parent = null), e;
      }, n.removeChildren = function (t, i) {
        if (void 0 === t && (t = 0), void 0 === i && (i = 2147483647), this._childs && this._childs.length > 0) {
          var n = this._childs;
          if (0 === t && i >= s) {
            var r = n;
            this._childs = e.ARRAY_EMPTY;
          } else r = n.splice(t, i - t);
          for (var a = 0, s = r.length; a < s; a++) r[a].parent = null, this.conchModel && this.conchModel.removeChild(r[a].conchModel);
        }
        return this;
      }, n.replaceChild = function (t, e) {
        var i = this._childs.indexOf(e);
        return i > -1 ? (this._childs.splice(i, 1, t), this.conchModel && (this.conchModel.removeChild(e.conchModel), this.conchModel.addChildAt(t.conchModel, i)), e.parent = null, t.parent = this, t) : null;
      }, n._updateDisplayedInstage = function () {
        var t;
        t = this;
        var e = i.stage;
        for (this._displayedInStage = !1; t;) {
          if (t._getBit(1)) {
            this._displayedInStage = t._displayedInStage;
            break;
          }
          if (t == e || t._displayedInStage) {
            this._displayedInStage = !0;
            break;
          }
          t = t.parent;
        }
      }, n._setDisplay = function (t) {
        this._displayedInStage !== t && (this._displayedInStage = t, t ? this.event("display") : this.event("undisplay"));
      }, n._displayChild = function (t, e) {
        var i = t._childs;
        if (i)
          for (var n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            a._getBit(1) && (a._childs.length > 0 ? this._displayChild(a, e) : a._setDisplay(e));
          }
        t._setDisplay(e);
      }, n.contains = function (t) {
        if (t === this) return !0;
        for (; t;) {
          if (t.parent === this) return !0;
          t = t.parent;
        }
        return !1;
      }, n.timerLoop = function (t, e, i, n, r, a) {
        void 0 === r && (r = !0), void 0 === a && (a = !1), this.timer.loop(t, e, i, n, r, a);
      }, n.timerOnce = function (t, e, i, n, r) {
        void 0 === r && (r = !0), this.timer._create(!1, !1, t, e, i, n, r);
      }, n.frameLoop = function (t, e, i, n, r) {
        void 0 === r && (r = !0), this.timer._create(!0, !0, t, e, i, n, r);
      }, n.frameOnce = function (t, e, i, n, r) {
        void 0 === r && (r = !0), this.timer._create(!0, !1, t, e, i, n, r);
      }, n.clearTimer = function (t, e) {
        this.timer.clear(t, e);
      }, a(0, n, "numChildren", function () {
        return this._childs.length;
      }), a(0, n, "destroyed", function () {
        return this._destroyed;
      }), a(0, n, "parent", function () {
        return this._parent;
      }, function (t) {
        this._parent !== t && (t ? (this._parent = t, this.event("added"), this._getBit(1) && (this._setUpNoticeChain(), t.displayedInStage && this._displayChild(this, !0)), t._childChanged(this)) : (this.event("removed"), this._parent._childChanged(), this._getBit(1) && this._displayChild(this, !1), this._parent = t));
      }), a(0, n, "displayedInStage", function () {
        return this._getBit(1) ? this._displayedInStage : (this._setUpNoticeType(1), this._displayedInStage);
      }), e.ARRAY_EMPTY = [], e.PROP_EMPTY = {}, e.NOTICE_DISPLAY = 1, e.MOUSEENABLE = 2, e;
    }(),
    tt = function (t) {
      function e(t) {
        this._bgground = null, this._border = null, this._rect = null, this.underLine = 0, this.lineHeight = 0, e.__super.call(this), this._padding = e._PADDING, this._spacing = e._SPACING, this._aligns = e._ALIGNS, this._font = _.EMPTY, this._ower = t;
      }
      r(e, "laya.display.css.CSSStyle", t);
      var i = e.prototype;
      return i.destroy = function () {
        this._ower = null, this._font = null, this._rect = null;
      }, i.inherit = function (t) {
        this._font = t._font, this._spacing = t._spacing === e._SPACING ? e._SPACING : t._spacing.slice(), this.lineHeight = t.lineHeight;
      }, i._widthAuto = function () {
        return 0 != (262144 & this._type);
      }, i.widthed = function (t) {
        return 0 != (8 & this._type);
      }, i._calculation = function (t, e) {
        function i(t, e, i) {
          return t * i[0] + e * i[1] + i[2];
        }

        function n(t) {
          var e = a.width,
            n = r.width;
          s.width && (r.width = i(e, n, s.width)), s.height && (r.height = i(e, n, s.height)), s.left && (r.x = i(e, n, s.left)), s.top && (r.y = i(e, n, s.top));
        }
        if (e.indexOf("%") < 0) return !1;
        var r = this._ower,
          a = r.parent,
          s = this._rect;
        null === s && (a._getCSSStyle()._type |= 524288, a.on("resize", this, n), this._rect = s = {
          input: {}
        });
        var o = e.split(" ");
        return o[0] = parseFloat(o[0]) / 100, 1 == o.length ? o[1] = o[2] = 0 : (o[1] = parseFloat(o[1]) / 100, o[2] = parseFloat(o[2])), s[t] = o, s.input[t] = e, n(), !0;
      }, i.heighted = function (t) {
        return 0 != (8192 & this._type);
      }, i.size = function (t, e) {
        var i = this._ower,
          n = !1; - 1 !== t && t != this._ower.width && (this._type |= 8, this._ower.width = t, n = !0), -1 !== e && e != this._ower.height && (this._type |= 8192, this._ower.height = e, n = !0), n && (i._layoutLater(), 524288 & this._type && i.event("resize", this));
      }, i._getAlign = function () {
        return this._aligns[0];
      }, i._getValign = function () {
        return this._aligns[1];
      }, i._getCssFloat = function () {
        return 0 != (32768 & this._type) ? 32768 : 0;
      }, i._createFont = function () {
        return 4096 & this._type ? this._font : (this._type |= 4096, this._font = new _(this._font));
      }, i.render = function (t, e, i, n) {
        var r = t.width,
          a = t.height;
        i -= t.pivotX, n -= t.pivotY, this._bgground && null != this._bgground.color && e.ctx.fillRect(i, n, r, a, this._bgground.color), this._border && this._border.color && e.drawRect(i, n, r, a, this._border.color.strColor, this._border.size);
      }, i.getCSSStyle = function () {
        return this;
      }, i.cssText = function (t) {
        this.attrs(e.parseOneCSS(t, ";"));
      }, i.attrs = function (t) {
        if (t)
          for (var e = 0, i = t.length; e < i; e++) {
            var n = t[e];
            this[n[0]] = n[1];
          }
      }, i.setTransform = function (t) {
        "none" === t ? this._tf = c._TF_EMPTY : this.attrs(e.parseOneCSS(t, ","));
      }, i.translate = function (t, e) {
        this._tf === c._TF_EMPTY && (this._tf = new d()), this._tf.translateX = t, this._tf.translateY = e;
      }, i.scale = function (t, e) {
        this._tf === c._TF_EMPTY && (this._tf = new d()), this._tf.scaleX = t, this._tf.scaleY = e;
      }, i._enableLayout = function () {
        return 0 == (2 & this._type) && 0 == (4 & this._type);
      }, a(0, i, "block", t.prototype._$get_block, function (t) {
        t ? this._type |= 1 : this._type &= -2;
      }), a(0, i, "valign", function () {
        return e._valigndef[this._aligns[1]];
      }, function (t) {
        this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]), this._aligns[1] = e._valigndef[t];
      }), a(0, i, "height", null, function (t) {
        if (this._type |= 8192, "string" == typeof t) {
          if (this._calculation("height", t)) return;
          t = parseInt(t);
        }
        this.size(-1, t);
      }), a(0, i, "width", null, function (t) {
        if (this._type |= 8, "string" == typeof t) {
          var e = t.indexOf("auto");
          if (e >= 0 && (this._type |= 262144, t = t.substr(0, e)), this._calculation("width", t)) return;
          t = parseInt(t);
        }
        this.size(t, -1);
      }), a(0, i, "fontWeight", function () {
        return this._font.weight;
      }, function (t) {
        this._createFont().weight = t;
      }), a(0, i, "left", null, function (t) {
        var e = this._ower;
        if ("string" == typeof t) {
          if ("center" === t ? t = "50% -50% 0" : "right" === t && (t = "100% -100% 0"), this._calculation("left", t)) return;
          t = parseInt(t);
        }
        e.x = t;
      }), a(0, i, "_translate", null, function (t) {
        this.translate(t[0], t[1]);
      }), a(0, i, "absolute", function () {
        return 0 != (4 & this._type);
      }), a(0, i, "top", null, function (t) {
        var e = this._ower;
        if ("string" == typeof t) {
          if ("middle" === t ? t = "50% -50% 0" : "bottom" === t && (t = "100% -100% 0"), this._calculation("top", t)) return;
          t = parseInt(t);
        }
        e.y = t;
      }), a(0, i, "align", function () {
        return e._aligndef[this._aligns[0]];
      }, function (t) {
        this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]), this._aligns[0] = e._aligndef[t];
      }), a(0, i, "bold", function () {
        return this._font.bold;
      }, function (t) {
        this._createFont().bold = t;
      }), a(0, i, "padding", function () {
        return this._padding;
      }, function (t) {
        this._padding = t;
      }), a(0, i, "leading", function () {
        return this._spacing[1];
      }, function (t) {
        "string" == typeof t && (t = parseInt(t + "")), this._spacing === e._SPACING && (this._spacing = [0, 0]), this._spacing[1] = t;
      }), a(0, i, "lineElement", function () {
        return 0 != (65536 & this._type);
      }, function (t) {
        t ? this._type |= 65536 : this._type &= -65537;
      }), a(0, i, "cssFloat", function () {
        return 0 != (32768 & this._type) ? "right" : "left";
      }, function (t) {
        this.lineElement = !1, "right" === t ? this._type |= 32768 : this._type &= -32769;
      }), a(0, i, "textDecoration", function () {
        return this._font.decoration;
      }, function (t) {
        this._createFont().decoration = t;
      }), a(0, i, "whiteSpace", function () {
        return 131072 & this._type ? "nowrap" : "";
      }, function (t) {
        "nowrap" === t && (this._type |= 131072), "none" === t && (this._type &= -131073);
      }), a(0, i, "background", null, function (t) {
        t ? (this._bgground || (this._bgground = {}), this._bgground.color = t, this._ower.conchModel && this._ower.conchModel.bgColor(t), this._type |= 16384, this._ower._renderType |= 256) : this._bgground = null;
      }), a(0, i, "wordWrap", function () {
        return 0 == (131072 & this._type);
      }, function (t) {
        t ? this._type &= -131073 : this._type |= 131072;
      }), a(0, i, "color", function () {
        return this._font.color;
      }, function (t) {
        this._createFont().color = t;
      }), a(0, i, "password", function () {
        return this._font.password;
      }, function (t) {
        this._createFont().password = t;
      }), a(0, i, "backgroundColor", function () {
        return this._bgground ? this._bgground.color : null;
      }, function (t) {
        "none" === t ? this._bgground = null : (this._bgground || (this._bgground = {}), this._bgground.color = t), this._ower.conchModel && this._ower.conchModel.bgColor(t), this._ower._renderType |= 256;
      }), a(0, i, "font", function () {
        return this._font.toString();
      }, function (t) {
        this._createFont().set(t);
      }), a(0, i, "weight", null, function (t) {
        this._createFont().weight = t;
      }), a(0, i, "letterSpacing", function () {
        return this._spacing[0];
      }, function (t) {
        "string" == typeof t && (t = parseInt(t + "")), this._spacing === e._SPACING && (this._spacing = [0, 0]), this._spacing[0] = t;
      }), a(0, i, "fontSize", function () {
        return this._font.size;
      }, function (t) {
        this._createFont().size = t;
      }), a(0, i, "italic", function () {
        return this._font.italic;
      }, function (t) {
        this._createFont().italic = t;
      }), a(0, i, "fontFamily", function () {
        return this._font.family;
      }, function (t) {
        this._createFont().family = t;
      }), a(0, i, "stroke", function () {
        return this._font.stroke[0];
      }, function (t) {
        this._createFont().stroke === _._STROKE && (this._font.stroke = [0, "#000000"]), this._font.stroke[0] = t;
      }), a(0, i, "strokeColor", function () {
        return this._font.stroke[1];
      }, function (t) {
        this._createFont().stroke === _._STROKE && (this._font.stroke = [0, "#000000"]), this._font.stroke[1] = t;
      }), a(0, i, "border", function () {
        return this._border ? this._border.value : "";
      }, function (t) {
        if ("none" != t) {
          this._border || (this._border = {}), this._border.value = t;
          var e = t.split(" ");
          if (this._border.color = G.create(e[e.length - 1]), 1 == e.length) return this._border.size = 1, void(this._border.type = "solid");
          var i = 0;
          e[0].indexOf("px") > 0 ? (this._border.size = parseInt(e[0]), i++) : this._border.size = 1, this._border.type = e[i], this._ower._renderType |= 256;
        } else this._border = null;
      }), a(0, i, "borderColor", function () {
        return this._border && this._border.color ? this._border.color.strColor : null;
      }, function (t) {
        t ? (this._border || (this._border = {
          size: 1,
          type: "solid"
        }), this._border.color = null == t ? null : G.create(t), this._ower.conchModel && this._ower.conchModel.border(this._border.color.strColor), this._ower._renderType |= 256) : this._border = null;
      }), a(0, i, "position", function () {
        return 4 & this._type ? "absolute" : "";
      }, function (t) {
        "absolute" == t ? this._type |= 4 : this._type &= -5;
      }), a(0, i, "display", null, function (t) {
        switch (t) {
          case "":
            this._type &= -3, this.visible = !0;
            break;
          case "none":
            this._type |= 2, this.visible = !1, this._ower._layoutLater();
        }
      }), a(0, i, "paddingLeft", function () {
        return this.padding[3];
      }), a(0, i, "paddingTop", function () {
        return this.padding[0];
      }), a(0, i, "_scale", null, function (t) {
        this._ower.scale(t[0], t[1]);
      }), a(0, i, "_rotate", null, function (t) {
        this._ower.rotation = t;
      }), e.parseOneCSS = function (t, i) {
        for (var n, r = [], a = t.split(i), s = 0, o = a.length; s < o; s++) {
          var h = a[s],
            l = h.indexOf(":"),
            u = h.substr(0, l).replace(/^\s+|\s+$/g, "");
          if (0 != u.length) {
            var c = h.substr(l + 1).replace(/^\s+|\s+$/g, ""),
              _ = [u, c];
            switch (u) {
              case "italic":
              case "bold":
                _[1] = "true" == c;
                break;
              case "line-height":
                _[0] = "lineHeight", _[1] = parseInt(c);
                break;
              case "font-size":
                _[0] = "fontSize", _[1] = parseInt(c);
                break;
              case "padding":
                (n = c.split(" ")).length > 1 || (n[1] = n[2] = n[3] = n[0]), _[1] = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];
                break;
              case "rotate":
                _[0] = "_rotate", _[1] = parseFloat(c);
                break;
              case "scale":
                n = c.split(" "), _[0] = "_scale", _[1] = [parseFloat(n[0]), parseFloat(n[1])];
                break;
              case "translate":
                n = c.split(" "), _[0] = "_translate", _[1] = [parseInt(n[0]), parseInt(n[1])];
                break;
              default:
                (_[0] = e._CSSTOVALUE[u]) || (_[0] = u);
            }
            r.push(_);
          }
        }
        return r;
      }, e.parseCSS = function (t, i) {
        for (var n; null != (n = e._parseCSSRegExp.exec(t));) e.styleSheets[n[1]] = e.parseOneCSS(n[2], ";");
      }, e.EMPTY = new e(null), e._CSSTOVALUE = {
        "letter-spacing": "letterSpacing",
        "line-spacing": "lineSpacing",
        "white-space": "whiteSpace",
        "line-height": "lineHeight",
        "scale-x": "scaleX",
        "scale-y": "scaleY",
        "translate-x": "translateX",
        "translate-y": "translateY",
        "font-family": "fontFamily",
        "font-weight": "fontWeight",
        "vertical-align": "valign",
        "text-decoration": "textDecoration",
        "background-color": "backgroundColor",
        "border-color": "borderColor",
        float: "cssFloat"
      }, e._parseCSSRegExp = new RegExp("([.#]\\w+)\\s*{([\\s\\S]*?)}", "g"), e._aligndef = {
        left: 0,
        center: 1,
        right: 2,
        0: "left",
        1: "center",
        2: "right"
      }, e._valigndef = {
        top: 0,
        middle: 1,
        bottom: 2,
        0: "top",
        1: "middle",
        2: "bottom"
      }, e.styleSheets = {}, e.ALIGN_CENTER = 1, e.ALIGN_RIGHT = 2, e.VALIGN_MIDDLE = 1, e.VALIGN_BOTTOM = 2, e._CSS_BLOCK = 1, e._DISPLAY_NONE = 2, e._ABSOLUTE = 4, e._WIDTH_SET = 8, e._PADDING = [0, 0, 0, 0], e._RECT = [-1, -1, -1, -1], e._SPACING = [0, 0], e._ALIGNS = [0, 0, 0], e.ADDLAYOUTED = 512, e._NEWFONT = 4096, e._HEIGHT_SET = 8192, e._BACKGROUND_SET = 16384, e._FLOAT_RIGHT = 32768, e._LINE_ELEMENT = 65536, e._NOWARP = 131072, e._WIDTHAUTO = 262144, e._LISTERRESZIE = 524288, e;
    }(c),
    et = function (t) {
      function e() {
        this.url = null, this.audio = null, this.loaded = !1, e.__super.call(this);
      }
      r(e, "laya.media.h5audio.AudioSound", h);
      var i = e.prototype;
      return i.dispose = function () {
        var t = e._audioCache[this.url];
        t && (t.src = "", delete e._audioCache[this.url]);
      }, i.load = function (t) {
        function i() {
          r(), s.loaded = !0, s.event("complete");
        }

        function n() {
          a.load = null, r(), s.event("error");
        }

        function r() {
          a.removeEventListener("canplaythrough", i), a.removeEventListener("error", n);
        }
        t = R.formatURL(t), this.url = t;
        var a;
        if (t == I._tMusic ? (e._initMusicAudio(), (a = e._musicAudio).src != t && (e._audioCache[a.src] = null, a = null)) : a = e._audioCache[t], a && a.readyState >= 2) this.event("complete");
        else {
          a || (t == I._tMusic ? (e._initMusicAudio(), a = e._musicAudio) : a = F.createElement("audio"), e._audioCache[t] = a, a.src = t), a.addEventListener("canplaythrough", i), a.addEventListener("error", n);
          var s = this;
          this.audio = a, a.load ? a.load() : n();
        }
      }, i.play = function (t, i) {
        if (void 0 === t && (t = 0), void 0 === i && (i = 0), !this.url) return null;
        var n;
        if (!(n = this.url == I._tMusic ? e._musicAudio : e._audioCache[this.url])) return null;
        var r;
        r = j.getItem("audio:" + this.url), P.isConchApp ? r || ((r = F.createElement("audio")).src = this.url) : this.url == I._tMusic ? (e._initMusicAudio(), (r = e._musicAudio).src = this.url) : r = r || n.cloneNode(!0);
        var a = new _t(r);
        return a.url = this.url, a.loops = i, a.startTime = t, a.play(), I.addChannel(a), a;
      }, a(0, i, "duration", function () {
        var t;
        return (t = e._audioCache[this.url]) ? t.duration : 0;
      }), e._initMusicAudio = function () {
        e._musicAudio || (e._musicAudio || (e._musicAudio = F.createElement("audio")), P.isConchApp || F.document.addEventListener("mousedown", e._makeMusicOK));
      }, e._makeMusicOK = function () {
        F.document.removeEventListener("mousedown", e._makeMusicOK), e._musicAudio.src ? e._musicAudio.play() : (e._musicAudio.src = "", e._musicAudio.load());
      }, e._audioCache = {}, e._musicAudio = null, e;
    }(),
    it = function (t) {
      function e() {
        this.url = null, this.loops = 0, this.startTime = NaN, this.isStopped = !1, this.completeHandler = null, e.__super.call(this);
      }
      r(e, "laya.media.SoundChannel", h);
      var i = e.prototype;
      return i.play = function () {}, i.stop = function () {}, i.pause = function () {}, i.resume = function () {}, i.__runComplete = function (t) {
        t && t.run();
      }, a(0, i, "volume", function () {
        return 1;
      }, function (t) {}), a(0, i, "position", function () {
        return 0;
      }), a(0, i, "duration", function () {
        return 0;
      }), e;
    }(),
    nt = function (t) {
      function e() {
        e.__super.call(this);
      }
      r(e, "laya.media.Sound", h);
      var i = e.prototype;
      return i.load = function (t) {}, i.play = function (t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = 0), null;
      }, i.dispose = function () {}, a(0, i, "duration", function () {
        return 0;
      }), e;
    }(),
    rt = function (t) {
      function e() {
        this.url = null, this.loaded = !1, this.data = null, this.audioBuffer = null, this.__toPlays = null, this._disposed = !1, e.__super.call(this);
      }
      r(e, "laya.media.webaudio.WebAudioSound", h);
      var i = e.prototype;
      return i.load = function (t) {
        var i = this;
        if (t = R.formatURL(t), this.url = t, this.audioBuffer = e._dataCache[t], this.audioBuffer) this._loaded(this.audioBuffer);
        else if (e.e.on("loaded:" + t, this, this._loaded), e.e.on("err:" + t, this, this._err), !e.__loadingSound[t]) {
          e.__loadingSound[t] = !0;
          var n = new F.window.XMLHttpRequest();
          n.open("GET", t, !0), n.responseType = "arraybuffer", n.onload = function () {
            i._disposed ? i._removeLoadEvents() : (i.data = n.response, e.buffs.push({
              buffer: i.data,
              url: i.url
            }), e.decode());
          }, n.onerror = function (t) {
            i._err();
          }, n.send();
        }
      }, i._err = function () {
        if (this._removeLoadEvents(), e.__loadingSound[this.url] = !1, this.event("error"), this.__toPlays) {
          var t, i = 0,
            n = 0;
          n = (t = this.__toPlays).length;
          var r;
          for (i = 0; i < n; i++)(r = t[i])[2] && !r[2].isStopped && r[2].event("error");
          this.__toPlays.length = 0;
        }
      }, i._loaded = function (t) {
        this._removeLoadEvents(), this._disposed || (this.audioBuffer = t, e._dataCache[this.url] = this.audioBuffer, this.loaded = !0, this.event("complete"));
      }, i._removeLoadEvents = function () {
        e.e.off("loaded:" + this.url, this, this._loaded), e.e.off("err:" + this.url, this, this._err);
      }, i.__playAfterLoaded = function () {
        if (this.__toPlays) {
          var t, e = 0,
            i = 0;
          i = (t = this.__toPlays).length;
          var n;
          for (e = 0; e < i; e++)(n = t[e])[2] && !n[2].isStopped && this.play(n[0], n[1], n[2]);
          this.__toPlays.length = 0;
        }
      }, i.play = function (t, e, i) {
        return void 0 === t && (t = 0), void 0 === e && (e = 0), i = i || new dt(), this.audioBuffer || this.url && (this.__toPlays || (this.__toPlays = []), this.__toPlays.push([t, e, i]), this.once("complete", this, this.__playAfterLoaded), this.load(this.url)), i.url = this.url, i.loops = e, i.audioBuffer = this.audioBuffer, i.startTime = t, i.play(), I.addChannel(i), i;
      }, i.dispose = function () {
        this._disposed = !0, delete e._dataCache[this.url], delete e.__loadingSound[this.url], this.audioBuffer = null, this.data = null, this.__toPlays = [];
      }, a(0, i, "duration", function () {
        return this.audioBuffer ? this.audioBuffer.duration : 0;
      }), e.decode = function () {
        e.buffs.length <= 0 || e.isDecoding || (e.isDecoding = !0, e.tInfo = e.buffs.shift(), e.ctx.decodeAudioData(e.tInfo.buffer, e._done, e._fail));
      }, e._done = function (t) {
        e.e.event("loaded:" + e.tInfo.url, t), e.isDecoding = !1, e.decode();
      }, e._fail = function () {
        e.e.event("err:" + e.tInfo.url, null), e.isDecoding = !1, e.decode();
      }, e._playEmptySound = function () {
        if (null != e.ctx) {
          var t = e.ctx.createBufferSource();
          t.buffer = e._miniBuffer, t.connect(e.ctx.destination), t.start(0, 0, 0);
        }
      }, e._unlock = function () {
        e._unlocked || (e._playEmptySound(), "running" == e.ctx.state && (F.document.removeEventListener("mousedown", e._unlock, !0), F.document.removeEventListener("touchend", e._unlock, !0), F.document.removeEventListener("touchstart", e._unlock, !0), e._unlocked = !0));
      }, e.initWebAudio = function () {
        "running" != e.ctx.state && (e._unlock(), F.document.addEventListener("mousedown", e._unlock, !0), F.document.addEventListener("touchend", e._unlock, !0), F.document.addEventListener("touchstart", e._unlock, !0));
      }, e._dataCache = {}, e.buffs = [], e.isDecoding = !1, e._unlocked = !1, e.tInfo = null, e.__loadingSound = {}, n(e, ["window", function () {
        return this.window = F.window;
      }, "webAudioEnabled", function () {
        return this.webAudioEnabled = e.window.AudioContext || e.window.webkitAudioContext || e.window.mozAudioContext;
      }, "ctx", function () {
        return this.ctx = e.webAudioEnabled ? new(e.window.AudioContext || e.window.webkitAudioContext || e.window.mozAudioContext)() : void 0;
      }, "_miniBuffer", function () {
        return this._miniBuffer = e.ctx.createBuffer(1, 1, 22050);
      }, "e", function () {
        return this.e = new h();
      }]), e;
    }(),
    at = function (t) {
      function e() {
        this._responseType = null, this._data = null, e.__super.call(this), this._http = new F.window.XMLHttpRequest();
      }
      r(e, "laya.net.HttpRequest", h);
      var i = e.prototype;
      return i.send = function (t, e, i, n, r) {
        void 0 === i && (i = "get"), void 0 === n && (n = "text"), this._responseType = n, this._data = null;
        var a = this,
          s = this._http;
        if (s.open(i, t, !0), r)
          for (var o = 0; o < r.length; o++) s.setRequestHeader(r[o++], r[o]);
        else P.isConchApp || (e && "string" != typeof e ? s.setRequestHeader("Content-Type", "application/json") : s.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"));
        s.responseType = "arraybuffer" !== n ? "text" : "arraybuffer", s.onerror = function (t) {
          a._onError(t);
        }, s.onabort = function (t) {
          a._onAbort(t);
        }, s.onprogress = function (t) {
          a._onProgress(t);
        }, s.onload = function (t) {
          a._onLoad(t);
        }, s.send(e);
      }, i._onProgress = function (t) {
        t && t.lengthComputable && this.event("progress", t.loaded / t.total);
      }, i._onAbort = function (t) {
        this.error("Request was aborted by user");
      }, i._onError = function (t) {
        this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText);
      }, i._onLoad = function (t) {
        var e = this._http,
          i = void 0 !== e.status ? e.status : 200;
        200 === i || 204 === i || 0 === i ? this.complete() : this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL);
      }, i.error = function (t) {
        this.clear(), this.event("error", t);
      }, i.complete = function () {
        this.clear();
        var t = !0;
        try {
          "json" === this._responseType ? this._data = JSON.parse(this._http.responseText) : "xml" === this._responseType ? this._data = Q.parseXMLFromString(this._http.responseText) : this._data = this._http.response || this._http.responseText;
        } catch (e) {
          t = !1, this.error(e.message);
        }
        t && this.event("complete", this._data instanceof Array ? [this._data] : this._data);
      }, i.clear = function () {
        var t = this._http;
        t.onerror = t.onabort = t.onprogress = t.onload = null;
      }, a(0, i, "url", function () {
        return this._http.responseURL;
      }), a(0, i, "http", function () {
        return this._http;
      }), a(0, i, "data", function () {
        return this._data;
      }), e;
    }(),
    st = function (t) {
      function e() {
        this._data = null, this._class = null, this._url = null, this._type = null, this._cache = !1, this._http = null, this._customParse = !1, e.__super.call(this);
      }
      r(e, "laya.net.Loader", h);
      var n = e.prototype;
      return n.load = function (t, i, n, r, a) {
        if (void 0 === n && (n = !0), void 0 === a && (a = !1), this._url = t, 0 === t.indexOf("data:image") ? this._type = i = "image" : (this._type = i || (i = this.getTypeFromUrl(t)), t = R.formatURL(t)), this._cache = n, this._data = null, !a && e.loadedMap[t]) return this._data = e.loadedMap[t], this.event("progress", 1), void this.event("complete", this._data);
        if (r && e.setGroup(t, r), null != e.parserMap[i]) return this._customParse = !0, void(e.parserMap[i] instanceof laya.utils.Handler ? e.parserMap[i].runWith(this) : e.parserMap[i].call(null, this));
        if (Debuger.log("layabox load:", t), "image" === i || "htmlimage" === i || "nativeimage" === i) return this._loadImage(t);
        if ("sound" === i) return this._loadSound(t);
        if ("ttf" === i) return this._loadTTF(t);
        var s;
        switch (i) {
          case "atlas":
          case "plf":
            s = "json";
            break;
          case "font":
            s = "xml";
            break;
          case "pkm":
            s = "arraybuffer";
            break;
          default:
            s = i;
        }
        e.preLoadedMap[t] ? this.onLoaded(e.preLoadedMap[t]) : (this._http || (this._http = new at(), this._http.on("progress", this, this.onProgress), this._http.on("error", this, this.onError), this._http.on("complete", this, this.onLoaded)), this._http.send(t, null, "get", s));
      }, n.getTypeFromUrl = function (t) {
        var i = Q.getFileExtension(t);
        return i ? e.typeMap[i] : (console.warn("Not recognize the resources suffix", t), "text");
      }, n._loadTTF = function (t) {
        t = R.formatURL(t);
        var e = new A();
        e.complete = l.create(this, this.onLoaded), e.load(t);
      }, n._loadImage = function (t) {
        function i() {
          n.onload = null, n.onerror = null, delete e.imgCache[t];
        }
        t = R.formatURL(t);
        var n, r = this,
          a = function () {
            i(), r.onLoaded(n);
          },
          s = function () {
            i(), r.event("error", "Load image failed");
          };
        "nativeimage" === this._type ? ((n = new F.window.Image()).crossOrigin = "", n.onload = a, n.onerror = s, n.src = t, e.imgCache[t] = n) : new St.create(t, {
          onload: a,
          onerror: s,
          onCreate: function (i) {
            n = i, e.imgCache[t] = i;
          }
        });
      }, n._loadSound = function (t) {
        function e() {
          i.offAll();
        }
        var i = new I._soundClass(),
          n = this;
        i.on("complete", this, function () {
          e(), n.onLoaded(i);
        }), i.on("error", this, function () {
          e(), i.dispose(), n.event("error", "Load sound failed");
        }), i.load(t);
      }, n.onProgress = function (t) {
        "atlas" === this._type ? this.event("progress", .3 * t) : this.event("progress", t);
      }, n.onError = function (t) {
        this.event("error", t);
      }, n.onLoaded = function (t) {
        var i = this._type;
        if ("plf" == i) this.parsePLFData(t), this.complete(t);
        else if ("image" === i) {
          var n = new lt(t);
          n.url = this._url, this.complete(n);
        } else if ("sound" === i || "htmlimage" === i || "nativeimage" === i) this.complete(t);
        else if ("atlas" === i) {
          if (!t.src && !t._setContext) {
            if (!this._data) {
              if (this._data = t, t.meta && t.meta.image)
                for (var r = t.meta.image.split(","), a = this._url.indexOf("/") >= 0 ? "/" : "\\", s = this._url.lastIndexOf(a), o = s >= 0 ? this._url.substr(0, s + 1) : "", h = 0, l = r.length; h < l; h++) r[h] = o + r[h];
              else r = [this._url.replace(".json", ".png")];
              r.reverse(), t.toLoads = r, t.pics = [];
            }
            return this.event("progress", .3 + 1 / r.length * .6), this._loadImage(r.pop());
          }
          if (this._data.pics.push(t), this._data.toLoads.length > 0) return this.event("progress", .3 + 1 / this._data.toLoads.length * .6), this._loadImage(this._data.toLoads.pop());
          var c = this._data.frames,
            _ = this._url.split("?")[0],
            d = this._data.meta && this._data.meta.prefix ? this._data.meta.prefix : _.substring(0, _.lastIndexOf(".")) + "/",
            f = this._data.pics,
            p = R.formatURL(this._url),
            m = e.atlasMap[p] || (e.atlasMap[p] = []);
          m.dir = d;
          var g = 1;
          if (this._data.meta && this._data.meta.scale && 1 != this._data.meta.scale) {
            g = parseFloat(this._data.meta.scale);
            for (var v in c) {
              var y = c[v],
                x = f[y.frame.idx ? y.frame.idx : 0],
                T = R.formatURL(d + v);
              x.scaleRate = g;
              var S;
              S = lt.create(x, y.frame.x, y.frame.y, y.frame.w, y.frame.h, y.spriteSourceSize.x, y.spriteSourceSize.y, y.sourceSize.w, y.sourceSize.h), e.cacheRes(T, S), S.url = T, m.push(T);
            }
          } else
            for (v in c) x = f[(y = c[v]).frame.idx ? y.frame.idx : 0], T = R.formatURL(d + v), e.cacheRes(T, lt.create(x, y.frame.x, y.frame.y, y.frame.w, y.frame.h, y.spriteSourceSize.x, y.spriteSourceSize.y, y.sourceSize.w, y.sourceSize.h)), e.loadedMap[T].url = T, m.push(T);
          delete this._data.pics, this.complete(this._data);
        } else if ("font" == i) {
          if (!t.src) return this._data = t, this.event("progress", .5), this._loadImage(this._url.replace(".fnt", ".png"));
          var w = new u();
          w.parseFont(this._data, t);
          var E = this._url.split(".fnt")[0].split("/"),
            b = E[E.length - 1];
          mt.registerBitmapFont(b, w), this._data = w, this.complete(this._data);
        } else if ("pkm" == i) {
          var C = St.create(t, this._url),
            M = new lt(C);
          M.url = this._url, this.complete(M);
        } else this.complete(t);
      }, n.parsePLFData = function (t) {
        var i, n, r;
        for (i in t) switch (r = t[i], i) {
          case "json":
          case "text":
            for (n in r) e.preLoadedMap[R.formatURL(n)] = r[n];
            break;
          default:
            for (n in r) e.preLoadedMap[R.formatURL(n)] = r[n];
        }
      }, n.complete = function (t) {
        this._data = t, this._customParse ? this.event("loaded", t instanceof Array ? [t] : t) : (e._loaders.push(this), e._isWorking || e.checkNext());
      }, n.endLoad = function (t) {
        t && (this._data = t), this._cache && e.cacheRes(this._url, this._data), this.event("progress", 1), this.event("complete", this.data instanceof Array ? [this.data] : this.data);
      }, a(0, n, "url", function () {
        return this._url;
      }), a(0, n, "data", function () {
        return this._data;
      }), a(0, n, "cache", function () {
        return this._cache;
      }), a(0, n, "type", function () {
        return this._type;
      }), e.checkNext = function () {
        e._isWorking = !0;
        for (var t = F.now(); e._startIndex < e._loaders.length;)
          if (F.now(), e._loaders[e._startIndex].endLoad(), e._startIndex++, F.now() - t > e.maxTimeOut) return console.warn("loader callback cost a long time:" + (F.now() - t) + " url=" + e._loaders[e._startIndex - 1].url), void i.timer.frameOnce(1, null, e.checkNext);
        e._loaders.length = 0, e._startIndex = 0, e._isWorking = !1;
      }, e.clearRes = function (t, i) {
        void 0 === i && (i = !1), t = R.formatURL(t);
        var n = e.getAtlas(t);
        if (n) {
          for (var r = 0, a = n.length; r < a; r++) {
            var s = n[r],
              o = e.getRes(s);
            delete e.loadedMap[s], o && o.destroy(i);
          }
          n.length = 0, delete e.atlasMap[t], delete e.loadedMap[t];
        } else {
          var h = e.loadedMap[t];
          h && (delete e.loadedMap[t], h instanceof laya.resource.Texture && h.bitmap && h.destroy(i));
        }
      }, e.clearTextureRes = function (t) {
        t = R.formatURL(t);
        var e = laya.net.Loader.getAtlas(t),
          i = e && e.length > 0 ? laya.net.Loader.getRes(e[0]) : laya.net.Loader.getRes(t);
        i && i.bitmap && (P.isConchApp && !P.isConchWebGL ? i.bitmap.source.releaseTexture && i.bitmap.source.releaseTexture() : null == i.bitmap._atlaser && i.bitmap.releaseResource(!0));
      }, e.getRes = function (t) {
        return e.loadedMap[R.formatURL(t)];
      }, e.getAtlas = function (t) {
        return e.atlasMap[R.formatURL(t)];
      }, e.cacheRes = function (t, i) {
        t = R.formatURL(t), null != e.loadedMap[t] ? console.warn("Resources already exist,is repeated loading:", t) : e.loadedMap[t] = i;
      }, e.setGroup = function (t, i) {
        e.groupMap[i] || (e.groupMap[i] = []), e.groupMap[i].push(t);
      }, e.clearResByGroup = function (t) {
        if (e.groupMap[t]) {
          var i = e.groupMap[t],
            n = 0,
            r = i.length;
          for (n = 0; n < r; n++) e.clearRes(i[n]);
          i.length = 0;
        }
      }, e.TEXT = "text", e.JSON = "json", e.XML = "xml", e.BUFFER = "arraybuffer", e.IMAGE = "image", e.SOUND = "sound", e.ATLAS = "atlas", e.FONT = "font", e.TTF = "ttf", e.PLF = "plf", e.PKM = "pkm", e.typeMap = {
        png: "image",
        jpg: "image",
        jpeg: "image",
        txt: "text",
        json: "json",
        xml: "xml",
        als: "atlas",
        atlas: "atlas",
        mp3: "sound",
        ogg: "sound",
        wav: "sound",
        part: "json",
        fnt: "font",
        pkm: "pkm",
        ttf: "ttf",
        plf: "plf"
      }, e.parserMap = {}, e.groupMap = {}, e.maxTimeOut = 100, e.loadedMap = {}, e.preLoadedMap = {}, e.atlasMap = {}, e._loaders = [], e._isWorking = !1, e._startIndex = 0, e.imgCache = {}, e;
    }(),
    ot = function (t) {
      function e() {
        this.retryNum = 1, this.retryDelay = 0, this.maxLoader = 5, this._loaders = [], this._loaderCount = 0, this._resInfos = [], this._infoPool = [], this._maxPriority = 5, this._failRes = {}, e.__super.call(this);
        for (var t = 0; t < this._maxPriority; t++) this._resInfos[t] = [];
      }
      var a;
      r(e, "laya.net.LoaderManager", h);
      var s = e.prototype;
      return s.create = function (t, e, i, n, r, a, s, o) {
        if (void 0 === a && (a = 1), void 0 === s && (s = !0), t instanceof Array) {
          var h = t,
            u = h.length,
            c = 0;
          if (i) var _ = l.create(i.caller, i.method, i.args, !1);
          for (var d = 0; d < u; d++) {
            var f = h[d];
            "string" == typeof f && (f = h[d] = {
              url: f
            }), f.progress = 0;
          }
          for (d = 0; d < u; d++) {
            f = h[d];
            var p = i ? l.create(null, function (t, e) {
                t.progress = e;
                for (var i = 0, n = 0; n < u; n++) i += h[n].progress;
                var r = i / u;
                _.runWith(r);
              }, [f], !1) : null,
              m = i || e ? l.create(null, function (t, i) {
                c++, t.progress = 1, c === u && e && e.run();
              }, [f]) : null;
            this._create(f.url, m, p, f.clas || n, f.params || r, f.priority || a, s, f.group || o);
          }
          return !0;
        }
        return this._create(t, e, i, n, r, a, s, o);
      }, s._create = function (t, n, r, a, s, o, h, u) {
        void 0 === o && (o = 1), void 0 === h && (h = !0);
        var c = R.formatURL(t),
          _ = this.getRes(c);
        if (_) !_.hasOwnProperty("loaded") || _.loaded ? (r && r.runWith(1), n && n.run()) : n && i.loader._createListener(t, n.caller, n.method, n.args, !0, !1);
        else {
          var d = Q.getFileExtension(t),
            f = e.createMap[d];
          if (!f) throw new Error("LoaderManager:unknown file(" + t + ") extension with: " + d + ".");
          a || (a = f[0]);
          var p = f[1];
          "atlas" == d ? this.load(t, n, r, p, o, h) : (a === lt && (p = "htmlimage"), (_ = a ? new a() : null).hasOwnProperty("_loaded") && (_._loaded = !1), _._setUrl(t), u && _._setGroup(u), this._createLoad(_, t, l.create(null, function (e) {
            _ && !_.destroyed && e && _.onAsynLoaded.call(_, t, e, s), n && n.run(), i.loader.event(t);
          }), r, p, o, !1, u, !0), h && this.cacheRes(c, _));
        }
        return _;
      }, s.load = function (t, n, r, s, o, h, l, u) {
        var c = this;
        if (void 0 === o && (o = 1), void 0 === h && (h = !0), void 0 === u && (u = !1), t instanceof Array) return this._loadAssets(t, n, r, s, o, h, l);
        var _ = st.getRes(t);
        if (null != _) i.timer.frameOnce(1, null, function () {
          r && r.runWith(1), n && n.runWith(_), c._loaderCount || c.event("complete");
        });
        else {
          var d = e._resMap[t];
          d ? (n && d._createListener("complete", n.caller, n.method, n.args, !1, !1), r && d._createListener("progress", r.caller, r.method, r.args, !1, !1)) : ((d = this._infoPool.length ? this._infoPool.pop() : new a()).url = t, d.type = s, d.cache = h, d.group = l, d.ignoreCache = u, n && d.on("complete", n.caller, n.method, n.args), r && d.on("progress", r.caller, r.method, r.args), e._resMap[t] = d, o = o < this._maxPriority ? o : this._maxPriority - 1, this._resInfos[o].push(d), this._next());
        }
        return this;
      }, s._createLoad = function (t, n, r, s, o, h, l, u, c) {
        var _ = this;
        if (void 0 === h && (h = 1), void 0 === l && (l = !0), void 0 === c && (c = !1), n instanceof Array) return this._loadAssets(n, r, s, o, h, l, u);
        var d = st.getRes(n);
        if (null != d) i.timer.frameOnce(1, null, function () {
          s && s.runWith(1), r && r.runWith(d), _._loaderCount || _.event("complete");
        });
        else {
          var f = e._resMap[n];
          f ? (r && f._createListener("complete", r.caller, r.method, r.args, !1, !1), s && f._createListener("progress", s.caller, s.method, s.args, !1, !1)) : ((f = this._infoPool.length ? this._infoPool.pop() : new a()).url = n, f.clas = t, f.type = o, f.cache = l, f.group = u, f.ignoreCache = c, r && f.on("complete", r.caller, r.method, r.args), s && f.on("progress", s.caller, s.method, s.args), e._resMap[n] = f, h = h < this._maxPriority ? h : this._maxPriority - 1, this._resInfos[h].push(f), this._next());
        }
        return this;
      }, s._next = function () {
        if (!(this._loaderCount >= this.maxLoader)) {
          for (var t = 0; t < this._maxPriority; t++)
            for (var e = this._resInfos[t]; e.length > 0;) {
              var i = e.shift();
              if (i) return this._doLoad(i);
            }
          this._loaderCount || this.event("complete");
        }
      }, s._doLoad = function (t) {
        function e(e) {
          i.offAll(), i._data = null, i._customParse = !1, n._loaders.push(i), n._endLoad(t, e instanceof Array ? [e] : e), n._loaderCount--, n._next();
        }
        this._loaderCount++;
        var i = this._loaders.length ? this._loaders.pop() : new st();
        i.on("complete", null, e), i.on("progress", null, function (e) {
          t.event("progress", e);
        }), i.on("error", null, function (t) {
          e(null);
        });
        var n = this;
        i._class = t.clas, i.load(t.url, t.type, t.cache, t.group, t.ignoreCache);
      }, s._endLoad = function (t, n) {
        var r = t.url;
        if (null == n) {
          var a = this._failRes[r] || 0;
          if (a < this.retryNum) return console.warn("[warn]Retry to load:", r, R.formatURL(r)), this._failRes[r] = a + 1, void i.timer.once(this.retryDelay, this, this._addReTry, [t], !1);
          console.warn("[error]Failed to load:", r), this.event("error", r);
        }
        this._failRes[r] && (this._failRes[r] = 0), delete e._resMap[r], t.event("complete", n), t.offAll(), this._infoPool.push(t);
      }, s._addReTry = function (t) {
        this._resInfos[this._maxPriority - 1].push(t), this._next();
      }, s.clearRes = function (t, e) {
        void 0 === e && (e = !1), st.clearRes(t, e);
      }, s.getRes = function (t) {
        return st.getRes(t);
      }, s.cacheRes = function (t, e) {
        st.cacheRes(t, e);
      }, s.clearTextureRes = function (t) {
        st.clearTextureRes(t);
      }, s.setGroup = function (t, e) {
        st.setGroup(t, e);
      }, s.clearResByGroup = function (t) {
        st.clearResByGroup(t);
      }, s.clearUnLoaded = function () {
        for (var t = 0; t < this._maxPriority; t++) {
          for (var i = this._resInfos[t], n = i.length - 1; n > -1; n--) {
            var r = i[n];
            r && (r.offAll(), this._infoPool.push(r));
          }
          i.length = 0;
        }
        this._loaderCount = 0, e._resMap = {};
      }, s.cancelLoadByUrls = function (t) {
        if (t)
          for (var e = 0, i = t.length; e < i; e++) this.cancelLoadByUrl(t[e]);
      }, s.cancelLoadByUrl = function (t) {
        for (var i = 0; i < this._maxPriority; i++)
          for (var n = this._resInfos[i], r = n.length - 1; r > -1; r--) {
            var a = n[r];
            a && a.url === t && (n[r] = null, a.offAll(), this._infoPool.push(a));
          }
        e._resMap[t] && delete e._resMap[t];
      }, s._loadAssets = function (t, e, i, n, r, a, s) {
        void 0 === r && (r = 1), void 0 === a && (a = !0);
        for (var o = t.length, h = 0, u = 0, c = [], _ = !0, d = 0; d < o; d++) {
          var f = t[d];
          "string" == typeof f && (f = {
            url: f,
            type: n,
            size: 1,
            priority: r
          }), f.size || (f.size = 1), f.progress = 0, u += f.size, c.push(f);
          var p = i ? l.create(null, function (t, e) {
              if (null != i) {
                t.progress = e;
                for (var n = 0, r = 0; r < c.length; r++) {
                  var a = c[r];
                  n += a.size * a.progress;
                }
                var s = n / u;
                i.runWith(s);
              }
            }, [f], !1) : null,
            m = e || i ? l.create(null, function (t, i) {
              h++, t.progress = 1, i || (_ = !1), h === o && e && e.runWith(_);
            }, [f]) : null;
          this.load(f.url, m, p, f.type, f.priority || 1, a, f.group || s);
        }
        return this;
      }, e.cacheRes = function (t, e) {
        st.cacheRes(t, e);
      }, e._resMap = {}, n(e, ["createMap", function () {
        return this.createMap = {
          atlas: [null, "atlas"]
        };
      }]), e.__init$ = function () {
        a = function (t) {
          function e() {
            this.url = null, this.type = null, this.cache = !1, this.group = null, this.ignoreCache = !1, this.clas = null, e.__super.call(this);
          }
          return r(e, "", h), e;
        }();
      }, e;
    }(),
    ht = (function (t) {
      function e(t) {
        e.__super.call(this), t || (t = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0]), this._mat = new Float32Array(16), this._alpha = new Float32Array(4);
        for (var i = 0, n = 0, r = 0; r < 20; r++) r % 5 != 4 ? this._mat[i++] = t[r] : this._alpha[n++] = t[r];
        this._action = s.createFilterAction(32), this._action.data = this;
      }
      r(e, "laya.filters.ColorFilter", x);
      var n = e.prototype;
      i.imps(n, {
        "laya.filters.IFilter": !0
      }), n.callNative = function (t) {
        t._$P.cf = this;
        t.conchModel && t.conchModel.setFilterMatrix && t.conchModel.setFilterMatrix(this._mat, this._alpha);
      }, a(0, n, "type", function () {
        return 32;
      }), a(0, n, "action", function () {
        return this._action;
      });
    }(), function (t) {
      function e(t, i, n) {
        this._endian = null, this._stamp = NaN, this._socket = null, this._connected = !1, this._addInputPosition = 0, this._input = null, this._output = null, this.timeout = 0, this.objectEncoding = 0, this.disableInput = !1, this._byteClass = null, this.protocols = [], void 0 === i && (i = 0), e.__super.call(this), this._byteClass = n || B, this.endian = "bigEndian", this.timeout = 2e4, this._addInputPosition = 0, t && i > 0 && i < 65535 && this.connect(t, i);
      }
      r(e, "laya.net.Socket", h);
      var i = e.prototype;
      i.connect = function (t, e) {
        var i = "ws://" + t + ":" + e;
        i = "https:" == F.window.location.protocol ? "wss://" + t + ":" + e : "ws://" + t + ":" + e, this.connectByUrl(i);
      }, i.connectByUrl = function (t) {
        var e = this;
        null != this._socket && this.close(), this._socket && this.cleanSocket(), this.protocols && 0 != this.protocols.length ? this._socket = new F.window.WebSocket(t, this.protocols) : this._socket = new F.window.WebSocket(t), this._socket.binaryType = "arraybuffer", this._output = new this._byteClass(), this._output.endian = this.endian, this._input = new this._byteClass(), this._input.endian = this.endian, this._addInputPosition = 0, this._socket.onopen = function (t) {
          e._onOpen(t);
        }, this._socket.onmessage = function (t) {
          e._onMessage(t);
        }, this._socket.onclose = function (t) {
          e._onClose(t);
        }, this._socket.onerror = function (t) {
          e._onError(t);
        };
      }, i.cleanSocket = function () {
        try {
          this._socket.close();
        } catch (t) {}
        this._connected = !1, this._socket.onopen = null, this._socket.onmessage = null, this._socket.onclose = null, this._socket.onerror = null, this._socket = null;
      }, i.close = function () {
        if (null != this._socket) try {
          this._socket.close();
        } catch (t) {}
      }, i._onOpen = function (t) {
        this._connected = !0, this.event("open", t);
      }, i._onMessage = function (t) {
        if (t && t.data) {
          var e = t.data;
          if (this.disableInput && e) this.event("message", e);
          else {
            this._input.length > 0 && this._input.bytesAvailable < 1 && (this._input.clear(), this._addInputPosition = 0);
            var i = this._input.pos;
            !this._addInputPosition && (this._addInputPosition = 0), this._input.pos = this._addInputPosition, e && ("string" == typeof e ? this._input.writeUTFBytes(e) : this._input.writeArrayBuffer(e), this._addInputPosition = this._input.pos, this._input.pos = i), this.event("message", e);
          }
        }
      }, i._onClose = function (t) {
        this._connected = !1, this.event("close", t);
      }, i._onError = function (t) {
        this.event("error", t);
      }, i.send = function (t) {
        this._socket.send(t);
      }, i.flush = function () {
        if (this._output && this._output.length > 0) {
          var t;
          try {
            this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));
          } catch (e) {
            t = e;
          }
          this._output.endian = this.endian, this._output.clear(), t && this.event("error", t);
        }
      }, a(0, i, "input", function () {
        return this._input;
      }), a(0, i, "output", function () {
        return this._output;
      }), a(0, i, "connected", function () {
        return this._connected;
      }), a(0, i, "endian", function () {
        return this._endian;
      }, function (t) {
        this._endian = t, null != this._input && (this._input.endian = t), null != this._output && (this._output.endian = t);
      }), e.LITTLE_ENDIAN = "littleEndian", e.BIG_ENDIAN = "bigEndian";
    }(), function (t) {
      function e() {
        this.worker = null, e.__super.call(this);
        var t = this;
        this.worker = new F.window.Worker(e.workerPath), this.worker.onmessage = function (e) {
          t.workerMessage(e.data);
        };
      }
      r(e, "laya.net.WorkerLoader", h);
      var i = e.prototype;
      i.workerMessage = function (t) {
        if (t) switch (t.type) {
          case "Image":
            this.imageLoaded(t);
            break;
          case "Msg":
            this.event("image_msg", t.msg);
        }
      }, i.imageLoaded = function (t) {
        if (t && t.buffer && t.buffer.length < 10) return e._enable = !1, this._myTrace("buffer lost when postmessage ,disable workerloader"), this.event(t.url, null), void this.event("image_err", t.url + "\n" + t.msg);
        if (!t.dataType) return this.event(t.url, null), void this.event("image_err", t.url + "\n" + t.msg);
        var i, n, r;
        switch (t.dataType) {
          case "buffer":
            (r = (n = (i = new yt("2D")).source.getContext("2d")).createImageData(t.width, t.height)).data.set(t.buffer), i.size(r.width, r.height), n.putImageData(r, 0, 0), i.memorySize = 0;
            break;
          case "imagedata":
            n = (i = new yt("2D")).source.getContext("2d"), r = t.imagedata, i.size(r.width, r.height), n.putImageData(r, 0, 0), r = t.imagedata, i.memorySize = 0;
            break;
          case "imageBitmap":
            r = t.imageBitmap, P.isWebGL ? i = r : (n = (i = new yt("2D")).source.getContext("2d"), i.size(r.width, r.height), n.drawImage(r, 0, 0), i.src = t.url);
        }
        P.isWebGL && (i = new laya.webgl.resource.WebGLImage(i, t.url)), this.event(t.url, i);
      }, i._myTrace = function (t) {
        var e = arguments,
          i = [],
          n = 0,
          r = e.length;
        for (n = 0; n < r; n++) i.push(e[n]);
        this.event("image_msg", i.join(" "));
      }, i.loadImage = function (t) {
        var e;
        (e = {}).type = "load", e.url = t, this.worker.postMessage(e);
      }, i._loadImage = function (t) {
        var i = this;
        if (!e._enable || t.toLowerCase().indexOf(".png") < 0) e._preLoadFun.call(i, t);
        else {
          t = R.formatURL(t);
          var n = function (r) {
            laya.net.WorkerLoader.I.off(t, i, n), r ? i.onLoaded(r) : e._preLoadFun.call(i, t);
          };
          laya.net.WorkerLoader.I.on(t, i, n), laya.net.WorkerLoader.I.loadImage(t);
        }
      }, a(1, e, "enable", function () {
        return e._enable;
      }, function (t) {
        e.disableJSDecode && !F.window.createImageBitmap || (e._enable = t) && null == e._preLoadFun && (e._enable = e.__init__());
      }), e.__init__ = function () {
        return null == e._preLoadFun && (!!F.window.Worker && (e._preLoadFun = st.prototype._loadImage, st.prototype._loadImage = e.prototype._loadImage, e.I || (e.I = new e()), !0));
      }, e.workerSupported = function () {
        return !!F.window.Worker;
      }, e.IMAGE_LOADED = "image_loaded", e.IMAGE_ERR = "image_err", e.IMAGE_MSG = "image_msg", e.I = null, e._preLoadFun = null, e._enable = !1, e.workerPath = "libs/worker.js", e.disableJSDecode = !0;
    }(), function (t) {
      function e() {
        e.__super.call(this), this._$1__id = ++e._uniqueIDCounter, this.__loaded = !0, this._destroyed = !1, this._referenceCount = 0, e._idResourcesMap[this.id] = this, this._released = !0, this.lock = !1, this._memorySize = 0, this._lastUseFrameCount = -1, V.currentResourceManager && V.currentResourceManager.addResource(this);
      }
      r(e, "laya.resource.Resource", h);
      var n = e.prototype;
      return i.imps(n, {
        "laya.resource.ICreateResource": !0,
        "laya.resource.IDispose": !0
      }), n._setUrl = function (t) {
        if (this._url !== t) {
          var i;
          this._url && ((i = e._urlResourcesMap[this._url]).splice(i.indexOf(this), 1), 0 === i.length && delete e._urlResourcesMap[this._url]), t && ((i = e._urlResourcesMap[t]) || (e._urlResourcesMap[t] = i = []), i.push(this)), this._url = t;
        }
      }, n._getGroup = function () {
        return this._group;
      }, n._setGroup = function (t) {
        if (this._group !== t) {
          var i;
          this._group && ((i = e._groupResourcesMap[this._group]).splice(i.indexOf(this), 1), 0 === i.length && delete e._groupResourcesMap[this._group]), t && ((i = e._groupResourcesMap[t]) || (e._groupResourcesMap[t] = i = []), i.push(this)), this._group = t;
        }
      }, n._addReference = function () {
        this._referenceCount++;
      }, n._removeReference = function () {
        this._referenceCount--;
      }, n._clearReference = function () {
        this._referenceCount = 0;
      }, n._endLoaded = function () {
        this.__loaded = !0, this.event("loaded", this);
      }, n.recreateResource = function () {
        this.completeCreate();
      }, n.disposeResource = function () {}, n.activeResource = function (t) {
        void 0 === t && (t = !1), this._lastUseFrameCount = X.loopCount, !this._destroyed && this.__loaded && (this._released || t) && this.recreateResource();
      }, n.releaseResource = function (t) {
        return void 0 === t && (t = !1), !(!t && this.lock) && (!(this._released && !t) && (this.disposeResource(), this._released = !0, this._lastUseFrameCount = -1, this.event("released", this), !0));
      }, n.onAsynLoaded = function (t, e, i) {
        throw new Error("Resource: must override this function!");
      }, n.destroy = function () {
        if (!this._destroyed) {
          null !== this._resourceManager && this._resourceManager.removeResource(this), this._destroyed = !0, this.lock = !1, this.releaseResource(), delete e._idResourcesMap[this.id];
          var t;
          this._url && ((t = e._urlResourcesMap[this._url]) && (t.splice(t.indexOf(this), 1), 0 === t.length && delete e._urlResourcesMap[this.url]), st.clearRes(this._url), this.__loaded || s.cancelLoadByUrl(this._url)), this._group && ((t = e._groupResourcesMap[this._group]).splice(t.indexOf(this), 1), 0 === t.length && delete e._groupResourcesMap[this.url]);
        }
      }, n.completeCreate = function () {
        this._released = !1, this.event("recovered", this);
      }, n.dispose = function () {
        this.destroy();
      }, a(0, n, "memorySize", function () {
        return this._memorySize;
      }, function (t) {
        var e = t - this._memorySize;
        this._memorySize = t, this.resourceManager && this.resourceManager.addSize(e);
      }), a(0, n, "_loaded", null, function (t) {
        this.__loaded = t;
      }), a(0, n, "loaded", function () {
        return this.__loaded;
      }), a(0, n, "id", function () {
        return this._$1__id;
      }), a(0, n, "destroyed", function () {
        return this._destroyed;
      }), a(0, n, "group", function () {
        return this._getGroup();
      }, function (t) {
        this._setGroup(t);
      }), a(0, n, "resourceManager", function () {
        return this._resourceManager;
      }), a(0, n, "url", function () {
        return this._url;
      }), a(0, n, "released", function () {
        return this._released;
      }), a(0, n, "referenceCount", function () {
        return this._referenceCount;
      }), e.getResourceByID = function (t) {
        return e._idResourcesMap[t];
      }, e.getResourceByURL = function (t, i) {
        return void 0 === i && (i = 0), e._urlResourcesMap[t][i];
      }, e.getResourceCountByURL = function (t) {
        return e._urlResourcesMap[t].length;
      }, e.destroyUnusedResources = function (t) {
        var i;
        if (t) {
          var n = e._groupResourcesMap[t];
          if (n)
            for (var r = n.slice(), a = 0, s = r.length; a < s; a++)(i = r[a]).lock || 0 !== i._referenceCount || i.destroy();
        } else
          for (var o in e._idResourcesMap)(i = e._idResourcesMap[o]).lock || 0 !== i._referenceCount || i.destroy();
      }, e._uniqueIDCounter = 0, e._idResourcesMap = {}, e._urlResourcesMap = {}, e._groupResourcesMap = {}, e;
    }()),
    lt = function (e) {
      function n(t, e) {
        this.offsetX = 0, this.offsetY = 0, this.sourceWidth = 0, this.sourceHeight = 0, this._w = 0, this._h = 0, this._uvID = 0, this._atlasID = -1, this.scaleRate = 1, n.__super.call(this), t && null != t._addReference && t._addReference(), this.setTo(t, e);
      }
      r(n, "laya.resource.Texture", h);
      var o = n.prototype;
      return o._setUrl = function (t) {
        this.url = t;
      }, o.setTo = function (e, i) {
        if (e instanceof t.HTMLElement) {
          var r = yt.create("2D", e);
          this.bitmap = r;
        } else this.bitmap = e;
        if (this.uv = i || n.DEF_UV, e) {
          this._w = e.width, this._h = e.height, this.sourceWidth = this.sourceWidth || this._w, this.sourceHeight = this.sourceHeight || this._h, this._loaded = this._w > 0;
          var a = this;
          if (this._loaded) s.addToAtlas && s.addToAtlas(a);
          else {
            var o = e;
            o instanceof laya.resource.HTMLImage && o.image && o.image.addEventListener("load", function (t) {
              s.addToAtlas && s.addToAtlas(a);
            }, !1);
          }
        }
      }, o.active = function () {
        this.bitmap && this.bitmap.activeResource();
      }, o.destroy = function (t) {
        if (void 0 === t && (t = !1), this.bitmap && this.bitmap.referenceCount > 0) {
          var e = this.bitmap;
          t ? (P.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(), this.bitmap = null, e.dispose(), e._clearReference()) : (e._removeReference(), 0 == e.referenceCount && (P.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(), this.bitmap = null, e.dispose())), this.url && this === i.loader.getRes(this.url) && i.loader.clearRes(this.url, t), this._loaded = !1;
        }
      }, o.load = function (t) {
        var e = this;
        this._loaded = !1, t = R.customFormat(t);
        var i = this.bitmap || (this.bitmap = St.create(t));
        i && i._addReference();
        var n = this;
        i.onload = function () {
          i.onload = null, n._loaded = !0, e.sourceWidth = e._w = i.width, e.sourceHeight = e._h = i.height, n.event("loaded", this), s.addToAtlas && s.addToAtlas(n);
        };
      }, o.addTextureToAtlas = function (t) {
        s.addTextureToAtlas(this);
      }, o.getPixels = function (t, e, i, n) {
        if (P.isConchApp) {
          var r = this.bitmap;
          if (r.source && r.source.getImageData) {
            var a = r.source.getImageData(t, e, i, n),
              o = new Uint8Array(a);
            return Array.from(o);
          }
          return null;
        }
        if (P.isWebGL) return s.getTexturePixels(this, t, e, i, n);
        F.canvas.size(i, n), F.canvas.clear(), F.context.drawTexture(this, -t, -e, this.width, this.height, 0, 0);
        return F.context.getImageData(0, 0, i, n).data;
      }, o.onAsynLoaded = function (t, e) {
        e && e._addReference(), this.setTo(e, this.uv);
      }, a(0, o, "source", function () {
        return this.bitmap ? (this.bitmap.activeResource(), this.bitmap.source) : null;
      }), a(0, o, "loaded", function () {
        return this._loaded;
      }), a(0, o, "released", function () {
        return !this.bitmap || this.bitmap.released;
      }), a(0, o, "width", function () {
        return this._w ? this._w : this.uv && this.uv !== n.DEF_UV ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;
      }, function (t) {
        this._w = t, this.sourceWidth || (this.sourceWidth = t);
      }), a(0, o, "repeat", function () {
        return !P.isWebGL || !this.bitmap || this.bitmap.repeat;
      }, function (t) {
        t && P.isWebGL && this.bitmap && (this.bitmap.repeat = t, t && (this.bitmap.enableMerageInAtlas = !1));
      }), a(0, o, "height", function () {
        return this._h ? this._h : this.uv && this.uv !== n.DEF_UV ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;
      }, function (t) {
        this._h = t, this.sourceHeight || (this.sourceHeight = t);
      }), a(0, o, "isLinearSampling", function () {
        return !P.isWebGL || 9728 != this.bitmap.minFifter;
      }, function (t) {
        !t && P.isWebGL && (t || -1 != this.bitmap.minFifter || -1 != this.bitmap.magFifter || (this.bitmap.minFifter = 9728, this.bitmap.magFifter = 9728, this.bitmap.enableMerageInAtlas = !1));
      }), n.moveUV = function (t, e, i) {
        for (var n = 0; n < 8; n += 2) i[n] += t, i[n + 1] += e;
        return i;
      }, n.create = function (t, e, i, r, a, o, h, l, u) {
        void 0 === o && (o = 0), void 0 === h && (h = 0), void 0 === l && (l = 0), void 0 === u && (u = 0);
        var c = t instanceof laya.resource.Texture,
          _ = c ? t.uv : n.DEF_UV,
          d = c ? t.bitmap : t,
          f = s.isAtlas(d);
        if (f) {
          var p = d._atlaser,
            m = t._atlasID;
          if (-1 == m) throw new Error("create texture error");
          d = p._inAtlasTextureBitmapValue[m], _ = p._inAtlasTextureOriUVValue[m];
        }
        var g = new n(d, null);
        d.width && e + r > d.width && (r = d.width - e), d.height && i + a > d.height && (a = d.height - i), g.width = r, g.height = a, g.offsetX = o, g.offsetY = h, g.sourceWidth = l || r, g.sourceHeight = u || a;
        var v = 1 / d.width,
          y = 1 / d.height;
        e *= v, i *= y, r *= v, a *= y;
        var x = g.uv[0],
          T = g.uv[1],
          S = g.uv[4],
          w = g.uv[5],
          E = S - x,
          b = w - T,
          C = n.moveUV(_[0], _[1], [e, i, e + r, i, e + r, i + a, e, i + a]);
        g.uv = [x + C[0] * E, T + C[1] * b, S - (1 - C[2]) * E, T + C[3] * b, S - (1 - C[4]) * E, w - (1 - C[5]) * b, x + C[6] * E, w - (1 - C[7]) * b], f && g.addTextureToAtlas();
        var M = d.scaleRate;
        return M && 1 != M ? (g.sourceWidth /= M, g.sourceHeight /= M, g.width /= M, g.height /= M, g.scaleRate = M, g.offsetX /= M, g.offsetY /= M) : g.scaleRate = 1, g;
      }, n.createFromTexture = function (t, e, i, r, a) {
        var s = t.scaleRate;
        1 != s && (e *= s, i *= s, r *= s, a *= s);
        var o = M.TEMP.setTo(e - t.offsetX, i - t.offsetY, r, a),
          h = o.intersection(n._rect1.setTo(0, 0, t.width, t.height), n._rect2);
        if (!h) return null;
        var l = n.create(t, h.x, h.y, h.width, h.height, h.x - o.x, h.y - o.y, r, a);
        return l.bitmap._removeReference(), l;
      }, n.DEF_UV = [0, 0, 1, 0, 1, 1, 0, 1], n.INV_UV = [0, 1, 1, 1, 1, 0, 0, 0], n._rect1 = new M(), n._rect2 = new M(), n;
    }(),
    ut = function (t) {
      function e() {
        this._labelDic = null, this._tweenDic = {}, this._tweenDataList = [], this._endTweenDataList = null, this._currTime = 0, this._lastTime = 0, this._startTime = 0, this._index = 0, this._gidIndex = 0, this._firstTweenDic = {}, this._startTimeSort = !1, this._endTimeSort = !1, this._loopKey = !1, this.scale = 1, this._frameRate = 60, this._frameIndex = 0, this._total = 0, e.__super.call(this);
      }
      var n;
      r(e, "laya.utils.TimeLine", h);
      var s = e.prototype;
      return s.to = function (t, e, i, n, r) {
        return void 0 === r && (r = 0), this._create(t, e, i, n, r, !0);
      }, s.from = function (t, e, i, n, r) {
        return void 0 === r && (r = 0), this._create(t, e, i, n, r, !1);
      }, s._create = function (t, e, i, r, a, s) {
        var o = j.getItemByClass("tweenData", n);
        return o.isTo = s, o.type = 0, o.target = t, o.duration = i, o.data = e, o.startTime = this._startTime + a, o.endTime = o.startTime + o.duration, o.ease = r, this._startTime = Math.max(o.endTime, this._startTime), this._tweenDataList.push(o), this._startTimeSort = !0, this._endTimeSort = !0, this;
      }, s.addLabel = function (t, e) {
        var i = j.getItemByClass("tweenData", n);
        return i.type = 1, i.data = t, i.endTime = i.startTime = this._startTime + e, this._labelDic || (this._labelDic = {}), this._labelDic[t] = i, this._tweenDataList.push(i), this;
      }, s.removeLabel = function (t) {
        if (this._labelDic && this._labelDic[t]) {
          var e = this._labelDic[t];
          if (e) {
            var i = this._tweenDataList.indexOf(e);
            i > -1 && this._tweenDataList.splice(i, 1);
          }
          delete this._labelDic[t];
        }
      }, s.gotoTime = function (t) {
        if (null != this._tweenDataList && 0 != this._tweenDataList.length) {
          var e, i;
          for (var n in this._firstTweenDic)
            if (i = this._firstTweenDic[n])
              for (var r in i) i.diyTarget.hasOwnProperty(r) && (i.diyTarget[r] = i[r]);
          for (n in this._tweenDic)(e = this._tweenDic[n]).clear(), delete this._tweenDic[n];
          this._index = 0, this._gidIndex = 0, this._currTime = t, this._lastTime = F.now();
          var a;
          null == this._endTweenDataList || this._endTimeSort ? (this._endTimeSort = !1, this._endTweenDataList = a = this._tweenDataList.concat(), a.sort(function (t, e) {
            return t.endTime > e.endTime ? 1 : t.endTime < e.endTime ? -1 : 0;
          })) : a = this._endTweenDataList;
          for (var s, o = 0, h = a.length; o < h; o++)
            if (0 == (s = a[o]).type) {
              if (!(t >= s.endTime)) break;
              this._index = Math.max(this._index, o + 1);
              var u = s.data;
              if (s.isTo)
                for (var c in u) s.target[c] = u[c];
            }
          for (o = 0, h = this._tweenDataList.length; o < h; o++) 0 == (s = this._tweenDataList[o]).type && t >= s.startTime && t < s.endTime && (this._index = Math.max(this._index, o + 1), this._gidIndex++, (e = j.getItemByClass("tween", q))._create(s.target, s.data, s.duration, s.ease, l.create(this, this._animComplete, [this._gidIndex]), 0, !1, s.isTo, !0, !1), e.setStartTime(this._currTime - (t - s.startTime)), e._updateEase(this._currTime), e.gid = this._gidIndex, this._tweenDic[this._gidIndex] = e);
        }
      }, s.gotoLabel = function (t) {
        if (null != this._labelDic) {
          var e = this._labelDic[t];
          e && this.gotoTime(e.startTime);
        }
      }, s.pause = function () {
        i.timer.clear(this, this._update);
      }, s.resume = function () {
        this.play(this._currTime, this._loopKey);
      }, s.play = function (t, e) {
        if (void 0 === t && (t = 0), void 0 === e && (e = !1), this._tweenDataList) {
          if (this._startTimeSort) {
            this._startTimeSort = !1, this._tweenDataList.sort(function (t, e) {
              return t.startTime > e.startTime ? 1 : t.startTime < e.startTime ? -1 : 0;
            });
            for (var n = 0, r = this._tweenDataList.length; n < r; n++) {
              var a = this._tweenDataList[n];
              if (null != a && 0 == a.type) {
                var s = a.target,
                  o = s.$_GID || (s.$_GID = Q.getGID()),
                  h = null;
                null == this._firstTweenDic[o] ? ((h = {}).diyTarget = s, this._firstTweenDic[o] = h) : h = this._firstTweenDic[o];
                for (var l in a.data) null == h[l] && (h[l] = s[l]);
              }
            }
          }
          "string" == typeof t ? this.gotoLabel(t) : this.gotoTime(t), this._loopKey = e, this._lastTime = F.now(), i.timer.frameLoop(1, this, this._update);
        }
      }, s._update = function () {
        if (this._currTime >= this._startTime) {
          if (!this._loopKey) {
            for (var t in this._tweenDic)(r = this._tweenDic[t]).complete();
            return this._complete(), void this.pause();
          }
          if (this._complete(), !this._tweenDataList) return;
          this.gotoTime(0);
        }
        var e = F.now(),
          i = e - this._lastTime,
          n = this._currTime += i * this.scale;
        this._lastTime = e;
        for (t in this._tweenDic)(r = this._tweenDic[t])._updateEase(n);
        var r;
        if (0 != this._tweenDataList.length && this._index < this._tweenDataList.length) {
          var a = this._tweenDataList[this._index];
          n >= a.startTime && (this._index++, 0 == a.type ? (this._gidIndex++, (r = j.getItemByClass("tween", q))._create(a.target, a.data, a.duration, a.ease, l.create(this, this._animComplete, [this._gidIndex]), 0, !1, a.isTo, !0, !1), r.setStartTime(n), r.gid = this._gidIndex, this._tweenDic[this._gidIndex] = r, r._updateEase(n)) : this.event("label", a.data));
        }
      }, s._animComplete = function (t) {
        this._tweenDic[t] && delete this._tweenDic[t];
      }, s._complete = function () {
        this.event("complete");
      }, s.reset = function () {
        var t;
        if (this._labelDic)
          for (t in this._labelDic) delete this._labelDic[t];
        for (t in this._tweenDic) this._tweenDic[t].clear(), delete this._tweenDic[t];
        for (t in this._firstTweenDic) delete this._firstTweenDic[t];
        if (this._endTweenDataList = null, this._tweenDataList && this._tweenDataList.length) {
          var e = 0,
            n = 0;
          for (n = this._tweenDataList.length, e = 0; e < n; e++) this._tweenDataList[e] && this._tweenDataList[e].destroy();
        }
        this._tweenDataList.length = 0, this._currTime = 0, this._lastTime = 0, this._startTime = 0, this._index = 0, this._gidIndex = 0, this.scale = 1, i.timer.clear(this, this._update);
      }, s.destroy = function () {
        this.reset(), this._labelDic = null, this._tweenDic = null, this._tweenDataList = null, this._firstTweenDic = null;
      }, a(0, s, "index", function () {
        return this._frameIndex;
      }, function (t) {
        this._frameIndex = t, this.gotoTime(this._frameIndex / this._frameRate * 1e3);
      }), a(0, s, "total", function () {
        return this._total = Math.floor(this._startTime / 1e3 * this._frameRate), this._total;
      }), e.to = function (t, i, n, r, a) {
        return void 0 === a && (a = 0), new e().to(t, i, n, r, a);
      }, e.from = function (t, i, n, r, a) {
        return void 0 === a && (a = 0), new e().from(t, i, n, r, a);
      }, e.__init$ = function () {
        n = function () {
          function t() {
            this.type = 0, this.isTo = !0, this.startTime = NaN, this.endTime = NaN, this.target = null, this.duration = NaN, this.ease = null, this.data = null;
          }
          r(t, "");
          return t.prototype.destroy = function () {
            this.target = null, this.ease = null, this.data = null, this.isTo = !0, this.type = 0, j.recover("tweenData", this);
          }, t;
        }();
      }, e;
    }(),
    ct = function (e) {
      function o() {
        this._transform = null, this._tfChanged = !1, this._x = 0, this._y = 0, this._width = 0, this._height = 0, this._repaint = 1, this._mouseEnableState = 0, this._zOrder = 0, this._graphics = null, this._renderType = 0, this._optimizeScrollRect = !1, this._texture = null, this.mouseThrough = !1, this.autoSize = !1, this.hitTestPrior = !1, this.viewport = null, o.__super.call(this), this._style = c.EMPTY;
      }
      r(o, "laya.display.Sprite", e);
      var h = o.prototype;
      return i.imps(h, {
        "laya.display.ILayout": !0
      }), h.createConchModel = function () {
        return new ConchNode();
      }, h.destroy = function (t) {
        void 0 === t && (t = !0), this._releaseMem(), e.prototype.destroy.call(this, t), this._style && this._style.destroy(), this._transform && this._transform.destroy(), this._transform = null, this._style = null, this._graphics = null;
      }, h.updateZOrder = function () {
        Q.updateOrder(this._childs) && this.repaint();
      }, h.reCache = function () {
        this._$P.cacheCanvas && (this._$P.cacheCanvas.reCache = !0), this._repaint = 1;
      }, h.setBounds = function (t) {
        this._set$P("uBounds", t);
      }, h.getBounds = function () {
        return this._$P.mBounds || this._set$P("mBounds", new M()), M._getWrapRec(this._boundPointsToParent(), this._$P.mBounds);
      }, h.getSelfBounds = function () {
        return this._$P.uBounds ? this._$P.uBounds : (this._$P.mBounds || this._set$P("mBounds", new M()), M._getWrapRec(this._getBoundPointsM(!1), this._$P.mBounds));
      }, h._boundPointsToParent = function (t) {
        void 0 === t && (t = !1);
        var e = 0,
          i = 0;
        this._style && (e = this._style._tf.translateX, i = this._style._tf.translateY, t = t || 0 !== this._style._tf.rotate, this._style.scrollRect && (e += this._style.scrollRect.x, i += this._style.scrollRect.y));
        var n = this._getBoundPointsM(t);
        if (!n || n.length < 1) return n;
        if (8 != n.length && (n = t ? w.scanPList(n) : M._getWrapRec(n, M.TEMP)._getBoundPoints()), !this.transform) return Q.transPointList(n, this._x - e, this._y - i), n;
        var r = C.TEMP,
          a = 0,
          s = n.length;
        for (a = 0; a < s; a += 2) r.x = n[a], r.y = n[a + 1], this.toParentPoint(r), n[a] = r.x, n[a + 1] = r.y;
        return n;
      }, h.getGraphicBounds = function (t) {
        return void 0 === t && (t = !1), this._graphics ? this._graphics.getBounds(t) : M.TEMP.setTo(0, 0, 0, 0);
      }, h._getBoundPointsM = function (t) {
        if (void 0 === t && (t = !1), this._$P.uBounds) return this._$P.uBounds._getBoundPoints();
        if (this._$P.temBM || this._set$P("temBM", []), this.scrollRect) {
          var e = Q.clearArray(this._$P.temBM),
            i = M.TEMP;
          return i.copyFrom(this.scrollRect), Q.concatArray(e, i._getBoundPoints()), e;
        }
        for (var n, r, a, s = this._graphics ? this._graphics.getBoundPoints() : Q.clearArray(this._$P.temBM), o = 0, h = (a = this._childs).length; o < h; o++)(n = a[o]) instanceof laya.display.Sprite && 1 == n.visible && (r = n._boundPointsToParent(t)) && (s = s ? Q.concatArray(s, r) : r);
        return s;
      }, h.getStyle = function () {
        return this._style === c.EMPTY && (this._style = new c()), this._style;
      }, h.setStyle = function (t) {
        this._style = t;
      }, h._adjustTransform = function () {
        this._tfChanged = !1;
        var t, e = this._style._tf,
          i = e.scaleX,
          n = e.scaleY;
        if (e.rotate || 1 !== i || 1 !== n || e.skewX || e.skewY) {
          (t = this._transform || (this._transform = b.create())).bTransform = !0;
          var r = .0174532922222222 * (e.rotate - e.skewX),
            a = .0174532922222222 * (e.rotate + e.skewY),
            s = Math.cos(a),
            o = Math.sin(a),
            h = Math.sin(r),
            l = Math.cos(r);
          return t.a = i * s, t.b = i * o, t.c = -n * h, t.d = n * l, t.tx = t.ty = 0, t;
        }
        return this._transform && this._transform.destroy(), this._transform = null, this._renderType &= -5, t;
      }, h.pos = function (t, e, i) {
        if (void 0 === i && (i = !1), this._x !== t || this._y !== e) {
          if (this.destroyed) return this;
          if (i) {
            this._x = t, this._y = e, this.conchModel && this.conchModel.pos(this._x, this._y);
            var n = this._parent;
            n && 0 === n._repaint && (n._repaint = 1, n.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint());
          } else this.x = t, this.y = e;
        }
        return this;
      }, h.pivot = function (t, e) {
        return this.pivotX = t, this.pivotY = e, this;
      }, h.size = function (t, e) {
        return this.width = t, this.height = e, this;
      }, h.scale = function (t, e, i) {
        void 0 === i && (i = !1);
        var n = this.getStyle(),
          r = n._tf;
        if (r.scaleX != t || r.scaleY != e) {
          if (this.destroyed) return this;
          if (i) {
            n.setScale(t, e), this._tfChanged = !0, this.conchModel && this.conchModel.scale(t, e), this._renderType |= 4;
            var a = this._parent;
            a && 0 === a._repaint && (a._repaint = 1, a.parentRepaint());
          } else this.scaleX = t, this.scaleY = e;
        }
        return this;
      }, h.skew = function (t, e) {
        return this.skewX = t, this.skewY = e, this;
      }, h.render = function (t, e, i) {
        X.spriteCount++, O.renders[this._renderType]._fun(this, t, e + this._x, i + this._y), this._repaint = 0;
      }, h.drawToCanvas = function (t, e, i, n) {
        if (P.isConchNode) {
          var r = yt.create("2D");
          return new L(t, e, r).ctx.setCanvasType(1), this.conchModel.drawToCanvas(r.source, i, n), r;
        }
        return s.drawToCanvas(this, this._renderType, t, e, i, n);
      }, h.customRender = function (t, e, i) {
        this._renderType |= 1024;
      }, h._applyFilters = function () {
        if (!P.isWebGL) {
          var t;
          if ((t = this._$P.filters) && !(t.length < 1))
            for (var e = 0, i = t.length; e < i; e++) t[e].action.apply(this._$P.cacheCanvas);
        }
      }, h._isHaveGlowFilter = function () {
        var t = 0,
          e = 0;
        if (this.filters)
          for (t = 0; t < this.filters.length; t++)
            if (8 == this.filters[t].type) return !0;
        for (t = 0, e = this._childs.length; t < e; t++)
          if (this._childs[t]._isHaveGlowFilter()) return !0;
        return !1;
      }, h.localToGlobal = function (t, e) {
        void 0 === e && (e = !1), !0 === e && (t = new C(t.x, t.y));
        for (var n = this; n && n != i.stage;) t = n.toParentPoint(t), n = n.parent;
        return t;
      }, h.globalToLocal = function (t, e) {
        void 0 === e && (e = !1), e && (t = new C(t.x, t.y));
        for (var n = this, r = []; n && n != i.stage;) r.push(n), n = n.parent;
        for (var a = r.length - 1; a >= 0;) t = (n = r[a]).fromParentPoint(t), a--;
        return t;
      }, h.toParentPoint = function (t) {
        if (!t) return t;
        t.x -= this.pivotX, t.y -= this.pivotY, this.transform && this._transform.transformPoint(t), t.x += this._x, t.y += this._y;
        var e = this._style.scrollRect;
        return e && (t.x -= e.x, t.y -= e.y), t;
      }, h.fromParentPoint = function (t) {
        if (!t) return t;
        t.x -= this._x, t.y -= this._y;
        var e = this._style.scrollRect;
        return e && (t.x += e.x, t.y += e.y), this.transform && this._transform.invertTransformPoint(t), t.x += this.pivotX, t.y += this.pivotY, t;
      }, h.on = function (t, i, n, r) {
        return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0, this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(t, i, n, r, !1)) : e.prototype.on.call(this, t, i, n, r);
      }, h.once = function (t, i, n, r) {
        return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0, this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(t, i, n, r, !0)) : e.prototype.once.call(this, t, i, n, r);
      }, h._$2__onDisplay = function () {
        if (1 !== this._mouseEnableState) {
          var t = this;
          for (t = t.parent; t && 1 !== t._mouseEnableState && !t._getBit(2);) t.mouseEnabled = !0, t._setBit(2, !0), t = t.parent;
        }
      }, h.loadImage = function (t, e, i, n, r, a) {
        var s = this;
        return void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === r && (r = 0), this.graphics.loadImage(t, e, i, n, r, function (t) {
          s.destroyed || (s.size(e + (n || t.width), i + (r || t.height)), s.repaint(), a && a.runWith(t));
        }), this;
      }, h.repaint = function () {
        this.conchModel && this.conchModel.repaint && this.conchModel.repaint(), 0 === this._repaint && (this._repaint = 1, this.parentRepaint()), this._$P && this._$P.maskParent && this._$P.maskParent.repaint();
      }, h._needRepaint = function () {
        return 0 !== this._repaint && this._$P.cacheCanvas && this._$P.cacheCanvas.reCache;
      }, h._childChanged = function (t) {
        this._childs.length ? this._renderType |= 2048 : this._renderType &= -2049, t && this._get$P("hasZorder") && i.timer.callLater(this, this.updateZOrder), this.repaint();
      }, h.parentRepaint = function () {
        var t = this._parent;
        t && 0 === t._repaint && (t._repaint = 1, t.parentRepaint());
      }, h.startDrag = function (t, e, i, n, r, a, s) {
        void 0 === e && (e = !1), void 0 === i && (i = 0), void 0 === n && (n = 300), void 0 === a && (a = !1), void 0 === s && (s = .92), this._$P.dragging || this._set$P("dragging", new H()), this._$P.dragging.start(this, t, e, i, n, r, a, s);
      }, h.stopDrag = function () {
        this._$P.dragging && this._$P.dragging.stop();
      }, h._releaseMem = function () {
        if (this._$P) {
          var t = this._$P.cacheCanvas;
          t && t.ctx && (j.recover("RenderContext", t.ctx), t.ctx.canvas.size(0, 0), t.ctx = null);
          var e = this._$P._filterCache;
          e && (e.destroy(), e.recycle(), this._set$P("_filterCache", null)), this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", !1), this._$P._isHaveGlowFilter = null;
        }
      }, h._setDisplay = function (t) {
        t || this._releaseMem(), e.prototype._setDisplay.call(this, t);
      }, h.hitTestPoint = function (t, e) {
        var i = this.globalToLocal(C.TEMP.setTo(t, e));
        t = i.x, e = i.y;
        return (this._$P.hitArea ? this._$P.hitArea : this._width > 0 && this._height > 0 ? M.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds()).contains(t, e);
      }, h.getMousePoint = function () {
        return this.globalToLocal(C.TEMP.setTo(i.stage.mouseX, i.stage.mouseY));
      }, h._getWords = function () {
        return null;
      }, h._addChildsToLayout = function (t) {
        var e = this._getWords();
        if (null == e && 0 == this._childs.length) return !1;
        if (e)
          for (var i = 0, n = e.length; i < n; i++) t.push(e[i]);
        return this._childs.forEach(function (e, i, n) {
          e._style._enableLayout() && e._addToLayout(t);
        }), !0;
      }, h._addToLayout = function (t) {
        this._style.absolute || (this._style.block ? t.push(this) : this._addChildsToLayout(t) && (this.x = this.y = 0));
      }, h._isChar = function () {
        return !1;
      }, h._getCSSStyle = function () {
        return this._style.getCSSStyle();
      }, h._setAttributes = function (t, e) {
        switch (t) {
          case "x":
            this.x = parseFloat(e);
            break;
          case "y":
            this.y = parseFloat(e);
            break;
          case "width":
            this.width = parseFloat(e);
            break;
          case "height":
            this.height = parseFloat(e);
            break;
          default:
            this[t] = e;
        }
      }, h._layoutLater = function () {
        this.parent && this.parent._layoutLater();
      }, a(0, h, "optimizeScrollRect", function () {
        return this._optimizeScrollRect;
      }, function (t) {
        this._optimizeScrollRect != t && (this._optimizeScrollRect = t, this.conchModel && this.conchModel.optimizeScrollRect(t));
      }), a(0, h, "customRenderEnable", null, function (t) {
        if (t && (this._renderType |= 1024, P.isConchNode)) {
          o.CustomList.push(this);
          var e = new yt("2d");
          e._setContext(new CanvasRenderingContext2D()), this.customContext = new L(0, 0, e), e.context.setCanvasType && e.context.setCanvasType(2), this.conchModel.custom(e.context);
        }
      }), a(0, h, "cacheAsBitmap", function () {
        return "none" !== this.cacheAs;
      }, function (t) {
        this.cacheAs = t ? this._$P.hasFilter ? "none" : "normal" : "none";
      }), a(0, h, "cacheAs", function () {
        return null == this._$P.cacheCanvas ? "none" : this._$P.cacheCanvas.type;
      }, function (t) {
        var e = this._$P.cacheCanvas;
        if (t !== (e ? e.type : "none")) {
          if ("none" !== t) this._getBit(1) || this._setUpNoticeType(1), e || (e = this._set$P("cacheCanvas", j.getItemByClass("cacheCanvas", Object))), e.type = t, e.reCache = !0, this._renderType |= 16, "bitmap" == t && this.conchModel && this.conchModel.cacheAs(1), this._set$P("cacheForFilters", !1);
          else if (this._$P._mask);
          else if (this._$P.hasFilter) this._set$P("cacheForFilters", !0);
          else {
            if (e) {
              var i = e;
              i && i.ctx && (j.recover("RenderContext", i.ctx), i.ctx.canvas.size(0, 0), i.ctx = null), j.recover("cacheCanvas", e);
            }
            this._$P.cacheCanvas = null, this._renderType &= -17, this.conchModel && this.conchModel.cacheAs(0);
          }
          this.repaint();
        }
      }), a(0, h, "zOrder", function () {
        return this._zOrder;
      }, function (t) {
        this._zOrder != t && (this._zOrder = t, this.conchModel && this.conchModel.setZOrder && this.conchModel.setZOrder(t), this._parent && (t && this._parent._set$P("hasZorder", !0), i.timer.callLater(this._parent, this.updateZOrder)));
      }), a(0, h, "rotation", function () {
        return this._style._tf.rotate;
      }, function (t) {
        var e = this.getStyle();
        if (e._tf.rotate !== t) {
          e.setRotate(t), this._tfChanged = !0, this.conchModel && this.conchModel.rotate(t), this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), a(0, h, "width", function () {
        return this.autoSize ? this.getSelfBounds().width : this._width;
      }, function (t) {
        this._width !== t && (this._width = t, this.conchModel && this.conchModel.size(t, this._height), this.repaint());
      }), a(0, h, "x", function () {
        return this._x;
      }, function (t) {
        if (this._x !== t) {
          if (this.destroyed) return;
          this._x = t, this.conchModel && this.conchModel.pos(t, this._y);
          var e = this._parent;
          e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint());
        }
      }), a(0, h, "globalScaleY", function () {
        for (var t = 1, e = this; e && e !== i.stage;) t *= e.scaleY, e = e.parent;
        return t;
      }), a(0, h, "hitArea", function () {
        return this._$P.hitArea;
      }, function (t) {
        this._set$P("hitArea", t);
      }), a(0, h, "staticCache", function () {
        return this._$P.staticCache;
      }, function (t) {
        this._set$P("staticCache", t), t || this.reCache();
      }), a(0, h, "texture", function () {
        return this._texture;
      }, function (t) {
        this._texture != t && (this._texture = t, this.graphics.cleanByTexture(t, 0, 0));
      }), a(0, h, "y", function () {
        return this._y;
      }, function (t) {
        if (this._y !== t) {
          if (this.destroyed) return;
          this._y = t, this.conchModel && this.conchModel.pos(this._x, t);
          var e = this._parent;
          e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint());
        }
      }), a(0, h, "height", function () {
        return this.autoSize ? this.getSelfBounds().height : this._height;
      }, function (t) {
        this._height !== t && (this._height = t, this.conchModel && this.conchModel.size(this._width, t), this.repaint());
      }), a(0, h, "blendMode", function () {
        return this._style.blendMode;
      }, function (t) {
        this.getStyle().blendMode = t, this.conchModel && this.conchModel.blendMode(t), t && "source-over" != t ? this._renderType |= 8 : this._renderType &= -9, this.parentRepaint();
      }), a(0, h, "scaleX", function () {
        return this._style._tf.scaleX;
      }, function (t) {
        var e = this.getStyle();
        if (e._tf.scaleX !== t) {
          e.setScaleX(t), this._tfChanged = !0, this.conchModel && this.conchModel.scale(t, e._tf.scaleY), this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), a(0, h, "scaleY", function () {
        return this._style._tf.scaleY;
      }, function (t) {
        var e = this.getStyle();
        if (e._tf.scaleY !== t) {
          e.setScaleY(t), this._tfChanged = !0, this.conchModel && this.conchModel.scale(e._tf.scaleX, t), this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), a(0, h, "stage", function () {
        return i.stage;
      }), a(0, h, "skewX", function () {
        return this._style._tf.skewX;
      }, function (t) {
        var e = this.getStyle();
        if (e._tf.skewX !== t) {
          e.setSkewX(t), this._tfChanged = !0, this.conchModel && this.conchModel.skew(t, e._tf.skewY), this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), a(0, h, "scrollRect", function () {
        return this._style.scrollRect;
      }, function (t) {
        this.getStyle().scrollRect = t, this.repaint(), t ? (this._renderType |= 128, this.conchModel && this.conchModel.scrollRect(t.x, t.y, t.width, t.height)) : (this._renderType &= -129, this.conchModel && (o.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(64) : this.conchModel.removeType(128)));
      }), a(0, h, "skewY", function () {
        return this._style._tf.skewY;
      }, function (t) {
        var e = this.getStyle();
        if (e._tf.skewY !== t) {
          e.setSkewY(t), this._tfChanged = !0, this.conchModel && this.conchModel.skew(e._tf.skewX, t), this._renderType |= 4;
          var i = this._parent;
          i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
        }
      }), a(0, h, "transform", function () {
        return this._tfChanged ? this._adjustTransform() : this._transform;
      }, function (t) {
        this._tfChanged = !1, this._transform = t, t && (this._x = t.tx, this._y = t.ty, t.tx = t.ty = 0, this.conchModel && this.conchModel.transform(t.a, t.b, t.c, t.d, this._x, this._y)), t ? this._renderType |= 4 : (this._renderType &= -5, this.conchModel && this.conchModel.removeType(4)), this.parentRepaint();
      }), a(0, h, "pivotX", function () {
        return this._style._tf.translateX;
      }, function (t) {
        this.getStyle().setTranslateX(t), this.conchModel && this.conchModel.pivot(t, this._style._tf.translateY), this.repaint();
      }), a(0, h, "pivotY", function () {
        return this._style._tf.translateY;
      }, function (t) {
        this.getStyle().setTranslateY(t), this.conchModel && this.conchModel.pivot(this._style._tf.translateX, t), this.repaint();
      }), a(0, h, "alpha", function () {
        return this._style.alpha;
      }, function (t) {
        this._style && this._style.alpha !== t && (t = t < 0 ? 0 : t > 1 ? 1 : t, this.getStyle().alpha = t, this.conchModel && this.conchModel.alpha(t), 1 !== t ? this._renderType |= 2 : this._renderType &= -3, this.parentRepaint());
      }), a(0, h, "visible", function () {
        return this._style.visible;
      }, function (t) {
        this._style && this._style.visible !== t && (this.getStyle().visible = t, this.conchModel && this.conchModel.visible(t), this.parentRepaint());
      }), a(0, h, "graphics", function () {
        return this._graphics || (this.graphics = s.createGraphics());
      }, function (t) {
        this._graphics && (this._graphics._sp = null), this._graphics = t, t ? (this._renderType &= -2, this._renderType |= 512, t._sp = this, this.conchModel && this.conchModel.graphics(this._graphics)) : (this._renderType &= -513, this._renderType &= -2, this.conchModel && (o.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(256) : this.conchModel.removeType(512))), this.repaint();
      }), a(0, h, "filters", function () {
        return this._$P.filters;
      }, function (t) {
        t && 0 === t.length && (t = null), this._$P.filters != t && (this._set$P("filters", t ? t.slice() : null), P.isConchApp && (this.conchModel && (o.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(16) : this.conchModel.removeType(32)), this._$P.filters && 1 == this._$P.filters.length && this._$P.filters[0].callNative(this)), P.isWebGL && (t && t.length ? this._renderType |= 32 : this._renderType &= -33), t && t.length > 0 ? (this._getBit(1) || this._setUpNoticeType(1), P.isWebGL && 1 == t.length && t[0] instanceof laya.filters.ColorFilter || ("bitmap" != this.cacheAs && (P.isConchNode || (this.cacheAs = "bitmap"), this._set$P("cacheForFilters", !0)), this._set$P("hasFilter", !0))) : (this._set$P("hasFilter", !1), this._$P.cacheForFilters && "bitmap" == this.cacheAs && (this.cacheAs = "none")), this.repaint());
      }), a(0, h, "parent", e.prototype._$get_parent, function (t) {
        i.superSet(J, this, "parent", t), t && this._getBit(2) && this._$2__onDisplay();
      }), a(0, h, "mask", function () {
        return this._$P._mask;
      }, function (t) {
        t && this.mask && this.mask._$P.maskParent || (t ? (this.cacheAs = "bitmap", this._set$P("_mask", t), t._set$P("maskParent", this)) : (this.mask && this.mask._set$P("maskParent", null), this._set$P("_mask", t), this.cacheAs = "none"), this.conchModel && this.conchModel.mask(t ? t.conchModel : null), this._renderType |= 64, this.parentRepaint());
      }), a(0, h, "mouseEnabled", function () {
        return this._mouseEnableState > 1;
      }, function (t) {
        this._mouseEnableState = t ? 2 : 1;
      }), a(0, h, "globalScaleX", function () {
        for (var t = 1, e = this; e && e !== i.stage;) t *= e.scaleX, e = e.parent;
        return t;
      }), a(0, h, "mouseX", function () {
        return this.getMousePoint().x;
      }), a(0, h, "mouseY", function () {
        return this.getMousePoint().y;
      }), o.fromImage = function (t) {
        return new o().loadImage(t);
      }, o.CustomList = [], n(o, ["RUNTIMEVERION", function () {
        return this.RUNTIMEVERION = t.conch ? conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf("-") + 1) : "";
      }]), o;
    }(J),
    _t = function (t) {
      function e(t) {
        this._audio = null, this._onEnd = null, this._resumePlay = null, e.__super.call(this), this._onEnd = Q.bind(this.__onEnd, this), this._resumePlay = Q.bind(this.__resumePlay, this), t.addEventListener("ended", this._onEnd), this._audio = t;
      }
      r(e, "laya.media.h5audio.AudioSoundChannel", it);
      var n = e.prototype;
      return n.__onEnd = function () {
        if (1 == this.loops) return this.completeHandler && (i.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null), this.stop(), void this.event("complete");
        this.loops > 0 && this.loops--, this.startTime = 0, this.play();
      }, n.__resumePlay = function () {
        this._audio && this._audio.removeEventListener("canplay", this._resumePlay);
        try {
          this._audio.currentTime = this.startTime, F.container.appendChild(this._audio), this._audio.play();
        } catch (t) {
          this.event("error");
        }
      }, n.play = function () {
        this.isStopped = !1;
        try {
          this._audio.playbackRate = I.playbackRate, this._audio.currentTime = this.startTime;
        } catch (t) {
          return void this._audio.addEventListener("canplay", this._resumePlay);
        }
        I.addChannel(this), F.container.appendChild(this._audio), "play" in this._audio && this._audio.play();
      }, n.stop = function () {
        this.isStopped = !0, I.removeChannel(this), this.completeHandler = null, this._audio && ("pause" in this._audio && P.isConchApp && this._audio.stop(), this._audio.pause(), this._audio.removeEventListener("ended", this._onEnd), this._audio.removeEventListener("canplay", this._resumePlay), F.onIE || this._audio != et._musicAudio && j.recover("audio:" + this.url, this._audio), F.removeElement(this._audio), this._audio = null);
      }, n.pause = function () {
        this.isStopped = !0, I.removeChannel(this), "pause" in this._audio && this._audio.pause();
      }, n.resume = function () {
        this._audio && (this.isStopped = !1, I.addChannel(this), "play" in this._audio && this._audio.play());
      }, a(0, n, "position", function () {
        return this._audio ? this._audio.currentTime : 0;
      }), a(0, n, "duration", function () {
        return this._audio ? this._audio.duration : 0;
      }), a(0, n, "volume", function () {
        return this._audio ? this._audio.volume : 1;
      }, function (t) {
        this._audio && (this._audio.volume = t);
      }), e;
    }(),
    dt = function (t) {
      function e() {
        this.audioBuffer = null, this.gain = null, this.bufferSource = null, this._currentTime = 0, this._volume = 1, this._startTime = 0, this._pauseTime = 0, this._onPlayEnd = null, this.context = rt.ctx, e.__super.call(this), this._onPlayEnd = Q.bind(this.__onPlayEnd, this), this.context.createGain ? this.gain = this.context.createGain() : this.gain = this.context.createGainNode();
      }
      r(e, "laya.media.webaudio.WebAudioSoundChannel", it);
      var n = e.prototype;
      return n.play = function () {
        if (I.addChannel(this), this.isStopped = !1, this._clearBufferSource(), this.audioBuffer) {
          var t = this.context,
            e = this.gain,
            i = t.createBufferSource();
          this.bufferSource = i, i.buffer = this.audioBuffer, i.connect(e), e && e.disconnect(), e.connect(t.destination), i.onended = this._onPlayEnd, this.startTime >= this.duration && (this.startTime = 0), this._startTime = F.now(), this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, .1) : this.gain.gain.value = this._volume, 0 == this.loops && (i.loop = !0), i.playbackRate.setTargetAtTime ? i.playbackRate.setTargetAtTime(I.playbackRate, this.context.currentTime, .1) : i.playbackRate.value = I.playbackRate, i.start(0, this.startTime), this._currentTime = 0;
        }
      }, n.__onPlayEnd = function () {
        if (1 == this.loops) return this.completeHandler && (i.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null), this.stop(), void this.event("complete");
        this.loops > 0 && this.loops--, this.startTime = 0, this.play();
      }, n._clearBufferSource = function () {
        if (this.bufferSource) {
          var t = this.bufferSource;
          t.stop ? t.stop(0) : t.noteOff(0), t.disconnect(0), t.onended = null, e._tryCleanFailed || this._tryClearBuffer(t), this.bufferSource = null;
        }
      }, n._tryClearBuffer = function (t) {
        if (F.onMac) try {
          t.buffer = rt._miniBuffer;
        } catch (t) {
          e._tryCleanFailed = !0;
        } else try {
          t.buffer = null;
        } catch (t) {
          e._tryCleanFailed = !0;
        }
      }, n.stop = function () {
        this._clearBufferSource(), this.audioBuffer = null, this.gain && this.gain.disconnect(), this.isStopped = !0, I.removeChannel(this), this.completeHandler = null, I.autoReleaseSound && i.timer.once(5e3, null, I.disposeSoundIfNotUsed, [this.url], !1);
      }, n.pause = function () {
        this.isStopped || (this._pauseTime = this.position), this._clearBufferSource(), this.gain && this.gain.disconnect(), this.isStopped = !0, I.removeChannel(this), I.autoReleaseSound && i.timer.once(5e3, null, I.disposeSoundIfNotUsed, [this.url], !1);
      }, n.resume = function () {
        this.startTime = this._pauseTime, this.play();
      }, a(0, n, "position", function () {
        return this.bufferSource ? (F.now() - this._startTime) / 1e3 + this.startTime : 0;
      }), a(0, n, "duration", function () {
        return this.audioBuffer ? this.audioBuffer.duration : 0;
      }), a(0, n, "volume", function () {
        return this._volume;
      }, function (t) {
        this.isStopped || (this._volume = t, this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(t, this.context.currentTime, .1) : this.gain.gain.value = t);
      }), e._tryCleanFailed = !1, e;
    }(),
    ft = function (t) {
      function e() {
        e.__super.call(this), this._w = 0, this._h = 0;
      }
      r(e, "laya.resource.Bitmap", ht);
      var i = e.prototype;
      return a(0, i, "width", function () {
        return this._w;
      }), a(0, i, "height", function () {
        return this._h;
      }), a(0, i, "source", function () {
        return this._source;
      }), e;
    }(),
    pt = function (t) {
      function e() {
        this.loop = !1, this.wrapMode = 0, this._index = 0, this._count = 0, this._isPlaying = !1, this._labels = null, this._isReverse = !1, this._frameRateChanged = !1, this._controlNode = null, this._actionName = null, e.__super.call(this), this._interval = o.animationInterval, this._setUpNoticeType(1);
      }
      r(e, "laya.display.AnimationPlayerBase", t);
      var i = e.prototype;
      return i.play = function (t, e, i, n) {
        void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0), this._isPlaying = !0, this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.loop = e, this._actionName = i, this._isReverse = 1 == this.wrapMode, this.interval > 0 && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
      }, i._getFrameByLabel = function (t) {
        var e = 0;
        for (e = 0; e < this._count; e++)
          if (this._labels[e] && this._labels[e].indexOf(t) >= 0) return e;
        return 0;
      }, i._frameLoop = function () {
        if (this._isReverse) {
          if (this._index--, this._index < 0) {
            if (!this.loop) return this._index = 0, this.stop(), void this.event("complete");
            2 == this.wrapMode ? (this._index = this._count > 0 ? 1 : 0, this._isReverse = !1) : this._index = this._count - 1, this.event("complete");
          }
        } else if (this._index++, this._index >= this._count) {
          if (!this.loop) return this._index--, this.stop(), void this.event("complete");
          2 == this.wrapMode ? (this._index = this._count - 2 >= 0 ? this._count - 2 : 0, this._isReverse = !0) : this._index = 0, this.event("complete");
        }
        this.index = this._index;
      }, i._setControlNode = function (t) {
        this._controlNode && (this._controlNode.off("display", this, this._checkResumePlaying), this._controlNode.off("undisplay", this, this._checkResumePlaying)), this._controlNode = t, t && t != this && (t.on("display", this, this._checkResumePlaying), t.on("undisplay", this, this._checkResumePlaying));
      }, i._setDisplay = function (e) {
        t.prototype._setDisplay.call(this, e), this._checkResumePlaying();
      }, i._checkResumePlaying = function () {
        this._isPlaying && (this._controlNode.displayedInStage ? this.play(this._index, this.loop, this._actionName) : this.clearTimer(this, this._frameLoop));
      }, i.stop = function () {
        this._isPlaying = !1, this.clearTimer(this, this._frameLoop);
      }, i.addLabel = function (t, e) {
        this._labels || (this._labels = {}), this._labels[e] || (this._labels[e] = []), this._labels[e].push(t);
      }, i.removeLabel = function (t) {
        if (t) {
          if (this._labels)
            for (var e in this._labels) this._removeLabelFromLabelList(this._labels[e], t);
        } else this._labels = null;
      }, i._removeLabelFromLabelList = function (t, e) {
        if (t)
          for (var i = t.length - 1; i >= 0; i--) t[i] == e && t.splice(i, 1);
      }, i.gotoAndStop = function (t) {
        this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.stop();
      }, i._displayToIndex = function (t) {}, i.clear = function () {
        this.stop(), this._labels = null;
      }, a(0, i, "interval", function () {
        return this._interval;
      }, function (t) {
        this._interval != t && (this._frameRateChanged = !0, this._interval = t, this._isPlaying && t > 0 && this.timerLoop(t, this, this._frameLoop, null, !0, !0));
      }), a(0, i, "isPlaying", function () {
        return this._isPlaying;
      }), a(0, i, "index", function () {
        return this._index;
      }, function (t) {
        if (this._index = t, this._displayToIndex(t), this._labels && this._labels[t])
          for (var e = this._labels[t], i = 0, n = e.length; i < n; i++) this.event("label", e[i]);
      }), a(0, i, "count", function () {
        return this._count;
      }), e.WRAP_POSITIVE = 0, e.WRAP_REVERSE = 1, e.WRAP_PINGPONG = 2, e;
    }(ct),
    mt = function (t) {
      function e() {
        this._clipPoint = null, this._currBitmapFont = null, this._text = null, this._isChanged = !1, this._textWidth = 0, this._textHeight = 0, this._lines = [], this._lineWidths = [], this._startX = NaN, this._startY = NaN, this._lastVisibleLineIndex = -1, this._words = null, this._charSize = {}, this.underline = !1, this._underlineColor = null, e.__super.call(this), this.overflow = e.VISIBLE, this._style = new tt(this), this._style.wordWrap = !1;
      }
      r(e, "laya.display.Text", t);
      var s = e.prototype;
      return s.destroy = function (e) {
        void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._lines = null, this._words && (this._words.length = 0, this._words = null);
      }, s._getBoundPointsM = function (t) {
        void 0 === t && (t = !1);
        var e = M.TEMP;
        return e.setTo(0, 0, this.width, this.height), e._getBoundPoints();
      }, s.getGraphicBounds = function (t) {
        void 0 === t && (t = !1);
        var e = M.TEMP;
        return e.setTo(0, 0, this.width, this.height), e;
      }, s._getCSSStyle = function () {
        return this._style;
      }, s.lang = function (t, i, n, r, a, s, o, h, l, u, c) {
        if (t = e.langPacks && e.langPacks[t] ? e.langPacks[t] : t, arguments.length < 2) this._text = t;
        else {
          for (var _ = 0, d = arguments.length; _ < d; _++) t = t.replace("{" + _ + "}", arguments[_ + 1]);
          this._text = t;
        }
      }, s._isPassWordMode = function () {
        var t = this._style.password;
        return "prompt" in this && this.prompt == this._text && (t = !1), t;
      }, s._getPassWordTxt = function (t) {
        var e;
        e = "";
        for (var i = t.length; i > 0; i--) e += "●";
        return e;
      }, s.renderText = function (t, e) {
        var i = this.graphics;
        i.clear(!0);
        var n = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + (F.onIPhone ? laya.display.Text._fontFamilyMap[this.font] || this.font : this.font);
        F.context.font = n;
        var r = this.padding,
          a = r[3],
          s = "left",
          o = this._lines,
          h = this.leading + this._charSize.height,
          l = this._currBitmapFont;
        l && (h = this.leading + l.getMaxHeight());
        var u = r[0];
        if (!l && this._width > 0 && this._textWidth <= this._width && ("right" == this.align ? (s = "right", a = this._width - r[1]) : "center" == this.align && (s = "center", a = .5 * this._width + r[3] - r[1])), this._height > 0) {
          var c = this._textHeight > this._height ? "top" : this.valign;
          "middle" === c ? u = .5 * (this._height - e * h) + r[0] - r[2] : "bottom" === c && (u = this._height - e * h - r[2]);
        }
        var _ = this._style;
        if (l && l.autoScaleSize) var d = l.fontSize / this.fontSize;
        if (this._clipPoint)
          if (i.save(), l && l.autoScaleSize) {
            var f = 0,
              p = 0;
            f = this._width ? this._width - r[3] - r[1] : this._textWidth, p = this._height ? this._height - r[0] - r[2] : this._textHeight, f *= d, p *= d, i.clipRect(r[3], r[0], f, p);
          } else i.clipRect(r[3], r[0], this._width ? this._width - r[3] - r[1] : this._textWidth, this._height ? this._height - r[0] - r[2] : this._textHeight);
        var m = _.password;
        "prompt" in this && this.prompt == this._text && (m = !1);
        for (var g = 0, v = 0, y = Math.min(this._lines.length, e + t) || 1, x = t; x < y; x++) {
          var T, S = o[x];
          if (m) {
            var w = S.length;
            S = "";
            for (var E = w; E > 0; E--) S += "●";
          }
          if (g = a - (this._clipPoint ? this._clipPoint.x : 0), v = u + h * x - (this._clipPoint ? this._clipPoint.y : 0), this.underline && this.drawUnderline(s, g, v, x), l) {
            var b = this.width;
            l.autoScaleSize && (b = this.width * d), l.drawText(S, this, g, v, this.align, b);
          } else P.isWebGL ? (this._words || (this._words = []), (T = this._words.length > x - t ? this._words[x - t] : new $()).setText(S)) : T = S, _.stroke ? i.fillBorderText(T, g, v, n, this.color, _.strokeColor, _.stroke, s) : i.fillText(T, g, v, n, this.color, s);
        }
        if (l && l.autoScaleSize) {
          var C = 1 / d;
          this.scale(C, C);
        }
        this._clipPoint && i.restore(), this._startX = a, this._startY = u;
      }, s.drawUnderline = function (t, e, i, n) {
        var r = this._lineWidths[n];
        switch (t) {
          case "center":
            e -= r / 2;
            break;
          case "right":
            e -= r;
        }
        i += this._charSize.height, this._graphics.drawLine(e, i, e + r, i, this.underlineColor || this.color, 1);
      }, s.typeset = function () {
        if (this._isChanged = !1, !this._text) return this._clipPoint = null, this._textWidth = this._textHeight = 0, void this.graphics.clear(!0);
        F.context.font = this._getCSSStyle().font, this._lines.length = 0, this._lineWidths.length = 0, this._isPassWordMode() ? this.parseLines(this._getPassWordTxt(this._text)) : this.parseLines(this._text), this.evalTextSize(), this.checkEnabledViewportOrNot() ? this._clipPoint || (this._clipPoint = new C(0, 0)) : this._clipPoint = null;
        var t = this._lines.length;
        if (this.overflow != e.VISIBLE) {
          var i = this.overflow == e.HIDDEN ? Math.floor : Math.ceil;
          t = Math.min(t, i((this.height - this.padding[0] - this.padding[2]) / (this.leading + this._charSize.height)));
        }
        var n = this.scrollY / (this._charSize.height + this.leading) | 0;
        this.renderText(n, t), this.repaint();
      }, s.evalTextSize = function () {
        var t = NaN,
          e = NaN;
        t = Math.max.apply(this, this._lineWidths), e = this._currBitmapFont ? this._lines.length * (this._currBitmapFont.getMaxHeight() + this.leading) + this.padding[0] + this.padding[2] : this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2], t == this._textWidth && e == this._textHeight || (this._textWidth = t, this._textHeight = e, this._width && this._height || this.conchModel && this.conchModel.size(this._width || this._textWidth, this._height || this._textHeight));
      }, s.checkEnabledViewportOrNot = function () {
        return this.overflow == e.SCROLL && (this._width > 0 && this._textWidth > this._width || this._height > 0 && this._textHeight > this._height);
      }, s.changeText = function (t) {
        this._text !== t && (this.lang(t + ""), this._graphics && this._graphics.replaceText(this._text) || this.typeset());
      }, s.parseLines = function (t) {
        var i = this.wordWrap || this.overflow == e.HIDDEN;
        if (i) var n = this.getWordWrapWidth();
        if (this._currBitmapFont) this._charSize.width = this._currBitmapFont.getMaxWidth(), this._charSize.height = this._currBitmapFont.getMaxHeight();
        else {
          var r = F.context.measureText(e._testWord);
          P.isConchApp && 0 === r.width && 0 === r.height && (r = F.context.measureText("W")), this._charSize.width = r.width, this._charSize.height = r.height || this.fontSize;
        }
        for (var a = t.replace(/\r\n/g, "\n").split("\n"), s = 0, o = a.length; s < o; s++) {
          var h = a[s];
          i ? this.parseLine(h, n) : (this._lineWidths.push(this.getTextWidth(h)), this._lines.push(h));
        }
      }, s.parseLine = function (t, i) {
        F.context;
        var n, r = this._lines,
          a = 0,
          s = NaN,
          o = NaN,
          h = 0;
        if ((s = this.getTextWidth(t)) <= i) return r.push(t), void this._lineWidths.push(s);
        s = this._charSize.width, 0 == (a = Math.floor(i / s)) && (a = 1), o = s = this.getTextWidth(t.substring(0, a));
        for (var l = a, u = t.length; l < u; l++)
          if (s = this.getTextWidth(t.charAt(l)), (o += s) > i)
            if (this.wordWrap) {
              var c = t.substring(h, l);
              if (c.charCodeAt(c.length - 1) < 255 ? (n = /(?:\w|-)+$/.exec(c)) && (l = n.index + h, 0 == n.index ? l += c.length : c = t.substring(h, l)) : e.RightToLeft && (n = /([\u0600-\u06FF])+$/.exec(c)) && (l = n.index + h, 0 == n.index ? l += c.length : c = t.substring(h, l)), r.push(c), this._lineWidths.push(o - s), h = l, !(l + a < u)) {
                r.push(t.substring(h, u)), this._lineWidths.push(this.getTextWidth(r[r.length - 1])), h = -1;
                break;
              }
              l += a, o = s = this.getTextWidth(t.substring(h, l)), l--;
            } else if (this.overflow == e.HIDDEN) return r.push(t.substring(0, l)), void this._lineWidths.push(this.getTextWidth(r[r.length - 1]));
        this.wordWrap && -1 != h && (r.push(t.substring(h, u)), this._lineWidths.push(this.getTextWidth(r[r.length - 1])));
      }, s.getTextWidth = function (t) {
        return this._currBitmapFont ? this._currBitmapFont.getTextWidth(t) : F.context.measureText(t).width;
      }, s.getWordWrapWidth = function () {
        var t = this.padding,
          e = NaN;
        return (e = this._currBitmapFont && this._currBitmapFont.autoScaleSize ? this._width * (this._currBitmapFont.fontSize / this.fontSize) : this._width) <= 0 && (e = this.wordWrap ? 100 : F.width), e <= 0 && (e = 100), e - t[3] - t[1];
      }, s.getCharPoint = function (t, e) {
        this._isChanged && i.timer.runCallLater(this, this.typeset);
        for (var n = 0, r = this._lines, a = 0, s = 0, o = r.length; s < o; s++) {
          if (n += r[s].length, t < n) {
            var h = s;
            break;
          }
          a = n;
        }
        var l = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + this.font;
        F.context.font = l;
        var u = this.getTextWidth(this._text.substring(a, t));
        return (e || new C()).setTo(this._startX + u - (this._clipPoint ? this._clipPoint.x : 0), this._startY + h * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y : 0));
      }, a(0, s, "width", function () {
        return this._width ? this._width : this.textWidth + this.padding[1] + this.padding[3];
      }, function (t) {
        t != this._width && (i.superSet(ct, this, "width", t), this.isChanged = !0);
      }), a(0, s, "textWidth", function () {
        return this._isChanged && i.timer.runCallLater(this, this.typeset), this._textWidth;
      }), a(0, s, "height", function () {
        return this._height ? this._height : this.textHeight;
      }, function (t) {
        t != this._height && (i.superSet(ct, this, "height", t), this.isChanged = !0);
      }), a(0, s, "textHeight", function () {
        return this._isChanged && i.timer.runCallLater(this, this.typeset), this._textHeight;
      }), a(0, s, "padding", function () {
        return this._getCSSStyle().padding;
      }, function (t) {
        this._getCSSStyle().padding = t, this.isChanged = !0;
      }), a(0, s, "bold", function () {
        return this._getCSSStyle().bold;
      }, function (t) {
        this._getCSSStyle().bold = t, this.isChanged = !0;
      }), a(0, s, "text", function () {
        return this._text || "";
      }, function (t) {
        this._text !== t && (this.lang(t + ""), this.isChanged = !0, this.event("change"));
      }), a(0, s, "color", function () {
        return this._getCSSStyle().color;
      }, function (t) {
        this._getCSSStyle().color != t && (this._getCSSStyle().color = t, !this._isChanged && this._graphics ? this._graphics.replaceTextColor(this.color) : this.isChanged = !0);
      }), a(0, s, "font", function () {
        return this._getCSSStyle().fontFamily;
      }, function (t) {
        this._currBitmapFont && (this._currBitmapFont = null, this.scale(1, 1)), e._bitmapFonts && e._bitmapFonts[t] && (this._currBitmapFont = e._bitmapFonts[t]), this._getCSSStyle().fontFamily = t, this.isChanged = !0;
      }), a(0, s, "fontSize", function () {
        return this._getCSSStyle().fontSize;
      }, function (t) {
        this._getCSSStyle().fontSize = t, this.isChanged = !0;
      }), a(0, s, "italic", function () {
        return this._getCSSStyle().italic;
      }, function (t) {
        this._getCSSStyle().italic = t, this.isChanged = !0;
      }), a(0, s, "align", function () {
        return this._getCSSStyle().align;
      }, function (t) {
        this._getCSSStyle().align = t, this.isChanged = !0;
      }), a(0, s, "valign", function () {
        return this._getCSSStyle().valign;
      }, function (t) {
        this._getCSSStyle().valign = t, this.isChanged = !0;
      }), a(0, s, "wordWrap", function () {
        return this._getCSSStyle().wordWrap;
      }, function (t) {
        this._getCSSStyle().wordWrap = t, this.isChanged = !0;
      }), a(0, s, "leading", function () {
        return this._getCSSStyle().leading;
      }, function (t) {
        this._getCSSStyle().leading = t, this.isChanged = !0;
      }), a(0, s, "bgColor", function () {
        return this._getCSSStyle().backgroundColor;
      }, function (t) {
        this._getCSSStyle().backgroundColor = t, this.isChanged = !0;
      }), a(0, s, "borderColor", function () {
        return this._getCSSStyle().borderColor;
      }, function (t) {
        this._getCSSStyle().borderColor = t, this.isChanged = !0;
      }), a(0, s, "stroke", function () {
        return this._getCSSStyle().stroke;
      }, function (t) {
        this._getCSSStyle().stroke = t, this.isChanged = !0;
      }), a(0, s, "strokeColor", function () {
        return this._getCSSStyle().strokeColor;
      }, function (t) {
        this._getCSSStyle().strokeColor = t, this.isChanged = !0;
      }), a(0, s, "isChanged", null, function (t) {
        this._isChanged !== t && (this._isChanged = t, t && i.timer.callLater(this, this.typeset));
      }), a(0, s, "scrollX", function () {
        return this._clipPoint ? this._clipPoint.x : 0;
      }, function (t) {
        if (!(this.overflow != e.SCROLL || this.textWidth < this._width) && this._clipPoint) {
          t = t < this.padding[3] ? this.padding[3] : t;
          var i = this._textWidth - this._width;
          t = t > i ? i : t;
          var n = this._height / (this._charSize.height + this.leading) | 1;
          this._clipPoint.x = t, this.renderText(this._lastVisibleLineIndex, n);
        }
      }), a(0, s, "scrollY", function () {
        return this._clipPoint ? this._clipPoint.y : 0;
      }, function (t) {
        if (!(this.overflow != e.SCROLL || this.textHeight < this._height) && this._clipPoint) {
          t = t < this.padding[0] ? this.padding[0] : t;
          var i = this._textHeight - this._height,
            n = (t = t > i ? i : t) / (this._charSize.height + this.leading) | 0;
          this._lastVisibleLineIndex = n;
          var r = 1 + (this._height / (this._charSize.height + this.leading) | 0);
          this._clipPoint.y = t, this.renderText(n, r);
        }
      }), a(0, s, "maxScrollX", function () {
        return this.textWidth < this._width ? 0 : this._textWidth - this._width;
      }), a(0, s, "maxScrollY", function () {
        return this.textHeight < this._height ? 0 : this._textHeight - this._height;
      }), a(0, s, "lines", function () {
        return this._isChanged && this.typeset(), this._lines;
      }), a(0, s, "underlineColor", function () {
        return this._underlineColor;
      }, function (t) {
        this._underlineColor = t, this._isChanged = !0, this.typeset();
      }), e.registerBitmapFont = function (t, i) {
        e._bitmapFonts || (e._bitmapFonts = {}), e._bitmapFonts[t] = i;
      }, e.unregisterBitmapFont = function (t, i) {
        if (void 0 === i && (i = !0), e._bitmapFonts && e._bitmapFonts[t]) {
          var n = e._bitmapFonts[t];
          i && n.destroy(), delete e._bitmapFonts[t];
        }
      }, e.setTextRightToLeft = function () {
        var t;
        (t = F.canvas.source.style).display = "none", t.position = "absolute", t.direction = "rtl", P._mainCanvas.source.style.direction = "rtl", laya.display.Text.RightToLeft = !0, F.document.body.appendChild(F.canvas.source);
      }, e.supportFont = function (t) {
        F.context.font = "10px sans-serif";
        var e = F.context.measureText("abcji").width;
        F.context.font = "10px " + t;
        var i = F.context.measureText("abcji").width;
        return console.log(e, i), e !== i;
      }, e._testWord = "游", e.langPacks = null, e.VISIBLE = "visible", e.SCROLL = "scroll", e.HIDDEN = "hidden", e.CharacterCache = !0, e.RightToLeft = !1, e._bitmapFonts = null, n(e, ["_fontFamilyMap", function () {
        return this._fontFamilyMap = {
          "报隶": "报隶-简",
          "黑体": "黑体-简",
          "楷体": "楷体-简",
          "兰亭黑": "兰亭黑-简",
          "隶变": "隶变-简",
          "凌慧体": "凌慧体-简",
          "翩翩体": "翩翩体-简",
          "苹方": "苹方-简",
          "手札体": "手札体-简",
          "宋体": "宋体-简",
          "娃娃体": "娃娃体-简",
          "魏碑": "魏碑-简",
          "行楷": "行楷-简",
          "雅痞": "雅痞-简",
          "圆体": "圆体-简"
        };
      }]), e;
    }(ct),
    gt = function (t) {
      function e() {
        this.focus = null, this.designWidth = 0, this.designHeight = 0, this.canvasRotation = !1, this.canvasDegree = 0, this.renderingEnabled = !0, this.screenAdaptationEnabled = !0, this._screenMode = "none", this._scaleMode = "noscale", this._alignV = "top", this._alignH = "left", this._bgColor = "black", this._mouseMoveTime = 0, this._renderCount = 0, this._frameStartTime = NaN, this._isFocused = !1, this._isVisibility = !1, this._scenes = null, this._frameRate = "fast", e.__super.call(this), this.offset = new C(), this._canvasTransform = new b(), this._previousOrientation = F.window.orientation;
        var t = this;
        this.transform = b.create(), this._scenes = [], this.mouseEnabled = !0, this.hitTestPrior = !0, this.autoSize = !1, this._displayedInStage = !0, this._isFocused = !0, this._isVisibility = !0;
        var i = F.window,
          n = this;
        i.addEventListener("focus", function () {
          t._isFocused = !0, n.event("focus"), n.event("focuschange");
        }), i.addEventListener("blur", function () {
          t._isFocused = !1, n.event("blur"), n.event("focuschange"), n._isInputting() && (Tt.inputElement.target.focus = !1);
        });
        var r = "visibilityState",
          a = "visibilitychange",
          s = i.document;
        void 0 !== s.hidden ? (a = "visibilitychange", r = "visibilityState") : void 0 !== s.mozHidden ? (a = "mozvisibilitychange", r = "mozVisibilityState") : void 0 !== s.msHidden ? (a = "msvisibilitychange", r = "msVisibilityState") : void 0 !== s.webkitHidden && (a = "webkitvisibilitychange", r = "webkitVisibilityState"), i.document.addEventListener(a, function () {
          "hidden" == F.document[r] ? n._setStageVisible(!1) : n._setStageVisible(!0);
        }), i.document.addEventListener("qbrowserVisibilityChange", function (t) {
          n._setStageVisible(!t.hidden);
        }), i.addEventListener("resize", function () {
          var e = F.window.orientation;
          null != e && e != t._previousOrientation && n._isInputting() && (Tt.inputElement.target.focus = !1), t._previousOrientation = e, n._isInputting() || n._resetCanvas();
        }), i.addEventListener("orientationchange", function (t) {
          n._resetCanvas();
        }), this.on("mousemove", this, this._onmouseMove), F.onMobile && this.on("mousedown", this, this._onmouseMove);
      }
      r(e, "laya.display.Stage", t);
      var o = e.prototype;
      return o._setStageVisible = function (t) {
        this._isVisibility != t && (this._isVisibility = t, this._isVisibility || this._isInputting() && (Tt.inputElement.target.focus = !1), this.event("visibilitychange"));
      }, o._isInputting = function () {
        return F.onMobile && Tt.isInputting;
      }, o._changeCanvasSize = function () {
        this.setScreenSize(F.clientWidth * F.pixelRatio, F.clientHeight * F.pixelRatio);
      }, o._resetCanvas = function () {
        if (this.screenAdaptationEnabled) {
          var t = P._mainCanvas;
          t.source.style;
          t.size(1, 1), i.timer.once(100, this, this._changeCanvasSize);
        }
      }, o.setScreenSize = function (t, e) {
        var i = !1;
        if ("none" !== this._screenMode) {
          if (i = (t / e < 1 ? "vertical" : "horizontal") !== this._screenMode) {
            var n = e;
            e = t, t = n;
          }
        }
        this.canvasRotation = i;
        var r = P._mainCanvas,
          a = r.source.style,
          o = this._canvasTransform.identity(),
          h = this._scaleMode,
          l = t / this.designWidth,
          u = e / this.designHeight,
          c = this.designWidth,
          _ = this.designHeight,
          d = t,
          f = e,
          p = F.pixelRatio;
        switch (this._width = this.designWidth, this._height = this.designHeight, h) {
          case "noscale":
            l = u = 1, d = this.designWidth, f = this.designHeight;
            break;
          case "showall":
            l = u = Math.min(l, u), c = d = Math.round(this.designWidth * l), _ = f = Math.round(this.designHeight * u);
            break;
          case "noborder":
            l = u = Math.max(l, u), d = Math.round(this.designWidth * l), f = Math.round(this.designHeight * u);
            break;
          case "full":
            l = u = 1, this._width = c = t, this._height = _ = e;
            break;
          case "fixedwidth":
            u = l, this._height = _ = Math.round(e / l);
            break;
          case "fixedheight":
            l = u, this._width = c = Math.round(t / u);
            break;
          case "fixedauto":
            t / e < this.designWidth / this.designHeight ? (u = l, this._height = _ = Math.round(e / l)) : (l = u, this._width = c = Math.round(t / u));
        }
        this.conchModel && this.conchModel.size(this._width, this._height), l *= this.scaleX, u *= this.scaleY, 1 === l && 1 === u ? this.transform.identity() : (this.transform.a = this._formatData(l / (d / c)), this.transform.d = this._formatData(u / (f / _)), this.conchModel && this.conchModel.scale(this.transform.a, this.transform.d)), r.size(c, _), s.changeWebGLSize(c, _), o.scale(d / c / p, f / _ / p), "left" === this._alignH ? this.offset.x = 0 : "right" === this._alignH ? this.offset.x = (t - d) / p : this.offset.x = .5 * (t - d) / p, "top" === this._alignV ? this.offset.y = 0 : "bottom" === this._alignV ? this.offset.y = (e - f) / p : this.offset.y = .5 * (e - f) / p, this.offset.x = Math.round(this.offset.x), this.offset.y = Math.round(this.offset.y), o.translate(this.offset.x, this.offset.y), this.canvasDegree = 0, i && ("horizontal" === this._screenMode ? (o.rotate(Math.PI / 2), o.translate(e / p, 0), this.canvasDegree = 90) : (o.rotate(-Math.PI / 2), o.translate(0, t / p), this.canvasDegree = -90)), o.a = this._formatData(o.a), o.d = this._formatData(o.d), o.tx = this._formatData(o.tx), o.ty = this._formatData(o.ty), a.transformOrigin = a.webkitTransformOrigin = a.msTransformOrigin = a.mozTransformOrigin = a.oTransformOrigin = "0px 0px 0px", a.transform = a.webkitTransform = a.msTransform = a.mozTransform = a.oTransform = "matrix(" + o.toString() + ")", o.translate(parseInt(a.left) || 0, parseInt(a.top) || 0), this.visible = !0, this._repaint = 1, this.event("resize");
      }, o._formatData = function (t) {
        return Math.abs(t) < 1e-6 ? 0 : Math.abs(1 - t) < .001 ? t > 0 ? 1 : -1 : t;
      }, o.getMousePoint = function () {
        return C.TEMP.setTo(this.mouseX, this.mouseY);
      }, o.repaint = function () {
        this._repaint = 1;
      }, o.parentRepaint = function () {}, o._loop = function () {
        return this.render(P.context, 0, 0), !0;
      }, o._onmouseMove = function (t) {
        this._mouseMoveTime = F.now();
      }, o.getTimeFromFrameStart = function () {
        return F.now() - this._frameStartTime;
      }, o.render = function (e, n, r) {
        if ("sleep" === this._frameRate && !P.isConchApp) {
          var a = F.now();
          if (!(a - this._frameStartTime >= 1e3)) return;
          this._frameStartTime = a;
        }
        if (this._renderCount++, P.isFlash && this.repaint(), this._style.visible) {
          this._frameStartTime = F.now();
          var o = "slow" !== ("mouse" === this._frameRate ? this._frameStartTime - this._mouseMoveTime < 2e3 ? "fast" : "slow" : this._frameRate),
            h = this._renderCount % 2 == 0;
          if (X.renderSlow = !o, o || h || P.isConchApp) {
            X.loopCount++, v.instance.runEvent(), i.timer._update(), s.update3DLoop();
            var l, u = 0,
              c = 0;
            if (P.isConchNode)
              for (u = 0, c = this._scenes.length; u < c; u++)(l = this._scenes[u]) && l._updateSceneConch();
            else
              for (u = 0, c = this._scenes.length; u < c; u++)(l = this._scenes[u]) && l._updateScene();
            if (P.isConchNode) {
              var _ = ct.CustomList;
              for (u = 0, c = _.length; u < c; u++) {
                var d = _[u];
                d.customRender(d.customContext, 0, 0);
              }
              return;
            }
          }
          P.isConchNode || this.renderingEnabled && (o || !h || P.isConchWebGL) && (P.isWebGL ? (e.clear(), t.prototype.render.call(this, e, n, r), X._show && X._sp && X._sp.render(e, n, r), s.clear(this._bgColor), s.beginFlush(), e.flush(), s.endFinish(), K.instance && K.getInstance().endDispose()) : (s.clear(this._bgColor), t.prototype.render.call(this, e, n, r), X._show && X._sp && X._sp.render(e, n, r)));
        } else this._renderCount % 5 == 0 && (X.loopCount++, v.instance.runEvent(), i.timer._update());
      }, o._requestFullscreen = function () {
        var t = F.document.documentElement;
        t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen();
      }, o._fullScreenChanged = function () {
        i.stage.event("fullscreenchange");
      }, o.exitFullscreen = function () {
        var t = F.document;
        t.exitFullscreen ? t.exitFullscreen() : t.mozCancelFullScreen ? t.mozCancelFullScreen() : t.webkitExitFullscreen && t.webkitExitFullscreen();
      }, a(0, o, "clientScaleX", function () {
        return this._transform ? this._transform.getScaleX() : 1;
      }), a(0, o, "desginHeight", function () {
        return console.debug("desginHeight已经弃用，请使用designHeight代替"), this.designHeight;
      }), a(0, o, "frameRate", function () {
        return this._frameRate;
      }, function (t) {
        if (this._frameRate = t, P.isConchApp) switch (this._frameRate) {
          case "slow":
            F.window.conch && F.window.conchConfig.setSlowFrame && F.window.conchConfig.setSlowFrame(!0);
            break;
          case "fast":
            F.window.conch && F.window.conchConfig.setSlowFrame && F.window.conchConfig.setSlowFrame(!1);
            break;
          case "mouse":
            F.window.conch && F.window.conchConfig.setMouseFrame && F.window.conchConfig.setMouseFrame(2e3);
            break;
          case "sleep":
            F.window.conch && F.window.conchConfig.setLimitFPS && F.window.conchConfig.setLimitFPS(1);
            break;
          default:
            throw new Error("Stage:frameRate invalid.");
        }
      }), a(0, o, "clientScaleY", function () {
        return this._transform ? this._transform.getScaleY() : 1;
      }), a(0, o, "width", t.prototype._$get_width, function (t) {
        this.designWidth = t, i.superSet(ct, this, "width", t), i.timer.callLater(this, this._changeCanvasSize);
      }), a(0, o, "alignH", function () {
        return this._alignH;
      }, function (t) {
        this._alignH = t, i.timer.callLater(this, this._changeCanvasSize);
      }), a(0, o, "isFocused", function () {
        return this._isFocused;
      }), a(0, o, "height", t.prototype._$get_height, function (t) {
        this.designHeight = t, i.superSet(ct, this, "height", t), i.timer.callLater(this, this._changeCanvasSize);
      }), a(0, o, "transform", function () {
        return this._tfChanged && this._adjustTransform(), this._transform = this._transform || b.create();
      }, t.prototype._$set_transform), a(0, o, "isVisibility", function () {
        return this._isVisibility;
      }), a(0, o, "desginWidth", function () {
        return console.debug("desginWidth已经弃用，请使用designWidth代替"), this.designWidth;
      }), a(0, o, "scaleMode", function () {
        return this._scaleMode;
      }, function (t) {
        this._scaleMode = t, i.timer.callLater(this, this._changeCanvasSize);
      }), a(0, o, "alignV", function () {
        return this._alignV;
      }, function (t) {
        this._alignV = t, i.timer.callLater(this, this._changeCanvasSize);
      }), a(0, o, "bgColor", function () {
        return this._bgColor;
      }, function (t) {
        this._bgColor = t, this.conchModel && this.conchModel.bgColor(t), P.isWebGL && (t ? e._wgColor = G.create(t)._color : F.onMiniGame || (e._wgColor = null)), F.onLimixiu ? e._wgColor = G.create(t)._color : P.canvas.style.background = t || "none";
      }), a(0, o, "mouseX", function () {
        return Math.round(v.instance.mouseX / this.clientScaleX);
      }), a(0, o, "mouseY", function () {
        return Math.round(v.instance.mouseY / this.clientScaleY);
      }), a(0, o, "screenMode", function () {
        return this._screenMode;
      }, function (t) {
        this._screenMode = t;
      }), a(0, o, "visible", t.prototype._$get_visible, function (t) {
        if (this.visible !== t) {
          i.superSet(ct, this, "visible", t);
          P._mainCanvas.source.style.visibility = t ? "visible" : "hidden";
        }
      }), a(0, o, "fullScreenEnabled", null, function (t) {
        var e = F.document,
          i = P.canvas;
        t ? (i.addEventListener("mousedown", this._requestFullscreen), i.addEventListener("touchstart", this._requestFullscreen), e.addEventListener("fullscreenchange", this._fullScreenChanged), e.addEventListener("mozfullscreenchange", this._fullScreenChanged), e.addEventListener("webkitfullscreenchange", this._fullScreenChanged), e.addEventListener("msfullscreenchange", this._fullScreenChanged)) : (i.removeEventListener("mousedown", this._requestFullscreen), i.removeEventListener("touchstart", this._requestFullscreen), e.removeEventListener("fullscreenchange", this._fullScreenChanged), e.removeEventListener("mozfullscreenchange", this._fullScreenChanged), e.removeEventListener("webkitfullscreenchange", this._fullScreenChanged), e.removeEventListener("msfullscreenchange", this._fullScreenChanged));
      }), e.SCALE_NOSCALE = "noscale", e.SCALE_EXACTFIT = "exactfit", e.SCALE_SHOWALL = "showall", e.SCALE_NOBORDER = "noborder", e.SCALE_FULL = "full", e.SCALE_FIXED_WIDTH = "fixedwidth", e.SCALE_FIXED_HEIGHT = "fixedheight", e.SCALE_FIXED_AUTO = "fixedauto", e.ALIGN_LEFT = "left", e.ALIGN_RIGHT = "right", e.ALIGN_CENTER = "center", e.ALIGN_TOP = "top", e.ALIGN_MIDDLE = "middle", e.ALIGN_BOTTOM = "bottom", e.SCREEN_NONE = "none", e.SCREEN_HORIZONTAL = "horizontal", e.SCREEN_VERTICAL = "vertical", e.FRAME_FAST = "fast", e.FRAME_SLOW = "slow", e.FRAME_MOUSE = "mouse", e.FRAME_SLEEP = "sleep", e.FRAME_MOUSE_THREDHOLD = 2e3, n(e, ["_wgColor", function () {
        return this._wgColor = [0, 0, 0, 1];
      }]), e;
    }(ct),
    vt = (function (t) {
      function e() {
        this.url = null, this._channel = null, this._tar = null, this._playEvents = null, this._stopEvents = null, e.__super.call(this), this.visible = !1, this.on("added", this, this._onParentChange), this.on("removed", this, this._onParentChange);
      }
      r(e, "laya.media.SoundNode", ct);
      var i = e.prototype;
      i._onParentChange = function () {
        this.target = this.parent;
      }, i.play = function (t, e) {
        void 0 === t && (t = 1), isNaN(t) && (t = 1), this.url && (this.stop(), this._channel = I.playSound(this.url, t, e));
      }, i.stop = function () {
        this._channel && !this._channel.isStopped && this._channel.stop(), this._channel = null;
      }, i._setPlayAction = function (t, e, i, n) {
        void 0 === n && (n = !0), this[i] && t && (n ? t.on(e, this, this[i]) : t.off(e, this, this[i]));
      }, i._setPlayActions = function (t, e, i, n) {
        if (void 0 === n && (n = !0), t && e) {
          var r = e.split(","),
            a = 0,
            s = 0;
          for (s = r.length, a = 0; a < s; a++) this._setPlayAction(t, r[a], i, n);
        }
      }, a(0, i, "playEvent", null, function (t) {
        this._playEvents = t, t && this._tar && this._setPlayActions(this._tar, t, "play");
      }), a(0, i, "target", null, function (t) {
        this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !1), this._setPlayActions(this._tar, this._stopEvents, "stop", !1)), this._tar = t, this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !0), this._setPlayActions(this._tar, this._stopEvents, "stop", !0));
      }), a(0, i, "stopEvent", null, function (t) {
        this._stopEvents = t, t && this._tar && this._setPlayActions(this._tar, t, "stop");
      });
    }(), function (t) {
      function e() {
        this._src = null, this._onload = null, this._onerror = null, e.__super.call(this);
      }
      r(e, "laya.resource.FileBitmap", ft);
      var i = e.prototype;
      return a(0, i, "src", function () {
        return this._src;
      }, function (t) {
        this._src = t;
      }), a(0, i, "onload", null, function (t) {}), a(0, i, "onerror", null, function (t) {}), e;
    }()),
    yt = function (t) {
      function e(t, i) {
        this._is2D = !1, e.__super.call(this);
        var n = this;
        if (this._source = this, "2D" === t || "AUTO" === t && !P.isWebGL) {
          this._is2D = !0, this._source = i || F.createElement("canvas"), this._w = this._source.width, this._h = this._source.height;
          var r = this;
          r.getContext = function (t, e) {
            if (n._ctx) return n._ctx;
            var i = n._ctx = n._source.getContext(t, e);
            return i && (i._canvas = r, P.isFlash || F.onLimixiu || (i.size = function (t, e) {})), i;
          };
        }
        this.lock = !0;
      }
      r(e, "laya.resource.HTMLCanvas", ft);
      var i = e.prototype;
      return i.clear = function () {
        this._ctx && this._ctx.clear();
      }, i.destroy = function () {
        this._ctx && this._ctx.destroy(), this._ctx = null, laya.resource.Resource.prototype.destroy.call(this);
      }, i.release = function () {}, i._setContext = function (t) {
        this._ctx = t;
      }, i.getContext = function (t, i) {
        return this._ctx ? this._ctx : this._ctx = e._createContext(this);
      }, i.getMemSize = function () {
        return 0;
      }, i.size = function (t, e) {
        (this._w != t || this._h != e || this._source && (this._source.width != t || this._source.height != e)) && (this._w = t, this._h = e, this.memorySize = this._w * this._h * 4, this._ctx && this._ctx.size(t, e), this._source && (this._source.height = e, this._source.width = t));
      }, i.getCanvas = function () {
        return this._source;
      }, i.toBase64 = function (t, e, i) {
        if (this._source)
          if (P.isConchApp && this._source.toBase64) this._source.toBase64(t, e, i);
          else {
            var n = this._source.toDataURL(t, e);
            i.call(this, n);
          }
      }, a(0, i, "context", function () {
        return this._ctx;
      }), a(0, i, "asBitmap", null, function (t) {}), e.create = function (t, i) {
        return new e(t, i);
      }, e.TYPE2D = "2D", e.TYPE3D = "3D", e.TYPEAUTO = "AUTO", e._createContext = null, e;
    }(),
    xt = (function (t) {
      function e(t, i, n, r, a, s, o, h) {
        throw e.__super.call(this), new Error("不允许new！");
      }
      r(e, "laya.resource.HTMLSubImage", ft), e.create = function (t, i, n, r, a, s, o, h) {
        return void 0 === h && (h = !1), new e(t, i, n, r, a, s, o, h);
      };
    }(), function (t) {
      function e() {
        this._frames = null, this._url = null, e.__super.call(this), this._setControlNode(this);
      }
      r(e, "laya.display.Animation", t);
      var n = e.prototype;
      n.destroy = function (t) {
        void 0 === t && (t = !0), this.stop(), laya.display.Sprite.prototype.destroy.call(this, t), this._frames = null, this._labels = null;
      }, n.play = function (t, e, i, n) {
        void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0), i && this._setFramesFromCache(i, n), this._isPlaying = !0, this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.loop = e, this._actionName = i, this._isReverse = 1 == this.wrapMode, this._frames && this.interval > 0 && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
      }, n._setFramesFromCache = function (t, i) {
        if (void 0 === i && (i = !1), this._url && (t = this._url + "#" + t), t && e.framesMap[t]) {
          var n;
          return (n = e.framesMap[t]) instanceof Array ? (this._frames = e.framesMap[t], this._count = this._frames.length) : (n.nodeRoot && (e.framesMap[t] = this._parseGraphicAnimationByData(n), n = e.framesMap[t]), this._frames = n.frames, this._count = this._frames.length, this._frameRateChanged || (this._interval = n.interval), this._labels = this._copyLabels(n.labels)), !0;
        }
        return i && console.log("ani not found:", t), !1;
      }, n._copyLabels = function (t) {
        if (!t) return null;
        var e;
        e = {};
        var i;
        for (i in t) e[i] = Q.copyArray([], t[i]);
        return e;
      }, n._frameLoop = function () {
        this._style.visible && this._style.alpha > .01 && t.prototype._frameLoop.call(this);
      }, n._displayToIndex = function (t) {
        this._frames && (this.graphics = this._frames[t]);
      }, n.clear = function () {
        this.stop(), this.graphics = null, this._frames = null, this._labels = null;
      }, n.loadImages = function (t, i) {
        return void 0 === i && (i = ""), this._url = "", this._setFramesFromCache(i) || (this.frames = e.framesMap[i] ? e.framesMap[i] : e.createFrames(t, i)), this;
      }, n.loadAtlas = function (t, n, r) {
        function a(i) {
          t === i && (s.frames = e.framesMap[r] ? e.framesMap[r] : e.createFrames(t, r), n && n.run());
        }
        void 0 === r && (r = ""), this._url = "";
        var s = this;
        return s._setFramesFromCache(r) || (st.getAtlas(t) ? a(t) : i.loader.load(t, l.create(null, a, [t]), null, "atlas")), this;
      }, n.loadAnimation = function (t, e, n) {
        this._url = t;
        return this._actionName || (this._actionName = ""), this._setFramesFromCache("") ? (this._setFramesFromCache(this._actionName, !0), this.index = 0, e && e.run()) : !n || st.getAtlas(n) ? this._loadAnimationData(t, e, n) : i.loader.load(n, l.create(this, this._loadAnimationData, [t, e, n]), null, "atlas"), this;
      }, n._loadAnimationData = function (t, n, r) {
        function a(i) {
          if (st.getRes(i) && t === i) {
            var r;
            if (e.framesMap[t + "#"]) o._setFramesFromCache(s._actionName, !0), s.index = 0, s._checkResumePlaying();
            else {
              var a = o._parseGraphicAnimation(st.getRes(t));
              if (!a) return;
              var h, l = a.animationList,
                u = 0,
                c = l.length;
              for (u = 0; u < c; u++) r = l[u], e.framesMap[t + "#" + r.name] = r, h || (h = r);
              h && (e.framesMap[t + "#"] = h, o._setFramesFromCache(s._actionName, !0), s.index = 0), s._checkResumePlaying();
            }
            n && n.run();
          }
        }
        var s = this;
        if (!r || st.getAtlas(r)) {
          var o = this;
          st.getRes(t) ? a(t) : i.loader.load(t, l.create(null, a, [t]), null, "json"), st.clearRes(t);
        } else console.warn("atlas load fail:" + r);
      }, n._parseGraphicAnimation = function (t) {
        return wt.parseAnimationData(t);
      }, n._parseGraphicAnimationByData = function (t) {
        return wt.parseAnimationByData(t);
      }, a(0, n, "frames", function () {
        return this._frames;
      }, function (t) {
        this._frames = t, t && (this._count = t.length, this._isPlaying ? this.play(this._index, this.loop, this._actionName) : this.index = this._index);
      }), a(0, n, "autoPlay", null, function (t) {
        t ? this.play() : this.stop();
      }), a(0, n, "source", null, function (t) {
        t.indexOf(".ani") > -1 ? this.loadAnimation(t) : t.indexOf(".json") > -1 || t.indexOf("als") > -1 || t.indexOf("atlas") > -1 ? this.loadAtlas(t) : this.loadImages(t.split(","));
      }), a(0, n, "autoAnimation", null, function (t) {
        this.play(0, !0, t, !1);
      }), e.createFrames = function (t, i) {
        var n, r, a = 0,
          o = 0;
        if ("string" == typeof t) {
          var h = st.getAtlas(t);
          if (h && h.length)
            for (n = [], a = 0, o = h.length; a < o; a++)(r = new s.createGraphics()).drawTexture(st.getRes(h[a]), 0, 0), n.push(r);
        } else if (t instanceof Array)
          for (n = [], a = 0, o = t.length; a < o; a++)(r = new s.createGraphics()).loadImage(t[a], 0, 0), n.push(r);
        return i && (e.framesMap[i] = n), n;
      }, e.clearCache = function (t) {
        var i, n = e.framesMap,
          r = t + "#";
        for (i in n) i !== t && 0 != i.indexOf(r) || delete e.framesMap[i];
      }, e.framesMap = {};
    }(pt), function (t) {
      function e() {
        this._targetDic = null, this._animationData = null, this._animationNewFrames = null, e.__super.call(this), null == e._sortIndexFun && (e._sortIndexFun = E.sortByKey("index", !1, !0));
      }
      r(e, "laya.display.FrameAnimation", t);
      var i = e.prototype;
      return i._setUp = function (t, e) {
        this._labels = null, this._animationNewFrames = null, this._targetDic = t, this._animationData = e, this.interval = 1e3 / e.frameRate, e.parsed ? (this._count = e.count, this._labels = e.labels, this._animationNewFrames = e.animationNewFrames) : (this._animationNewFrames = [], this._calculateDatas()), e.parsed = !0, e.labels = this._labels, e.count = this._count, e.animationNewFrames = this._animationNewFrames;
      }, i.clear = function () {
        t.prototype.clear.call(this), this._targetDic = null, this._animationData = null;
      }, i._displayToIndex = function (t) {
        if (this._animationData) {
          t < 0 && (t = 0), t > this._count && (t = this._count);
          var e = this._animationData.nodes,
            i = 0,
            n = e.length;
          for (i = 0; i < n; i++) this._displayNodeToFrame(e[i], t);
        }
      }, i._displayNodeToFrame = function (t, e, i) {
        i || (i = this._targetDic);
        var n = i[t.target];
        if (n) {
          var r, a, s, o = t.frames,
            h = t.keys,
            l = 0,
            u = h.length;
          for (l = 0; l < u; l++) s = (a = o[r = h[l]]).length > e ? a[e] : a[a.length - 1], n[r] = s;
        }
      }, i._calculateDatas = function () {
        if (this._animationData) {
          var t, e = this._animationData.nodes,
            i = 0,
            n = e.length;
          for (this._count = 0, i = 0; i < n; i++) t = e[i], this._calculateNodeKeyFrames(t);
          this._count += 1;
        }
      }, i._calculateNodeKeyFrames = function (t) {
        var i, n, r = t.keyframes,
          a = t.target;
        t.frames || (t.frames = {}), t.keys ? t.keys.length = 0 : t.keys = [], t.initValues || (t.initValues = {});
        for (i in r) n = r[i], t.frames[i] || (t.frames[i] = []), this._targetDic && this._targetDic[a] && (t.initValues[i] = this._targetDic[a][i]), n.sort(e._sortIndexFun), t.keys.push(i), this._calculateNodePropFrames(n, t.frames[i], i, a);
      }, i.resetToInitState = function () {
        if (this._targetDic && this._animationData) {
          var t, e, i = this._animationData.nodes,
            n = 0,
            r = i.length;
          for (n = 0; n < r; n++)
            if (t = i[n], e = t.initValues) {
              var a = this._targetDic[t.target];
              if (a) {
                var s;
                for (s in e) a[s] = e[s];
              }
            }
        }
      }, i._calculateNodePropFrames = function (t, e, i, n) {
        var r = 0,
          a = t.length - 1;
        for (e.length = t[a].index + 1, r = 0; r < a; r++) this._dealKeyFrame(t[r]), this._calculateFrameValues(t[r], t[r + 1], e);
        0 == a && (e[t[0].index] = t[0].value, this._animationNewFrames && (this._animationNewFrames[t[0].index] = !0)), this._dealKeyFrame(t[r]);
      }, i._dealKeyFrame = function (t) {
        t.label && "" != t.label && this.addLabel(t.label, t.index);
      }, i._calculateFrameValues = function (t, e, i) {
        var n, r = 0,
          a = t.index,
          s = e.index,
          o = t.value,
          h = e.value - t.value,
          l = s - a;
        if (s > this._count && (this._count = s), t.tween)
          for (null == (n = z[t.tweenMethod]) && (n = z.linearNone), r = a; r < s; r++) i[r] = n(r - a, o, h, l), this._animationNewFrames && (this._animationNewFrames[r] = !0);
        else
          for (r = a; r < s; r++) i[r] = o;
        this._animationNewFrames && (this._animationNewFrames[t.index] = !0, this._animationNewFrames[e.index] = !0), i[e.index] = e.value;
      }, e._sortIndexFun = null, e;
    }(pt)),
    Tt = function (t) {
      function e() {
        this._focus = !1, this._multiline = !1, this._editable = !0, this._restrictPattern = null, this._type = "text", this._prompt = "", this._promptColor = "#A9A9A9", this._originColor = "#000000", this._content = "", e.__super.call(this), this._maxChars = 1e5, this._width = 100, this._height = 20, this.multiline = !1, this.overflow = mt.SCROLL, this.on("mousedown", this, this._onMouseDown), this.on("undisplay", this, this._onUnDisplay);
      }
      r(e, "laya.display.Input", t);
      var s = e.prototype;
      return s.setSelection = function (t, e) {
        this.focus = !0, laya.display.Input.inputElement.selectionStart = t, laya.display.Input.inputElement.selectionEnd = e;
      }, s._onUnDisplay = function (t) {
        this.focus = !1;
      }, s._onMouseDown = function (t) {
        this.focus = !0;
      }, s._syncInputTransform = function () {
        var t = this.nativeInput,
          n = Q.getTransformRelativeToWindow(this, this.padding[3], this.padding[0]),
          r = this._width - this.padding[1] - this.padding[3],
          a = this._height - this.padding[0] - this.padding[2];
        P.isConchApp ? (t.setScale(n.scaleX, n.scaleY), t.setSize(r, a), t.setPos(n.x, n.y)) : (e.inputContainer.style.transform = e.inputContainer.style.webkitTransform = "scale(" + n.scaleX + "," + n.scaleY + ") rotate(" + i.stage.canvasDegree + "deg)", t.style.width = r + "px", t.style.height = a + "px", e.inputContainer.style.left = n.x + "px", e.inputContainer.style.top = n.y + "px");
      }, s.select = function () {
        this.nativeInput.select();
      }, s._setInputMethod = function () {
        e.input.parentElement && e.inputContainer.removeChild(e.input), e.area.parentElement && e.inputContainer.removeChild(e.area), e.inputElement = this._multiline ? e.area : e.input, e.inputContainer.appendChild(e.inputElement), mt.RightToLeft && (e.inputElement.style.direction = "rtl");
      }, s._focusIn = function () {
        laya.display.Input.isInputting = !0;
        var t = this.nativeInput;
        this._focus = !0;
        var e = t.style;
        e.whiteSpace = this.wordWrap ? "pre-wrap" : "nowrap", this._setPromptColor(), t.readOnly = !this._editable, P.isConchApp && (t.setType(this._type), t.setForbidEdit(!this._editable)), t.maxLength = this._maxChars;
        this.padding;
        if (t.type = this._type, t.value = this._content, t.placeholder = this._prompt, i.stage.off("keydown", this, this._onKeyDown), i.stage.on("keydown", this, this._onKeyDown), i.stage.focus = this, this.event("focus"), F.onPC && t.focus(), !F.onMiniGame) {
          this._text;
          this._text = null;
        }
        this.typeset(), t.setColor(this._originColor), t.setFontSize(this.fontSize), t.setFontFace(F.onIPhone ? mt._fontFamilyMap[this.font] || this.font : this.font), P.isConchApp && t.setMultiAble && t.setMultiAble(this._multiline), e.lineHeight = this.leading + this.fontSize + "px", e.fontStyle = this.italic ? "italic" : "normal", e.fontWeight = this.bold ? "bold" : "normal", e.textAlign = this.align, e.padding = "0 0", this._syncInputTransform(), !P.isConchApp && F.onPC && i.timer.frameLoop(1, this, this._syncInputTransform);
      }, s._setPromptColor = function () {
        (e.promptStyleDOM = F.getElementById("promptStyle")) || ((e.promptStyleDOM = F.createElement("style")).setAttribute("id", "promptStyle"), F.document.head.appendChild(e.promptStyleDOM)), e.promptStyleDOM.innerText = "input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {color:" + this._promptColor + "}input:-moz-placeholder, textarea:-moz-placeholder {color:" + this._promptColor + "}input::-moz-placeholder, textarea::-moz-placeholder {color:" + this._promptColor + "}input:-ms-input-placeholder, textarea:-ms-input-placeholder {color:" + this._promptColor + "}";
      }, s._focusOut = function () {
        laya.display.Input.isInputting = !1, this._focus = !1, this._text = null, this._content = this.nativeInput.value, this._content ? (i.superSet(mt, this, "text", this._content), i.superSet(mt, this, "color", this._originColor)) : (i.superSet(mt, this, "text", this._prompt), i.superSet(mt, this, "color", this._promptColor)), i.stage.off("keydown", this, this._onKeyDown), i.stage.focus = null, this.event("blur"), P.isConchApp && this.nativeInput.blur(), F.onPC && i.timer.clear(this, this._syncInputTransform);
      }, s._onKeyDown = function (t) {
        13 === t.keyCode && (F.onMobile && !this._multiline && (this.focus = !1), this.event("enter"));
      }, s.changeText = function (e) {
        this._content = e, this._focus ? (this.nativeInput.value = e || "", this.event("change")) : t.prototype.changeText.call(this, e);
      }, a(0, s, "color", t.prototype._$get_color, function (t) {
        this._focus && this.nativeInput.setColor(t), i.superSet(mt, this, "color", this._content ? t : this._promptColor), this._originColor = t;
      }), a(0, s, "inputElementYAdjuster", function () {
        return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。"), 0;
      }, function (t) {
        console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。");
      }), a(0, s, "multiline", function () {
        return this._multiline;
      }, function (t) {
        this._multiline = t, this.valign = t ? "top" : "middle";
      }), a(0, s, "maxChars", function () {
        return this._maxChars;
      }, function (t) {
        t <= 0 && (t = 1e5), this._maxChars = t;
      }), a(0, s, "text", function () {
        return this._focus ? this.nativeInput.value : this._content || "";
      }, function (t) {
        i.superSet(mt, this, "color", this._originColor), t += "", this._focus ? (this.nativeInput.value = t || "", this.event("change")) : (this._multiline || (t = t.replace(/\r?\n/g, "")), this._content = t, t ? i.superSet(mt, this, "text", t) : (i.superSet(mt, this, "text", this._prompt), i.superSet(mt, this, "color", this.promptColor)));
      }), a(0, s, "nativeInput", function () {
        return this._multiline ? e.area : e.input;
      }), a(0, s, "prompt", function () {
        return this._prompt;
      }, function (t) {
        !this._text && t && i.superSet(mt, this, "color", this._promptColor), this.promptColor = this._promptColor, this._text ? i.superSet(mt, this, "text", this._text == this._prompt ? t : this._text) : i.superSet(mt, this, "text", t), this._prompt = mt.langPacks && mt.langPacks[t] ? mt.langPacks[t] : t;
      }), a(0, s, "focus", function () {
        return this._focus;
      }, function (t) {
        var i = this.nativeInput;
        this._focus !== t && (t ? (i.target ? i.target._focusOut() : this._setInputMethod(), i.target = this, this._focusIn()) : (i.target = null, this._focusOut(), F.document.body.scrollTop = 0, i.blur(), P.isConchApp ? i.setPos(-1e4, -1e4) : e.inputContainer.contains(i) && e.inputContainer.removeChild(i)));
      }), a(0, s, "restrict", function () {
        return this._restrictPattern ? this._restrictPattern.source : "";
      }, function (t) {
        t ? ((t = "[^" + t + "]").indexOf("^^") > -1 && (t = t.replace("^^", "")), this._restrictPattern = new RegExp(t, "g")) : this._restrictPattern = null;
      }), a(0, s, "editable", function () {
        return this._editable;
      }, function (t) {
        this._editable = t, P.isConchApp && e.input.setForbidEdit(!t);
      }), a(0, s, "promptColor", function () {
        return this._promptColor;
      }, function (t) {
        this._promptColor = t, this._content || i.superSet(mt, this, "color", t);
      }), a(0, s, "type", function () {
        return this._type;
      }, function (t) {
        this._getCSSStyle().password = "password" == t, this._type = t, P.isConchApp && this.nativeInput.setType(t);
      }), a(0, s, "inputElementXAdjuster", function () {
        return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。"), 0;
      }, function (t) {
        console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。");
      }), a(0, s, "asPassword", function () {
        return this._getCSSStyle().password;
      }, function (t) {
        this._getCSSStyle().password = t, this._type = "password", console.warn('deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去'), this.isChanged = !0;
      }), e.__init__ = function () {
        e._createInputElement(), F.onMobile && P.canvas.addEventListener(e.IOS_IFRAME ? F.onMiniGame ? "touchend" : "click" : "touchend", e._popupInputMethod);
      }, e._popupInputMethod = function (t) {
        if (laya.display.Input.isInputting) {
          laya.display.Input.inputElement.focus();
        }
      }, e._createInputElement = function () {
        e._initInput(e.area = F.createElement("textarea")), e._initInput(e.input = F.createElement("input")), (e.inputContainer = F.createElement("div")).style.position = "absolute", e.inputContainer.style.zIndex = 1e5, F.container.appendChild(e.inputContainer), e.inputContainer.setPos = function (t, i) {
          e.inputContainer.style.left = t + "px", e.inputContainer.style.top = i + "px";
        };
      }, e._initInput = function (t) {
        var i = t.style;
        i.cssText = "position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;", i.resize = "none", i.backgroundColor = "transparent", i.border = "none", i.outline = "none", i.zIndex = 1, t.addEventListener("input", e._processInputting), t.addEventListener("mousemove", e._stopEvent), t.addEventListener("mousedown", e._stopEvent), t.addEventListener("touchmove", e._stopEvent), t.setFontFace = function (e) {
          t.style.fontFamily = e;
        }, P.isConchApp || (t.setColor = function (e) {
          t.style.color = e;
        }, t.setFontSize = function (e) {
          t.style.fontSize = e + "px";
        });
      }, e._processInputting = function (t) {
        var e = laya.display.Input.inputElement.target;
        if (e) {
          var i = laya.display.Input.inputElement.value;
          e._restrictPattern && (i = i.replace(/\u2006|\x27/g, ""), e._restrictPattern.test(i) && (i = i.replace(e._restrictPattern, ""), laya.display.Input.inputElement.value = i)), e._text = i, e.event("input");
        }
      }, e._stopEvent = function (t) {
        "touchmove" == t.type && t.preventDefault(), t.stopPropagation && t.stopPropagation();
      }, e.TYPE_TEXT = "text", e.TYPE_PASSWORD = "password", e.TYPE_EMAIL = "email", e.TYPE_URL = "url", e.TYPE_NUMBER = "number", e.TYPE_RANGE = "range", e.TYPE_DATE = "date", e.TYPE_MONTH = "month", e.TYPE_WEEK = "week", e.TYPE_TIME = "time", e.TYPE_DATE_TIME = "datetime", e.TYPE_DATE_TIME_LOCAL = "datetime-local", e.TYPE_SEARCH = "search", e.input = null, e.area = null, e.inputElement = null, e.inputContainer = null, e.confirmButton = null, e.promptStyleDOM = null, e.inputHeight = 45, e.isInputting = !1, e.stageMatrix = null, n(e, ["IOS_IFRAME", function () {
        return this.IOS_IFRAME = F.onIOS && F.window.top != F.window.self;
      }]), e;
    }(mt),
    St = function (t) {
      function e(t, i) {
        this._recreateLock = !1, this._needReleaseAgain = !1, this._enableMerageInAtlas = !0, e.__super.call(this), this._init_(t, i);
      }
      r(e, "laya.resource.HTMLImage", vt);
      var i = e.prototype;
      return i._init_ = function (t, e) {
        this._src = t, this._source = new F.window.Image(), e && (e.onload && (this.onload = e.onload), e.onerror && (this.onerror = e.onerror), e.onCreate && e.onCreate(this)), 0 != t.indexOf("data:image") && (this._source.crossOrigin = ""), t && (this._source.src = t);
      }, i.recreateResource = function () {
        var t = this;
        if ("" === this._src) throw new Error("src no null！");
        if (this._needReleaseAgain = !1, this._source) {
          if (this._recreateLock) return;
          this.memorySize = this._w * this._h * 4, this._recreateLock = !1, this.completeCreate();
        } else {
          this._recreateLock = !0;
          var e = this;
          this._source = new F.window.Image(), this._source.crossOrigin = "", this._source.onload = function () {
            if (e._needReleaseAgain) return e._needReleaseAgain = !1, e._source.onload = null, void(e._source = null);
            e._source.onload = null, e.memorySize = t._w * t._h * 4, e._recreateLock = !1, e.completeCreate();
          }, this._source.src = this._src;
        }
      }, i.disposeResource = function () {
        this._recreateLock && (this._needReleaseAgain = !0), this._source && (this._source = null, this.memorySize = 0);
      }, i.onresize = function () {
        this._w = this._source.width, this._h = this._source.height;
      }, a(0, i, "onload", null, function (t) {
        var e = this;
        this._onload = t, this._source && (this._source.onload = null != this._onload ? function () {
          e.onresize(), e._onload();
        } : null);
      }), a(0, i, "onerror", null, function (t) {
        var e = this;
        this._onerror = t, this._source && (this._source.onerror = null != this._onerror ? function () {
          e._onerror();
        } : null);
      }), a(0, i, "enableMerageInAtlas", function () {
        return this._enableMerageInAtlas;
      }, function (t) {
        this._enableMerageInAtlas = t, P.isConchApp && this._source && (this._source.enableMerageInAtlas = t);
      }), e.create = function (t, i) {
        return new e(t, i);
      }, e;
    }(),
    wt = (function (t) {
      function e() {
        this._target = null, this._playEvents = null, this._initData = {}, this._aniKeys = null, this._effectClass = null, e.__super.call(this);
      }
      r(e, "laya.display.EffectAnimation", t);
      var i = e.prototype;
      i._onOtherBegin = function (t) {
        t != this && this.stop();
      }, i.addEvent = function () {
        this._target && this._playEvents && (this._setControlNode(this._target), this._target.on(this._playEvents, this, this._onPlayAction));
      }, i._onPlayAction = function () {
        this.play(0, !1);
      }, i.play = function (t, e, i, n) {
        void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0), this._target && (this._target.event("effectanimationbegin", [this]), this._recordInitData(), laya.display.AnimationPlayerBase.prototype.play.call(this, t, e, i, n));
      }, i._recordInitData = function () {
        if (this._aniKeys) {
          var t = 0,
            e = 0;
          e = this._aniKeys.length;
          var i;
          for (t = 0; t < e; t++) i = this._aniKeys[t], this._initData[i] = this._target[i];
        }
      }, i._displayToIndex = function (t) {
        if (this._animationData) {
          t < 0 && (t = 0), t > this._count && (t = this._count);
          var e = this._animationData.nodes,
            i = 0,
            n = e.length;
          for (n = n > 1 ? 1 : n, i = 0; i < n; i++) this._displayNodeToFrame(e[i], t);
        }
      }, i._displayNodeToFrame = function (t, e, i) {
        if (this._target) {
          var n;
          n = this._target;
          var r, a, s, o, h = t.frames,
            l = t.keys,
            u = 0,
            c = l.length;
          o = t.secondFrames;
          var _, d, f, p, m = 0;
          for (u = 0; u < c; u++) a = h[r = l[u]], -1 == (m = o[r]) ? s = this._initData[r] : e < m ? (f = (d = t.keyframes[r])[0]).tween ? (null == (_ = z[f.tweenMethod]) && (_ = z.linearNone), p = d[1], s = _(e, this._initData[r], p.value - this._initData[r], p.index)) : s = this._initData[r] : s = a.length > e ? a[e] : a[a.length - 1], n[r] = s;
        }
      }, i._calculateNodeKeyFrames = function (e) {
        t.prototype._calculateNodeKeyFrames.call(this, e);
        var i, n, r, a = e.keyframes;
        e.target;
        r = {}, e.secondFrames = r;
        for (i in a)(n = a[i]).length <= 1 ? r[i] = -1 : r[i] = n[1].index;
      }, a(0, i, "target", function () {
        return this._target;
      }, function (t) {
        this._target && this._target.off("effectanimationbegin", this, this._onOtherBegin), this._target = t, this._target && this._target.on("effectanimationbegin", this, this._onOtherBegin), this.addEvent();
      }), a(0, i, "playEvent", null, function (t) {
        this._playEvents = t, t && this.addEvent();
      }), a(0, i, "effectData", null, function (t) {
        if (t) {
          var e;
          (e = t.animations) && e[0] && (this._setUp({}, e[0]), e[0].nodes && e[0].nodes[0] && (this._aniKeys = e[0].nodes[0].keys));
        }
      }), a(0, i, "effectClass", null, function (t) {
        if (this._effectClass = k.getClass(t), this._effectClass) {
          var e;
          if (e = this._effectClass.uiView) {
            var i;
            (i = e.animations) && i[0] && (this._setUp({}, i[0]), i[0].nodes && i[0].nodes[0] && (this._aniKeys = i[0].nodes[0].keys));
          }
        }
      }), e.EffectAnimationBegin = "effectanimationbegin";
    }(xt), function (t) {
      function e() {
        this.animationList = null, this.animationDic = null, this._nodeList = null, this._nodeDefaultProps = null, this._gList = null, this._nodeIDAniDic = {}, this._rootNode = null, this._nodeGDic = null, e.__super.call(this);
      }
      var i;
      r(e, "laya.utils.GraphicAnimation", t);
      var a = e.prototype;
      return a._parseNodeList = function (t) {
        this._nodeList || (this._nodeList = []), this._nodeDefaultProps[t.compId] = t.props, t.compId && this._nodeList.push(t.compId);
        var e = t.child;
        if (e) {
          var i = 0,
            n = e.length;
          for (i = 0; i < n; i++) this._parseNodeList(e[i]);
        }
      }, a._calGraphicData = function (t) {
        if (this._setUp(null, t), this._createGraphicData(), this._nodeIDAniDic) {
          var e;
          for (e in this._nodeIDAniDic) this._nodeIDAniDic[e] = null;
        }
      }, a._createGraphicData = function () {
        var t = [],
          e = 0,
          i = this.count,
          n = this._animationNewFrames;
        n || (n = []);
        var r;
        for (e = 0; e < i; e++) !n[e] && r || (r = this._createFrameGraphic(e)), t.push(r);
        this._gList = t;
      }, a._createFrameGraphic = function (t) {
        var i = s.createGraphics();
        return e._rootMatrix || (e._rootMatrix = new b()), this._updateNodeGraphic(this._rootNode, t, e._rootMatrix, i), i;
      }, a._updateNodeGraphic = function (t, e, i, n, r) {
        void 0 === r && (r = 1);
        var a, s = (a = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId])).alpha * r;
        if (!(s < .01)) {
          a.resultTransform || (a.resultTransform = b.create());
          var o;
          o = a.resultTransform, b.mul(a.transform, i, o);
          var h;
          a.skin && (h = this._getTextureByUrl(a.skin)) && (o._checkTransform() ? (n.drawTexture(h, 0, 0, a.width, a.height, o, s), a.resultTransform = null) : n.drawTexture(h, o.tx, o.ty, a.width, a.height, null, s));
          var l;
          if (l = t.child) {
            var u = 0,
              c = 0;
            for (c = l.length, u = 0; u < c; u++) this._updateNodeGraphic(l[u], e, o, n, s);
          }
        }
      }, a._updateNoChilds = function (t, e) {
        if (t.skin) {
          var i = this._getTextureByUrl(t.skin);
          if (i) {
            var n = t.transform;
            n._checkTransform();
            !n.bTransform ? e.drawTexture(i, n.tx, n.ty, t.width, t.height, null, t.alpha) : e.drawTexture(i, 0, 0, t.width, t.height, n.clone(), t.alpha);
          }
        }
      }, a._updateNodeGraphic2 = function (t, e, i) {
        var n;
        if (n = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId]), t.child) {
          var r = n.transform;
          r._checkTransform();
          var a = !1,
            s = !1;
          s = (a = !r.bTransform) && (0 != r.tx || 0 != r.ty);
          var o = !1;
          (o = r.bTransform || 1 != n.alpha) && i.save(), 1 != n.alpha && i.alpha(n.alpha), a ? s && i.translate(r.tx, r.ty) : i.transform(r.clone());
          var h;
          h = t.child;
          var l;
          if (n.skin && (l = this._getTextureByUrl(n.skin)) && i.drawTexture(l, 0, 0, n.width, n.height), h) {
            var u = 0,
              c = 0;
            for (c = h.length, u = 0; u < c; u++) this._updateNodeGraphic2(h[u], e, i);
          }
          o ? i.restore() : a ? s && i.translate(-r.tx, -r.ty) : i.transform(r.clone().invert());
        } else this._updateNoChilds(n, i);
      }, a._calculateNodeKeyFrames = function (e) {
        t.prototype._calculateNodeKeyFrames.call(this, e), this._nodeIDAniDic[e.target] = e;
      }, a.getNodeDataByID = function (t) {
        return this._nodeIDAniDic[t];
      }, a._getParams = function (t, i, n, r) {
        var a = e._temParam;
        a.length = i.length;
        var s = 0,
          o = i.length;
        for (s = 0; s < o; s++) a[s] = this._getObjVar(t, i[s][0], n, i[s][1], r);
        return a;
      }, a._getObjVar = function (t, e, i, n, r) {
        if (t.hasOwnProperty(e)) {
          var a = t[e];
          if (i >= a.length && (i = a.length - 1), void 0 != t[e][i]) return t[e][i];
        }
        return r.hasOwnProperty(e) ? r[e] : n;
      }, a._getNodeGraphicData = function (t, n, r) {
        r || (r = i.create()), r.transform ? r.transform.identity() : r.transform = b.create();
        var a = this.getNodeDataByID(t);
        if (!a) return r;
        var s = a.frames,
          o = this._getParams(s, e._drawTextureCmd, n, this._nodeDefaultProps[t]),
          h = o[0],
          l = NaN,
          u = NaN,
          c = o[5],
          _ = o[6],
          d = o[13],
          f = o[14],
          p = o[7],
          m = o[8],
          g = o[9],
          v = o[11],
          y = o[12];
        l = o[3], u = o[4], 0 != l && 0 != u || (h = null), -1 == l && (l = 0), -1 == u && (u = 0);
        var x;
        r.skin = h, r.width = l, r.height = u, h && ((x = this._getTextureByUrl(h)) ? (l || (l = x.sourceWidth), u || (u = x.sourceHeight)) : console.warn("lost skin:", h, ",you may load pics first")), r.alpha = o[10];
        var T;
        T = r.transform, 0 != d && (c = d * l), 0 != f && (_ = f * u), 0 == c && 0 == _ || T.translate(-c, -_);
        var S = null;
        if (g || 1 !== p || 1 !== m || v || y) {
          (S = e._tempMt).identity(), S.bTransform = !0;
          var w = .0174532922222222 * (g - v),
            E = .0174532922222222 * (g + y),
            C = Math.cos(E),
            M = Math.sin(E),
            I = Math.sin(w),
            D = Math.cos(w);
          S.a = p * C, S.b = p * M, S.c = -m * I, S.d = m * D, S.tx = S.ty = 0;
        }
        return S && (T = b.mul(T, S, T)), T.translate(o[1], o[2]), r;
      }, a._getTextureByUrl = function (t) {
        return st.getRes(t);
      }, a.setAniData = function (t, i) {
        if (t.animations) {
          this._nodeDefaultProps = {}, this._nodeGDic = {}, this._nodeList && (this._nodeList.length = 0), this._rootNode = t, this._parseNodeList(t);
          var n, r = {},
            a = [],
            s = t.animations,
            o = 0,
            h = s.length;
          for (o = 0; o < h; o++)
            if (n = s[o], this._labels = null, (!i || i == n.name) && n) {
              try {
                this._calGraphicData(n);
              } catch (t) {
                console.warn("parse animation fail:" + n.name + ",empty animation created"), this._gList = [];
              }
              var l = {};
              l.interval = 1e3 / n.frameRate, l.frames = this._gList, l.labels = this._labels, l.name = n.name, a.push(l), r[n.name] = l;
            }
          this.animationList = a, this.animationDic = r;
        }
        e._temParam.length = 0;
      }, a.parseByData = function (t) {
        var e, i;
        e = t.nodeRoot, i = t.aniO, delete t.nodeRoot, delete t.aniO, this._nodeDefaultProps = {}, this._nodeGDic = {}, this._nodeList && (this._nodeList.length = 0), this._rootNode = e, this._parseNodeList(e), this._labels = null;
        try {
          this._calGraphicData(i);
        } catch (t) {
          console.warn("parse animation fail:" + i.name + ",empty animation created"), this._gList = [];
        }
        var n = t;
        return n.interval = 1e3 / i.frameRate, n.frames = this._gList, n.labels = this._labels, n.name = i.name, n;
      }, a.setUpAniData = function (t) {
        if (t.animations) {
          var e, i = {},
            n = [],
            r = t.animations,
            a = 0,
            s = r.length;
          for (a = 0; a < s; a++)
            if (e = r[a]) {
              var o = {};
              o.name = e.name, o.aniO = e, o.nodeRoot = t, n.push(o), i[e.name] = o;
            }
          this.animationList = n, this.animationDic = i;
        }
      }, a._clear = function () {
        if (this.animationList = null, this.animationDic = null, this._gList = null, this._nodeGDic) {
          var t, e;
          for (t in this._nodeGDic)(e = this._nodeGDic[t]) && e.recover();
        }
        this._nodeGDic = null;
      }, e.parseAnimationByData = function (t) {
        e._I || (e._I = new e());
        var i;
        return i = e._I.parseByData(t), e._I._clear(), i;
      }, e.parseAnimationData = function (t) {
        e._I || (e._I = new e()), e._I.setUpAniData(t);
        var i;
        return i = {}, i.animationList = e._I.animationList, i.animationDic = e._I.animationDic, e._I._clear(), i;
      }, e._drawTextureCmd = [
        ["skin", null],
        ["x", 0],
        ["y", 0],
        ["width", -1],
        ["height", -1],
        ["pivotX", 0],
        ["pivotY", 0],
        ["scaleX", 1],
        ["scaleY", 1],
        ["rotation", 0],
        ["alpha", 1],
        ["skewX", 0],
        ["skewY", 0],
        ["anchorX", 0],
        ["anchorY", 0]
      ], e._temParam = [], e._I = null, e._rootMatrix = null, n(e, ["_tempMt", function () {
        return this._tempMt = new b();
      }]), e.__init$ = function () {
        i = function () {
          function t() {
            this.skin = null, this.transform = null, this.resultTransform = null, this.width = NaN, this.height = NaN, this.alpha = 1;
          }
          r(t, "");
          return t.prototype.recover = function () {
            this.skin = null, this.width = 0, this.height = 0, this.alpha = 1, this.transform && (this.transform.destroy(), this.transform = null), this.resultTransform && (this.resultTransform.destroy(), this.resultTransform = null), j.recover("GraphicNode", this);
          }, t.create = function () {
            return j.getItemByClass("GraphicNode", t);
          }, t;
        }();
      }, e;
    }(xt));
  i.__init([h, ot, P, F, Y, D, ut, wt]);
}(window, document, Laya),
function (t, e, i) {
  i.un, i.uns, i.static;
  var n = i.class;
  i.getset, i.__newvec;
  new(function () {
    function t() {}
    return n(t, "LayaMain"), t;
  }())();
}(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function (t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function (t, e, i) {
    i.un, i.uns;
    var n = i.static,
      r = i.class,
      a = i.getset,
      s = (i.__newvec, laya.utils.Browser),
      o = (laya.events.Event, laya.events.EventDispatcher),
      h = laya.resource.HTMLImage,
      l = laya.utils.Handler,
      u = laya.display.Input,
      c = laya.net.Loader,
      _ = laya.net.LocalStorage,
      d = (laya.maths.Matrix, laya.renders.Render),
      f = laya.utils.RunDriver,
      p = laya.media.SoundChannel,
      m = laya.media.SoundManager,
      g = laya.net.URL,
      v = laya.utils.Utils,
      y = function () {
        function e() {}
        return r(e, "laya.wx.mini.MiniAdpter"), e.getJson = function (t) {
          return JSON.parse(t);
        }, e.init = function (n, r) {
          if (void 0 === n && (n = !1), void 0 === r && (r = !1), !(e._inited || (e._inited = !0, (e.window = t).navigator.userAgent.indexOf("MiniGame") < 0))) {
            e.isZiYu = r, e.isPosMsgYu = n, e.EnvConfig = {};
            try {
              laya.webgl.resource.WebGLCanvas.premulAlpha = !0;
            } catch (t) {}
            e.isZiYu || (x.setNativeFileDir("/layaairGame"), x.existDir(x.fileNativeDir, l.create(e, e.onMkdirCallBack))), e.systemInfo = wx.getSystemInfoSync(), e.window.focus = function () {}, i._getUrlPath = function () {}, e.window.logtime = function (t) {}, e.window.alertTimeLog = function (t) {}, e.window.resetShareInfo = function () {}, e.window.CanvasRenderingContext2D = function () {}, e.window.CanvasRenderingContext2D.prototype = e.window.wx.createCanvas().getContext("2d").__proto__, e.window.document.body.appendChild = function () {}, e.EnvConfig.pixelRatioInt = 0, f.getPixelRatio = e.pixelRatio, e._preCreateElement = s.createElement, s.createElement = e.createElement, f.createShaderCondition = e.createShaderCondition, v.parseXMLFromString = e.parseXMLFromString, u._createInputElement = S._createInputElement, e.EnvConfig.load = c.prototype.load, c.prototype.load = E.prototype.load, c.prototype._loadImage = T.prototype._loadImage, _._baseClass = w, w.__init__(), e.onReciveData();
          }
        }, e.onReciveData = function () {
          laya.wx.mini.MiniAdpter.isZiYu && wx.onMessage(function (t) {
            "opendatacontext" == t.isLoad ? t.url && (x.ziyuFileData[t.url] = t.atlasdata, x.ziyuFileTextureData[t.imgReadyUrl] = t.imgNativeUrl) : "openJsondatacontext" == t.isLoad && t.url && (x.ziyuFileData[t.url] = t.atlasdata);
          });
        }, e.measureText = function (t) {
          var i = e._measureText(t);
          return i || (i = {
            width: 16
          }, console.warn("-------微信获取文字宽度失败----等待修复---------")), i;
        }, e.getUrlEncode = function (t, e) {
          return -1 != t.indexOf(".fnt") ? "utf8" : "arraybuffer" == e ? "" : "ascii";
        }, e.downLoadFile = function (t, e, i, n) {
          void 0 === e && (e = ""), void 0 === n && (n = "ascii");
          x.getFileInfo(t) ? null != i && i.runWith([0]) : x.downLoadFile(t, e, i, n);
        }, e.remove = function (t, e) {
          x.deleteFile("", t, e, "", 0);
        }, e.removeAll = function () {
          x.deleteAll();
        }, e.hasNativeFile = function (t) {
          return x.isLocalNativeFile(t);
        }, e.getFileInfo = function (t) {
          return x.getFileInfo(t);
        }, e.getFileList = function () {
          return x.filesListObj;
        }, e.exitMiniProgram = function () {
          e.window.wx.exitMiniProgram();
        }, e.onMkdirCallBack = function (t, e) {
          t || (x.filesListObj = JSON.parse(e.data));
        }, e.pixelRatio = function () {
          if (!e.EnvConfig.pixelRatioInt) try {
            return e.EnvConfig.pixelRatioInt = e.systemInfo.pixelRatio, e.systemInfo.pixelRatio;
          } catch (t) {}
          return e.EnvConfig.pixelRatioInt;
        }, e.createElement = function (i) {
          if ("canvas" == i) {
            var n;
            return 1 == e.idx ? e.isZiYu ? (n = sharedCanvas).style = {} : n = t.canvas : n = t.wx.createCanvas(), e.idx++, n;
          }
          if ("textarea" == i || "input" == i) return e.onCreateInput(i);
          if ("div" == i) {
            var r = e._preCreateElement(i);
            return r.contains = function (t) {
              return null;
            }, r.removeChild = function (t) {}, r;
          }
          return e._preCreateElement(i);
        }, e.onCreateInput = function (t) {
          var i = e._preCreateElement(t);
          return i.focus = S.wxinputFocus, i.blur = S.wxinputblur, i.style = {}, i.value = 0, i.parentElement = {}, i.placeholder = {}, i.type = {}, i.setColor = function (t) {}, i.setType = function (t) {}, i.setFontFace = function (t) {}, i.addEventListener = function (t) {}, i.contains = function (t) {
            return null;
          }, i.removeChild = function (t) {}, i;
        }, e.createShaderCondition = function (t) {
          var e = this;
          return function () {
            return e[t.replace("this.", "")];
          };
        }, e.sendAtlasToOpenDataContext = function (t) {
          if (!laya.wx.mini.MiniAdpter.isZiYu) {
            var e = c.getRes(t);
            if (!e) throw "传递的url没有获取到对应的图集数据信息，请确保图集已经过！";
            var i, n = {
              frames: e.frames,
              meta: e.meta
            };
            i = t.indexOf(".atlas") ? t.replace(".atlas", ".png") : t.replace(".json", ".png");
            var r = x.getFileInfo(i).md5,
              a = x.getFileNativePath(r);
            if (!a) throw "获取图集的磁盘url路径不存在！";
            wx.postMessage({
              url: t,
              atlasdata: n,
              imgNativeUrl: a,
              imgReadyUrl: i,
              isLoad: "opendatacontext"
            });
          }
        }, e.sendJsonDataToDataContext = function (t) {
          if (!laya.wx.mini.MiniAdpter.isZiYu) {
            var e = c.getRes(t);
            if (!e) throw "传递的url没有获取到对应的图集数据信息，请确保图集已经过！";
            wx.postMessage({
              url: t,
              atlasdata: e,
              isLoad: "openJsondatacontext"
            });
          }
        }, e.EnvConfig = null, e.window = null, e._preCreateElement = null, e._inited = !1, e.systemInfo = null, e.isZiYu = !1, e.isPosMsgYu = !1, e.autoCacheFile = !0, e.minClearSize = 5242880, e.AutoCacheDownFile = !1, e._measureText = null, e.parseXMLFromString = function (e) {
          var i;
          e = e.replace(/>\s+</g, "><");
          try {
            i = new t.Parser.DOMParser().parseFromString(e, "text/xml");
          } catch (t) {
            throw "需要引入xml解析库文件";
          }
          return i;
        }, e.idx = 1, n(e, ["nativefiles", function () {
          return this.nativefiles = ["layaNativeDir", "wxlocal"];
        }]), e;
      }(),
      x = function () {
        function e() {}
        return r(e, "laya.wx.mini.MiniFileMgr"), e.isLocalNativeFile = function (t) {
          for (var e = 0, i = y.nativefiles.length; e < i; e++)
            if (-1 != t.indexOf(y.nativefiles[e])) return !0;
          return !1;
        }, e.getFileInfo = function (t) {
          var i = e.filesListObj[t];
          return null == i ? null : i;
        }, e.read = function (t, i, n, r, a, s) {
          void 0 === i && (i = "ascill"), void 0 === r && (r = ""), void 0 === a && (a = !1), void 0 === s && (s = "");
          var o;
          o = "" == r || -1 == r.indexOf("http://") && -1 == r.indexOf("https://") ? t : e.getFileNativePath(t), e.fs.readFile({
            filePath: o,
            encoding: i,
            success: function (t) {
              null != n && n.runWith([0, t]);
            },
            fail: function (t) {
              t && "" != r ? e.downFiles(r, i, n, r, a, s) : null != n && n.runWith([1]);
            }
          });
        }, e.downFiles = function (t, i, n, r, a, s, o) {
          void 0 === i && (i = "ascii"), void 0 === r && (r = ""), void 0 === a && (a = !1), void 0 === s && (s = ""), void 0 === o && (o = !0);
          e.wxdown({
            url: t,
            success: function (t) {
              200 === t.statusCode ? e.readFile(t.tempFilePath, i, n, r, a, s, o) : null != n && n.runWith([1, t]);
            },
            fail: function (t) {
              null != n && n.runWith([1, t]);
            }
          }).onProgressUpdate(function (t) {
            null != n && n.runWith([2, t.progress]);
          });
        }, e.readFile = function (t, i, n, r, a, s, o) {
          void 0 === i && (i = "ascill"), void 0 === r && (r = ""), void 0 === a && (a = !1), void 0 === s && (s = ""), void 0 === o && (o = !0), e.fs.readFile({
            filePath: t,
            encoding: i,
            success: function (s) {
              -1 != t.indexOf("http://") || -1 != t.indexOf("https://") ? (y.autoCacheFile || a) && e.copyFile(t, r, n, i, o) : null != n && n.runWith([0, s]);
            },
            fail: function (t) {
              t && null != n && n.runWith([1, t]);
            }
          });
        }, e.downOtherFiles = function (t, i, n, r, a) {
          void 0 === n && (n = ""), void 0 === r && (r = !1), void 0 === a && (a = !0), e.wxdown({
            url: t,
            success: function (t) {
              200 === t.statusCode && ((y.autoCacheFile || r) && -1 == n.indexOf("wx.qlogo.cn") && -1 == n.indexOf(".php") ? e.copyFile(t.tempFilePath, n, i, "", a) : null != i && i.runWith([0, t.tempFilePath]));
            },
            fail: function (t) {
              null != i && i.runWith([1, t]);
            }
          });
        }, e.downLoadFile = function (n, r, a, s) {
          void 0 === r && (r = ""), void 0 === s && (s = "ascii"), t.navigator.userAgent.indexOf("MiniGame") < 0 ? i.loader.load(n, a) : "image" == r || "sound" == r ? e.downOtherFiles(n, a, n, !0, !1) : e.downFiles(n, s, a, n, !0, r, !1);
        }, e.copyFile = function (t, i, n, r, a) {
          void 0 === r && (r = ""), void 0 === a && (a = !0);
          var s = t.split("/"),
            o = s[s.length - 1],
            h = e.getFileInfo(i),
            l = e.getFileNativePath(o),
            u = e.getCacheUseSize();
          h ? h.readyUrl != i ? e.fs.getFileInfo({
            filePath: t,
            success: function (t) {
              a && u + 4194304 + t.size >= 52428800 && (t.size > y.minClearSize && (y.minClearSize = t.size), e.onClearCacheRes()), e.deleteFile(o, i, n, r, t.size);
            },
            fail: function (t) {
              null != n && n.runWith([1, t]);
            }
          }) : null != n && n.runWith([0]) : e.fs.getFileInfo({
            filePath: t,
            success: function (s) {
              a && u + 4194304 + s.size >= 52428800 && (s.size > y.minClearSize && (y.minClearSize = s.size), e.onClearCacheRes()), e.fs.copyFile({
                srcPath: t,
                destPath: l,
                success: function (t) {
                  e.onSaveFile(i, o, !0, r, n, s.size);
                },
                fail: function (t) {
                  null != n && n.runWith([1, t]);
                }
              });
            },
            fail: function (t) {
              null != n && n.runWith([1, t]);
            }
          });
        }, e.onClearCacheRes = function () {
          var t = y.minClearSize,
            i = [];
          for (var n in e.filesListObj) i.push(e.filesListObj[n]);
          e.sortOn(i, "time", 16);
          for (var r = 0, a = 1, s = i.length; a < s; a++) {
            var o = i[a];
            if (r >= t) break;
            r += o.size, e.deleteFile("", o.readyUrl);
          }
        }, e.sortOn = function (t, e, i) {
          return void 0 === i && (i = 0), 16 == i ? t.sort(function (t, i) {
            return t[e] - i[e];
          }) : 18 == i ? t.sort(function (t, i) {
            return i[e] - t[e];
          }) : t.sort(function (t, i) {
            return t[e] - i[e];
          });
        }, e.getFileNativePath = function (t) {
          return laya.wx.mini.MiniFileMgr.fileNativeDir + "/" + t;
        }, e.deleteFile = function (t, i, n, r, a) {
          void 0 === i && (i = ""), void 0 === r && (r = ""), void 0 === a && (a = 0);
          var s = e.getFileInfo(i),
            o = e.getFileNativePath(s.md5);
          e.fs.unlink({
            filePath: o,
            success: function (s) {
              var o = "" != t;
              if ("" != t) {
                var h = e.getFileNativePath(t);
                e.fs.copyFile({
                  srcPath: t,
                  destPath: h,
                  success: function (a) {
                    e.onSaveFile(i, t, o, r, n, a.size);
                  },
                  fail: function (t) {
                    null != n && n.runWith([1, t]);
                  }
                });
              } else e.onSaveFile(i, t, o, r, n, a);
            },
            fail: function (t) {}
          });
        }, e.deleteAll = function () {
          var t = [];
          for (var i in e.filesListObj) t.push(e.filesListObj[i]);
          for (var n = 1, r = t.length; n < r; n++) {
            var a = t[n];
            e.deleteFile("", a.readyUrl);
          }
        }, e.onSaveFile = function (t, i, n, r, a, o) {
          void 0 === n && (n = !0), void 0 === r && (r = ""), void 0 === o && (o = 0);
          var h = t;
          if (null == e.filesListObj.fileUsedSize && (e.filesListObj.fileUsedSize = 0), n) {
            e.getFileNativePath(i);
            e.filesListObj[h] = {
              md5: i,
              readyUrl: t,
              size: o,
              times: s.now(),
              encoding: r
            }, e.filesListObj.fileUsedSize = parseInt(e.filesListObj.fileUsedSize) + o, e.writeFilesList(h, JSON.stringify(e.filesListObj), !0), null != a && a.runWith([0]);
          } else if (e.filesListObj[h]) {
            var l = parseInt(e.filesListObj[h].size);
            e.filesListObj.fileUsedSize = parseInt(e.filesListObj.fileUsedSize) - l, delete e.filesListObj[h], e.writeFilesList(h, JSON.stringify(e.filesListObj), !1), null != a && a.runWith([0]);
          }
        }, e.writeFilesList = function (t, i, n) {
          var r = e.fileNativeDir + "/" + e.fileListName;
          e.fs.writeFile({
            filePath: r,
            encoding: "utf8",
            data: i,
            success: function (t) {},
            fail: function (t) {}
          }), !y.isZiYu && y.isPosMsgYu && wx.postMessage({
            url: t,
            data: e.filesListObj[t],
            isLoad: "filenative",
            isAdd: n
          });
        }, e.getCacheUseSize = function () {
          return e.filesListObj && e.filesListObj.fileUsedSize ? e.filesListObj.fileUsedSize : 0;
        }, e.existDir = function (t, i) {
          e.fs.mkdir({
            dirPath: t,
            success: function (t) {
              null != i && i.runWith([0, {
                data: JSON.stringify({})
              }]);
            },
            fail: function (t) {
              -1 != t.errMsg.indexOf("file already exists") ? e.readSync(e.fileListName, "utf8", i) : null != i && i.runWith([1, t]);
            }
          });
        }, e.readSync = function (t, i, n, r) {
          void 0 === i && (i = "ascill"), void 0 === r && (r = "");
          var a, s = e.getFileNativePath(t);
          try {
            a = e.fs.readFileSync(s, i), null != n && n.runWith([0, {
              data: a
            }]);
          } catch (t) {
            null != n && n.runWith([1]);
          }
        }, e.setNativeFileDir = function (t) {
          e.fileNativeDir = wx.env.USER_DATA_PATH + t;
        }, e.filesListObj = {}, e.fileNativeDir = null, e.fileListName = "layaairfiles.txt", e.ziyuFileData = {}, e.ziyuFileTextureData = {}, e.loadPath = "", e.DESCENDING = 2, e.NUMERIC = 16, n(e, ["fs", function () {
          return this.fs = wx.getFileSystemManager();
        }, "wxdown", function () {
          return this.wxdown = wx.downloadFile;
        }]), e;
      }(),
      T = function () {
        function t() {}
        r(t, "laya.wx.mini.MiniImage");
        return t.prototype._loadImage = function (e) {
          if (y.isZiYu) t.onCreateImage(e, this, !0);
          else {
            var i = !1;
            if (x.isLocalNativeFile(e)) {
              if (-1 != e.indexOf("http://") || -1 != e.indexOf("https://"))
                if ("" != x.loadPath) e = e.split(x.loadPath)[1];
                else {
                  var n = "" != g.rootPath ? g.rootPath : g.basePath;
                  "" != n && (e = e.split(n)[1]);
                }
            } else i = !0, e = g.formatURL(e);
            x.getFileInfo(e) ? t.onCreateImage(e, this, !i) : -1 != e.indexOf("http://") || -1 != e.indexOf("https://") ? y.isZiYu ? t.onCreateImage(e, this, !0) : x.downOtherFiles(e, new l(t, t.onDownImgCallBack, [e, this]), e) : t.onCreateImage(e, this, !0);
          }
        }, t.onDownImgCallBack = function (e, i, n, r) {
          void 0 === r && (r = ""), n ? i.onError(null) : t.onCreateImage(e, i, !1, r);
        }, t.onCreateImage = function (t, e, i, n) {
          function r() {
            u.onload = null, u.onerror = null, delete e.imgCache[t];
          }
          void 0 === i && (i = !1), void 0 === n && (n = "");
          var a;
          if (y.autoCacheFile)
            if (i)
              if (y.isZiYu) {
                var o = g.formatURL(t);
                a = x.ziyuFileTextureData[o] ? x.ziyuFileTextureData[o] : t;
              } else a = t;
          else if ("" != n) a = n;
          else {
            var l = x.getFileInfo(t).md5;
            a = x.getFileNativePath(l);
          } else a = i ? t : n;
          null == e.imgCache && (e.imgCache = {});
          var u, c = function () {
              r(), e._url = g.formatURL(e._url), e.onLoaded(u);
            },
            _ = function () {
              r(), e.event("error", "Load image failed");
            };
          "nativeimage" == e._type ? ((u = new s.window.Image()).crossOrigin = "", u.onload = c, u.onerror = _, u.src = a, e.imgCache[t] = u) : new h.create(a, {
            onload: c,
            onerror: _,
            onCreate: function (i) {
              u = i, e.imgCache[t] = i;
            }
          });
        }, t;
      }(),
      S = function () {
        function e() {}
        return r(e, "laya.wx.mini.MiniInput"), e._createInputElement = function () {
          u._initInput(u.area = s.createElement("textarea")), u._initInput(u.input = s.createElement("input")), u.inputContainer = s.createElement("div"), u.inputContainer.style.position = "absolute", u.inputContainer.style.zIndex = 1e5, s.container.appendChild(u.inputContainer), u.inputContainer.setPos = function (t, e) {
            u.inputContainer.style.left = t + "px", u.inputContainer.style.top = e + "px";
          }, i.stage.on("resize", null, e._onStageResize), wx.onWindowResize && wx.onWindowResize(function (e) {
            t.dispatchEvent && t.dispatchEvent("resize");
          }), m._soundClass = b, m._musicClass = b;
          var n = y.systemInfo.model,
            r = y.systemInfo.system; - 1 != n.indexOf("iPhone") && (s.onIPhone = !0, s.onIOS = !0, s.onIPad = !0, s.onAndroid = !1), -1 == r.indexOf("Android") && -1 == r.indexOf("Adr") || (s.onAndroid = !0, s.onIPhone = !1, s.onIOS = !1, s.onIPad = !1);
        }, e._onStageResize = function () {
          i.stage._canvasTransform.identity().scale(s.width / d.canvas.width / f.getPixelRatio(), s.height / d.canvas.height / f.getPixelRatio());
        }, e.wxinputFocus = function (t) {
          var e = u.inputElement.target;
          e && !e.editable || (y.window.wx.offKeyboardConfirm(), y.window.wx.offKeyboardInput(), y.window.wx.showKeyboard({
            defaultValue: e.text,
            maxLength: e.maxChars,
            multiple: e.multiline,
            confirmHold: !0,
            confirmType: "done",
            success: function (t) {},
            fail: function (t) {}
          }), y.window.wx.onKeyboardConfirm(function (t) {
            var i = t ? t.value : "";
            e.text = i, e.event("input"), laya.wx.mini.MiniInput.inputEnter();
          }), y.window.wx.onKeyboardInput(function (t) {
            var i = t ? t.value : "";
            e.multiline || -1 == i.indexOf("\n") ? (e.text = i, e.event("input")) : laya.wx.mini.MiniInput.inputEnter();
          }));
        }, e.inputEnter = function () {
          u.inputElement.target.focus = !1;
        }, e.wxinputblur = function () {
          e.hideKeyboard();
        }, e.hideKeyboard = function () {
          y.window.wx.offKeyboardConfirm(), y.window.wx.offKeyboardInput(), y.window.wx.hideKeyboard({
            success: function (t) {
              console.log("隐藏键盘");
            },
            fail: function (t) {
              console.log("隐藏键盘出错:" + (t ? t.errMsg : ""));
            }
          });
        }, e;
      }(),
      w = function () {
        function t() {}
        return r(t, "laya.wx.mini.MiniLocalStorage"), t.__init__ = function () {
          t.items = t;
        }, t.setItem = function (t, e) {
          try {
            wx.setStorageSync(t, e);
          } catch (i) {
            wx.setStorage({
              key: t,
              data: e
            });
          }
        }, t.getItem = function (t) {
          return wx.getStorageSync(t);
        }, t.setJSON = function (e, i) {
          t.setItem(e, i);
        }, t.getJSON = function (e) {
          return t.getItem(e);
        }, t.removeItem = function (t) {
          wx.removeStorageSync(t);
        }, t.clear = function () {
          wx.clearStorageSync();
        }, t.getStorageInfoSync = function () {
          try {
            var t = wx.getStorageInfoSync();
            return console.log(t.keys), console.log(t.currentSize), console.log(t.limitSize), t;
          } catch (t) {}
          return null;
        }, t.support = !0, t.items = null, t;
      }(),
      E = (function () {
        function t() {}
        r(t, "laya.wx.mini.MiniLocation"), t.__init__ = function () {
          y.window.navigator.geolocation.getCurrentPosition = t.getCurrentPosition, y.window.navigator.geolocation.watchPosition = t.watchPosition, y.window.navigator.geolocation.clearWatch = t.clearWatch;
        }, t.getCurrentPosition = function (t, e, i) {
          var n;
          (n = {}).success = function (e) {
            null != t && t(e);
          }, n.fail = e, y.window.wx.getLocation(n);
        }, t.watchPosition = function (e, n, r) {
          t._curID++;
          var a;
          return a = {}, a.success = e, a.error = n, t._watchDic[t._curID] = a, i.timer.loop(1e3, null, t._myLoop), t._curID;
        }, t.clearWatch = function (e) {
          delete t._watchDic[e], t._hasWatch() || i.timer.clear(null, t._myLoop);
        }, t._hasWatch = function () {
          var e;
          for (e in t._watchDic)
            if (t._watchDic[e]) return !0;
          return !1;
        }, t._myLoop = function () {
          t.getCurrentPosition(t._mySuccess, t._myError);
        }, t._mySuccess = function (e) {
          var i = {};
          i.coords = e, i.timestamp = s.now();
          var n;
          for (n in t._watchDic) t._watchDic[n].success && t._watchDic[n].success(i);
        }, t._myError = function (e) {
          var i;
          for (i in t._watchDic) t._watchDic[i].error && t._watchDic[i].error(e);
        }, t._watchDic = {}, t._curID = 0;
      }(), function (t) {
        function e() {
          e.__super.call(this);
        }
        r(e, "laya.wx.mini.MiniAccelerator", t);
        var i = e.prototype;
        i.on = function (i, n, r, a) {
          return t.prototype.on.call(this, i, n, r, a), e.startListen(this.onDeviceOrientationChange), this;
        }, i.off = function (i, n, r, a) {
          return void 0 === a && (a = !1), this.hasListener(i) || e.stopListen(), t.prototype.off.call(this, i, n, r, a);
        }, e.__init__ = function () {
          try {
            var t;
            if (!(t = laya.device.motion.Accelerator)) return;
            t.prototype.on = e.prototype.on, t.prototype.off = e.prototype.off;
          } catch (t) {}
        }, e.startListen = function (t) {
          if (e._callBack = t, !e._isListening) {
            e._isListening = !0;
            try {
              wx.onAccelerometerChange(e.onAccelerometerChange);
            } catch (t) {}
          }
        }, e.stopListen = function () {
          e._isListening = !1;
          try {
            wx.stopAccelerometer({});
          } catch (t) {}
        }, e.onAccelerometerChange = function (t) {
          var i;
          (i = {}).acceleration = t, i.accelerationIncludingGravity = t, i.rotationRate = {}, null != e._callBack && e._callBack(i);
        }, e._isListening = !1, e._callBack = null;
      }(o), function (t) {
        function e() {
          e.__super.call(this);
        }
        r(e, "laya.wx.mini.MiniLoader", o);
        return e.prototype.load = function (t, i, n, r, a) {
          void 0 === n && (n = !0), void 0 === a && (a = !1);
          if (this._url = t, 0 === t.indexOf("data:image") ? this._type = i = "image" : this._type = i || (i = this.getTypeFromUrl(t)), this._cache = n, this._data = null, !a && c.loadedMap[g.formatURL(t)]) return this._data = c.loadedMap[g.formatURL(t)], this.event("progress", 1), void this.event("complete", this._data);
          if (null != c.parserMap[i]) return this._customParse = !0, void(c.parserMap[i] instanceof laya.utils.Handler ? c.parserMap[i].runWith(this) : c.parserMap[i].call(null, this));
          var s = y.getUrlEncode(t, i),
            o = v.getFileExtension(t);
          if (-1 != e._fileTypeArr.indexOf(o)) y.EnvConfig.load.call(this, t, i, n, r, a);
          else {
            if (y.isZiYu && !x.ziyuFileData[t] && (t = g.formatURL(t)), y.isZiYu && x.ziyuFileData[t]) {
              var h = x.ziyuFileData[t];
              return void this.onLoaded(h);
            }
            console.log(x.getFileInfo(t),t);
            if (x.getFileInfo(t)) {
              var u = x.getFileInfo(t);
              console.log("--------------");
              u.encoding = null == u.encoding ? "ascii" : u.encoding, x.readFile(t, u.encoding, new l(e, e.onReadNativeCallBack, [s, t, i, n, r, a, this]), t);
            } else {
              console.log("====================");
              // wx.shareAppMessage({
              //   title: '我要分享',
              //   success: function (res) {
              //     console.log('拉起分享 成功');
              //     console.log(res);
              //   },
              //   fail: function (res) {
              //     console.log('拉起分享 失败');
              //     console.log(res);
              //   }
              // })
              if (x.isLocalNativeFile(t)) return Debuger.log("isLocalNativeFile", t), void x.read(t, s, new l(e, e.onReadNativeCallBack, [s, t, i, n, r, a, this]));
              var _ = t; - 1 != (t = g.formatURL(t)).indexOf("http://") || -1 != t.indexOf("https://") ? y.EnvConfig.load.call(this, _, i, n, r, a) : x.readFile(t, s, new l(e, e.onReadNativeCallBack, [s, t, i, n, r, a, this]), t);
             }
          }
        }, e.onReadNativeCallBack = function (t, e, i, n, r, a, s, o, h) {
          if (void 0 === n && (n = !0), void 0 === a && (a = !1), void 0 === o && (o = 0), o) 1 == o && (console.log("-----------本地加载失败，尝试外网加载----"), y.EnvConfig.load.call(s, e, i, n, r, a));
          else {
            var l;
            l = "json" == i || "atlas" == i ? y.getJson(h.data) : "xml" == i ? v.parseXMLFromString(h.data) : h.data, !y.isZiYu && y.isPosMsgYu && "arraybuffer" != i && wx.postMessage({
              url: e,
              data: l,
              isLoad: "filedata"
            }), s.onLoaded(l);
          }
        }, n(e, ["_fileTypeArr", function () {
          return this._fileTypeArr = ["png", "jpg", "bmp", "jpeg", "gif"];
        }]), e;
      }()),
      b = function (t) {
        function e() {
          this._sound = null, this.url = null, this.loaded = !1, this.readyUrl = null, e.__super.call(this);
        }
        r(e, "laya.wx.mini.MiniSound", o);
        var i = e.prototype;
        return i.load = function (t) {
          if (x.isLocalNativeFile(t)) {
            if (-1 != t.indexOf("http://") || -1 != t.indexOf("https://"))
              if ("" != x.loadPath) t = t.split(x.loadPath)[1];
              else {
                var i = "" != g.rootPath ? g.rootPath : g.basePath;
                "" != i && (t = t.split(i)[1]);
              }
          } else t = g.formatURL(t);
          this.url = t, this.readyUrl = t, e._audioCache[this.readyUrl] ? this.event("complete") : y.autoCacheFile && x.getFileInfo(t) ? this.onDownLoadCallBack(t, 0) : y.autoCacheFile ? x.downOtherFiles(t, l.create(this, this.onDownLoadCallBack, [t]), t) : this.onDownLoadCallBack(t, 0);
        }, i.onDownLoadCallBack = function (t, i) {
          if (i) this.event("error");
          else {
            var n;
            if (y.autoCacheFile) {
              var r = x.getFileInfo(t);
              if (r && r.md5) {
                var a = r.md5;
                n = x.getFileNativePath(a);
              } else n = t;
              this._sound = e._createSound(), this._sound.src = this.url = n;
            } else this._sound = e._createSound(), this._sound.src = t;
            this._sound.onCanplay(e.bindToThis(this.onCanPlay, this)), this._sound.onError(e.bindToThis(this.onError, this));
          }
        }, i.onError = function (t) {
          try {
            console.log("-----1---------------minisound-----id:" + e._id), console.log(t);
          } catch (t) {
            console.log("-----2---------------minisound-----id:" + e._id), console.log(t);
          }
          this.event("error"), this._sound.offError(null);
        }, i.onCanPlay = function () {
          this.loaded = !0, this.event("complete"), this._sound.offCanplay(null);
        }, i.play = function (t, i) {
          void 0 === t && (t = 0), void 0 === i && (i = 0);
          var n;
          if (this.url == m._tMusic ? (e._musicAudio || (e._musicAudio = e._createSound()), n = e._musicAudio) : n = e._audioCache[this.readyUrl] ? e._audioCache[this.readyUrl]._sound : e._createSound(), y.autoCacheFile && x.getFileInfo(this.url)) {
            var r = x.getFileInfo(this.url).md5;
            n.src = this.url = x.getFileNativePath(r);
          } else n.src = this.url;
          var a = new C(n, this);
          return a.url = this.url, a.loops = i, a.loop = 0 === i, a.startTime = t, a.play(), m.addChannel(a), a;
        }, i.dispose = function () {
          var t = e._audioCache[this.readyUrl];
          t && (t.src = "", t._sound && (t._sound.destroy(), t._sound = null, t = null), delete e._audioCache[this.readyUrl]);
        }, a(0, i, "duration", function () {
          return this._sound.duration;
        }), e._createSound = function () {
          return e._id++, y.window.wx.createInnerAudioContext();
        }, e.bindToThis = function (t, e) {
          return t.bind(e);
        }, e._musicAudio = null, e._id = 0, e._audioCache = {}, e;
      }(),
      C = function (t) {
        function e(t, i) {
          this._audio = null, this._onEnd = null, this._miniSound = null, e.__super.call(this), this._audio = t, this._miniSound = i, this._onEnd = e.bindToThis(this.__onEnd, this), t.onEnded(this._onEnd);
        }
        r(e, "laya.wx.mini.MiniSoundChannel", p);
        var n = e.prototype;
        return n.__onEnd = function () {
          if (1 == this.loops) return this.completeHandler && (i.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null), this.stop(), void this.event("complete");
          this.loops > 0 && this.loops--, this.startTime = 0, this.play();
        }, n.play = function () {
          this.isStopped = !1, m.addChannel(this), this._audio.play();
        }, n.stop = function () {
          this.isStopped = !0, m.removeChannel(this), this.completeHandler = null, this._audio && (this._audio.pause(), this._audio.offEnded(null), this._audio = null, this._miniSound = null, this._onEnd = null);
        }, n.pause = function () {
          this.isStopped = !0, this._audio.pause();
        }, n.resume = function () {
          this._audio && (this.isStopped = !1, m.addChannel(this), this._audio.play());
        }, a(0, n, "startTime", null, function (t) {
          this._audio && (this._audio.startTime = t);
        }), a(0, n, "autoplay", function () {
          return this._audio.autoplay;
        }, function (t) {
          this._audio.autoplay = t;
        }), a(0, n, "position", function () {
          return this._audio ? this._audio.currentTime : 0;
        }), a(0, n, "duration", function () {
          return this._audio ? this._audio.duration : 0;
        }), a(0, n, "loop", function () {
          return this._audio.loop;
        }, function (t) {
          this._audio.loop = t;
        }), a(0, n, "volume", function () {
          return this._audio ? this._audio.volume : 1;
        }, function (t) {
          this._audio && (this._audio.volume = t);
        }), e.bindToThis = function (t, e) {
          return t.bind(e);
        }, e;
      }();
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function (t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function (t, e, i) {
    i.un, i.uns;
    var n = i.static,
      r = i.class,
      a = i.getset,
      s = i.__newvec,
      o = laya.maths.Arith,
      h = laya.maths.Bezier,
      l = laya.resource.Bitmap,
      u = laya.utils.Browser,
      c = laya.utils.Byte,
      _ = laya.utils.Color,
      d = (laya.filters.ColorFilter, i.Config),
      f = laya.resource.Context,
      p = (laya.events.Event, laya.filters.Filter),
      m = laya.display.Graphics,
      g = laya.resource.HTMLCanvas,
      v = (laya.utils.HTMLChar, laya.resource.HTMLImage),
      y = laya.resource.HTMLSubImage,
      x = (laya.utils.Handler, laya.net.Loader, laya.maths.Matrix),
      T = laya.maths.Point,
      S = laya.maths.Rectangle,
      w = laya.renders.Render,
      E = (laya.renders.RenderContext, laya.renders.RenderSprite),
      b = laya.resource.Resource,
      C = laya.resource.ResourceManager,
      M = laya.utils.RunDriver,
      I = laya.display.Sprite,
      D = laya.display.Stage,
      A = laya.utils.Stat,
      R = laya.utils.StringKey,
      P = (laya.display.css.Style, laya.system.System),
      L = laya.display.Text,
      O = laya.resource.Texture,
      N = (laya.display.css.TransformInfo, laya.net.URL, laya.utils.Utils),
      V = laya.utils.VectorGraphManager;
    laya.utils.WordText;
    i.interface("laya.webgl.shapes.IShape"), i.interface("laya.webgl.submit.ISubmit"), i.interface("laya.webgl.text.ICharSegment"), i.interface("laya.webgl.canvas.save.ISaveData"), i.interface("laya.webgl.resource.IMergeAtlasBitmap"), i.interface("laya.filters.IFilterActionGL", "laya.filters.IFilterAction");
    var F = function () {
        function t() {}
        r(t, "laya.filters.webgl.FilterActionGL");
        var e = t.prototype;
        return i.imps(e, {
          "laya.filters.IFilterActionGL": !0
        }), e.setValue = function (t) {}, e.setValueMix = function (t) {}, e.apply3d = function (t, e, i, n, r) {
          return null;
        }, e.apply = function (t) {
          return null;
        }, a(0, e, "typeMix", function () {
          return 0;
        }), t;
      }(),
      B = function () {
        function t() {}
        return r(t, "laya.webgl.shader.ShaderValue"), t;
      }(),
      U = function () {
        function t(t, e, n) {
          this._atlasID = 0, this._width = 0, this._height = 0, this._texCount = 0, this._rowInfo = null, this._cells = null, this._failSize = new i(), void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === n && (n = 0), this._cells = null, this._rowInfo = null, this._init(t, e), this._atlasID = n;
        }
        var e, i;
        r(t, "laya.webgl.atlas.AtlasGrid");
        var n = t.prototype;
        return n.getAltasID = function () {
          return this._atlasID;
        }, n.setAltasID = function (t) {
          t >= 0 && (this._atlasID = t);
        }, n.addTex = function (t, e, i) {
          var n = this._get(e, i);
          return 0 == n.ret ? n : (this._fill(n.x, n.y, e, i, t), this._texCount++, n);
        }, n._release = function () {
          null != this._cells && (this._cells.length = 0, this._cells = null), this._rowInfo && (this._rowInfo.length = 0, this._rowInfo = null);
        }, n._init = function (t, i) {
          if (this._width = t, this._height = i, this._release(), 0 == this._width) return !1;
          this._cells = new Uint8Array(this._width * this._height * 3), this._rowInfo = s(this._height);
          for (var n = 0; n < this._height; n++) this._rowInfo[n] = new e();
          return this._clear(), !0;
        }, n._get = function (t, e) {
          var i = new G();
          if (t >= this._failSize.width && e >= this._failSize.height) return i;
          for (var n = -1, r = -1, a = this._width, s = this._height, o = this._cells, h = 0; h < s; h++)
            if (!(this._rowInfo[h].spaceCount < t))
              for (var l = 0; l < a;) {
                var u = 3 * (h * a + l);
                if (0 != o[u] || o[u + 1] < t || o[u + 2] < e) l += o[u + 1];
                else {
                  n = l, r = h;
                  for (var c = 0; c < t; c++)
                    if (o[3 * c + u + 2] < e) {
                      n = -1;
                      break;
                    }
                  if (!(n < 0)) return i.ret = !0, i.x = n, i.y = r, i;
                  l += o[u + 1];
                }
              }
          return i;
        }, n._fill = function (t, e, i, n, r) {
          var a = this._width,
            s = this._height;
          this._check(t + i <= a && e + n <= s);
          for (var o = e; o < n + e; ++o) {
            this._check(this._rowInfo[o].spaceCount >= i), this._rowInfo[o].spaceCount -= i;
            for (var h = 0; h < i; h++) {
              var l = 3 * (t + o * a + h);
              this._check(0 == this._cells[l]), this._cells[l] = r, this._cells[l + 1] = i, this._cells[l + 2] = n;
            }
          }
          if (t > 0)
            for (o = 0; o < n; ++o) {
              var u = 0;
              for (h = t - 1; h >= 0 && 0 == this._cells[3 * ((e + o) * a + h)]; --h, ++u);
              for (h = u; h > 0; --h) this._cells[3 * ((e + o) * a + t - h) + 1] = h, this._check(h > 0);
            }
          if (e > 0)
            for (h = t; h < t + i; ++h) {
              for (u = 0, o = e - 1; o >= 0 && 0 == this._cells[3 * (h + o * a)]; --o, u++);
              for (o = u; o > 0; --o) this._cells[3 * (h + (e - o) * a) + 2] = o, this._check(o > 0);
            }
        }, n._check = function (t) {
          0 == t && console.log("xtexMerger 错误啦");
        }, n._clear = function () {
          this._texCount = 0;
          for (var t = 0; t < this._height; t++) this._rowInfo[t].spaceCount = this._width;
          for (var e = 0; e < this._height; e++)
            for (var i = 0; i < this._width; i++) {
              var n = 3 * (e * this._width + i);
              this._cells[n] = 0, this._cells[n + 1] = this._width - i, this._cells[n + 2] = this._width - e;
            }
          this._failSize.width = this._width + 1, this._failSize.height = this._height + 1;
        }, t.__init$ = function () {
          e = function () {
            function t() {
              this.spaceCount = 0;
            }
            return r(t, ""), t;
          }(), i = function () {
            function t() {
              this.width = 0, this.height = 0;
            }
            return r(t, ""), t;
          }();
        }, t;
      }(),
      k = function () {
        function t(t, e, i, n) {
          this._currentAtlasCount = 0, this._maxAtlaserCount = 0, this._width = 0, this._height = 0, this._gridSize = 0, this._gridNumX = 0, this._gridNumY = 0, this._init = !1, this._curAtlasIndex = 0, this._setAtlasParam = !1, this._atlaserArray = null, this._needGC = !1, this._setAtlasParam = !0, this._width = t, this._height = e, this._gridSize = i, this._maxAtlaserCount = n, this._gridNumX = t / i, this._gridNumY = e / i, this._curAtlasIndex = 0, this._atlaserArray = [];
        }
        r(t, "laya.webgl.atlas.AtlasResourceManager");
        var e = t.prototype;
        return e.setAtlasParam = function (e, i, n, r) {
          if (1 == this._setAtlasParam) return t._sid_ = 0, this._width = e, this._height = i, this._gridSize = n, this._maxAtlaserCount = r, this._gridNumX = e / n, this._gridNumY = i / n, this._curAtlasIndex = 0, this.freeAll(), !0;
          throw console.log("设置大图合集参数错误，只能在开始页面设置各种参数"), -1;
        }, e.pushData = function (e) {
          var i = e.bitmap,
            n = -1,
            r = null,
            a = 0,
            s = 0,
            o = 0;
          for (a = 0, s = this._atlaserArray.length; a < s && (o = (this._curAtlasIndex + a) % s, r = this._atlaserArray[o], -1 == (n = r.findBitmapIsExist(i))); a++);
          if (-1 != n) {
            var h = r.InAtlasWebGLImagesOffsetValue[n];
            return p = h[0], m = h[1], r.addToAtlas(e, p, m), !0;
          }
          this._setAtlasParam = !1;
          for (var l = Math.ceil((e.bitmap.width + 2) / this._gridSize), u = Math.ceil((e.bitmap.height + 2) / this._gridSize), c = !1, _ = 0; _ < 2; _++) {
            var d = this._maxAtlaserCount;
            for (a = 0; a < d; a++) {
              o = (this._curAtlasIndex + a) % d, this._atlaserArray.length - 1 >= o || this._atlaserArray.push(new Mt(this._gridNumX, this._gridNumY, this._width, this._height, t._sid_++));
              var f = this._atlaserArray[o],
                p = 0,
                m = 0,
                g = f.addTex(1, l, u);
              if (g.ret) {
                p = g.x * this._gridSize + 1, m = g.y * this._gridSize + 1, i.lock = !0, f.addToAtlasTexture(i, p, m), f.addToAtlas(e, p, m), c = !0, this._curAtlasIndex = o;
                break;
              }
            }
            if (c) break;
            this._atlaserArray.push(new Mt(this._gridNumX, this._gridNumY, this._width, this._height, t._sid_++)), this._needGC = !0, this.garbageCollection(), this._curAtlasIndex = this._atlaserArray.length - 1;
          }
          return c || console.log(">>>AtlasManager pushData error"), c;
        }, e.addToAtlas = function (t) {
          laya.webgl.atlas.AtlasResourceManager.instance.pushData(t);
        }, e.garbageCollection = function () {
          if (!0 === this._needGC) {
            for (var t = this._atlaserArray.length - this._maxAtlaserCount, e = 0; e < t; e++) this._atlaserArray[e].dispose(), console.log("AtlasResourceManager:Dispose the inner Atlas。");
            console.log(">>>>altas garbageCollection =" + t), this._atlaserArray.splice(0, t), this._needGC = !1;
          }
          return !0;
        }, e.freeAll = function () {
          for (var t = 0, e = this._atlaserArray.length; t < e; t++) this._atlaserArray[t].dispose();
          this._atlaserArray.length = 0, this._curAtlasIndex = 0;
        }, e.getAtlaserCount = function () {
          return this._atlaserArray.length;
        }, e.getAtlaserByIndex = function (t) {
          return this._atlaserArray[t];
        }, a(1, t, "instance", function () {
          return t._Instance || (t._Instance = new t(laya.webgl.atlas.AtlasResourceManager.atlasTextureWidth, laya.webgl.atlas.AtlasResourceManager.atlasTextureHeight, 16, laya.webgl.atlas.AtlasResourceManager.maxTextureCount)), t._Instance;
        }), a(1, t, "enabled", function () {
          return d.atlasEnable;
        }), a(1, t, "atlasLimitWidth", function () {
          return t._atlasLimitWidth;
        }, function (e) {
          t._atlasLimitWidth = e;
        }), a(1, t, "atlasLimitHeight", function () {
          return t._atlasLimitHeight;
        }, function (e) {
          t._atlasLimitHeight = e;
        }), t._enable = function () {
          d.atlasEnable = !0;
        }, t._disable = function () {
          d.atlasEnable = !1;
        }, t.__init__ = function () {
          t.atlasTextureWidth = 2048, t.atlasTextureHeight = 2048, t.maxTextureCount = 6, t.atlasLimitWidth = 512, t.atlasLimitHeight = 512;
        }, t._atlasLimitWidth = 0, t._atlasLimitHeight = 0, t.gridSize = 16, t.atlasTextureWidth = 0, t.atlasTextureHeight = 0, t.maxTextureCount = 0, t._atlasRestore = 0, t.BOARDER_TYPE_NO = 0, t.BOARDER_TYPE_RIGHT = 1, t.BOARDER_TYPE_LEFT = 2, t.BOARDER_TYPE_BOTTOM = 4, t.BOARDER_TYPE_TOP = 8, t.BOARDER_TYPE_ALL = 15, t._sid_ = 0, t._Instance = null, t;
      }(),
      G = function () {
        function t() {
          this.x = 0, this.y = 0, this.ret = !1, this.ret = !1, this.x = 0, this.y = 0;
        }
        return r(t, "laya.webgl.atlas.MergeFillInfo"), t;
      }(),
      H = function () {
        function t() {}
        return r(t, "laya.webgl.canvas.BlendMode"), t._init_ = function (e) {
          t.fns = [t.BlendNormal, t.BlendAdd, t.BlendMultiply, t.BlendScreen, t.BlendOverlay, t.BlendLight, t.BlendMask, t.BlendDestinationOut], t.targetFns = [t.BlendNormalTarget, t.BlendAddTarget, t.BlendMultiplyTarget, t.BlendScreenTarget, t.BlendOverlayTarget, t.BlendLightTarget, t.BlendMask, t.BlendDestinationOut];
        }, t.BlendNormal = function (t) {
          t.blendFunc(1, 771);
        }, t.BlendAdd = function (t) {
          t.blendFunc(1, 772);
        }, t.BlendMultiply = function (t) {
          t.blendFunc(774, 771);
        }, t.BlendScreen = function (t) {
          t.blendFunc(1, 1);
        }, t.BlendOverlay = function (t) {
          t.blendFunc(1, 769);
        }, t.BlendLight = function (t) {
          t.blendFunc(1, 1);
        }, t.BlendNormalTarget = function (t) {
          t.blendFunc(1, 771);
        }, t.BlendAddTarget = function (t) {
          t.blendFunc(1, 772);
        }, t.BlendMultiplyTarget = function (t) {
          t.blendFunc(774, 771);
        }, t.BlendScreenTarget = function (t) {
          t.blendFunc(1, 1);
        }, t.BlendOverlayTarget = function (t) {
          t.blendFunc(1, 769);
        }, t.BlendLightTarget = function (t) {
          t.blendFunc(1, 1);
        }, t.BlendMask = function (t) {
          t.blendFunc(0, 770);
        }, t.BlendDestinationOut = function (t) {
          t.blendFunc(0, 0);
        }, t.activeBlendFunction = null, t.NAMES = ["normal", "add", "multiply", "screen", "overlay", "light", "mask", "destination-out"], t.TOINT = {
          normal: 0,
          add: 1,
          multiply: 2,
          screen: 3,
          lighter: 1,
          overlay: 4,
          light: 5,
          mask: 6,
          "destination-out": 7
        }, t.NORMAL = "normal", t.ADD = "add", t.MULTIPLY = "multiply", t.SCREEN = "screen", t.LIGHT = "light", t.OVERLAY = "overlay", t.DESTINATIONOUT = "destination-out", t.fns = [], t.targetFns = [], t;
      }(),
      z = function () {
        function t(t) {
          this._color = _.create("black"), this.setValue(t);
        }
        r(t, "laya.webgl.canvas.DrawStyle");
        var e = t.prototype;
        return e.setValue = function (t) {
          if (t) {
            if ("string" == typeof t) return void(this._color = _.create(t));
            if (t instanceof laya.utils.Color) return void(this._color = t);
          }
        }, e.reset = function () {
          this._color = _.create("black");
        }, e.equal = function (t) {
          return "string" == typeof t ? this._color.strColor === t : t instanceof laya.utils.Color && this._color.numColor === t.numColor;
        }, e.toColorStr = function () {
          return this._color.strColor;
        }, t.create = function (e) {
          if (e) {
            var i;
            if ("string" == typeof e ? i = _.create(e) : e instanceof laya.utils.Color && (i = e), i) return i._drawStyle || (i._drawStyle = new t(e));
          }
          return laya.webgl.canvas.DrawStyle.DEFAULT;
        }, n(t, ["DEFAULT", function () {
          return this.DEFAULT = new t("#000000");
        }]), t;
      }(),
      W = function () {
        function t() {
          this._x = 0, this._y = 0, this.dirty = !1, this.offset = 0, this.count = 0, this.geoStart = 0, this.tempArray = [], this.closePath = !1, this.geomatrys = [];
          xt.mainContext;
          this.ib = $t.create(35048), this.vb = Jt.create(5);
        }
        r(t, "laya.webgl.canvas.Path");
        var e = t.prototype;
        return e.addPoint = function (t, e) {
          this.tempArray.push(t, e);
        }, e.getEndPointX = function () {
          return this.tempArray[this.tempArray.length - 2];
        }, e.getEndPointY = function () {
          return this.tempArray[this.tempArray.length - 1];
        }, e.polygon = function (t, e, i, n, r, a) {
          var s;
          return this.geomatrys.push(this._curGeomatry = s = new Rt(t, e, i, n, r, a)), n || (s.fill = !1), void 0 == a && (s.borderWidth = 0), s;
        }, e.setGeomtry = function (t) {
          this.geomatrys.push(this._curGeomatry = t);
        }, e.drawLine = function (t, e, i, n, r) {
          var a;
          return this.closePath ? this.geomatrys.push(this._curGeomatry = a = new At(t, e, i, n, r)) : this.geomatrys.push(this._curGeomatry = a = new Dt(t, e, i, n, r)), a.fill = !1, a;
        }, e.update = function () {
          var t = this.ib._byteLength,
            e = this.geomatrys.length;
          this.offset = t;
          for (var i = this.geoStart; i < e; i++) this.geomatrys[i].getData(this.ib, this.vb, this.vb._byteLength / 20);
          this.geoStart = e, this.count = (this.ib._byteLength - t) / pt.BYTES_PIDX;
        }, e.reset = function () {
          this.vb.clear(), this.ib.clear(), this.offset = this.count = this.geoStart = 0, this.geomatrys.length = 0;
        }, e.recover = function () {
          this._curGeomatry = null, this.vb.destory(), this.vb = null, this.ib.destory(), this.ib = null;
        }, t;
      }(),
      j = function () {
        function t() {}
        r(t, "laya.webgl.canvas.save.SaveBase");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function () {
          return !1;
        }, e.restore = function (e) {
          this._dataObj[this._valueName] = this._value, t._cache[t._cache._length++] = this, this._newSubmit && (e._curSubmit = at.RENDERBASE, e._renderKey = 0);
        }, t._createArray = function () {
          var t = [];
          return t._length = 0, t;
        }, t._init = function () {
          var e = t._namemap = {};
          return e[1] = "ALPHA", e[2] = "fillStyle", e[8] = "font", e[256] = "lineWidth", e[512] = "strokeStyle", e[8192] = "_mergeID", e[1024] = e[2048] = e[4096] = [], e[16384] = "textBaseline", e[32768] = "textAlign", e[65536] = "_nBlendType", e[1048576] = "shader", e[2097152] = "filters", e;
        }, t.save = function (e, i, n, r) {
          if ((e._saveMark._saveuse & i) !== i) {
            e._saveMark._saveuse |= i;
            var a = t._cache,
              s = a._length > 0 ? a[--a._length] : new t();
            s._value = n[s._valueName = t._namemap[i]], s._dataObj = n, s._newSubmit = r;
            var o = e._save;
            o[o._length++] = s;
          }
        }, t._cache = laya.webgl.canvas.save.SaveBase._createArray(), t._namemap = t._init(), t;
      }(),
      X = function () {
        function t() {
          this._clipRect = new S();
        }
        r(t, "laya.webgl.canvas.save.SaveClipRect");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function () {
          return !1;
        }, e.restore = function (e) {
          e._clipRect = this._clipSaveRect, t._cache[t._cache._length++] = this, this._submitScissor.submitLength = e._submits._length - this._submitScissor.submitIndex, e._curSubmit = at.RENDERBASE, e._renderKey = 0;
        }, t.save = function (e, i) {
          if (131072 != (131072 & e._saveMark._saveuse)) {
            e._saveMark._saveuse |= 131072;
            var n = t._cache,
              r = n._length > 0 ? n[--n._length] : new t();
            r._clipSaveRect = e._clipRect, e._clipRect = r._clipRect.copyFrom(e._clipRect), r._submitScissor = i;
            var a = e._save;
            a[a._length++] = r;
          }
        }, n(t, ["_cache", function () {
          return this._cache = j._createArray();
        }]), t;
      }(),
      Y = function () {
        function t() {
          this._contextX = 0, this._contextY = 0, this._clipRect = new S(), this._rect = new S(), this._matrix = new x();
        }
        r(t, "laya.webgl.canvas.save.SaveClipRectStencil");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function () {
          return !1;
        }, e.restore = function (e) {
          ut.restore(e, this._rect, this._saveMatrix, this._contextX, this._contextY), e._clipRect = this._clipSaveRect, e._curMat = this._saveMatrix, e._x = this._contextX, e._y = this._contextY, t._cache[t._cache._length++] = this, e._curSubmit = at.RENDERBASE;
        }, t.save = function (e, i, n, r, a, s, o, h, l, u) {
          if (262144 != (262144 & e._saveMark._saveuse)) {
            e._saveMark._saveuse |= 262144;
            var c = t._cache,
              _ = c._length > 0 ? c[--c._length] : new t();
            _._clipSaveRect = e._clipRect, _._clipRect.setTo(o, h, l, u), e._clipRect = _._clipRect, _._rect.x = n, _._rect.y = r, _._rect.width = a, _._rect.height = s, _._contextX = e._x, _._contextY = e._y, _._saveMatrix = e._curMat, e._curMat.copyTo(_._matrix), e._curMat = _._matrix, _._submitStencil = i;
            var d = e._save;
            d[d._length++] = _;
          }
        }, n(t, ["_cache", function () {
          return this._cache = j._createArray();
        }]), t;
      }(),
      q = function () {
        function t() {
          this._saveuse = 0;
        }
        r(t, "laya.webgl.canvas.save.SaveMark");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function () {
          return !0;
        }, e.restore = function (e) {
          e._saveMark = this._preSaveMark, t._no[t._no._length++] = this;
        }, t.Create = function (e) {
          var i = t._no,
            n = i._length > 0 ? i[--i._length] : new t();
          return n._saveuse = 0, n._preSaveMark = e._saveMark, e._saveMark = n, n;
        }, n(t, ["_no", function () {
          return this._no = j._createArray();
        }]), t;
      }(),
      Q = function () {
        function t() {
          this._matrix = new x();
        }
        r(t, "laya.webgl.canvas.save.SaveTransform");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function () {
          return !1;
        }, e.restore = function (e) {
          e._curMat = this._savematrix, t._no[t._no._length++] = this;
        }, t.save = function (e) {
          var i = e._saveMark;
          if (2048 != (2048 & i._saveuse)) {
            i._saveuse |= 2048;
            var n = t._no,
              r = n._length > 0 ? n[--n._length] : new t();
            r._savematrix = e._curMat, e._curMat = e._curMat.copyTo(r._matrix);
            var a = e._save;
            a[a._length++] = r;
          }
        }, n(t, ["_no", function () {
          return this._no = j._createArray();
        }]), t;
      }(),
      K = function () {
        function t() {}
        r(t, "laya.webgl.canvas.save.SaveTranslate");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.canvas.save.ISaveData": !0
        }), e.isSaveMark = function () {
          return !1;
        }, e.restore = function (e) {
          e._curMat;
          e._x = this._x, e._y = this._y, t._no[t._no._length++] = this;
        }, t.save = function (e) {
          var i = t._no,
            n = i._length > 0 ? i[--i._length] : new t();
          n._x = e._x, n._y = e._y;
          var r = e._save;
          r[r._length++] = n;
        }, n(t, ["_no", function () {
          return this._no = j._createArray();
        }]), t;
      }(),
      Z = function () {
        function t() {
          this.target = null, this.repaint = !1, this._width = NaN, this._height = NaN, this._sp = null, this._clipRect = new S();
        }
        r(t, "laya.webgl.resource.RenderTargetMAX");
        var e = t.prototype;
        return e.setSP = function (t) {
          this._sp = t;
        }, e.size = function (t, e) {
          var n = this;
          this._width !== t || this._height !== e ? (this.repaint = !0, this._width = t, this._height = e, this.target ? this.target.size(t, e) : this.target = Vt.create(t, e), this.target.hasListener("recovered") || this.target.on("recovered", this, function (t) {
            i.timer.callLater(n._sp, n._sp.repaint);
          })) : this.target.size(t, e);
        }, e._flushToTarget = function (t, e) {
          if (!e._destroy) {
            var i = vt.worldScissorTest,
              n = vt.worldClipRect;
            vt.worldClipRect = this._clipRect, this._clipRect.x = this._clipRect.y = 0, this._clipRect.width = this._width, this._clipRect.height = this._height, vt.worldScissorTest = !1, xt.mainContext.disable(3089);
            var r = vt.worldAlpha,
              a = vt.worldMatrix4,
              s = vt.worldMatrix,
              o = vt.worldFilters,
              h = vt.worldShaderDefines;
            if (vt.worldMatrix = x.EMPTY, vt.restoreTempArray(), vt.worldMatrix4 = vt.TEMPMAT4_ARRAY, vt.worldAlpha = 1, vt.worldFilters = null, vt.worldShaderDefines = null, Nt.activeShader = null, e.start(), d.showCanvasMark ? e.clear(0, 1, 0, .3) : e.clear(0, 0, 0, 0), t.flush(), e.end(), Nt.activeShader = null, vt.worldAlpha = r, vt.worldMatrix4 = a, vt.worldMatrix = s, vt.worldFilters = o, vt.worldShaderDefines = h, vt.worldScissorTest = i, i) {
              var l = vt.height - n.y - n.height;
              xt.mainContext.scissor(n.x, l, n.width, n.height), xt.mainContext.enable(3089);
            }
            vt.worldClipRect = n;
          }
        }, e.flush = function (t) {
          this.repaint && (this._flushToTarget(t, this.target), this.repaint = !1);
        }, e.drawTo = function (t, e, i, n, r) {
          t.drawTexture(this.target.getTexture(), e, i, n, r, 0, 0);
        }, e.destroy = function () {
          this.target && (this.target.destroy(), this.target = null, this._sp = null);
        }, t;
      }(),
      $ = function () {
        function t() {
          this.ALPHA = 1, this.shaderType = 0, this.defines = new It();
        }
        r(t, "laya.webgl.shader.d2.Shader2D");
        return t.prototype.destroy = function () {
          this.defines = null, this.filters = null, this.glTexture = null, this.strokeStyle = null, this.fillStyle = null;
        }, t.__init__ = function () {
          qt.addInclude("parts/ColorFilter_ps_uniform.glsl", "uniform vec4 colorAlpha;\nuniform mat4 colorMat;"), qt.addInclude("parts/ColorFilter_ps_logic.glsl", "mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n"), qt.addInclude("parts/GlowFilter_ps_uniform.glsl", "uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;"), qt.addInclude("parts/GlowFilter_ps_logic.glsl", "const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n\tfor(float j = 0.0;j<=c_IterationTime; ++j){\n\t\tvec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n\t\tvec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n\t}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;"), qt.addInclude("parts/BlurFilter_ps_logic.glsl", "gl_FragColor =   blur();\ngl_FragColor.w*=alpha;"), qt.addInclude("parts/BlurFilter_ps_uniform.glsl", "uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}"), qt.addInclude("parts/ColorAdd_ps_uniform.glsl", "uniform vec4 colorAdd;\n"), qt.addInclude("parts/ColorAdd_ps_logic.glsl", "gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;");
          var t, e;
          t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}", e = 'precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}', qt.preCompile2D(0, 1, t, e, null), t = "attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}", e = 'precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\nvoid main() {\n\tvec4 a = vec4(color.r, color.g, color.b, color.a);\n\ta.w = alpha;\n\ta.xyz *= alpha;\n\tgl_FragColor = a;\n\t#include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n}', qt.preCompile2D(0, 2, t, e, null), t = "attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}", e = "precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=alpha;\n}", qt.preCompile2D(0, 4, t, e, null), t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}", e = '#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}', qt.preCompile2D(0, 256, t, e, null), t = "attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}", e = "precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n\tvec4 t_color = texture2D(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}", qt.preCompile2D(0, 512, t, e, null);
        }, t;
      }(),
      J = function () {
        function t(t, e, i) {
          this._value = 0, this._name2int = t, this._int2name = e, this._int2nameMap = i;
        }
        r(t, "laya.webgl.shader.ShaderDefines");
        var e = t.prototype;
        return e.add = function (t) {
          return "string" == typeof t && (t = this._name2int[t]), this._value |= t, this._value;
        }, e.addInt = function (t) {
          return this._value |= t, this._value;
        }, e.remove = function (t) {
          return "string" == typeof t && (t = this._name2int[t]), this._value &= ~t, this._value;
        }, e.isDefine = function (t) {
          return (this._value & t) === t;
        }, e.getValue = function () {
          return this._value;
        }, e.setValue = function (t) {
          this._value = t;
        }, e.toNameDic = function () {
          var e = this._int2nameMap[this._value];
          return e || t._toText(this._value, this._int2name, this._int2nameMap);
        }, t._reg = function (t, e, i, n) {
          i[t] = e, n[e] = t;
        }, t._toText = function (t, e, i) {
          var n = i[t];
          if (n) return n;
          for (var r = {}, a = 1, s = 0; s < 32 && !((a = 1 << s) > t); s++)
            if (t & a) {
              var o = e[a];
              o && (r[o] = "");
            }
          return i[t] = r, r;
        }, t._toInt = function (t, e) {
          for (var i = t.split("."), n = 0, r = 0, a = i.length; r < a; r++) {
            var s = e[i[r]];
            if (!s) throw new Error("Defines to int err:" + t + "/" + i[r]);
            n |= s;
          }
          return n;
        }, t;
      }(),
      tt = function () {
        function t() {
          this.mVBBuffer = null, this.mIBBuffer = null, this.mVBData = null, this.mIBData = null, this.mEleNum = 0, this.mTexture = null, this.transform = null, this._vs = null, this._ps = null, this._indexStart = -1, this._verticles = null, this._uvs = null, this._tempMatrix = new x();
        }
        r(t, "laya.webgl.shader.d2.skinAnishader.SkinMesh");
        var e = t.prototype;
        return e.init = function (e, i, n) {
          if (i) this._vs = i;
          else {
            this._vs = [];
            var r = e.width,
              a = e.height;
            this._vs.push(0, 0, 0, 0, 1, 1, 1, 1), this._vs.push(r, 0, 1, 0, 1, 1, 1, 1), this._vs.push(r, a, 1, 1, 1, 1, 1, 1), this._vs.push(0, a, 0, 1, 1, 1, 1, 1);
          }
          n ? this._ps = n : (t._defaultPS || (t._defaultPS = []).push(0, 1, 3, 3, 1, 2), this._ps = t._defaultPS), this.mVBData = new Float32Array(this._vs), this.mIBData = new Uint16Array(this._ps.length), this.mIBData.start = -1, this.mEleNum = this._ps.length, this.mTexture = e;
        }, e.init2 = function (t, e, i, n, r) {
          this.transform && (this.transform = null), i ? this._ps = i : (this._ps = [], this._ps.push(0, 1, 3, 3, 1, 2)), this._verticles = n, this._uvs = r, this.mEleNum = this._ps.length, this.mTexture = t, (w.isConchNode || w.isConchApp) && (this._initMyData(), this.mVBData = new Float32Array(this._vs));
        }, e._initMyData = function () {
          var e = 0,
            i = 0,
            n = 4 * this._verticles.length;
          this._vs = t._tempVS;
          var r = !1;
          if (w.isConchNode || w.isConchApp ? (this._vs.length = n, r = !0) : this._vs.length < n && (this._vs.length = n, r = !0), t._tVSLen = n, r)
            for (; e < n;) this._vs[e] = this._verticles[i], this._vs[e + 1] = this._verticles[i + 1], this._vs[e + 2] = this._uvs[i], this._vs[e + 3] = this._uvs[i + 1], this._vs[e + 4] = 1, this._vs[e + 5] = 1, this._vs[e + 6] = 1, this._vs[e + 7] = 1, e += 8, i += 2;
          else
            for (; e < n;) this._vs[e] = this._verticles[i], this._vs[e + 1] = this._verticles[i + 1], this._vs[e + 2] = this._uvs[i], this._vs[e + 3] = this._uvs[i + 1], e += 8, i += 2;
        }, e.getData2 = function (e, i, n) {
          this.mVBBuffer = e, this.mIBBuffer = i, this._initMyData(), e.appendEx2(this._vs, Float32Array, t._tVSLen, 4), this._indexStart = i._byteLength;
          var r;
          (r = t._tempIB).length < this._ps.length && (r.length = this._ps.length);
          for (var a = 0, s = this._ps.length; a < s; a++) r[a] = this._ps[a] + n;
          i.appendEx2(r, Uint16Array, this._ps.length, 2);
        }, e.getData = function (t, e, i) {
          if (this.mVBBuffer = t, this.mIBBuffer = e, t.append(this.mVBData), this._indexStart = e._byteLength, this.mIBData.start != i) {
            for (var n = 0, r = this._ps.length; n < r; n++) this.mIBData[n] = this._ps[n] + i;
            this.mIBData.start = i;
          }
          e.append(this.mIBData);
        }, e.render = function (t, e, i) {
          if (w.isWebGL && this.mTexture) {
            t._renderKey = 0, t._shader2D.glTexture = null, et.getInstance().addSkinMesh(this);
            var n = at.createShape(t, this.mIBBuffer, this.mVBBuffer, this.mEleNum, this._indexStart, Et.create(512, 0));
            this.transform || (this.transform = x.EMPTY), this.transform.translate(e, i), x.mul(this.transform, t._curMat, this._tempMatrix), this.transform.translate(-e, -i);
            var r = n.shaderValue,
              a = r.u_mmat2 || vt.getMatrArray();
            vt.mat2MatArray(this._tempMatrix, a), r.textureHost = this.mTexture, r.offsetX = 0, r.offsetY = 0, r.u_mmat2 = a, r.ALPHA = t._shader2D.ALPHA, t._submits[t._submits._length++] = n;
          } else w.isConchApp && this.mTexture && (this.transform || (this.transform = x.EMPTY), t.setSkinMesh && t.setSkinMesh(e, i, this._ps, this.mVBData, this.mEleNum, 0, this.mTexture, this.transform));
        }, t._tempVS = [], t._tempIB = [], t._defaultPS = null, t._tVSLen = 0, t;
      }(),
      et = function () {
        function t() {
          this.ib = null, this.vb = null;
          xt.mainContext;
          this.ib = $t.create(35048), this.vb = Jt.create(8);
        }
        r(t, "laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer");
        var e = t.prototype;
        return e.addSkinMesh = function (t) {
          t.getData2(this.vb, this.ib, this.vb._byteLength / 32);
        }, e.reset = function () {
          this.vb.clear(), this.ib.clear();
        }, t.getInstance = function () {
          return t.instance = t.instance || new t();
        }, t.instance = null, t;
      }(),
      it = function () {
        function t(t, e, i, n, r, a, s, o, h) {
          this.r0 = 0, this.fill = !0, this.r1 = Math.PI / 2, void 0 === h && (h = 0), this.x = t, this.y = e, this.width = i, this.height = n, this.edges = r, this.color = a, this.borderWidth = s, this.borderColor = o;
        }
        r(t, "laya.webgl.shapes.BasePoly");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.shapes.IShape": !0
        }), e.getData = function (t, e, i) {}, e.rebuild = function (t) {}, e.setMatrix = function (t) {}, e.needUpdate = function (t) {
          return !0;
        }, e.sector = function (t, e, i) {
          var n = this.x,
            r = this.y,
            a = this.edges,
            s = (this.r1 - this.r0) / a,
            o = this.width,
            h = this.height,
            l = this.color,
            u = (l >> 16 & 255) / 255,
            c = (l >> 8 & 255) / 255,
            _ = (255 & l) / 255;
          t.push(n, r, u, c, _);
          for (var d = 0; d < a + 1; d++) t.push(n + Math.sin(s * d + this.r0) * o, r + Math.cos(s * d + this.r0) * h), t.push(u, c, _);
          for (d = 0; d < a; d++) e.push(i, i + d + 1, i + d + 2);
        }, e.createLine2 = function (t, e, i, n, r, a) {
          var s, o, h, l, u, c, _, d, f, p, m, g, v, y, x, T, S, w, E, b, C = t.concat(),
            M = r,
            I = this.borderColor,
            D = (I >> 16 & 255) / 255,
            A = (I >> 8 & 255) / 255,
            R = (255 & I) / 255,
            P = C.length / 2,
            L = n,
            O = i / 2;
          h = C[0], l = C[1], p = h - (u = C[2]), f = (f = -(l - (c = C[3]))) / (b = Math.sqrt(f * f + p * p)) * O, p = p / b * O, M.push(h - f + this.x, l - p + this.y, D, A, R, h + f + this.x, l + p + this.y, D, A, R);
          for (var N = 1; N < P - 1; N++) h = C[2 * (N - 1)], l = C[2 * (N - 1) + 1], u = C[2 * N], c = C[2 * N + 1], _ = C[2 * (N + 1)], d = C[2 * (N + 1) + 1], p = h - u, g = u - _, x = (-(f = (f = -(l - c)) / (b = Math.sqrt(f * f + p * p)) * O) + h) * (-(p = p / b * O) + c) - (-f + u) * (-p + l), w = (-(m = (m = -(c - d)) / (b = Math.sqrt(m * m + g * g)) * O) + _) * (-(g = g / b * O) + c) - (-m + u) * (-g + d), E = (v = -p + l - (-p + c)) * (S = -m + u - (-m + _)) - (T = -g + d - (-g + c)) * (y = -f + u - (-f + h)), Math.abs(E) < .1 ? (E += 10.1, M.push(u - f + this.x, c - p + this.y, D, A, R, u + f + this.x, c + p + this.y, D, A, R)) : (((s = (y * w - S * x) / E) - u) * (s - u) + ((o = (T * x - v * w) / E) - c) + (o - c), M.push(s + this.x, o + this.y, D, A, R, u - (s - u) + this.x, c - (o - c) + this.y, D, A, R));
          h = C[C.length - 4], l = C[C.length - 3], p = h - (u = C[C.length - 2]), f = (f = -(l - (c = C[C.length - 1]))) / (b = Math.sqrt(f * f + p * p)) * O, p = p / b * O, M.push(u - f + this.x, c - p + this.y, D, A, R, u + f + this.x, c + p + this.y, D, A, R);
          var V = a;
          for (N = 1; N < V; N++) e.push(L + 2 * (N - 1), L + 2 * (N - 1) + 1, L + 2 * N + 1, L + 2 * N + 1, L + 2 * N, L + 2 * (N - 1));
          return M;
        }, e.createLine = function (t, e, i, n) {
          var r = t.concat(),
            a = t,
            s = this.borderColor,
            o = (s >> 16 & 255) / 255,
            h = (s >> 8 & 255) / 255,
            l = (255 & s) / 255;
          r.splice(0, 5);
          var u, c, _, d, f, p, m, g, v, y, x, T, S, w, E, b, C, M, I, D, A = r.length / 5,
            R = n,
            P = i / 2;
          _ = r[0], d = r[1], y = _ - (f = r[5]), v = (v = -(d - (p = r[6]))) / (D = Math.sqrt(v * v + y * y)) * P, y = y / D * P, a.push(_ - v, d - y, o, h, l, _ + v, d + y, o, h, l);
          for (var L = 1; L < A - 1; L++) _ = r[5 * (L - 1)], d = r[5 * (L - 1) + 1], f = r[5 * L], p = r[5 * L + 1], m = r[5 * (L + 1)], g = r[5 * (L + 1) + 1], y = _ - f, T = f - m, E = (-(v = (v = -(d - p)) / (D = Math.sqrt(v * v + y * y)) * P) + _) * (-(y = y / D * P) + p) - (-v + f) * (-y + d), M = (-(x = (x = -(p - g)) / (D = Math.sqrt(x * x + T * T)) * P) + m) * (-(T = T / D * P) + p) - (-x + f) * (-T + g), I = (S = -y + d - (-y + p)) * (C = -x + f - (-x + m)) - (b = -T + g - (-T + p)) * (w = -v + f - (-v + _)), Math.abs(I) < .1 ? (I += 10.1, a.push(f - v, p - y, o, h, l, f + v, p + y, o, h, l)) : (((u = (w * M - C * E) / I) - f) * (u - f) + ((c = (b * E - S * M) / I) - p) + (c - p), a.push(u, c, o, h, l, f - (u - f), p - (c - p), o, h, l));
          _ = r[r.length - 10], d = r[r.length - 9], y = _ - (f = r[r.length - 5]), v = (v = -(d - (p = r[r.length - 4]))) / (D = Math.sqrt(v * v + y * y)) * P, y = y / D * P, a.push(f - v, p - y, o, h, l, f + v, p + y, o, h, l);
          var O = this.edges + 1;
          for (L = 1; L < O; L++) e.push(R + 2 * (L - 1), R + 2 * (L - 1) + 1, R + 2 * L + 1, R + 2 * L + 1, R + 2 * L, R + 2 * (L - 1));
          return a;
        }, e.createLoopLine = function (t, e, i, n, r, a) {
          var s = t.concat(),
            o = r || t,
            h = this.borderColor,
            l = (h >> 16 & 255) / 255,
            u = (h >> 8 & 255) / 255,
            c = (255 & h) / 255;
          s.splice(0, 5);
          var _ = [s[0], s[1]],
            d = [s[s.length - 5], s[s.length - 4]],
            f = d[0] + .5 * (_[0] - d[0]),
            p = d[1] + .5 * (_[1] - d[1]);
          s.unshift(f, p, 0, 0, 0), s.push(f, p, 0, 0, 0);
          var m, g, v, y, x, T, S, w, E, b, C, M, I, D, A, R, P, L, O, N, V = s.length / 5,
            F = n,
            B = i / 2;
          v = s[0], y = s[1], b = v - (x = s[5]), E = (E = -(y - (T = s[6]))) / (N = Math.sqrt(E * E + b * b)) * B, b = b / N * B, o.push(v - E, y - b, l, u, c, v + E, y + b, l, u, c);
          for (var U = 1; U < V - 1; U++) v = s[5 * (U - 1)], y = s[5 * (U - 1) + 1], x = s[5 * U], T = s[5 * U + 1], S = s[5 * (U + 1)], w = s[5 * (U + 1) + 1], b = v - x, M = x - S, A = (-(E = (E = -(y - T)) / (N = Math.sqrt(E * E + b * b)) * B) + v) * (-(b = b / N * B) + T) - (-E + x) * (-b + y), L = (-(C = (C = -(T - w)) / (N = Math.sqrt(C * C + M * M)) * B) + S) * (-(M = M / N * B) + T) - (-C + x) * (-M + w), O = (I = -b + y - (-b + T)) * (P = -C + x - (-C + S)) - (R = -M + w - (-M + T)) * (D = -E + x - (-E + v)), Math.abs(O) < .1 ? (O += 10.1, o.push(x - E, T - b, l, u, c, x + E, T + b, l, u, c)) : (((m = (D * L - P * A) / O) - x) * (m - x) + ((g = (R * A - I * L) / O) - T) + (g - T), o.push(m, g, l, u, c, x - (m - x), T - (g - T), l, u, c));
          a && (e = a);
          var k = this.edges + 1;
          for (U = 1; U < k; U++) e.push(F + 2 * (U - 1), F + 2 * (U - 1) + 1, F + 2 * U + 1, F + 2 * U + 1, F + 2 * U, F + 2 * (U - 1));
          return e.push(F + 2 * (U - 1), F + 2 * (U - 1) + 1, F + 1, F + 1, F, F + 2 * (U - 1)), o;
        }, t;
      }(),
      nt = function () {
        function t() {}
        return r(t, "laya.webgl.shapes.Earcut"), t.earcut = function (e, i, n) {
          n = n || 2;
          var r = i && i.length,
            a = r ? i[0] * n : e.length,
            s = t.linkedList(e, 0, a, n, !0),
            o = [];
          if (!s) return o;
          var h, l, u, c, _, d, f;
          if (r && (s = t.eliminateHoles(e, i, s, n)), e.length > 80 * n) {
            h = u = e[0], l = c = e[1];
            for (var p = n; p < a; p += n) _ = e[p], d = e[p + 1], _ < h && (h = _), d < l && (l = d), _ > u && (u = _), d > c && (c = d);
            f = 0 !== (f = Math.max(u - h, c - l)) ? 1 / f : 0;
          }
          return t.earcutLinked(s, o, n, h, l, f), o;
        }, t.linkedList = function (e, i, n, r, a) {
          var s, o;
          if (a === t.signedArea(e, i, n, r) > 0)
            for (s = i; s < n; s += r) o = t.insertNode(s, e[s], e[s + 1], o);
          else
            for (s = n - r; s >= i; s -= r) o = t.insertNode(s, e[s], e[s + 1], o);
          return o && t.equals(o, o.next) && (t.removeNode(o), o = o.next), o;
        }, t.filterPoints = function (e, i) {
          if (!e) return e;
          i || (i = e);
          var n, r = e;
          do {
            if (n = !1, r.steiner || !t.equals(r, r.next) && 0 !== t.area(r.prev, r, r.next)) r = r.next;
            else {
              if (t.removeNode(r), (r = i = r.prev) === r.next) break;
              n = !0;
            }
          } while (n || r !== i);
          return i;
        }, t.earcutLinked = function (e, i, n, r, a, s, o) {
          if (e) {
            !o && s && t.indexCurve(e, r, a, s);
            for (var h, l, u = e; e.prev !== e.next;)
              if (h = e.prev, l = e.next, s ? t.isEarHashed(e, r, a, s) : t.isEar(e)) i.push(h.i / n), i.push(e.i / n), i.push(l.i / n), t.removeNode(e), e = l.next, u = l.next;
              else if ((e = l) === u) {
              o ? 1 === o ? (e = t.cureLocalIntersections(e, i, n), t.earcutLinked(e, i, n, r, a, s, 2)) : 2 === o && t.splitEarcut(e, i, n, r, a, s) : t.earcutLinked(t.filterPoints(e, null), i, n, r, a, s, 1);
              break;
            }
          }
        }, t.isEar = function (e) {
          var i = e.prev,
            n = e,
            r = e.next;
          if (t.area(i, n, r) >= 0) return !1;
          for (var a = e.next.next; a !== e.prev;) {
            if (t.pointInTriangle(i.x, i.y, n.x, n.y, r.x, r.y, a.x, a.y) && t.area(a.prev, a, a.next) >= 0) return !1;
            a = a.next;
          }
          return !0;
        }, t.isEarHashed = function (e, i, n, r) {
          var a = e.prev,
            s = e,
            o = e.next;
          if (t.area(a, s, o) >= 0) return !1;
          for (var h = a.x < s.x ? a.x < o.x ? a.x : o.x : s.x < o.x ? s.x : o.x, l = a.y < s.y ? a.y < o.y ? a.y : o.y : s.y < o.y ? s.y : o.y, u = a.x > s.x ? a.x > o.x ? a.x : o.x : s.x > o.x ? s.x : o.x, c = a.y > s.y ? a.y > o.y ? a.y : o.y : s.y > o.y ? s.y : o.y, _ = t.zOrder(h, l, i, n, r), d = t.zOrder(u, c, i, n, r), f = e.nextZ; f && f.z <= d;) {
            if (f !== e.prev && f !== e.next && t.pointInTriangle(a.x, a.y, s.x, s.y, o.x, o.y, f.x, f.y) && t.area(f.prev, f, f.next) >= 0) return !1;
            f = f.nextZ;
          }
          for (f = e.prevZ; f && f.z >= _;) {
            if (f !== e.prev && f !== e.next && t.pointInTriangle(a.x, a.y, s.x, s.y, o.x, o.y, f.x, f.y) && t.area(f.prev, f, f.next) >= 0) return !1;
            f = f.prevZ;
          }
          return !0;
        }, t.cureLocalIntersections = function (e, i, n) {
          var r = e;
          do {
            var a = r.prev,
              s = r.next.next;
            !t.equals(a, s) && t.intersects(a, r, r.next, s) && t.locallyInside(a, s) && t.locallyInside(s, a) && (i.push(a.i / n), i.push(r.i / n), i.push(s.i / n), t.removeNode(r), t.removeNode(r.next), r = e = s), r = r.next;
          } while (r !== e);
          return r;
        }, t.splitEarcut = function (e, i, n, r, a, s) {
          var o = e;
          do {
            for (var h = o.next.next; h !== o.prev;) {
              if (o.i !== h.i && t.isValidDiagonal(o, h)) {
                var l = t.splitPolygon(o, h);
                return o = t.filterPoints(o, o.next), l = t.filterPoints(l, l.next), t.earcutLinked(o, i, n, r, a, s), void t.earcutLinked(l, i, n, r, a, s);
              }
              h = h.next;
            }
            o = o.next;
          } while (o !== e);
        }, t.eliminateHoles = function (e, i, n, r) {
          var a, s, o, h, l, u = [];
          for (a = 0, s = i.length; a < s; a++) o = i[a] * r, h = a < s - 1 ? i[a + 1] * r : e.length, (l = t.linkedList(e, o, h, r, !1)) === l.next && (l.steiner = !0), u.push(t.getLeftmost(l));
          for (u.sort(t.compareX), a = 0; a < u.length; a++) t.eliminateHole(u[a], n), n = t.filterPoints(n, n.next);
          return n;
        }, t.compareX = function (t, e) {
          return t.x - e.x;
        }, t.eliminateHole = function (e, i) {
          if (i = t.findHoleBridge(e, i)) {
            var n = t.splitPolygon(i, e);
            t.filterPoints(n, n.next);
          }
        }, t.findHoleBridge = function (e, i) {
          var n, r = i,
            a = e.x,
            s = e.y,
            o = -1 / 0;
          do {
            if (s <= r.y && s >= r.next.y && r.next.y !== r.y) {
              var h = r.x + (s - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
              if (h <= a && h > o) {
                if (o = h, h === a) {
                  if (s === r.y) return r;
                  if (s === r.next.y) return r.next;
                }
                n = r.x < r.next.x ? r : r.next;
              }
            }
            r = r.next;
          } while (r !== i);
          if (!n) return null;
          if (a === o) return n.prev;
          var l, u = n,
            c = n.x,
            _ = n.y,
            d = 1 / 0;
          for (r = n.next; r !== u;) a >= r.x && r.x >= c && a !== r.x && t.pointInTriangle(s < _ ? a : o, s, c, _, s < _ ? o : a, s, r.x, r.y) && ((l = Math.abs(s - r.y) / (a - r.x)) < d || l === d && r.x > n.x) && t.locallyInside(r, e) && (n = r, d = l), r = r.next;
          return n;
        }, t.indexCurve = function (e, i, n, r) {
          var a = e;
          do {
            null === a.z && (a.z = t.zOrder(a.x, a.y, i, n, r)), a.prevZ = a.prev, a.nextZ = a.next, a = a.next;
          } while (a !== e);
          a.prevZ.nextZ = null, a.prevZ = null, t.sortLinked(a);
        }, t.sortLinked = function (t) {
          var e, i, n, r, a, s, o, h, l = 1;
          do {
            for (i = t, t = null, a = null, s = 0; i;) {
              for (s++, n = i, o = 0, e = 0; e < l && (o++, n = n.nextZ); e++);
              for (h = l; o > 0 || h > 0 && n;) 0 !== o && (0 === h || !n || i.z <= n.z) ? (r = i, i = i.nextZ, o--) : (r = n, n = n.nextZ, h--), a ? a.nextZ = r : t = r, r.prevZ = a, a = r;
              i = n;
            }
            a.nextZ = null, l *= 2;
          } while (s > 1);
          return t;
        }, t.zOrder = function (t, e, i, n, r) {
          return t = 32767 * (t - i) * r, e = 32767 * (e - n) * r, t = 16711935 & (t | t << 8), t = 252645135 & (t | t << 4), t = 858993459 & (t | t << 2), t = 1431655765 & (t | t << 1), e = 16711935 & (e | e << 8), e = 252645135 & (e | e << 4), e = 858993459 & (e | e << 2), e = 1431655765 & (e | e << 1), t | e << 1;
        }, t.getLeftmost = function (t) {
          var e = t,
            i = t;
          do {
            e.x < i.x && (i = e), e = e.next;
          } while (e !== t);
          return i;
        }, t.pointInTriangle = function (t, e, i, n, r, a, s, o) {
          return (r - s) * (e - o) - (t - s) * (a - o) >= 0 && (t - s) * (n - o) - (i - s) * (e - o) >= 0 && (i - s) * (a - o) - (r - s) * (n - o) >= 0;
        }, t.isValidDiagonal = function (e, i) {
          return e.next.i !== i.i && e.prev.i !== i.i && !t.intersectsPolygon(e, i) && t.locallyInside(e, i) && t.locallyInside(i, e) && t.middleInside(e, i);
        }, t.area = function (t, e, i) {
          return (e.y - t.y) * (i.x - e.x) - (e.x - t.x) * (i.y - e.y);
        }, t.equals = function (t, e) {
          return t.x === e.x && t.y === e.y;
        }, t.intersects = function (e, i, n, r) {
          return !!(t.equals(e, i) && t.equals(n, r) || t.equals(e, r) && t.equals(n, i)) || t.area(e, i, n) > 0 != t.area(e, i, r) > 0 && t.area(n, r, e) > 0 != t.area(n, r, i) > 0;
        }, t.intersectsPolygon = function (e, i) {
          var n = e;
          do {
            if (n.i !== e.i && n.next.i !== e.i && n.i !== i.i && n.next.i !== i.i && t.intersects(n, n.next, e, i)) return !0;
            n = n.next;
          } while (n !== e);
          return !1;
        }, t.locallyInside = function (e, i) {
          return t.area(e.prev, e, e.next) < 0 ? t.area(e, i, e.next) >= 0 && t.area(e, e.prev, i) >= 0 : t.area(e, i, e.prev) < 0 || t.area(e, e.next, i) < 0;
        }, t.middleInside = function (t, e) {
          var i = t,
            n = !1,
            r = (t.x + e.x) / 2,
            a = (t.y + e.y) / 2;
          do {
            i.y > a != i.next.y > a && i.next.y !== i.y && r < (i.next.x - i.x) * (a - i.y) / (i.next.y - i.y) + i.x && (n = !n), i = i.next;
          } while (i !== t);
          return n;
        }, t.splitPolygon = function (t, e) {
          var i = new rt(t.i, t.x, t.y),
            n = new rt(e.i, e.x, e.y),
            r = t.next,
            a = e.prev;
          return t.next = e, e.prev = t, i.next = r, r.prev = i, n.next = i, i.prev = n, a.next = n, n.prev = a, n;
        }, t.insertNode = function (t, e, i, n) {
          var r = new rt(t, e, i);
          return n ? (r.next = n.next, r.prev = n, n.next.prev = r, n.next = r) : (r.prev = r, r.next = r), r;
        }, t.removeNode = function (t) {
          t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ);
        }, t.signedArea = function (t, e, i, n) {
          for (var r = 0, a = e, s = i - n; a < i; a += n) r += (t[s] - t[a]) * (t[a + 1] + t[s + 1]), s = a;
          return r;
        }, t;
      }(),
      rt = function () {
        function t(t, e, i) {
          this.i = null, this.x = null, this.y = null, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = null, this.i = t, this.x = e, this.y = i, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
        }
        return r(t, "laya.webgl.shapes.EarcutNode"), t;
      }(),
      at = (function () {
        function t(t, e, i, n, r, a, s) {
          this.lineWidth = t, this.lineColor = e, this.lineAlpha = i, this.fillColor = n, this.fillAlpha = r, this.shape = s, this.fill = a;
        }
        r(t, "laya.webgl.shapes.GeometryData");
        var e = t.prototype;
        e.clone = function () {
          return new t(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.fill, this.shape);
        }, e.getIndexData = function () {
          return null;
        }, e.getVertexData = function () {
          return null;
        }, e.destroy = function () {
          this.shape = null;
        };
      }(), function () {
        function t(t) {
          if (t instanceof Float32Array) this.points = t;
          else if (t instanceof Array) {
            t.length;
            this.points = new Float32Array(t);
          }
        }
        r(t, "laya.webgl.shapes.Vertex");
        var e = t.prototype;
        i.imps(e, {
          "laya.webgl.shapes.IShape": !0
        }), e.getData = function (t, e, i) {}, e.needUpdate = function (t) {
          return !1;
        }, e.rebuild = function (t) {}, e.setMatrix = function (t) {};
      }(), function () {
        function t(t) {
          void 0 === t && (t = 1e4), this._renderType = t;
        }
        r(t, "laya.webgl.submit.Submit");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e.releaseRender = function () {
          var e = t._cache;
          e[e._length++] = this, this.shaderValue.release(), this._vb = null;
        }, e.getRenderType = function () {
          return this._renderType;
        }, e.renderSubmit = function () {
          if (0 === this._numEle) return 1;
          var t = this.shaderValue.textureHost;
          if (t) {
            var e = t.source;
            if (!t.bitmap || !e) return 1;
            this.shaderValue.texture = e;
          }
          this._vb.bind_upload(this._ib);
          var i = xt.mainContext;
          return this.shaderValue.upload(), H.activeBlendFunction !== this._blendFn && (i.enable(3042), this._blendFn(i), H.activeBlendFunction = this._blendFn), A.drawCall++, A.trianglesFaces += this._numEle / 3, i.drawElements(4, this._numEle, 5123, this._startIdx), 1;
        }, t.__init__ = function () {
          var e = t.RENDERBASE = new t(-1);
          e.shaderValue = new Et(0, 0), e.shaderValue.ALPHA = -1234;
        }, t.createSubmit = function (e, i, n, r, a) {
          var s = t._cache._length ? t._cache[--t._cache._length] : new t();
          null == n && ((n = s._selfVb || (s._selfVb = Jt.create(-1))).clear(), r = 0), s._ib = i, s._vb = n, s._startIdx = r * pt.BYTES_PIDX, s._numEle = 0;
          var o = e._nBlendType;
          s._blendFn = e._targets ? H.targetFns[o] : H.fns[o], s.shaderValue = a, s.shaderValue.setValue(e._shader2D);
          var h = e._shader2D.filters;
          return h && s.shaderValue.setFilters(h), s;
        }, t.createShape = function (e, i, n, r, a, s) {
          var o = t._cache._length ? t._cache[--t._cache._length] : new t();
          o._ib = i, o._vb = n, o._numEle = r, o._startIdx = a, o.shaderValue = s, o.shaderValue.setValue(e._shader2D);
          var h = e._nBlendType;
          return o._blendFn = e._targets ? H.targetFns[h] : H.fns[h], o;
        }, t.TYPE_2D = 1e4, t.TYPE_CANVAS = 10003, t.TYPE_CMDSETRT = 10004, t.TYPE_CUSTOM = 10005, t.TYPE_BLURRT = 10006, t.TYPE_CMDDESTORYPRERT = 10007, t.TYPE_DISABLESTENCIL = 10008, t.TYPE_OTHERIBVB = 10009, t.TYPE_PRIMITIVE = 10010, t.TYPE_RT = 10011, t.TYPE_BLUR_RT = 10012, t.TYPE_TARGET = 10013, t.TYPE_CHANGE_VALUE = 10014, t.TYPE_SHAPE = 10015, t.TYPE_TEXTURE = 10016, t.TYPE_FILLTEXTURE = 10017, t.RENDERBASE = null, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t;
      }()),
      st = function () {
        function t() {
          this.fun = null, this.args = null;
        }
        r(t, "laya.webgl.submit.SubmitCMD");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e.renderSubmit = function () {
          return this.fun.apply(null, this.args), 1;
        }, e.getRenderType = function () {
          return 0;
        }, e.releaseRender = function () {
          var e = t._cache;
          e[e._length++] = this;
        }, t.create = function (e, i) {
          var n = t._cache._length ? t._cache[--t._cache._length] : new t();
          return n.fun = i, n.args = e, n;
        }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t;
      }(),
      ot = function () {
        function t() {
          this.variables = {};
        }
        r(t, "laya.webgl.submit.SubmitCMDScope");
        var e = t.prototype;
        return e.getValue = function (t) {
          return this.variables[t];
        }, e.addValue = function (t, e) {
          return this.variables[t] = e;
        }, e.setValue = function (t, e) {
          return this.variables.hasOwnProperty(t) ? this.variables[t] = e : null;
        }, e.clear = function () {
          for (var t in this.variables) delete this.variables[t];
        }, e.recycle = function () {
          this.clear(), t.POOL.push(this);
        }, t.create = function () {
          var e = t.POOL.pop();
          return e || (e = new t()), e;
        }, t.POOL = [], t;
      }(),
      ht = function () {
        function t() {
          this.offset = 0, this.startIndex = 0, this._mat = x.create();
        }
        r(t, "laya.webgl.submit.SubmitOtherIBVB");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e.releaseRender = function () {
          var e = t._cache;
          e[e._length++] = this;
        }, e.getRenderType = function () {
          return 10009;
        }, e.renderSubmit = function () {
          var e = this._shaderValue.textureHost;
          if (e) {
            var i = e.source;
            if (!e.bitmap || !i) return 1;
            this._shaderValue.texture = i;
          }
          this._vb.bind_upload(this._ib);
          var n = vt.worldMatrix4,
            r = x.TEMP;
          x.mulPre(this._mat, n[0], n[1], n[4], n[5], n[12], n[13], r);
          var a = vt.worldMatrix4 = t.tempMatrix4;
          a[0] = r.a, a[1] = r.b, a[4] = r.c, a[5] = r.d, a[12] = r.tx, a[13] = r.ty, this._shader._offset = this.offset, this._shaderValue.refresh(), this._shader.upload(this._shaderValue), this._shader._offset = 0;
          var s = xt.mainContext;
          return H.activeBlendFunction !== this._blendFn && (s.enable(3042), this._blendFn(s), H.activeBlendFunction = this._blendFn), A.drawCall++, A.trianglesFaces += this._numEle / 3, s.drawElements(4, this._numEle, 5123, this.startIndex), vt.worldMatrix4 = n, Nt.activeShader = null, 1;
        }, t.create = function (e, i, n, r, a, s, o, h, l) {
          void 0 === l && (l = 0);
          var u = t._cache._length ? t._cache[--t._cache._length] : new t();
          u._ib = n, u._vb = i, u._numEle = r, u._shader = a, u._shaderValue = s;
          var c = e._nBlendType;
          switch (u._blendFn = e._targets ? H.targetFns[c] : H.fns[c], l) {
            case 0:
              u.offset = 0, u.startIndex = h / (pt.BYTES_PE * i.vertexStride) * 1.5, u.startIndex *= pt.BYTES_PIDX;
              break;
            case 1:
              u.startIndex = o, u.offset = h;
          }
          return u;
        }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t.tempMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], t;
      }(),
      lt = function () {
        function t() {
          this.submitIndex = 0, this.submitLength = 0, this.context = null, this.clipRect = new S(), this.screenRect = new S();
        }
        r(t, "laya.webgl.submit.SubmitScissor");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e._scissor = function (t, e, i, n) {
          var r = vt.worldMatrix4,
            a = r[0],
            s = r[5];
          if (t = t * a + r[12], e = e * s + r[13], i *= a, n *= s, i < 1 || n < 1) return !1;
          var o = t + i,
            h = e + n;
          t < 0 && (t = 0, i = o - t), e < 0 && (e = 0, n = h - e);
          var l = vt.worldClipRect;
          if (t = Math.max(t, l.x), e = Math.max(e, l.y), i = Math.min(o, l.right) - t, n = Math.min(h, l.bottom) - e, i < 1 || n < 1) return !1;
          var u = vt.worldScissorTest;
          return this.screenRect.copyFrom(l), l.x = t, l.y = e, l.width = i, l.height = n, vt.worldScissorTest = !0, e = vt.height - e - n, xt.mainContext.scissor(t, e, i, n), xt.mainContext.enable(3089), this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength), u ? (e = vt.height - this.screenRect.y - this.screenRect.height, xt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height), xt.mainContext.enable(3089)) : (xt.mainContext.disable(3089), vt.worldScissorTest = !1), l.copyFrom(this.screenRect), !0;
        }, e._scissorWithTagart = function (t, e, i, n) {
          if (i < 1 || n < 1) return !1;
          var r = t + i,
            a = e + n;
          t < 0 && (t = 0, i = r - t), e < 0 && (e = 0, n = a - e);
          var s = vt.worldClipRect;
          if (t = Math.max(t, s.x), e = Math.max(e, s.y), i = Math.min(r, s.right) - t, n = Math.min(a, s.bottom) - e, i < 1 || n < 1) return !1;
          var o = vt.worldScissorTest;
          return this.screenRect.copyFrom(s), vt.worldScissorTest = !0, s.x = t, s.y = e, s.width = i, s.height = n, e = vt.height - e - n, xt.mainContext.scissor(t, e, i, n), xt.mainContext.enable(3089), this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength), o ? (e = vt.height - this.screenRect.y - this.screenRect.height, xt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height), xt.mainContext.enable(3089)) : (xt.mainContext.disable(3089), vt.worldScissorTest = !1), s.copyFrom(this.screenRect), !0;
        }, e.renderSubmit = function () {
          return this.submitLength = Math.min(this.context._submits._length - 1, this.submitLength), this.submitLength < 1 || this.clipRect.width < 1 || this.clipRect.height < 1 ? this.submitLength + 1 : (this.context._targets ? this._scissorWithTagart(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height) : this._scissor(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height), this.submitLength + 1);
        }, e.getRenderType = function () {
          return 0;
        }, e.releaseRender = function () {
          var e = t._cache;
          e[e._length++] = this, this.context = null;
        }, t.create = function (e) {
          var i = t._cache._length ? t._cache[--t._cache._length] : new t();
          return i.context = e, i;
        }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t;
      }(),
      ut = function () {
        function t() {
          this.step = 0, this.blendMode = null, this.level = 0;
        }
        r(t, "laya.webgl.submit.SubmitStencil");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e.renderSubmit = function () {
          switch (this.step) {
            case 1:
              this.do1();
              break;
            case 2:
              this.do2();
              break;
            case 3:
              this.do3();
              break;
            case 4:
              this.do4();
              break;
            case 5:
              this.do5();
              break;
            case 6:
              this.do6();
              break;
            case 7:
              this.do7();
              break;
            case 8:
              this.do8();
          }
          return 1;
        }, e.getRenderType = function () {
          return 0;
        }, e.releaseRender = function () {
          var e = t._cache;
          e[e._length++] = this;
        }, e.do1 = function () {
          var t = xt.mainContext;
          t.enable(2960), t.clear(1024), t.colorMask(!1, !1, !1, !1), t.stencilFunc(514, this.level, 255), t.stencilOp(7680, 7680, 7682);
        }, e.do2 = function () {
          var t = xt.mainContext;
          t.stencilFunc(514, this.level + 1, 255), t.colorMask(!0, !0, !0, !0), t.stencilOp(7680, 7680, 7680);
        }, e.do3 = function () {
          var t = xt.mainContext;
          t.colorMask(!0, !0, !0, !0), t.stencilOp(7680, 7680, 7680), t.clear(1024), t.disable(2960);
        }, e.do4 = function () {
          var t = xt.mainContext;
          0 == this.level && (t.enable(2960), t.clear(1024)), t.colorMask(!1, !1, !1, !1), t.stencilFunc(519, 0, 255), t.stencilOp(7680, 7680, 7682);
        }, e.do5 = function () {
          var t = xt.mainContext;
          t.stencilFunc(514, this.level, 255), t.colorMask(!0, !0, !0, !0), t.stencilOp(7680, 7680, 7680);
        }, e.do6 = function () {
          var t = xt.mainContext;
          H.targetFns[H.TOINT[this.blendMode]](t);
        }, e.do7 = function () {
          var t = xt.mainContext;
          t.colorMask(!1, !1, !1, !1), t.stencilOp(7680, 7680, 7683);
        }, e.do8 = function () {
          var t = xt.mainContext;
          t.colorMask(!0, !0, !0, !0), t.stencilFunc(514, this.level, 255), t.stencilOp(7680, 7680, 7680);
        }, t.restore = function (e, i, n, r, a) {
          var s;
          if (e._renderKey = 0, t._mask > 0 && t._mask--, 0 == t._mask) s = laya.webgl.submit.SubmitStencil.create(3), e.addRenderObject(s), e._curSubmit = at.RENDERBASE;
          else {
            s = laya.webgl.submit.SubmitStencil.create(7), e.addRenderObject(s);
            var o = e._vb;
            o._byteLength;
            if (mt.fillRectImgVb(o, null, i.x, i.y, i.width, i.height, O.DEF_UV, n, r, a, 0, 0)) {
              e._shader2D.glTexture = null;
              var h = e._curSubmit = at.createSubmit(e, e._ib, o, (o._byteLength - 64) / 32 * 3, Et.create(2, 0));
              h.shaderValue.ALPHA = 1, e._submits[e._submits._length++] = h, e._curSubmit._numEle += 6, e._curSubmit = at.RENDERBASE;
            } else alert("clipRect calc stencil rect error");
            s = laya.webgl.submit.SubmitStencil.create(8), e.addRenderObject(s);
          }
        }, t.restore2 = function (e, i) {
          var n;
          e._renderKey = 0, t._mask > 0 && t._mask--, 0 == t._mask ? (n = laya.webgl.submit.SubmitStencil.create(3), e.addRenderObject(n), e._curSubmit = at.RENDERBASE) : (n = laya.webgl.submit.SubmitStencil.create(7), e.addRenderObject(n), e._submits[e._submits._length++] = i, n = laya.webgl.submit.SubmitStencil.create(8), e.addRenderObject(n));
        }, t.create = function (e) {
          var i = t._cache._length ? t._cache[--t._cache._length] : new t();
          return i.step = e, 5 == e && ++t._mask, i.level = t._mask, i;
        }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t._mask = 0, t;
      }(),
      ct = function () {
        function t() {
          this._renderType = 0, this._vb = null, this._ib = null, this._startIdx = 0, this._numEle = 0, this.shaderValue = null, this.blendType = 0, this.proName = null, this.scope = null;
        }
        r(t, "laya.webgl.submit.SubmitTarget");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.submit.ISubmit": !0
        }), e.renderSubmit = function () {
          this._vb.bind_upload(this._ib);
          var t = this.scope.getValue(this.proName);
          return t && (this.shaderValue.texture = t.source, this.shaderValue.strength && !this.shaderValue.blurInfo && (this.shaderValue.blurInfo = [t.width, t.height]), this.shaderValue.upload(), this.blend(), A.drawCall++, A.trianglesFaces += this._numEle / 3, xt.mainContext.drawElements(4, this._numEle, 5123, this._startIdx)), 1;
        }, e.blend = function () {
          if (H.activeBlendFunction !== H.fns[this.blendType]) {
            var t = xt.mainContext;
            t.enable(3042), H.fns[this.blendType](t), H.activeBlendFunction = H.fns[this.blendType];
          }
        }, e.getRenderType = function () {
          return 0;
        }, e.releaseRender = function () {
          var e = t._cache;
          e[e._length++] = this;
        }, t.create = function (e, i, n, r, a, s) {
          var o = t._cache._length ? t._cache[--t._cache._length] : new t();
          return o._ib = i, o._vb = n, o.proName = s, o._startIdx = r * pt.BYTES_PIDX, o._numEle = 0, o.blendType = e._nBlendType, o.shaderValue = a, o.shaderValue.setValue(e._shader2D), o;
        }, t._cache = (t._cache = [], t._cache._length = 0, t._cache), t;
      }(),
      _t = function () {
        function t() {
          this._sourceStr = null;
        }
        r(t, "laya.webgl.text.CharSegment");
        var e = t.prototype;
        return i.imps(e, {
          "laya.webgl.text.ICharSegment": !0
        }), e.textToSpit = function (t) {
          this._sourceStr = t;
        }, e.getChar = function (t) {
          return this._sourceStr.charAt(t);
        }, e.getCharCode = function (t) {
          return this._sourceStr.charCodeAt(t);
        }, e.length = function () {
          return this._sourceStr.length;
        }, t;
      }(),
      dt = function () {
        function t() {}
        var e;
        return r(t, "laya.webgl.text.DrawText"), t.__init__ = function () {
          t._charsTemp = new Array(), t._drawValue = new e(), t._charSeg = new _t();
        }, t.customCharSeg = function (e) {
          t._charSeg = e;
        }, t.getChar = function (e, i, n) {
          var r = jt.createOneChar(e, n);
          return -1 != i && (t._charsCache[i] = r), r;
        }, t._drawSlow = function (e, i, n, r, a, s, o, h, l, u, c, _, d, f, p) {
          var m, g, v = t._drawValue.value(s, h, l, u, d, f, p),
            y = 0,
            x = 0,
            T = t._charsTemp,
            S = 0,
            w = NaN;
          if (r)
            for (T.length = r.length, y = 0, x = r.length; y < x; y++) w = (g = r[y]).charNum + v.txtID, T[y] = m = t._charsCache[w] || t.getChar(g.char, w, v), m.active();
          else {
            var E = n instanceof laya.utils.WordText ? n.toString() : n;
            if (L.CharacterCache) {
              t._charSeg.textToSpit(E);
              var b = t._charSeg.length();
              for (T.length = b, y = 0, x = b; y < x; y++) w = t._charSeg.getCharCode(y) + v.txtID, T[y] = m = t._charsCache[w] || t.getChar(t._charSeg.getChar(y), w, v), m.active(), S += m.cw;
            } else T.length = 0, (m = t.getChar(E, -1, v)).active(), S += m.cw, T[0] = m;
          }
          var C = 0;
          null !== o && "left" !== o && (C = -("center" == o ? S / 2 : S));
          var M, I, D = NaN,
            A = 0;
          if (r)
            for (y = 0, x = T.length; y < x; y++)(m = T[y]).isSpace || (g = r[y], D = m.borderSize, M = m.texture, i._drawText(M, c + C + g.x * d - D, _ + g.y * f - D, M.width, M.height, a, 0, 0, 0, 0));
          else {
            for (y = 0, x = T.length; y < x; y++)(m = T[y]).isSpace || (D = m.borderSize, M = m.texture, i._drawText(M, c + C - D, _ - D, M.width, M.height, a, 0, 0, 0, 0), e && ((I = e[A++]) || (I = e[A - 1] = []), I[0] = M, I[1] = C - D, I[2] = -D)), C += m.cw;
            e && (e.length = A);
          }
        }, t._drawFast = function (t, e, i, n, r) {
          for (var a, s, o = 0, h = t.length; o < h; o++)(a = (s = t[o])[0]).active(), e._drawText(a, n + s[1], r + s[2], a.width, a.height, i, 0, 0, 0, 0);
        }, t.drawText = function (e, n, r, a, s, o, h, l, u, c, _, f) {
          if (void 0 === f && (f = 0), !(n && 0 === n.length || r && 0 === r.length)) {
            var p = a.a,
              m = a.d;
            (0 !== a.b || 0 !== a.c) && (p = m = 1);
            var g = 1 !== p || 1 !== m;
            if (g && i.stage.transform) {
              var v = i.stage.transform;
              g = v.a === p && v.d === m;
            } else g = !1;
            if (g) {
              var y = (a = a.copyTo(wt._tmpMatrix)).tx,
                x = a.ty;
              a.scale(1 / p, 1 / m), a._checkTransform(), c *= p, _ *= m, c += y - a.tx, _ += x - a.ty;
            } else p = m = 1;
            if (r) t._drawSlow(null, e, n, r, a, s, o, h, l, u, c, _, p, m, f);
            else {
              if (null === n.toUpperCase) {
                var T = p + 1e5 * m,
                  S = n;
                return void(S.changed || S.id !== T ? (S.id = T, S.changed = !1, t._drawSlow(S.save, e, n, r, a, s, o, h, l, u, c, _, p, m, f)) : t._drawFast(S.save, e, a, c, _));
              }
              var w = n + s.toString() + h + l + u + p + m + o,
                E = t._textsCache[w];
              L.CharacterCache ? E ? t._drawFast(E, e, a, c, _) : (t._textsCache.__length || (t._textsCache.__length = 0), t._textsCache.__length > d.WebGLTextCacheCount && ((t._textsCache = {}).__length = 0, t._curPoolIndex = 0), t._textCachesPool[t._curPoolIndex] ? (E = t._textsCache[w] = t._textCachesPool[t._curPoolIndex], E.length = 0) : t._textCachesPool[t._curPoolIndex] = E = t._textsCache[w] = [], t._textsCache.__length++, t._curPoolIndex++, t._drawSlow(E, e, n, r, a, s, o, h, l, u, c, _, p, m, f)) : t._drawSlow(E, e, n, r, a, s, o, h, l, u, c, _, p, m, f);
            }
          }
        }, t._charsTemp = null, t._textCachesPool = [], t._curPoolIndex = 0, t._charsCache = {}, t._textsCache = {}, t._drawValue = null, t.d = [], t._charSeg = null, t.__init$ = function () {
          e = function () {
            function t() {}
            r(t, "");
            return t.prototype.value = function (e, i, n, r, a, s, o) {
              this.font = e, this.fillColor = i, this.borderColor = n, this.lineWidth = r, this.scaleX = a, this.scaleY = s, this.underLine = o;
              var h = e.toString() + a + s + r + i + n + o;
              return this.txtID = t._keymap[h], this.txtID || (this.txtID = 1e-7 * ++t._keymapCount, t._keymap[h] = this.txtID), this;
            }, t.clear = function () {
              t._keymap = {}, t._keymapCount = 1;
            }, t._keymap = {}, t._keymapCount = 1, t;
          }();
        }, t;
      }(),
      ft = function () {
        function t(e) {
          this._index = 0, this._size = 14, this._italic = -2, t._cache2 = t._cache2 || [], this.setFont(e || "14px Arial");
        }
        r(t, "laya.webgl.text.FontInContext");
        var e = t.prototype;
        return e.setFont = function (e) {
          var i = t._cache2[e];
          if (i) this._words = i[0], this._size = i[1];
          else {
            this._words = e.split(" ");
            for (var n = 0, r = this._words.length; n < r; n++)
              if (this._words[n].indexOf("px") > 0) {
                this._index = n;
                break;
              }
            this._size = parseInt(this._words[this._index]), t._cache2[e] = [this._words, this._size];
          }
          this._text = null, this._italic = -2;
        }, e.getItalic = function () {
          return -2 === this._italic && (this._italic = this.hasType("italic")), this._italic;
        }, e.hasType = function (t) {
          for (var e = 0, i = this._words.length; e < i; e++)
            if (this._words[e] === t) return e;
          return -1;
        }, e.removeType = function (t) {
          for (var e = 0, i = this._words.length; e < i; e++)
            if (this._words[e] === t) {
              this._words.splice(e, 1), this._index > e && this._index--;
              break;
            }
          this._text = null, this._italic = -2;
        }, e.copyTo = function (t) {
          return t._text = this._text, t._size = this._size, t._index = this._index, t._words = this._words.slice(), t._italic = -2, t;
        }, e.toString = function () {
          return this._text ? this._text : this._text = this._words.join(" ");
        }, a(0, e, "size", function () {
          return this._size;
        }, function (t) {
          this._size = t, this._words[this._index] = t + "px", this._text = null;
        }), t.create = function (e) {
          var i = t._cache[e];
          return i || (i = t._cache[e] = new t(e));
        }, t.EMPTY = new t(), t._cache = {}, t._cache2 = null, t;
      }(),
      pt = function () {
        function t() {}
        return r(t, "laya.webgl.utils.CONST3D2D"), t.defaultMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], t.defaultMinusYMatrix4 = [1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], t.uniformMatrix3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], t._TMPARRAY = [], t._OFFSETX = 0, t._OFFSETY = 0, n(t, ["BYTES_PE", function () {
          return this.BYTES_PE = Float32Array.BYTES_PER_ELEMENT;
        }, "BYTES_PIDX", function () {
          return this.BYTES_PIDX = Uint16Array.BYTES_PER_ELEMENT;
        }]), t;
      }(),
      mt = function () {
        function t() {}
        return r(t, "laya.webgl.utils.GlUtils"), t.make2DProjection = function (t, e, i) {
          return [2 / t, 0, 0, 0, 0, -2 / e, 0, 0, 0, 0, 2 / i, 0, -1, 1, 0, 1];
        }, t.fillIBQuadrangle = function (t, e) {
          if (e > 65535 / 4) throw Error("IBQuadrangle count:" + e + " must<:" + Math.floor(65535 / 4));
          e = Math.floor(e), t._resizeBuffer(6 * (e + 1) * 2, !1), t.byteLength = t.bufferLength;
          for (var i = t.getUint16Array(), n = 0, r = 0; r < e; r++) i[n++] = 4 * r, i[n++] = 4 * r + 2, i[n++] = 4 * r + 1, i[n++] = 4 * r, i[n++] = 4 * r + 3, i[n++] = 4 * r + 2;
          return t.setNeedUpload(), !0;
        }, t.expandIBQuadrangle = function (e, i) {
          e.bufferLength >= 6 * i * 2 || t.fillIBQuadrangle(e, i);
        }, t.mathCeilPowerOfTwo = function (t) {
          return t--, t |= t >> 1, t |= t >> 2, t |= t >> 4, t |= t >> 8, t |= t >> 16, ++t;
        }, t.fillQuadrangleImgVb = function (t, e, i, n, r, a, s, o) {
          var h = 16 + (t._byteLength >> 2);
          t.byteLength = h << 2;
          var l = t.getFloat32Array();
          l[(h -= 16) + 2] = r[0], l[h + 3] = r[1], l[h + 6] = r[2], l[h + 7] = r[3], l[h + 10] = r[4], l[h + 11] = r[5], l[h + 14] = r[6], l[h + 15] = r[7];
          var u = a.a,
            c = a.b,
            _ = a.c,
            d = a.d;
          if (1 !== u || 0 !== c || 0 !== _ || 1 !== d) {
            a.bTransform = !0;
            var f = a.tx + s,
              p = a.ty + o;
            l[h] = (n[0] + e) * u + (n[1] + i) * _ + f, l[h + 1] = (n[0] + e) * c + (n[1] + i) * d + p, l[h + 4] = (n[2] + e) * u + (n[3] + i) * _ + f, l[h + 5] = (n[2] + e) * c + (n[3] + i) * d + p, l[h + 8] = (n[4] + e) * u + (n[5] + i) * _ + f, l[h + 9] = (n[4] + e) * c + (n[5] + i) * d + p, l[h + 12] = (n[6] + e) * u + (n[7] + i) * _ + f, l[h + 13] = (n[6] + e) * c + (n[7] + i) * d + p;
          } else a.bTransform = !1, e += a.tx + s, i += a.ty + o, l[h] = e + n[0], l[h + 1] = i + n[1], l[h + 4] = e + n[2], l[h + 5] = i + n[3], l[h + 8] = e + n[4], l[h + 9] = i + n[5], l[h + 12] = e + n[6], l[h + 13] = i + n[7];
          return t._upload = !0, !0;
        }, t.fillTranglesVB = function (t, e, i, n, r, a, s) {
          var o = (t._byteLength >> 2) + n.length;
          t.byteLength = o << 2;
          var h = t.getFloat32Array();
          o -= n.length;
          for (var l = n.length, u = r.a, c = r.b, _ = r.c, d = r.d, f = 0; f < l; f += 4)
            if (h[o + f + 2] = n[f + 2], h[o + f + 3] = n[f + 3], 1 !== u || 0 !== c || 0 !== _ || 1 !== d) {
              r.bTransform = !0;
              var p = r.tx + a,
                m = r.ty + s;
              h[o + f] = (n[f] + e) * u + (n[f + 1] + i) * _ + p, h[o + f + 1] = (n[f] + e) * c + (n[f + 1] + i) * d + m;
            } else r.bTransform = !1, e += r.tx + a, i += r.ty + s, h[o + f] = e + n[f], h[o + f + 1] = i + n[f + 1];
          return t._upload = !0, !0;
        }, t.copyPreImgVb = function (t, e, i) {
          var n = t._byteLength >> 2;
          t.byteLength = n + 16 << 2;
          for (var r = t.getFloat32Array(), a = 0, s = n - 16; a < 4; a++) r[n] = r[s] + e, ++s, r[++n] = r[s] + i, ++s, r[++n] = r[s], ++s, r[++n] = r[s], ++n, ++s;
          t._upload = !0;
        }, t.fillRectImgVb = function (t, e, i, n, r, a, s, o, h, l, u, c, _) {
          void 0 === _ && (_ = !1);
          var d, f, p, m, g, v, y, x, T, S, w, E, b, C, M, I, D = 1,
            A = o.a,
            R = o.b,
            P = o.c,
            L = o.d,
            O = e && e.width < 99999999;
          if (1 !== A || 0 !== R || 0 !== P || 1 !== L ? (o.bTransform = !0, 0 === R && 0 === P && (D = 23, T = r + i, S = a + n, d = A * i + (w = o.tx + h), p = A * T + w, f = L * n + (E = o.ty + l), m = L * S + E)) : (D = 23, o.bTransform = !1, p = (d = i + o.tx + h) + r, m = (f = n + o.ty + l) + a), O && (g = e.x, v = e.y, y = e.width + g, x = e.height + v), 1 !== D) {
            if (Math.min(d, p) >= y) return !1;
            if (Math.min(f, m) >= x) return !1;
            if (Math.max(p, d) <= g) return !1;
            if (Math.max(m, f) <= v) return !1;
          }
          var N = t._byteLength >> 2;
          t.byteLength = N + 16 << 2;
          var V = t.getFloat32Array();
          switch (V[N + 2] = s[0], V[N + 3] = s[1], V[N + 6] = s[2], V[N + 7] = s[3], V[N + 10] = s[4], V[N + 11] = s[5], V[N + 14] = s[6], V[N + 15] = s[7], D) {
            case 1:
              w = o.tx + h, E = o.ty + l;
              var F = A * i,
                B = P * n,
                U = L * n,
                k = R * i,
                G = A * (T = r + i),
                H = P * (S = a + n),
                z = L * S,
                W = R * T;
              _ ? (b = F + B + w, M = Math.round(b) - b, C = U + k + E, I = Math.round(C) - C, V[N] = b + M, V[N + 1] = C + I, V[N + 4] = G + B + w + M, V[N + 5] = U + W + E + I, V[N + 8] = G + H + w + M, V[N + 9] = z + W + E + I, V[N + 12] = F + H + w + M, V[N + 13] = z + k + E + I) : (V[N] = F + B + w, V[N + 1] = U + k + E, V[N + 4] = G + B + w, V[N + 5] = U + W + E, V[N + 8] = G + H + w, V[N + 9] = z + W + E, V[N + 12] = F + H + w, V[N + 13] = z + k + E);
              break;
            case 23:
              _ ? (b = d + u, M = Math.round(b) - b, C = f, I = Math.round(C) - C, V[N] = b + M, V[N + 1] = C + I, V[N + 4] = p + u + M, V[N + 5] = f + I, V[N + 8] = p + M, V[N + 9] = m + I, V[N + 12] = d + M, V[N + 13] = m + I) : (V[N] = d + u, V[N + 1] = f, V[N + 4] = p + u, V[N + 5] = f, V[N + 8] = p, V[N + 9] = m, V[N + 12] = d, V[N + 13] = m);
          }
          return t._upload = !0, !0;
        }, t.fillLineVb = function (e, i, n, r, a, s, o, h) {
          var l = .5 * o,
            u = t._fillLineArray,
            c = -(r - s),
            _ = n - a,
            d = Math.sqrt(c * c + _ * _);
          c /= d, _ /= d, c *= l, _ *= l, u[0] = n - c, u[1] = r - _, u[4] = n + c, u[5] = r + _, u[8] = a + c, u[9] = s + _, u[12] = a - c, u[13] = s - _, h && h.transformPointArray(u, u);
          var f = 16 + (e._byteLength >> 2);
          return e.byteLength = f << 2, e.insertData(u, f - 16), !0;
        }, t._fillLineArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], t;
      }(),
      gt = (function () {
        function t() {}
        r(t, "laya.webgl.utils.MatirxArray"), t.ArrayMul = function (e, i, n) {
          if (e)
            if (i)
              for (var r = NaN, a = NaN, s = NaN, o = NaN, h = 0; h < 4; h++) r = e[h], a = e[h + 4], s = e[h + 8], o = e[h + 12], n[h] = r * i[0] + a * i[1] + s * i[2] + o * i[3], n[h + 4] = r * i[4] + a * i[5] + s * i[6] + o * i[7], n[h + 8] = r * i[8] + a * i[9] + s * i[10] + o * i[11], n[h + 12] = r * i[12] + a * i[13] + s * i[14] + o * i[15];
            else t.copyArray(e, n);
          else t.copyArray(i, n);
        }, t.copyArray = function (t, e) {
          if (t && e)
            for (var i = 0; i < t.length; i++) e[i] = t[i];
        };
      }(), function () {
        function t(t, e, i) {
          this._stride = 0, this.vertNum = 0, this.indexNum = 0, this._applied = !1, this._vb = null, this._ib = null, this._vao = null, this._attribInfo = null, this._quadNum = 0, this.canReuse = !1, this._stride = t, this._vb = new Jt(t, 35048), e && this._vb._resizeBuffer(e, !1), this._ib = new $t(), i && this._ib._resizeBuffer(i, !1);
        }
        r(t, "laya.webgl.utils.Mesh2D");
        var e = t.prototype;
        return e.cloneWithNewVB = function () {
          var e = new t(this._stride, 0, 0);
          return e._ib = this._ib, e._quadNum = this._quadNum, e._attribInfo = this._attribInfo, e;
        }, e.cloneWithNewVBIB = function () {
          var e = new t(this._stride, 0, 0);
          return e._attribInfo = this._attribInfo, e;
        }, e.getVBW = function () {
          return this._vb.setNeedUpload(), this._vb;
        }, e.getVBR = function () {
          return this._vb;
        }, e.getIBR = function () {
          return this._ib;
        }, e.getIBW = function () {
          return this._ib.setNeedUpload(), this._ib;
        }, e.createQuadIB = function (t) {
          this._quadNum = t, this._ib._resizeBuffer(6 * t * 2, !1), this._ib.byteLength = this._ib.bufferLength;
          for (var e = this._ib.getUint16Array(), i = 0, n = 0, r = 0; r < t; r++) e[i++] = n, e[i++] = n + 2, e[i++] = n + 1, e[i++] = n, e[i++] = n + 3, e[i++] = n + 2, n += 4;
          this._ib.setNeedUpload();
        }, e.setAttributes = function (t) {
          if (this._attribInfo = t, this._attribInfo.length % 3 != 0) throw "Mesh2D setAttributes error!";
        }, e.getEleNum = function () {
          return this._ib.getBuffer().byteLength / 2;
        }, e.releaseMesh = function () {}, e.destroy = function () {}, e.clearVB = function () {
          this._vb.clear();
        }, t._gvaoid = 0, t;
      }()),
      vt = function () {
        function t() {}
        return r(t, "laya.webgl.utils.RenderState2D"), t.getMatrArray = function () {
          return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
        }, t.mat2MatArray = function (e, i) {
          var n = e,
            r = i;
          return r[0] = n.a, r[1] = n.b, r[2] = t.EMPTYMAT4_ARRAY[2], r[3] = t.EMPTYMAT4_ARRAY[3], r[4] = n.c, r[5] = n.d, r[6] = t.EMPTYMAT4_ARRAY[6], r[7] = t.EMPTYMAT4_ARRAY[7], r[8] = t.EMPTYMAT4_ARRAY[8], r[9] = t.EMPTYMAT4_ARRAY[9], r[10] = t.EMPTYMAT4_ARRAY[10], r[11] = t.EMPTYMAT4_ARRAY[11], r[12] = n.tx, r[13] = n.ty, r[14] = t.EMPTYMAT4_ARRAY[14], r[15] = t.EMPTYMAT4_ARRAY[15], i;
        }, t.restoreTempArray = function () {
          t.TEMPMAT4_ARRAY[0] = 1, t.TEMPMAT4_ARRAY[1] = 0, t.TEMPMAT4_ARRAY[4] = 0, t.TEMPMAT4_ARRAY[5] = 1, t.TEMPMAT4_ARRAY[12] = 0, t.TEMPMAT4_ARRAY[13] = 0;
        }, t.clear = function () {
          t.worldScissorTest = !1, t.worldShaderDefines = null, t.worldFilters = null, t.worldAlpha = 1, t.worldClipRect.x = t.worldClipRect.y = 0, t.worldClipRect.width = t.width, t.worldClipRect.height = t.height, t.curRenderTarget = null;
        }, t._MAXSIZE = 99999999, t.EMPTYMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], t.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], t.worldMatrix4 = t.TEMPMAT4_ARRAY, t.worldAlpha = 1, t.worldScissorTest = !1, t.worldFilters = null, t.worldShaderDefines = null, t.curRenderTarget = null, t.width = 0, t.height = 0, n(t, ["worldMatrix", function () {
          return this.worldMatrix = new x();
        }, "worldClipRect", function () {
          return this.worldClipRect = new S(0, 0, 99999999, 99999999);
        }]), t;
      }(),
      yt = function () {
        function t(t, i, n, r, a) {
          function s(t) {
            var i = [],
              n = new e(i);
            return o._compileToTree(n, t.split("\n"), 0, i, a), n;
          }
          var o = this,
            h = u.now();
          this._VS = s(i), this._PS = s(n), this._nameMap = r, u.now() - h > 2 && console.log("ShaderCompile use time:" + (u.now() - h) + "  size:" + i.length + "/" + n.length);
        }
        var e, i;
        r(t, "laya.webgl.utils.ShaderCompile");
        var a = t.prototype;
        return a._compileToTree = function (i, n, r, a, s) {
          var o, h, l, u, c, _, d, f = 0,
            p = 0,
            m = 0,
            g = 0;
          for (p = r; p < n.length; p++)
            if (!((l = n[p]).length < 1) && 0 !== (f = l.indexOf("//"))) {
              if (f >= 0 && (l = l.substr(0, f)), o = d || new e(a), d = null, o.text = l, o.noCompile = !0, (f = l.indexOf("#")) >= 0) {
                for (u = "#", g = f + 1, m = l.length; g < m; g++) {
                  var v = l.charAt(g);
                  if (" " === v || "\t" === v || "?" === v) break;
                  u += v;
                }
                switch (o.name = u, u) {
                  case "#ifdef":
                  case "#ifndef":
                    if (o.src = l, o.noCompile = null != l.match(/[!&|()=<>]/), o.noCompile ? console.log("function():Boolean{return " + l.substr(f + o.name.length) + "}") : (_ = l.replace(/^\s*/, "").split(/\s+/), o.setCondition(_[1], "#ifdef" === u ? 1 : 2), o.text = "//" + o.text), o.setParent(i), i = o, s)
                      for (_ = l.substr(g).split(t._splitToWordExps3), g = 0; g < _.length; g++)(l = _[g]).length && (s[l] = !0);
                    continue;
                  case "#if":
                    if (o.src = l, o.noCompile = !0, o.setParent(i), i = o, s)
                      for (_ = l.substr(g).split(t._splitToWordExps3), g = 0; g < _.length; g++)(l = _[g]).length && "defined" != l && (s[l] = !0);
                    continue;
                  case "#else":
                    o.src = l, h = (i = i.parent).childs[i.childs.length - 1], o.noCompile = h.noCompile, o.noCompile || (o.condition = h.condition, o.conditionType = 1 == h.conditionType ? 2 : 1, o.text = "//" + o.text + " " + h.text + " " + o.conditionType), o.setParent(i), i = o;
                    continue;
                  case "#endif":
                    h = (i = i.parent).childs[i.childs.length - 1], o.noCompile = h.noCompile, o.noCompile || (o.text = "//" + o.text), o.setParent(i);
                    continue;
                  case "#include":
                    _ = t.splitToWords(l, null);
                    var y = t.includes[_[1]];
                    if (!y) throw "ShaderCompile error no this include file:" + _[1];
                    if ((f = _[0].indexOf("?")) < 0) {
                      o.setParent(i), l = y.getWith("with" == _[2] ? _[3] : null), this._compileToTree(o, l.split("\n"), 0, a, s), o.text = "";
                      continue;
                    }
                    o.setCondition(_[0].substr(f + 1), 1), o.text = y.getWith("with" == _[2] ? _[3] : null);
                    break;
                  case "#import":
                    c = (_ = t.splitToWords(l, null))[1], a.push({
                      node: o,
                      file: t.includes[c],
                      ofs: o.text.length
                    });
                    continue;
                }
              } else {
                if ((h = i.childs[i.childs.length - 1]) && !h.name) {
                  a.length > 0 && t.splitToWords(l, h), d = o, h.text += "\n" + l;
                  continue;
                }
                a.length > 0 && t.splitToWords(l, o);
              }
              o.setParent(i);
            }
        }, a.createShader = function (t, e, i) {
          var n = {},
            r = "";
          if (t)
            for (var a in t) r += "#define " + a + "\n", n[a] = !0;
          var s = this._VS.toscript(n, []),
            o = this._PS.toscript(n, []);
          return (i || qt.create)(r + s.join("\n"), r + o.join("\n"), e, this._nameMap);
        }, t._parseOne = function (e, i, n, r, a, s) {
          var o = {
            type: t.shaderParamsMap[n[r + 1]],
            name: n[r + 2],
            size: isNaN(parseInt(n[r + 3])) ? 1 : parseInt(n[r + 3])
          };
          return s && ("attribute" == a ? e.push(o) : i.push(o)), ":" == n[r + 3] && (o.type = n[r + 4], r += 2), r += 2;
        }, t.addInclude = function (e, n) {
          if (!n || 0 === n.length) throw new Error("add shader include file err:" + e);
          if (t.includes[e]) throw new Error("add shader include file err, has add:" + e);
          t.includes[e] = new i(n);
        }, t.preGetParams = function (e, i) {
          var n = [e, i],
            r = {},
            a = [],
            s = [],
            o = {},
            h = [];
          r.attributes = a, r.uniforms = s, r.defines = o;
          for (var l = 0, u = 0, c = 0; c < 2; c++) {
            n[c] = n[c].replace(t._removeAnnotation, "");
            var _, d = n[c].match(t._reg);
            for (l = 0, u = d.length; l < u; l++) {
              var f = d[l];
              if ("attribute" == f || "uniform" == f) l = t._parseOne(a, s, d, l, f, !0);
              else {
                if ("#define" == f) {
                  h[f = d[++l]] = 1;
                  continue;
                }
                if ("#ifdef" == f) {
                  o[_ = d[++l]] = o[_] || [];
                  for (l++; l < u; l++)
                    if ("attribute" == (f = d[l]) || "uniform" == f) l = t._parseOne(a, s, d, l, f, h[_]);
                    else if ("#else" == f)
                    for (l++; l < u; l++)
                      if ("attribute" == (f = d[l]) || "uniform" == f) l = t._parseOne(a, s, d, l, f, !h[_]);
                      else if ("#endif" == f) break;
                }
              }
            }
          }
          return r;
        }, t.splitToWords = function (t, e) {
          for (var i, n, r = [], a = -1, s = 0, o = t.length; s < o; s++)
            if (i = t.charAt(s), " \t=+-*/&%!<>()'\",;".indexOf(i) >= 0) {
              if (a >= 0 && s - a > 1 && (n = t.substr(a, s - a), r.push(n)), '"' == i || "'" == i) {
                var h = t.indexOf(i, s + 1);
                if (h < 0) throw "Sharder err:" + t;
                r.push(t.substr(s + 1, h - s - 1)), s = h, a = -1;
                continue;
              }
              "(" == i && e && r.length > 0 && (n = r[r.length - 1] + ";", "vec4;main;".indexOf(n) < 0 && (e.useFuns += n)), a = -1;
            } else a < 0 && (a = s);
          return a < o && o - a > 1 && (n = t.substr(a, o - a), r.push(n)), r;
        }, t.IFDEF_NO = 0, t.IFDEF_YES = 1, t.IFDEF_ELSE = 2, t.IFDEF_PARENT = 3, t._removeAnnotation = new RegExp("(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)", "g"), t._reg = new RegExp("(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])", "g"), t._splitToWordExps = new RegExp("[(\".*\")]+|[('.*')]+|([ \\t=\\+\\-*/&%!<>!%(),;])", "g"), t.includes = {}, n(t, ["shaderParamsMap", function () {
          return this.shaderParamsMap = {
            float: 5126,
            int: 5124,
            bool: 35670,
            vec2: 35664,
            vec3: 35665,
            vec4: 35666,
            ivec2: 35667,
            ivec3: 35668,
            ivec4: 35669,
            bvec2: 35671,
            bvec3: 35672,
            bvec4: 35673,
            mat2: 35674,
            mat3: 35675,
            mat4: 35676,
            sampler2D: 35678,
            samplerCube: 35680
          };
        }, "_splitToWordExps3", function () {
          return this._splitToWordExps3 = new RegExp("[ \\t=\\+\\-*/&%!<>!%(),;\\|]", "g");
        }]), t.__init$ = function () {
          e = function () {
            function t(t) {
              this.childs = [], this.text = "", this.parent = null, this.name = null, this.noCompile = !1, this.includefiles = null, this.condition = null, this.conditionType = 0, this.useFuns = "", this.z = 0, this.src = null, this.includefiles = t;
            }
            r(t, "");
            var e = t.prototype;
            return e.setParent = function (t) {
              t.childs.push(this), this.z = t.z + 1, this.parent = t;
            }, e.setCondition = function (t, e) {
              t && (this.conditionType = e, t = t.replace(/(\s*$)/g, ""), this.condition = function () {
                return this[t];
              }, this.condition.__condition = t);
            }, e.toscript = function (e, i) {
              return this._toscript(e, i, ++t.__id);
            }, e._toscript = function (t, e, i) {
              if (this.childs.length < 1 && !this.text) return e;
              e.length;
              if (this.condition) {
                var n = !!this.condition.call(t);
                if (2 === this.conditionType && (n = !n), !n) return e;
              }
              if (this.text && e.push(this.text), this.childs.length > 0 && this.childs.forEach(function (n, r, a) {
                  n._toscript(t, e, i);
                }), this.includefiles.length > 0 && this.useFuns.length > 0)
                for (var r, a = 0, s = this.includefiles.length; a < s; a++) this.includefiles[a].curUseID != i && (r = this.includefiles[a].file.getFunsScript(this.useFuns)).length > 0 && (this.includefiles[a].curUseID = i, e[0] = r + e[0]);
              return e;
            }, t.__id = 1, t;
          }(), i = function () {
            function e(e) {
              this.script = null, this.codes = {}, this.funs = {}, this.curUseID = -1, this.funnames = "", this.script = e;
              for (var i = 0, n = 0, r = 0;;) {
                if ((i = e.indexOf("#begin", i)) < 0) break;
                for (r = i + 5;;) {
                  if ((r = e.indexOf("#end", r)) < 0) break;
                  if ("i" !== e.charAt(r + 4)) break;
                  r += 5;
                }
                if (r < 0) throw "add include err,no #end:" + e;
                n = e.indexOf("\n", i);
                var a = t.splitToWords(e.substr(i, n - i), null);
                "code" == a[1] ? this.codes[a[2]] = e.substr(n + 1, r - n - 1) : "function" == a[1] && (n = e.indexOf("function", i), n += "function".length, this.funs[a[3]] = e.substr(n + 1, r - n - 1), this.funnames += a[3] + ";"), i = r + 1;
              }
            }
            r(e, "");
            var i = e.prototype;
            return i.getWith = function (t) {
              var e = t ? this.codes[t] : this.script;
              if (!e) throw "get with error:" + t;
              return e;
            }, i.getFunsScript = function (t) {
              var e = "";
              for (var i in this.funs) t.indexOf(i + ";") >= 0 && (e += this.funs[i]);
              return e;
            }, e;
          }();
        }, t;
      }(),
      xt = function () {
        function t() {}
        return r(t, "laya.webgl.WebGL"), t._uint8ArraySlice = function () {
          for (var t = this.length, e = new Uint8Array(this.length), i = 0; i < t; i++) e[i] = this[i];
          return e;
        }, t._float32ArraySlice = function () {
          for (var t = this.length, e = new Float32Array(this.length), i = 0; i < t; i++) e[i] = this[i];
          return e;
        }, t._uint16ArraySlice = function (t) {
          var e, i = arguments,
            n = 0,
            r = 0;
          if (0 === i.length)
            for (n = this.length, e = new Uint16Array(n), r = 0; r < n; r++) e[r] = this[r];
          else if (2 === i.length) {
            var a = i[0],
              s = i[1];
            if (s > a)
              for (n = s - a, e = new Uint16Array(n), r = a; r < s; r++) e[r - a] = this[r];
            else e = new Uint16Array(0);
          }
          return e;
        }, t.expandContext = function () {
          var t = f.prototype,
            e = CanvasRenderingContext2D.prototype;
          e.fillTrangles = t.fillTrangles, Qt.__int__(null), e.setIBVB = function (t, e, i, n, r, a, s, o, h, l) {
            void 0 === h && (h = 0), void 0 === l && (l = 0), null === i && (this._ib = this._ib || $t.QuadrangleIB, i = this._ib, mt.expandIBQuadrangle(i, n._byteLength / 64 + 8)), this._setIBVB(t, e, i, n, r, a, s, o, h, l);
          }, e.fillTrangles = function (t, e, i, n, r) {
            this._curMat = this._curMat || x.create(), this._vb = this._vb || Jt.create(), this._ib || (this._ib = $t.create(), mt.fillIBQuadrangle(this._ib, s / 4));
            var a = this._vb,
              s = n.length >> 4;
            mt.fillTranglesVB(a, e, i, n, r || this._curMat, 0, 0), mt.expandIBQuadrangle(this._ib, a._byteLength / 64 + 8);
            var o = new Et(1, 0);
            o.textureHost = t;
            var h = new Zt("attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }", "precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}");
            a._vertType = 3, this._setIBVB(e, i, this._ib, a, 6 * s, r, h, o, 0, 0);
          };
        }, t.enable = function () {
          if (u.__init__(), w.isConchApp && !w.isConchWebGL) return M.skinAniSprite = function () {
            return new tt();
          }, t.expandContext(), !1;
          if (M.getWebGLContext = function (t) {
              for (var e, i = ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl"], n = 0; n < i.length; n++) {
                try {
                  e = t.getContext(i[n], {
                    stencil: d.isStencil,
                    alpha: d.isAlpha,
                    antialias: d.isAntialias,
                    premultipliedAlpha: d.premultipliedAlpha,
                    preserveDrawingBuffer: d.preserveDrawingBuffer
                  });
                } catch (t) {}
                if (e) return e;
              }
              return null;
            }, null == (t.mainContext = M.getWebGLContext(w._mainCanvas))) return !1;
          if (w.isWebGL) return !0;
          v.create = function (t, e) {
            return new te(t, e);
          }, y.create = function (t, e, i, n, r, a, s) {
            return new Yt(t, e, i, n, r, a, s);
          }, w.WebGL = t, w.isWebGL = !0, dt.__init__(), M.createRenderSprite = function (t, e) {
            return new bt(t, e);
          }, M.createWebGLContext2D = function (t) {
            return new wt(t);
          }, M.changeWebGLSize = function (t, e) {
            laya.webgl.WebGL.onStageResize(t, e);
          }, M.createGraphics = function () {
            return new St();
          };
          var e = M.createFilterAction;
          return M.createFilterAction = e || function (t) {
            return new Ct();
          }, M.clear = function (t) {
            vt.worldScissorTest && laya.webgl.WebGL.mainContext.disable(3089);
            var e = w.context.ctx,
              i = 0 == e._submits._length || d.preserveDrawingBuffer ? _.create(t)._color : D._wgColor;
            i && e.clearBG(i[0], i[1], i[2], i[3]), vt.clear();
          }, M.addToAtlas = function (t, e) {
            void 0 === e && (e = !1);
            var n = t.bitmap;
            w.optimizeTextureMemory(t.url, t) ? i.__typeof(n, "laya.webgl.resource.IMergeAtlasBitmap") && n.allowMerageInAtlas && n.on("recovered", t, t.addTextureToAtlas) : n.enableMerageInAtlas = !1;
          }, M.isAtlas = function (t) {
            return t instanceof laya.webgl.atlas.AtlasWebGLCanvas;
          }, k._enable(), M.beginFlush = function () {
            for (var t = k.instance, e = t.getAtlaserCount(), i = 0; i < e; i++) {
              var n = t.getAtlaserByIndex(i).texture;
              n._flashCacheImageNeedFlush && M.flashFlushImage(n);
            }
          }, M.drawToCanvas = function (t, e, i, n, r, a) {
            (i <= 0 || n <= 0) && console.log("[error] canvasWidth and canvasHeight should greater than zero"), i |= 0, n |= 0, r |= 0, a |= 0;
            var s = Vt.create(i, n, 6408, 5121, 0, !1);
            s.start(), s.clear(0, 0, 0, 0), w.context.clear(), E.renders[e]._fun(t, w.context, r, vt.height - n + a), w.context.flush(), s.end();
            var o = s.getData(0, 0, i, n);
            if (s.recycle(), o.byteLength == i * n * 4) {
              var h = new Wt();
              h._canvas = u.createElement("canvas"), h.size(i, n);
              var l = h._canvas.getContext("2d");
              u.canvas.size(i, n);
              var c = u.context,
                _ = c.createImageData(i, n);
              return _.data.set(new Uint8ClampedArray(o.buffer)), h._imgData = _, c.putImageData(_, 0, 0), l.save(), l.translate(0, n), l.scale(1, -1), l.drawImage(u.canvas.source, 0, 0), l.restore(), h;
            }
            console.log("drawToCanvas error: w:" + i + ",h:" + n + ",datalen:" + o.byteLength);
          }, M.createFilterAction = function (t) {
            var e;
            switch (t) {
              case 32:
                e = new Ct();
            }
            return e;
          }, M.addTextureToAtlas = function (t) {
            t._uvID++, k._atlasRestore++, t.bitmap.enableMerageInAtlas && k.instance.addToAtlas(t);
          }, M.getTexturePixels = function (t, e, i, n, r) {
            w.context.ctx.clear();
            var a = new I();
            a.graphics.drawTexture(t, -e, -i);
            var s = Vt.create(n, r);
            s.start(), s.clear(0, 0, 0, 0), a.render(w.context, 0, 0), w.context.ctx.flush(), s.end();
            for (var o = s.getData(0, 0, n, r), h = [], l = 0, u = r - 1; u >= 0; u--)
              for (var c = 0; c < n; c++) l = 4 * (u * n + c), h.push(o[l]), h.push(o[l + 1]), h.push(o[l + 2]), h.push(o[l + 3]);
            return h;
          }, M.skinAniSprite = function () {
            return new tt();
          }, g.create = function (t, e) {
            var i = new Wt();
            return i._imgData = e, i.flipY = !1, i;
          }, p._filterStart = function (t, e, i, n, r) {
            var a = t.getValue("bounds"),
              s = Vt.create(a.width, a.height);
            if (s.start(), s.clear(0, 0, 0, 0), t.addValue("src", s), t.addValue("ScissorTest", vt.worldScissorTest), vt.worldScissorTest) {
              var o = new S();
              o.copyFrom(i.ctx._clipRect), t.addValue("clipRect", o), vt.worldScissorTest = !1, laya.webgl.WebGL.mainContext.disable(3089);
            }
          }, p._filterEnd = function (t, e, i, n, r) {
            var a = t.getValue("bounds");
            t.getValue("src").end();
            var s = Vt.create(a.width, a.height);
            s.start(), s.clear(0, 0, 0, 0), t.addValue("out", s), e._set$P("_filterCache", s), e._set$P("_isHaveGlowFilter", t.getValue("_isHaveGlowFilter"));
          }, p._EndTarget = function (t, e) {
            t.getValue("src").recycle();
            t.getValue("out").end();
            if (t.getValue("ScissorTest")) {
              vt.worldScissorTest = !0, laya.webgl.WebGL.mainContext.enable(3089), e.ctx.save();
              var i = t.getValue("clipRect");
              e.ctx.clipRect(i.x, i.y, i.width, i.height);
            }
          }, p._useSrc = function (t) {
            var e = t.getValue("out");
            e.end(), (e = t.getValue("src")).start(), e.clear(0, 0, 0, 0);
          }, p._endSrc = function (t) {
            t.getValue("src").end();
          }, p._useOut = function (t) {
            var e = t.getValue("src");
            e.end(), (e = t.getValue("out")).start(), e.clear(0, 0, 0, 0);
          }, p._endOut = function (t) {
            t.getValue("out").end();
          }, p._recycleScope = function (t) {
            t.recycle();
          }, p._filter = function (t, e, i, n) {
            var r = this._next;
            if (r) {
              var a = t.filters,
                s = a.length;
              if (1 == s && 32 == a[0].type) return e.ctx.save(), e.ctx.setFilters([a[0]]), r._fun.call(r, t, e, i, n), void e.ctx.restore();
              var o, h, l = ot.create(),
                u = T.TEMP,
                c = e.ctx._getTransformMatrix(),
                _ = x.create();
              c.copyTo(_);
              var d = 0,
                f = 0,
                m = !1,
                g = t._$P._filterCache ? t._$P._filterCache : null;
              if (!g || t._repaint) {
                m = t._isHaveGlowFilter(), l.addValue("_isHaveGlowFilter", m), m && (d = 50, f = 25), (h = new S()).copyFrom(t.getSelfBounds()), h.x += t.x, h.y += t.y, h.x -= t.pivotX + 4, h.y -= t.pivotY + 4;
                var v = h.x,
                  y = h.y;
                if (h.width += d + 8, h.height += d + 8, u.x = h.x * _.a + h.y * _.c, u.y = h.y * _.d + h.x * _.b, h.x = u.x, h.y = u.y, u.x = h.width * _.a + h.height * _.c, u.y = h.height * _.d + h.width * _.b, h.width = u.x, h.height = u.y, h.width <= 0 || h.height <= 0) return;
                g && g.recycle(), l.addValue("bounds", h);
                var w = st.create([l, t, e, 0, 0], p._filterStart);
                e.addRenderObject(w), e.ctx._renderKey = 0, e.ctx._shader2D.glTexture = null;
                var E = t.x - v + f,
                  b = t.y - y + f;
                r._fun.call(r, t, e, E, b), w = st.create([l, t, e, 0, 0], p._filterEnd), e.addRenderObject(w);
                for (var C = 0; C < s; C++) {
                  0 != C && (w = st.create([l], p._useSrc), e.addRenderObject(w), o = Et.create(1, 0), x.TEMP.identity(), e.ctx.drawTarget(l, 0, 0, h.width, h.height, x.TEMP, "out", o, null, H.TOINT.overlay), w = st.create([l], p._useOut), e.addRenderObject(w));
                  a[C].action.apply3d(l, t, e, 0, 0);
                }
                w = st.create([l, e], p._EndTarget), e.addRenderObject(w);
              } else {
                if ((m = !!t._$P._isHaveGlowFilter && t._$P._isHaveGlowFilter) && (d = 50, f = 25), (h = t.getBounds()).width <= 0 || h.height <= 0) return;
                h.width += d, h.height += d, u.x = h.x * _.a + h.y * _.c, u.y = h.y * _.d + h.x * _.b, h.x = u.x, h.y = u.y, u.x = h.width * _.a + h.height * _.c, u.y = h.height * _.d + h.width * _.b, h.width = u.x, h.height = u.y, l.addValue("out", g);
              }
              i = i - f - t.x, n = n - f - t.y, u.setTo(i, n), _.transformPoint(u), i = u.x + h.x, n = u.y + h.y, o = Et.create(1, 0), x.TEMP.identity(), e.ctx.drawTarget(l, i, n, h.width, h.height, x.TEMP, "out", o, null, H.TOINT.overlay), w = st.create([l], p._recycleScope), e.addRenderObject(w), _.destroy();
            }
          }, Float32Array.prototype.slice || (Float32Array.prototype.slice = t._float32ArraySlice), Uint16Array.prototype.slice || (Uint16Array.prototype.slice = t._uint16ArraySlice), Uint8Array.prototype.slice || (Uint8Array.prototype.slice = t._uint8ArraySlice), !0;
        }, t.onStageResize = function (e, i) {
          null != t.mainContext && (t.mainContext.viewport(0, 0, e, i), vt.width = e, vt.height = i);
        }, t.onInvalidGLRes = function () {
          k.instance.freeAll(), C.releaseContentManagers(!0), t.doNodeRepaint(i.stage), t.mainContext.viewport(0, 0, vt.width, vt.height), i.stage.event("devicelost");
        }, t.doNodeRepaint = function (e) {
          0 == e.numChildren && e.repaint();
          for (var i = 0; i < e.numChildren; i++) t.doNodeRepaint(e.getChildAt(i));
        }, t.init = function (e, i, n) {
          t.mainCanvas = e, g._createContext = function (t) {
            return new wt(t);
          }, Wt._createContext = function (t) {
            return new wt(t);
          };
          var r = laya.webgl.WebGL.mainContext;
          if (null != r.getShaderPrecisionFormat) {
            var a = r.getShaderPrecisionFormat(35633, 36338),
              s = r.getShaderPrecisionFormat(35632, 36338);
            t.shaderHighPrecision = !(!a.precision || !s.precision);
          } else t.shaderHighPrecision = !1;
          if (t.compressAstc = r.getExtension("WEBGL_compressed_texture_astc"), t.compressAtc = r.getExtension("WEBGL_compressed_texture_atc"), t.compressEtc = r.getExtension("WEBGL_compressed_texture_etc"), t.compressEtc1 = r.getExtension("WEBGL_compressed_texture_etc1"), t.compressPvrtc = r.getExtension("WEBGL_compressed_texture_pvrtc"), t.compressS3tc = r.getExtension("WEBGL_compressed_texture_s3tc"), t.compressS3tc_srgb = r.getExtension("WEBGL_compressed_texture_s3tc_srgb"), r.deleteTexture1 = r.deleteTexture, r.deleteTexture = function (t) {
              t == Tt.curBindTexValue && (Tt.curBindTexValue = null), r.deleteTexture1(t);
            }, t.onStageResize(i, n), null == t.mainContext) throw new Error("webGL getContext err!");
          P.__init__(), k.__init__(), It.__init__(), at.__init__(), wt.__init__(), Et.__init__(), $.__init__(), Qt.__int__(r), H._init_(r), w.isConchApp && conch.setOnInvalidGLRes(t.onInvalidGLRes);
        }, t.compressAstc = null, t.compressAtc = null, t.compressEtc = null, t.compressEtc1 = null, t.compressPvrtc = null, t.compressS3tc = null, t.compressS3tc_srgb = null, t.mainCanvas = null, t.mainContext = null, t.antialias = !0, t.shaderHighPrecision = !1, t._bg_null = [0, 0, 0, 0], t;
      }(),
      Tt = function () {
        function t() {}
        return r(t, "laya.webgl.WebGLContext"), t.UseProgram = function (e) {
          return t._useProgram !== e && (xt.mainContext.useProgram(e), t._useProgram = e, !0);
        }, t.setDepthTest = function (e, i) {
          i !== t._depthTest && (t._depthTest = i, i ? e.enable(2929) : e.disable(2929));
        }, t.setDepthMask = function (e, i) {
          i !== t._depthMask && (t._depthMask = i, e.depthMask(i));
        }, t.setDepthFunc = function (e, i) {
          i !== t._depthFunc && (t._depthFunc = i, e.depthFunc(i));
        }, t.setBlend = function (e, i) {
          i !== t._blend && (t._blend = i, i ? e.enable(3042) : e.disable(3042));
        }, t.setBlendFunc = function (e, i, n) {
          (i !== t._sFactor || n !== t._dFactor) && (t._sFactor = i, t._dFactor = n, e.blendFunc(i, n));
        }, t.setCullFace = function (e, i) {
          i !== t._cullFace && (t._cullFace = i, i ? e.enable(2884) : e.disable(2884));
        }, t.setFrontFace = function (e, i) {
          i !== t._frontFace && (t._frontFace = i, e.frontFace(i));
        }, t.bindTexture = function (e, i, n) {
          e.bindTexture(i, n), t.curBindTexTarget = i, t.curBindTexValue = n;
        }, t.DEPTH_BUFFER_BIT = 256, t.STENCIL_BUFFER_BIT = 1024, t.COLOR_BUFFER_BIT = 16384, t.POINTS = 0, t.LINES = 1, t.LINE_LOOP = 2, t.LINE_STRIP = 3, t.TRIANGLES = 4, t.TRIANGLE_STRIP = 5, t.TRIANGLE_FAN = 6, t.ZERO = 0, t.ONE = 1, t.SRC_COLOR = 768, t.ONE_MINUS_SRC_COLOR = 769, t.SRC_ALPHA = 770, t.ONE_MINUS_SRC_ALPHA = 771, t.DST_ALPHA = 772, t.ONE_MINUS_DST_ALPHA = 773, t.DST_COLOR = 774, t.ONE_MINUS_DST_COLOR = 775, t.SRC_ALPHA_SATURATE = 776, t.FUNC_ADD = 32774, t.BLEND_EQUATION = 32777, t.BLEND_EQUATION_RGB = 32777, t.BLEND_EQUATION_ALPHA = 34877, t.FUNC_SUBTRACT = 32778, t.FUNC_REVERSE_SUBTRACT = 32779, t.BLEND_DST_RGB = 32968, t.BLEND_SRC_RGB = 32969, t.BLEND_DST_ALPHA = 32970, t.BLEND_SRC_ALPHA = 32971, t.CONSTANT_COLOR = 32769, t.ONE_MINUS_CONSTANT_COLOR = 32770, t.CONSTANT_ALPHA = 32771, t.ONE_MINUS_CONSTANT_ALPHA = 32772, t.BLEND_COLOR = 32773, t.ARRAY_BUFFER = 34962, t.ELEMENT_ARRAY_BUFFER = 34963, t.ARRAY_BUFFER_BINDING = 34964, t.ELEMENT_ARRAY_BUFFER_BINDING = 34965, t.STREAM_DRAW = 35040, t.STATIC_DRAW = 35044, t.DYNAMIC_DRAW = 35048, t.BUFFER_SIZE = 34660, t.BUFFER_USAGE = 34661, t.CURRENT_VERTEX_ATTRIB = 34342, t.FRONT = 1028, t.BACK = 1029, t.CULL_FACE = 2884, t.FRONT_AND_BACK = 1032, t.BLEND = 3042, t.DITHER = 3024, t.STENCIL_TEST = 2960, t.DEPTH_TEST = 2929, t.SCISSOR_TEST = 3089, t.POLYGON_OFFSET_FILL = 32823, t.SAMPLE_ALPHA_TO_COVERAGE = 32926, t.SAMPLE_COVERAGE = 32928, t.NO_ERROR = 0, t.INVALID_ENUM = 1280, t.INVALID_VALUE = 1281, t.INVALID_OPERATION = 1282, t.OUT_OF_MEMORY = 1285, t.CW = 2304, t.CCW = 2305, t.LINE_WIDTH = 2849, t.ALIASED_POINT_SIZE_RANGE = 33901, t.ALIASED_LINE_WIDTH_RANGE = 33902, t.CULL_FACE_MODE = 2885, t.FRONT_FACE = 2886, t.DEPTH_RANGE = 2928, t.DEPTH_WRITEMASK = 2930, t.DEPTH_CLEAR_VALUE = 2931, t.DEPTH_FUNC = 2932, t.STENCIL_CLEAR_VALUE = 2961, t.STENCIL_FUNC = 2962, t.STENCIL_FAIL = 2964, t.STENCIL_PASS_DEPTH_FAIL = 2965, t.STENCIL_PASS_DEPTH_PASS = 2966, t.STENCIL_REF = 2967, t.STENCIL_VALUE_MASK = 2963, t.STENCIL_WRITEMASK = 2968, t.STENCIL_BACK_FUNC = 34816, t.STENCIL_BACK_FAIL = 34817, t.STENCIL_BACK_PASS_DEPTH_FAIL = 34818, t.STENCIL_BACK_PASS_DEPTH_PASS = 34819, t.STENCIL_BACK_REF = 36003, t.STENCIL_BACK_VALUE_MASK = 36004, t.STENCIL_BACK_WRITEMASK = 36005, t.VIEWPORT = 2978, t.SCISSOR_BOX = 3088, t.COLOR_CLEAR_VALUE = 3106, t.COLOR_WRITEMASK = 3107, t.UNPACK_ALIGNMENT = 3317, t.PACK_ALIGNMENT = 3333, t.MAX_TEXTURE_SIZE = 3379, t.MAX_VIEWPORT_DIMS = 3386, t.SUBPIXEL_BITS = 3408, t.RED_BITS = 3410, t.GREEN_BITS = 3411, t.BLUE_BITS = 3412, t.ALPHA_BITS = 3413, t.DEPTH_BITS = 3414, t.STENCIL_BITS = 3415, t.POLYGON_OFFSET_UNITS = 10752, t.POLYGON_OFFSET_FACTOR = 32824, t.TEXTURE_BINDING_2D = 32873, t.SAMPLE_BUFFERS = 32936, t.SAMPLES = 32937, t.SAMPLE_COVERAGE_VALUE = 32938, t.SAMPLE_COVERAGE_INVERT = 32939, t.NUM_COMPRESSED_TEXTURE_FORMATS = 34466, t.COMPRESSED_TEXTURE_FORMATS = 34467, t.DONT_CARE = 4352, t.FASTEST = 4353, t.NICEST = 4354, t.GENERATE_MIPMAP_HINT = 33170, t.BYTE = 5120, t.UNSIGNED_BYTE = 5121, t.SHORT = 5122, t.UNSIGNED_SHORT = 5123, t.INT = 5124, t.UNSIGNED_INT = 5125, t.FLOAT = 5126, t.DEPTH_COMPONENT = 6402, t.ALPHA = 6406, t.RGB = 6407, t.RGBA = 6408, t.LUMINANCE = 6409, t.LUMINANCE_ALPHA = 6410, t.UNSIGNED_SHORT_4_4_4_4 = 32819, t.UNSIGNED_SHORT_5_5_5_1 = 32820, t.UNSIGNED_SHORT_5_6_5 = 33635, t.FRAGMENT_SHADER = 35632, t.VERTEX_SHADER = 35633, t.MAX_VERTEX_ATTRIBS = 34921, t.MAX_VERTEX_UNIFORM_VECTORS = 36347, t.MAX_VARYING_VECTORS = 36348, t.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661, t.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660, t.MAX_TEXTURE_IMAGE_UNITS = 34930, t.MAX_FRAGMENT_UNIFORM_VECTORS = 36349, t.SHADER_TYPE = 35663, t.DELETE_STATUS = 35712, t.LINK_STATUS = 35714, t.VALIDATE_STATUS = 35715, t.ATTACHED_SHADERS = 35717, t.ACTIVE_UNIFORMS = 35718, t.ACTIVE_ATTRIBUTES = 35721, t.SHADING_LANGUAGE_VERSION = 35724, t.CURRENT_PROGRAM = 35725, t.NEVER = 512, t.LESS = 513, t.EQUAL = 514, t.LEQUAL = 515, t.GREATER = 516, t.NOTEQUAL = 517, t.GEQUAL = 518, t.ALWAYS = 519, t.KEEP = 7680, t.REPLACE = 7681, t.INCR = 7682, t.DECR = 7683, t.INVERT = 5386, t.INCR_WRAP = 34055, t.DECR_WRAP = 34056, t.VENDOR = 7936, t.RENDERER = 7937, t.VERSION = 7938, t.NEAREST = 9728, t.LINEAR = 9729, t.NEAREST_MIPMAP_NEAREST = 9984, t.LINEAR_MIPMAP_NEAREST = 9985, t.NEAREST_MIPMAP_LINEAR = 9986, t.LINEAR_MIPMAP_LINEAR = 9987, t.TEXTURE_MAG_FILTER = 10240, t.TEXTURE_MIN_FILTER = 10241, t.TEXTURE_WRAP_S = 10242, t.TEXTURE_WRAP_T = 10243, t.TEXTURE_2D = 3553, t.TEXTURE = 5890, t.TEXTURE_CUBE_MAP = 34067, t.TEXTURE_BINDING_CUBE_MAP = 34068, t.TEXTURE_CUBE_MAP_POSITIVE_X = 34069, t.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070, t.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071, t.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072, t.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073, t.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074, t.MAX_CUBE_MAP_TEXTURE_SIZE = 34076, t.TEXTURE0 = 33984, t.TEXTURE1 = 33985, t.TEXTURE2 = 33986, t.TEXTURE3 = 33987, t.TEXTURE4 = 33988, t.TEXTURE5 = 33989, t.TEXTURE6 = 33990, t.TEXTURE7 = 33991, t.TEXTURE8 = 33992, t.TEXTURE9 = 33993, t.TEXTURE10 = 33994, t.TEXTURE11 = 33995, t.TEXTURE12 = 33996, t.TEXTURE13 = 33997, t.TEXTURE14 = 33998, t.TEXTURE15 = 33999, t.TEXTURE16 = 34e3, t.TEXTURE17 = 34001, t.TEXTURE18 = 34002, t.TEXTURE19 = 34003, t.TEXTURE20 = 34004, t.TEXTURE21 = 34005, t.TEXTURE22 = 34006, t.TEXTURE23 = 34007, t.TEXTURE24 = 34008, t.TEXTURE25 = 34009, t.TEXTURE26 = 34010, t.TEXTURE27 = 34011, t.TEXTURE28 = 34012, t.TEXTURE29 = 34013, t.TEXTURE30 = 34014, t.TEXTURE31 = 34015, t.ACTIVE_TEXTURE = 34016, t.REPEAT = 10497, t.CLAMP_TO_EDGE = 33071, t.MIRRORED_REPEAT = 33648, t.FLOAT_VEC2 = 35664, t.FLOAT_VEC3 = 35665, t.FLOAT_VEC4 = 35666, t.INT_VEC2 = 35667, t.INT_VEC3 = 35668, t.INT_VEC4 = 35669, t.BOOL = 35670, t.BOOL_VEC2 = 35671, t.BOOL_VEC3 = 35672, t.BOOL_VEC4 = 35673, t.FLOAT_MAT2 = 35674, t.FLOAT_MAT3 = 35675, t.FLOAT_MAT4 = 35676, t.SAMPLER_2D = 35678, t.SAMPLER_CUBE = 35680, t.VERTEX_ATTRIB_ARRAY_ENABLED = 34338, t.VERTEX_ATTRIB_ARRAY_SIZE = 34339, t.VERTEX_ATTRIB_ARRAY_STRIDE = 34340, t.VERTEX_ATTRIB_ARRAY_TYPE = 34341, t.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922, t.VERTEX_ATTRIB_ARRAY_POINTER = 34373, t.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975, t.COMPILE_STATUS = 35713, t.LOW_FLOAT = 36336, t.MEDIUM_FLOAT = 36337, t.HIGH_FLOAT = 36338, t.LOW_INT = 36339, t.MEDIUM_INT = 36340, t.HIGH_INT = 36341, t.FRAMEBUFFER = 36160, t.RENDERBUFFER = 36161, t.RGBA4 = 32854, t.RGB5_A1 = 32855, t.RGB565 = 36194, t.DEPTH_COMPONENT16 = 33189, t.STENCIL_INDEX = 6401, t.STENCIL_INDEX8 = 36168, t.DEPTH_STENCIL = 34041, t.RENDERBUFFER_WIDTH = 36162, t.RENDERBUFFER_HEIGHT = 36163, t.RENDERBUFFER_INTERNAL_FORMAT = 36164, t.RENDERBUFFER_RED_SIZE = 36176, t.RENDERBUFFER_GREEN_SIZE = 36177, t.RENDERBUFFER_BLUE_SIZE = 36178, t.RENDERBUFFER_ALPHA_SIZE = 36179, t.RENDERBUFFER_DEPTH_SIZE = 36180, t.RENDERBUFFER_STENCIL_SIZE = 36181, t.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048, t.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049, t.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050, t.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051, t.COLOR_ATTACHMENT0 = 36064, t.DEPTH_ATTACHMENT = 36096, t.STENCIL_ATTACHMENT = 36128, t.DEPTH_STENCIL_ATTACHMENT = 33306, t.NONE = 0, t.FRAMEBUFFER_COMPLETE = 36053, t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054, t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055, t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057, t.FRAMEBUFFER_UNSUPPORTED = 36061, t.FRAMEBUFFER_BINDING = 36006, t.RENDERBUFFER_BINDING = 36007, t.MAX_RENDERBUFFER_SIZE = 34024, t.INVALID_FRAMEBUFFER_OPERATION = 1286, t.UNPACK_FLIP_Y_WEBGL = 37440, t.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441, t.CONTEXT_LOST_WEBGL = 37442, t.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443, t.BROWSER_DEFAULT_WEBGL = 37444, t._useProgram = null, t._depthTest = !0, t._depthMask = !0, t._blend = !1, t._cullFace = !1, t.curBindTexTarget = null, t.curBindTexValue = null, n(t, ["_depthFunc", function () {
          return this._depthFunc = 513;
        }, "_sFactor", function () {
          return this._sFactor = 1;
        }, "_dFactor", function () {
          return this._dFactor = 0;
        }, "_frontFace", function () {
          return this._frontFace = 2305;
        }]), t;
      }(),
      St = function (t) {
        function e() {
          e.__super.call(this);
        }
        r(e, "laya.webgl.display.GraphicsGL", m);
        var i = e.prototype;
        return i.setShader = function (t) {
          this._saveToCmd(w.context._setShader, [t]);
        }, i.setIBVB = function (t, e, i, n, r, a) {
          this._saveToCmd(w.context._setIBVB, [t, e, i, n, r, a]);
        }, i.drawParticle = function (t, e, i) {
          var n = M.createParticleTemplate2D(i);
          n.x = t, n.y = e, this._saveToCmd(w.context._drawParticle, [n]);
        }, e;
      }(),
      wt = function (t) {
        function e(t) {
          this._x = 0, this._y = 0, this._id = ++e._COUNT, this._path = null, this._drawCount = 1, this._maxNumEle = 0, this._clear = !1, this._isMain = !1, this._atlasResourceChange = 0, this._submits = null, this._curSubmit = null, this._ib = null, this._vb = null, this._nBlendType = 0, this._saveMark = null, this._shader2D = null, this.meshlist = [], this.mId = -1, this.mHaveKey = !1, this.mHaveLineKey = !1, this.mX = 0, this.mY = 0, e.__super.call(this), this._width = 99999999, this._height = 99999999, this._clipRect = e.MAXCLIPRECT, this.mOutPoint, this._canvas = t, e._contextcount++, w.isFlash ? (this._ib = $t.create(35044), mt.fillIBQuadrangle(this._ib, 16)) : this._ib = $t.QuadrangleIB, this.clear();
        }
        var s;
        r(e, "laya.webgl.canvas.WebGLContext2D", f);
        var o = e.prototype;
        return o.setIsMainContext = function () {
          this._isMain = !0;
        }, o.clearBG = function (t, e, i, n) {
          var r = xt.mainContext;
          r.clearColor(t, e, i, n), r.clear(16384);
        }, o._getSubmits = function () {
          return this._submits;
        }, o._releaseMem = function () {
          if (this._submits) {
            this._curMat.destroy(), this._curMat = null, this._shader2D.destroy(), this._shader2D = null;
            for (var t = 0, e = this._submits._length; t < e; t++) this._submits[t].releaseRender();
            this._submits.length = 0, this._submits._length = 0, this._submits = null, this._curSubmit = null, this._path && this._path.recover(), this._path = null, this._other && (this._other.font = null), this._save = null, this._vb && (this._vb.releaseResource(), this._vb.destroy(), this._vb.destory(), this._vb = null);
          }
        }, o.destroy = function () {
          --e._contextcount, this.sprite = null, this._releaseMem(), this._targets && this._targets.destroy(), this._targets = null, this._canvas = null, this._ib && this._ib != $t.QuadrangleIB && this._ib.releaseResource();
        }, o.clear = function () {
          this._submits || (this._other = s.DEFAULT, this._curMat = x.create(), this._vb = Jt.create(-1), this._submits = [], this._save = [q.Create(this)], this._save.length = 10, this._shader2D = new $(), this._triangleMesh = Ot.getAMesh()), this._vb.clear(), this._targets && (this._targets.repaint = !0), this._other = s.DEFAULT, this._clear = !0, this._repaint = !1, this._drawCount = 1, this._renderKey = 0, this._other.lineWidth = this._shader2D.ALPHA = 1, this._nBlendType = 0, this._clipRect = e.MAXCLIPRECT, this._curSubmit = at.RENDERBASE, this._shader2D.glTexture = null, this._shader2D.fillStyle = this._shader2D.strokeStyle = z.DEFAULT;
          for (var t = 0, i = this._submits._length; t < i; t++) this._submits[t].releaseRender();
          this._submits._length = 0, this._curMat.identity(), this._other.clear(), this._saveMark = this._save[0], this._save._length = 1;
        }, o.size = function (t, e) {
          if (this._width != t || this._height != e)
            if (0 == t || 0 == e) {
              0 != this._vb._byteLength && (this._width = t, this._height = e, this._vb.clear(), this._vb.upload());
              for (var i = 0, n = this._submits._length; i < n; i++) this._submits[i].releaseRender();
              this._submits.length = 0, this._submits._length = 0, this._curSubmit = null, this._path && this._path.recover(), this._path = null, this.sprite = null, this._targets && this._targets.destroy(), this._targets = null;
            } else this._width = t, this._height = e, this._targets && this._targets.size(t, e), this._canvas.memorySize -= this._canvas.memorySize;
          0 === t && 0 === e && this._releaseMem();
        }, o._getTransformMatrix = function () {
          return this._curMat;
        }, o.translate = function (t, e) {
          0 === t && 0 === e || (K.save(this), this._curMat.bTransform && (Q.save(this), this._curMat.transformPointN(T.TEMP.setTo(t, e)), t = T.TEMP.x, e = T.TEMP.y), this._x += t, this._y += e);
        }, o.save = function () {
          this._save[this._save._length++] = q.Create(this);
        }, o.restore = function () {
          var t = this._save._length;
          if (!(t < 1))
            for (var e = t - 1; e >= 0; e--) {
              var i = this._save[e];
              if (i.restore(this), i.isSaveMark()) return void(this._save._length = e);
            }
        }, o._fillText = function (t, e, i, n, r, a, s, o, h, l) {
          void 0 === l && (l = 0);
          var u = this._shader2D,
            c = this._curSubmit.shaderValue,
            d = r ? ft.create(r) : this._other.font;
          if (k.enabled) u.ALPHA !== c.ALPHA && (u.glTexture = null), dt.drawText(this, t, e, this._curMat, d, h || this._other.textAlign, a, s, o, i, n, l);
          else {
            this._shader2D.defines.getValue();
            var f = a ? _.create(a)._color : u.colorAdd;
            u.ALPHA === c.ALPHA && f === u.colorAdd && c.colorAdd === u.colorAdd || (u.glTexture = null, u.colorAdd = f), dt.drawText(this, t, e, this._curMat, d, h || this._other.textAlign, a, s, o, i, n, l);
          }
        }, o.fillWords = function (t, e, i, n, r, a) {
          this._fillText(null, t, e, i, n, r, null, -1, null, a);
        }, o.fillBorderWords = function (t, e, i, n, r, a, s) {
          this._fillBorderText(null, t, e, i, n, r, a, s, null);
        }, o.fillText = function (t, e, i, n, r, a) {
          this._fillText(t, null, e, i, n, r, null, -1, a);
        }, o.strokeText = function (t, e, i, n, r, a, s) {
          this._fillText(t, null, e, i, n, null, r, a || 1, s);
        }, o.fillBorderText = function (t, e, i, n, r, a, s, o) {
          this._fillBorderText(t, null, e, i, n, r, a, s, o);
        }, o._fillBorderText = function (t, i, n, r, a, s, o, h, l) {
          if (!k.enabled) return this._fillText(t, i, n, r, a, null, o, h || 1, l), void this._fillText(t, i, n, r, a, s, null, -1, l);
          var u = this._shader2D,
            c = this._curSubmit.shaderValue;
          u.ALPHA !== c.ALPHA && (u.glTexture = null);
          var _ = a ? (e._fontTemp.setFont(a), e._fontTemp) : this._other.font;
          dt.drawText(this, t, i, this._curMat, _, l || this._other.textAlign, s, o, h || 1, n, r, 0);
        }, o.fillRect = function (t, e, i, n, r) {
          var a = this._vb;
          if (mt.fillRectImgVb(a, this._clipRect, t, e, i, n, O.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
            this._renderKey = 0;
            var s = this._shader2D.fillStyle;
            r && (this._shader2D.fillStyle = z.create(r));
            var o = this._shader2D,
              h = this._curSubmit.shaderValue;
            if (o.fillStyle !== h.fillStyle || o.ALPHA !== h.ALPHA) {
              o.glTexture = null;
              var l = this._curSubmit = at.createSubmit(this, this._ib, a, (a._byteLength - 64) / 32 * 3, Et.create(2, 0));
              l.shaderValue.color = o.fillStyle._color._color, l.shaderValue.ALPHA = o.ALPHA, this._submits[this._submits._length++] = l;
            }
            this._curSubmit._numEle += 6, this._shader2D.fillStyle = s;
          }
        }, o.fillTexture = function (t, e, n, r, a, s, o, h) {
          if (t.loaded && t.bitmap && t.source) {
            var l = this._vb,
              u = t.bitmap.width,
              c = t.bitmap.height,
              _ = t.uv,
              d = o.x % t.width,
              f = o.y % t.height;
            if (u != h.w || c != h.h) {
              if (!h.w && !h.h) switch (h.oy = h.ox = 0, s) {
                case "repeat":
                  h.width = r, h.height = a;
                  break;
                case "repeat-x":
                  h.width = r, f < 0 ? t.height + f > a ? h.height = a : h.height = t.height + f : (h.oy = f, t.height + f > a ? h.height = a - f : h.height = t.height);
                  break;
                case "repeat-y":
                  d < 0 ? t.width + d > r ? h.width = r : h.width = t.width + d : (h.ox = d, t.width + d > r ? h.width = r - d : h.width = t.width), h.height = a;
                  break;
                case "no-repeat":
                  d < 0 ? t.width + d > r ? h.width = r : h.width = t.width + d : (h.ox = d, t.width + d > r ? h.width = r - d : h.width = t.width), f < 0 ? t.height + f > a ? h.height = a : h.height = t.height + f : (h.oy = f, t.height + f > a ? h.height = a - f : h.height = t.height);
                  break;
                default:
                  h.width = r, h.height = a;
              }
              h.w = u, h.h = c, h.uv = [0, 0, h.width / u, 0, h.width / u, h.height / c, 0, h.height / c];
            }
            if (e += h.ox, n += h.oy, d -= h.ox, f -= h.oy, mt.fillRectImgVb(l, this._clipRect, e, n, h.width, h.height, h.uv, this._curMat, this._x, this._y, 0, 0)) {
              this._renderKey = 0;
              var p = Lt.create(this, this._ib, l, (l._byteLength - 64) / 32 * 3, Et.create(256, 0));
              this._submits[this._submits._length++] = p;
              var m = p.shaderValue;
              m.textureHost = t;
              var g = _[0] * u,
                v = _[1] * c,
                y = (_[2] - _[0]) * u,
                x = (_[5] - _[3]) * c,
                T = -d / u,
                S = -f / c;
              m.u_TexRange[0] = g / u, m.u_TexRange[1] = y / u, m.u_TexRange[2] = v / c, m.u_TexRange[3] = x / c, m.u_offset[0] = T, m.u_offset[1] = S, k.enabled && !this._isMain && p.addTexture(t, (l._byteLength >> 2) - 16), this._curSubmit = p, p._renderType = 10017, p._numEle += 6;
            }
          } else this.sprite && i.timer.callLater(this, this._repaintSprite);
        }, o.setShader = function (t) {
          j.save(this, 1048576, this._shader2D, !0), this._shader2D.shader = t;
        }, o.setFilters = function (t) {
          j.save(this, 2097152, this._shader2D, !0), this._shader2D.filters = t, this._curSubmit = at.RENDERBASE, this._renderKey = 0, this._drawCount++;
        }, o.drawTexture = function (t, e, i, n, r, a, s) {
          this._drawTextureM(t, e, i, n, r, a, s, null, 1);
        }, o.addTextureVb = function (t, e, i) {
          var n = this._curSubmit._vb || this._vb,
            r = n._byteLength >> 2;
          n.byteLength = r + 16 << 2;
          for (var a = n.getFloat32Array(), s = 0; s < 16; s += 4) a[r++] = t[s] + e, a[r++] = t[s + 1] + i, a[r++] = t[s + 2], a[r++] = t[s + 3];
          this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle), n._upload = !0;
        }, o.willDrawTexture = function (t, e) {
          if (!(t.loaded && t.bitmap && t.source)) return this.sprite && i.timer.callLater(this, this._repaintSprite), 0;
          var n = t.bitmap,
            r = n.id + this._shader2D.ALPHA * e + 10016;
          if (r == this._renderKey) return r;
          var a = this._shader2D,
            s = a.ALPHA,
            o = this._curSubmit.shaderValue;
          a.ALPHA *= e, this._renderKey = r, this._drawCount++, a.glTexture = n;
          var h = this._vb,
            l = null,
            u = h._byteLength / 32 * 3;
          return l = Lt.create(this, this._ib, h, u, Et.create(1, 0)), this._submits[this._submits._length++] = l, l.shaderValue.textureHost = t, l._renderType = 10016, l._preIsSameTextureShader = 10016 === this._curSubmit._renderType && a.ALPHA === o.ALPHA, this._curSubmit = l, a.ALPHA = s, r;
        }, o.drawTextures = function (t, n, r, a) {
          if (t.loaded && t.bitmap && t.source) {
            var s = this._clipRect;
            if (this._clipRect = e.MAXCLIPRECT, this._drawTextureM(t, n[0], n[1], t.width, t.height, r, a, null, 1)) {
              if (this._clipRect = s, A.drawCall++, !(n.length < 4)) {
                for (var o = this._curSubmit._vb || this._vb, h = this._curMat.a, l = this._curMat.d, u = 2, c = n.length; u < c; u += 2) mt.copyPreImgVb(o, (n[u] - n[u - 2]) * h, (n[u + 1] - n[u - 1]) * l), this._curSubmit._numEle += 6;
                this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle);
              }
            } else alert("drawTextures err");
          } else this.sprite && i.timer.callLater(this, this._repaintSprite);
        }, o._drawTextureM = function (t, e, n, r, a, s, o, h, l) {
          if (!t.loaded || !t.source) return this.sprite && i.timer.callLater(this, this._repaintSprite), !1;
          var u = this._curSubmit._vb || this._vb,
            c = t.bitmap;
          e += s, n += o, this._drawCount++;
          var _ = c.id + this._shader2D.ALPHA * l + 10016;
          if (_ != this._renderKey) {
            this._renderKey = _;
            var d = this._curSubmit.shaderValue,
              f = this._shader2D,
              p = f.ALPHA;
            f.ALPHA *= l, f.glTexture = c;
            var m = this._vb,
              g = null,
              v = m._byteLength / 32 * 3;
            g = Lt.create(this, this._ib, m, v, Et.create(1, 0)), this._submits[this._submits._length++] = g, g.shaderValue.textureHost = t, g._renderType = 10016, g._preIsSameTextureShader = 10016 === this._curSubmit._renderType && f.ALPHA === d.ALPHA, this._curSubmit = g, u = this._curSubmit._vb || this._vb, f.ALPHA = p;
          }
          return !!mt.fillRectImgVb(u, this._clipRect, e, n, r || t.width, a || t.height, t.uv, h || this._curMat, this._x, this._y, 0, 0) && (k.enabled && !this._isMain && this._curSubmit.addTexture(t, (u._byteLength >> 2) - 16), this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle), !0);
        }, o._repaintSprite = function () {
          this.sprite && this.sprite.repaint();
        }, o._drawText = function (t, e, i, n, r, a, s, o, h, l) {
          var u = t.bitmap;
          this._drawCount++;
          var c = u.id + this._shader2D.ALPHA + 10016;
          if (c != this._renderKey) {
            this._renderKey = c;
            var _ = this._curSubmit.shaderValue,
              d = this._shader2D;
            d.glTexture = u;
            var f = this._vb,
              p = null,
              m = f._byteLength / 32 * 3;
            (p = k.enabled ? Lt.create(this, this._ib, f, m, Et.create(1, 0)) : Lt.create(this, this._ib, f, m, Kt.create()))._preIsSameTextureShader = 10016 === this._curSubmit._renderType && d.ALPHA === _.ALPHA, this._submits[this._submits._length++] = p, p.shaderValue.textureHost = t, p._renderType = 10016, this._curSubmit = p;
          }
          t.active();
          var g = this._curSubmit._vb || this._vb;
          mt.fillRectImgVb(g, this._clipRect, e + s, i + o, n || t.width, r || t.height, t.uv, a || this._curMat, this._x, this._y, h, l, !0) && (k.enabled && !this._isMain && this._curSubmit.addTexture(t, (g._byteLength >> 2) - 16), this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle));
        }, o.drawTextureWithTransform = function (t, i, n, r, a, s, o, h, l) {
          if (s) {
            var u = this._curMat,
              c = this._x,
              _ = this._y;
            (0 !== o || 0 !== h) && (this._x = o * u.a + h * u.c, this._y = h * u.d + o * u.b), s && u.bTransform ? (x.mul(s, u, e._tmpMatrix), (s = e._tmpMatrix)._checkTransform()) : (this._x += u.tx, this._y += u.ty), this._drawTextureM(t, i, n, r, a, 0, 0, s, l), this._x = c, this._y = _;
          } else this._drawTextureM(t, i, n, r, a, o, h, null, l);
        }, o.fillQuadrangle = function (t, e, i, n, r) {
          var a = this._curSubmit,
            s = this._vb,
            o = this._shader2D,
            h = a.shaderValue;
          if (this._renderKey = 0, t.bitmap) {
            var l = t.bitmap;
            o.glTexture == l && o.ALPHA === h.ALPHA || (o.glTexture = l, (a = this._curSubmit = at.createSubmit(this, this._ib, s, s._byteLength / 32 * 3, Et.create(1, 0))).shaderValue.glTexture = l, this._submits[this._submits._length++] = a), mt.fillQuadrangleImgVb(s, e, i, n, t.uv, r || this._curMat, this._x, this._y);
          } else a.shaderValue.fillStyle && a.shaderValue.fillStyle.equal(t) && o.ALPHA === h.ALPHA || (o.glTexture = null, (a = this._curSubmit = at.createSubmit(this, this._ib, s, s._byteLength / 32 * 3, Et.create(2, 0))).shaderValue.defines.add(2), a.shaderValue.fillStyle = z.create(t), this._submits[this._submits._length++] = a), mt.fillQuadrangleImgVb(s, e, i, n, O.DEF_UV, r || this._curMat, this._x, this._y);
          a._numEle += 6;
        }, o.drawTexture2 = function (t, i, n, r, a, s, o, h) {
          if (0 != s) {
            var l = this._curMat;
            if (this._x = t * l.a + i * l.c, this._y = i * l.d + t * l.b, a && (l.bTransform || a.bTransform ? (x.mul(a, l, e._tmpMatrix), a = e._tmpMatrix) : (this._x += a.tx + l.tx, this._y += a.ty + l.ty, a = x.EMPTY)), 1 !== s || o) {
              var u = this._shader2D.ALPHA,
                c = this._nBlendType;
              this._shader2D.ALPHA = s, o && (this._nBlendType = H.TOINT(o)), this._drawTextureM(h[0], h[1] - n, h[2] - r, h[3], h[4], 0, 0, a, 1), this._shader2D.ALPHA = u, this._nBlendType = c;
            } else this._drawTextureM(h[0], h[1] - n, h[2] - r, h[3], h[4], 0, 0, a, 1);
            this._x = this._y = 0;
          }
        }, o.drawCanvas = function (t, e, i, n, r) {
          var a = t.context;
          if (this._renderKey = 0, a._targets) this._submits[this._submits._length++] = Pt.create(a, 0, null), this._curSubmit = at.RENDERBASE, a._targets.drawTo(this, e, i, n, r);
          else {
            var s = this._submits[this._submits._length++] = Pt.create(a, this._shader2D.ALPHA, this._shader2D.filters),
              o = n / t.width,
              h = r / t.height,
              l = s._matrix;
            this._curMat.copyTo(l), 1 != o && 1 != h && l.scale(o, h);
            var u = l.tx,
              c = l.ty;
            l.tx = l.ty = 0, l.transformPoint(T.TEMP.setTo(e, i)), l.translate(T.TEMP.x + u, T.TEMP.y + c), this._curSubmit = at.RENDERBASE;
          }
          d.showCanvasMark && (this.save(), this.lineWidth = 4, this.strokeStyle = a._targets ? "yellow" : "green", this.strokeRect(e - 1, i - 1, n + 2, r + 2, 1), this.strokeRect(e, i, n, r, 1), this.restore());
        }, o.drawTarget = function (t, e, i, n, r, a, s, o, h, l) {
          void 0 === l && (l = -1);
          var u = this._vb;
          if (mt.fillRectImgVb(u, this._clipRect, e, i, n, r, h || O.DEF_UV, a || this._curMat, this._x, this._y, 0, 0)) {
            this._renderKey = 0;
            this._shader2D.glTexture = null;
            this._curSubmit.shaderValue;
            var c = this._curSubmit = ct.create(this, this._ib, u, (u._byteLength - 64) / 32 * 3, o, s);
            c.blendType = -1 == l ? this._nBlendType : l, c.scope = t, this._submits[this._submits._length++] = c, this._curSubmit._numEle += 6;
          }
        }, o.mixRGBandAlpha = function (t) {
          return this._mixRGBandAlpha(t, this._shader2D.ALPHA);
        }, o._mixRGBandAlpha = function (t, e) {
          var i = (4278190080 & t) >>> 24;
          return 0 != i ? i *= e : i = 255 * e, 16777215 & t | i << 24;
        }, o.drawTriangles = function (t, n, r, a, s, o, h, l, u, c) {
          if (!t.loaded || !t.source) return this.sprite && i.timer.callLater(this, this._repaintSprite), !1;
          this._drawCount++;
          t.bitmap;
          var _ = this._mixRGBandAlpha(4294967295, l),
            d = (a.length, o.length);
          this._renderKey = -1;
          var f = this._curSubmit = Lt.create(this, this._triangleMesh.getIBR(), this._triangleMesh.getVBR(), this._triangleMesh.indexNum, Et.create(1, 0));
          return f.shaderValue.textureHost = t, f._renderType = 10016, this._submits[this._submits._length++] = f, h ? (e._tmpMatrix.a = h.a, e._tmpMatrix.b = h.b, e._tmpMatrix.c = h.c, e._tmpMatrix.d = h.d, e._tmpMatrix.tx = h.tx + n, e._tmpMatrix.ty = h.ty + r, x.mul(e._tmpMatrix, this._curMat, e._tmpMatrix)) : (e._tmpMatrix.a = this._curMat.a, e._tmpMatrix.b = this._curMat.b, e._tmpMatrix.c = this._curMat.c, e._tmpMatrix.d = this._curMat.d, e._tmpMatrix.tx = this._curMat.tx + n, e._tmpMatrix.ty = this._curMat.ty + r), this._triangleMesh.addData(a, s, o, e._tmpMatrix, _, this), this._curSubmit._numEle += d, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle), !0;
        }, o.transform = function (t, e, i, n, r, a) {
          Q.save(this), x.mul(x.TEMP.setTo(t, e, i, n, r, a), this._curMat, this._curMat), this._curMat._checkTransform();
        }, o.setTransformByMatrix = function (t) {
          t.copyTo(this._curMat);
        }, o.transformByMatrix = function (t) {
          Q.save(this), x.mul(t, this._curMat, this._curMat), this._curMat._checkTransform();
        }, o.rotate = function (t) {
          Q.save(this), this._curMat.rotateEx(t);
        }, o.scale = function (t, e) {
          Q.save(this), this._curMat.scaleEx(t, e);
        }, o.clipRect = function (t, e, i, n) {
          if (0 != this._curMat.b || 0 != this._curMat.c) {
            this._renderKey = 0;
            var r = ut.create(4);
            this.addRenderObject(r);
            var a = this._vb,
              s = a._byteLength >> 2;
            if (mt.fillRectImgVb(a, null, t, e, i, n, O.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
              this._shader2D.glTexture = null;
              var o = this._curSubmit = at.createSubmit(this, this._ib, a, (a._byteLength - 64) / 32 * 3, Et.create(2, 0));
              o.shaderValue.ALPHA = 1, this._submits[this._submits._length++] = o, this._curSubmit._numEle += 6;
            } else alert("clipRect calc stencil rect error");
            var h = ut.create(5);
            this.addRenderObject(h);
            var l = a.getFloat32Array(),
              u = Math.min(Math.min(Math.min(l[s + 0], l[s + 4]), l[s + 8]), l[s + 12]),
              c = Math.max(Math.max(Math.max(l[s + 0], l[s + 4]), l[s + 8]), l[s + 12]),
              _ = Math.min(Math.min(Math.min(l[s + 1], l[s + 5]), l[s + 9]), l[s + 13]),
              d = Math.max(Math.max(Math.max(l[s + 1], l[s + 5]), l[s + 9]), l[s + 13]);
            Y.save(this, h, t, e, i, n, u, _, c - u, d - _), this._curSubmit = at.RENDERBASE;
          } else {
            i *= this._curMat.a, n *= this._curMat.d;
            var f = T.TEMP;
            this._curMat.transformPoint(f.setTo(t, e)), i < 0 && (f.x = f.x + i, i = -i), n < 0 && (f.y = f.y + n, n = -n), this._renderKey = 0;
            var p = this._curSubmit = lt.create(this);
            this._submits[this._submits._length++] = p, p.submitIndex = this._submits._length, p.submitLength = 9999999, X.save(this, p);
            var m = this._clipRect,
              g = m.x,
              v = m.y,
              y = f.x + i,
              x = f.y + n;
            g < f.x && (m.x = f.x), v < f.y && (m.y = f.y), m.width = Math.min(y, g + m.width) - m.x, m.height = Math.min(x, v + m.height) - m.y, this._shader2D.glTexture = null, p.clipRect.copyFrom(m), this._curSubmit = at.RENDERBASE;
          }
        }, o.setIBVB = function (t, e, i, n, r, a, s, o, h, l, u) {
          if (void 0 === h && (h = 0), void 0 === l && (l = 0), void 0 === u && (u = 0), null === i) {
            if (w.isFlash) {
              var c = n;
              c._selfIB || (c._selfIB = $t.create(35044)), c._selfIB.clear(), i = c._selfIB;
            } else i = this._ib;
            mt.expandIBQuadrangle(i, n._byteLength / (4 * n.vertexStride * 4));
          }
          if (!o || !s) throw Error("setIBVB must input:shader shaderValues");
          var _ = ht.create(this, n, i, r, s, o, h, l, u);
          a || (a = x.EMPTY), a.translate(t, e), x.mul(a, this._curMat, _._mat), a.translate(-t, -e), this._submits[this._submits._length++] = _, this._curSubmit = at.RENDERBASE, this._renderKey = 0;
        }, o.addRenderObject = function (t) {
          this._submits[this._submits._length++] = t;
        }, o.fillTrangles = function (t, e, i, n, r) {
          var a = this._curSubmit,
            s = this._vb,
            o = this._shader2D,
            h = a.shaderValue,
            l = n.length >> 4,
            u = t.bitmap;
          this._renderKey = 0, o.glTexture == u && o.ALPHA === h.ALPHA || ((a = this._curSubmit = at.createSubmit(this, this._ib, s, s._byteLength / 32 * 3, Et.create(1, 0))).shaderValue.textureHost = t, this._submits[this._submits._length++] = a), mt.fillTranglesVB(s, e, i, n, r || this._curMat, this._x, this._y), a._numEle += 6 * l;
        }, o.submitElement = function (t, e) {
          var i = this._submits;
          for (e < 0 && (e = i._length); t < e;) t += i[t].renderSubmit();
        }, o.finish = function () {
          xt.mainContext.finish();
        }, o.flush = function () {
          var t = Math.max(this._vb._byteLength / 64, this._maxNumEle / 6) + 8;
          if (t > this._ib.bufferLength / 12 && mt.expandIBQuadrangle(this._ib, t), !this._isMain && k.enabled && k._atlasRestore > this._atlasResourceChange) {
            this._atlasResourceChange = k._atlasRestore;
            for (var e = this._submits, i = 0, n = e._length; i < n; i++) {
              var r = e[i];
              10016 === r.getRenderType() && r.checkTexture();
            }
          }
          this.submitElement(0, this._submits._length), this._path && this._path.reset(), et.instance && et.getInstance().reset();
          var a = 0;
          for (i = 0, a = this.meshlist.length; i < a; i++) {
            var s = this.meshlist[i];
            s.canReuse ? s.releaseMesh() : s.destroy();
          }
          return this.meshlist.length = 0, this._curSubmit = at.RENDERBASE, this._renderKey = 0, this._triangleMesh = Ot.getAMesh(), this.meshlist.push(this._triangleMesh), this._submits._length;
        }, o.setPathId = function (t) {
          if (this.mId = t, -1 != this.mId) {
            this.mHaveKey = !1;
            var e = V.getInstance();
            e.shapeDic[this.mId] && (this.mHaveKey = !0), this.mHaveLineKey = !1, e.shapeLineDic[this.mId] && (this.mHaveLineKey = !0);
          }
        }, o.movePath = function (t, e) {
          var i = t,
            n = e;
          t = this._curMat.a * i + this._curMat.c * n + this._curMat.tx, e = this._curMat.b * i + this._curMat.d * n + this._curMat.ty, this.mX += t, this.mY += e;
        }, o.beginPath = function () {
          var t = this._getPath();
          t.tempArray.length = 0, t.closePath = !1, this.mX = 0, this.mY = 0;
        }, o.closePath = function () {
          this._path.closePath = !0;
        }, o.fill = function (t) {
          void 0 === t && (t = !1);
          var e = this._getPath();
          this.drawPoly(0, 0, e.tempArray, this.fillStyle._color.numColor, 0, 0, t);
        }, o.stroke = function () {
          var t = this._getPath();
          if (this.lineWidth > 0) {
            if (-1 == this.mId) t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor);
            else if (this.mHaveLineKey) {
              var e = V.getInstance().shapeLineDic[this.mId];
              e.rebuild(t.tempArray), t.setGeomtry(e);
            } else V.getInstance().addLine(this.mId, t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor));
            t.update();
            var i = [this.mX, this.mY],
              n = at.createShape(this, t.ib, t.vb, t.count, t.offset, Et.create(4, 0));
            n.shaderValue.ALPHA = this._shader2D.ALPHA, n.shaderValue.u_pos = i, n.shaderValue.u_mmat2 = vt.TEMPMAT4_ARRAY, this._submits[this._submits._length++] = n, this._renderKey = -1;
          }
        }, o.line = function (t, e, i, n, r, a) {
          var s = this._curSubmit,
            o = this._vb;
          if (mt.fillLineVb(o, this._clipRect, t, e, i, n, r, a)) {
            this._renderKey = 0;
            var h = this._shader2D,
              l = s.shaderValue;
            h.strokeStyle === l.strokeStyle && h.ALPHA === l.ALPHA || (h.glTexture = null, (s = this._curSubmit = at.createSubmit(this, this._ib, o, (o._byteLength - 64) / 32 * 3, Et.create(2, 0))).shaderValue.strokeStyle = h.strokeStyle, s.shaderValue.mainID = 2, s.shaderValue.ALPHA = h.ALPHA, this._submits[this._submits._length++] = s), s._numEle += 6;
          }
        }, o.moveTo = function (t, e, i) {
          void 0 === i && (i = !0);
          var n = this._getPath();
          if (i) {
            var r = t,
              a = e;
            t = this._curMat.a * r + this._curMat.c * a, e = this._curMat.b * r + this._curMat.d * a;
          }
          n.addPoint(t, e);
        }, o.lineTo = function (t, e, i) {
          void 0 === i && (i = !0);
          var n = this._getPath();
          if (i) {
            var r = t,
              a = e;
            t = this._curMat.a * r + this._curMat.c * a, e = this._curMat.b * r + this._curMat.d * a;
          }
          n.addPoint(t, e);
        }, o.drawCurves = function (t, e, i) {
          this.setPathId(-1), this.beginPath(), this.strokeStyle = i[3], this.lineWidth = i[4];
          var n = i[2];
          t += i[0], e += i[1], this.movePath(t, e), this.moveTo(n[0], n[1]);
          for (var r = 2, a = n.length; r < a;) this.quadraticCurveTo(n[r++], n[r++], n[r++], n[r++]);
          this.stroke();
        }, o.arcTo = function (t, i, n, r, a) {
          if (-1 == this.mId || !this.mHaveKey) {
            var s = 0,
              o = 0,
              h = 0,
              l = this._getPath();
            this._curMat.copyTo(e._tmpMatrix), e._tmpMatrix.tx = e._tmpMatrix.ty = 0, e._tempPoint.setTo(l.getEndPointX(), l.getEndPointY()), e._tmpMatrix.invertTransformPoint(e._tempPoint);
            var u = e._tempPoint.x - t,
              c = e._tempPoint.y - i,
              _ = Math.sqrt(u * u + c * c);
            if (!(_ <= 1e-6)) {
              var d = u / _,
                f = c / _,
                p = n - t,
                m = r - i,
                g = p * p + m * m,
                v = Math.sqrt(g);
              if (!(v <= 1e-6)) {
                var y = p / v,
                  x = m / v,
                  T = d + y,
                  S = f + x,
                  w = Math.sqrt(T * T + S * S);
                if (!(w <= 1e-6)) {
                  var E = T / w,
                    b = S / w,
                    C = Math.acos(E * d + b * f),
                    M = Math.PI / 2 - C,
                    I = (_ = a / Math.tan(M)) * d + t,
                    D = _ * f + i,
                    A = Math.sqrt(_ * _ + a * a),
                    R = t + E * A,
                    P = i + b * A,
                    L = 0,
                    O = 0,
                    N = 0;
                  if (d * x - f * y >= 0) {
                    var V = (L = 2 * M) / e.SEGNUM;
                    O = Math.sin(V), N = Math.cos(V);
                  } else V = (L = 2 * -M) / e.SEGNUM, O = Math.sin(V), N = Math.cos(V);
                  o = this._curMat.a * I + this._curMat.c * D, h = this._curMat.b * I + this._curMat.d * D, o == this._path.getEndPointX() && h == this._path.getEndPointY() || l.addPoint(o, h);
                  var F = I - R,
                    B = D - P;
                  for (s = 0; s < e.SEGNUM; s++) {
                    var U = F * N + B * O,
                      k = -F * O + B * N;
                    o = U + R, h = k + P, t = this._curMat.a * o + this._curMat.c * h, h = i = this._curMat.b * o + this._curMat.d * h, (o = t) == this._path.getEndPointX() && h == this._path.getEndPointY() || l.addPoint(o, h), F = U, B = k;
                  }
                }
              }
            }
          }
        }, o.arc = function (t, e, i, n, r, a, s) {
          if (void 0 === a && (a = !1), void 0 === s && (s = !0), -1 != this.mId) {
            var o = V.getInstance().shapeDic[this.mId];
            if (o && this.mHaveKey && !o.needUpdate(this._curMat)) return;
            t = 0, e = 0;
          }
          var h = 0,
            l = 0,
            u = 0,
            c = 0,
            _ = 0,
            d = 0,
            f = 0,
            p = 0;
          if (l = r - n, a)
            if (Math.abs(l) >= 2 * Math.PI) l = 2 * -Math.PI;
            else
              for (; l > 0;) l -= 2 * Math.PI;
          else if (Math.abs(l) >= 2 * Math.PI) l = 2 * Math.PI;
          else
            for (; l < 0;) l += 2 * Math.PI;
          u = l / (p = i < 101 ? Math.max(10, l * i / 5) : i < 201 ? Math.max(10, l * i / 20) : Math.max(10, l * i / 40)) / 2, c = Math.abs(4 / 3 * (1 - Math.cos(u)) / Math.sin(u)), a && (c = -c);
          var m = this._getPath(),
            g = NaN,
            v = NaN;
          for (f = 0; f <= p; f++) h = n + l * (f / p), _ = t + Math.cos(h) * i, d = e + Math.sin(h) * i, s && (g = _, v = d, _ = this._curMat.a * g + this._curMat.c * v, d = this._curMat.b * g + this._curMat.d * v), _ == this._path.getEndPointX() && d == this._path.getEndPointY() || m.addPoint(_, d);
          _ = t + Math.cos(r) * i, d = e + Math.sin(r) * i, s && (g = _, v = d, _ = this._curMat.a * g + this._curMat.c * v, d = this._curMat.b * g + this._curMat.d * v), _ == this._path.getEndPointX() && d == this._path.getEndPointY() || m.addPoint(_, d);
        }, o.quadraticCurveTo = function (t, e, i, n) {
          var r = h.I,
            a = i,
            s = n;
          i = this._curMat.a * a + this._curMat.c * s, n = this._curMat.b * a + this._curMat.d * s, a = t, s = e, t = this._curMat.a * a + this._curMat.c * s, e = this._curMat.b * a + this._curMat.d * s;
          for (var o = r.getBezierPoints([this._path.getEndPointX(), this._path.getEndPointY(), t, e, i, n], 30, 2), l = 0, u = o.length / 2; l < u; l++) this.lineTo(o[2 * l], o[2 * l + 1], !1);
          this.lineTo(i, n, !1);
        }, o.rect = function (t, e, i, n) {
          this._other = this._other.make(), this._other.path || (this._other.path = new W()), this._other.path.rect(t, e, i, n);
        }, o.strokeRect = function (t, e, i, n, r) {
          var a = .5 * r;
          this.line(t - a, e, t + i + a, e, r, this._curMat), this.line(t + i, e, t + i, e + n, r, this._curMat), this.line(t, e, t, e + n, r, this._curMat), this.line(t - a, e + n, t + i + a, e + n, r, this._curMat);
        }, o.clip = function () {}, o.drawPoly = function (t, e, i, n, r, a, s) {
          void 0 === s && (s = !1), this._renderKey = 0, this._shader2D.glTexture = null;
          var o = this._getPath();
          if (-1 == this.mId) o.polygon(t, e, i, n, r || 1, a);
          else if (this.mHaveKey) {
            var h = V.getInstance().shapeDic[this.mId];
            h.setMatrix(this._curMat), h.rebuild(o.tempArray), o.setGeomtry(h);
          } else {
            var l = o.polygon(t, e, i, n, r || 1, a);
            V.getInstance().addShape(this.mId, l), l.setMatrix(this._curMat);
          }
          o.update();
          var u, c = [this.mX, this.mY];
          if (u = at.createShape(this, o.ib, o.vb, o.count, o.offset, Et.create(4, 0)), u.shaderValue.ALPHA = this._shader2D.ALPHA, u.shaderValue.u_pos = c, u.shaderValue.u_mmat2 = vt.EMPTYMAT4_ARRAY, this._submits[this._submits._length++] = u, r > 0) {
            if (this.mHaveLineKey) {
              var _ = V.getInstance().shapeLineDic[this.mId];
              _.rebuild(o.tempArray), o.setGeomtry(_);
            } else V.getInstance().addShape(this.mId, o.drawLine(t, e, i, r, a));
            o.update(), (u = at.createShape(this, o.ib, o.vb, o.count, o.offset, Et.create(4, 0))).shaderValue.ALPHA = this._shader2D.ALPHA, u.shaderValue.u_mmat2 = vt.EMPTYMAT4_ARRAY, this._submits[this._submits._length++] = u;
          }
        }, o.drawParticle = function (t, e, i) {
          i.x = t, i.y = e, this._submits[this._submits._length++] = i;
        }, o._getPath = function () {
          return this._path || (this._path = new W());
        }, a(0, o, "globalCompositeOperation", function () {
          return H.NAMES[this._nBlendType];
        }, function (t) {
          var e = H.TOINT[t];
          null == e || this._nBlendType === e || (j.save(this, 65536, this, !0), this._curSubmit = at.RENDERBASE, this._renderKey = 0, this._nBlendType = e);
        }), a(0, o, "strokeStyle", function () {
          return this._shader2D.strokeStyle;
        }, function (t) {
          this._shader2D.strokeStyle.equal(t) || (j.save(this, 512, this._shader2D, !1), this._shader2D.strokeStyle = z.create(t));
        }), a(0, o, "globalAlpha", function () {
          return this._shader2D.ALPHA;
        }, function (t) {
          (t = Math.floor(1e3 * t) / 1e3) != this._shader2D.ALPHA && (j.save(this, 1, this._shader2D, !0), this._shader2D.ALPHA = t);
        }), a(0, o, "asBitmap", null, function (t) {
          if (t) {
            if (this._targets || (this._targets = new Z()), this._targets.repaint = !0, !this._width || !this._height) throw Error("asBitmap no size!");
            this._targets.setSP(this.sprite), this._targets.size(this._width, this._height);
          } else this._targets = null;
        }), a(0, o, "fillStyle", function () {
          return this._shader2D.fillStyle;
        }, function (t) {
          this._shader2D.fillStyle.equal(t) || (j.save(this, 2, this._shader2D, !1), this._shader2D.fillStyle = z.create(t));
        }), a(0, o, "textAlign", function () {
          return this._other.textAlign;
        }, function (t) {
          this._other.textAlign === t || (this._other = this._other.make(), j.save(this, 32768, this._other, !1), this._other.textAlign = t);
        }), a(0, o, "lineWidth", function () {
          return this._other.lineWidth;
        }, function (t) {
          this._other.lineWidth === t || (this._other = this._other.make(), j.save(this, 256, this._other, !1), this._other.lineWidth = t);
        }), a(0, o, "textBaseline", function () {
          return this._other.textBaseline;
        }, function (t) {
          this._other.textBaseline === t || (this._other = this._other.make(), j.save(this, 16384, this._other, !1), this._other.textBaseline = t);
        }), a(0, o, "font", null, function (t) {
          t != this._other.font.toString() && (this._other = this._other.make(), j.save(this, 8, this._other, !1), this._other.font === ft.EMPTY ? this._other.font = new ft(t) : this._other.font.setFont(t));
        }), e.__init__ = function () {
          s.DEFAULT = new s();
        }, e._tempPoint = new T(), e._SUBMITVBSIZE = 32e3, e._MAXSIZE = 99999999, e._RECTVBSIZE = 16, e.MAXCLIPRECT = new S(0, 0, 99999999, 99999999), e._COUNT = 0, e._tmpMatrix = new x(), e.SEGNUM = 32, e._contextcount = 0, n(e, ["_fontTemp", function () {
          return this._fontTemp = new ft();
        }, "_drawStyleTemp", function () {
          return this._drawStyleTemp = new z(null);
        }]), e.__init$ = function () {
          s = function () {
            function t() {
              this.lineWidth = 1, this.path = null, this.textAlign = null, this.textBaseline = null, this.font = ft.EMPTY;
            }
            r(t, "");
            var e = t.prototype;
            return e.clear = function () {
              this.lineWidth = 1, this.path && this.path.clear(), this.textAlign = this.textBaseline = null, this.font = ft.EMPTY;
            }, e.make = function () {
              return this === t.DEFAULT ? new t() : this;
            }, t.DEFAULT = null, t;
          }();
        }, e;
      }(),
      Et = function (t) {
        function e(t, i) {
          this.size = [0, 0], this.alpha = 1, this.ALPHA = 1, this.subID = 0, this._cacheID = 0, e.__super.call(this), this.defines = new It(), this.position = e._POSITION, this.mainID = t, this.subID = i, this.textureHost = null, this.texture = null, this.fillStyle = null, this.color = null, this.strokeStyle = null, this.colorAdd = null, this.glTexture = null, this.u_mmat2 = null, this._cacheID = t | i, this._inClassCache = e._cache[this._cacheID], t > 0 && !this._inClassCache && (this._inClassCache = e._cache[this._cacheID] = [], this._inClassCache._length = 0), this.clear();
        }
        r(e, "laya.webgl.shader.d2.value.Value2D", B);
        var i = e.prototype;
        return i.setValue = function (t) {}, i.refresh = function () {
          var t = this.size;
          return t[0] = vt.width, t[1] = vt.height, this.alpha = this.ALPHA * vt.worldAlpha, this.mmat = vt.worldMatrix4, this;
        }, i._ShaderWithCompile = function () {
          return qt.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, Zt.create);
        }, i._withWorldShaderDefines = function () {
          var t = vt.worldShaderDefines,
            e = qt.sharders[this.mainID | this.defines._value | t.getValue()];
          if (!e) {
            var i, n, r = {};
            i = this.defines.toNameDic();
            for (n in i) r[n] = "";
            i = t.toNameDic();
            for (n in i) r[n] = "";
            e = qt.withCompile2D(0, this.mainID, r, this.mainID | this.defines._value | t.getValue(), Zt.create);
          }
          var a = vt.worldFilters;
          if (!a) return e;
          for (var s, o = a.length, h = 0; h < o; h++)(s = a[h]) && s.action.setValue(this);
          return e;
        }, i.upload = function () {
          var t = vt;
          this.alpha = this.ALPHA * t.worldAlpha, vt.worldMatrix4 !== vt.TEMPMAT4_ARRAY && this.defines.add(128), xt.shaderHighPrecision && this.defines.add(1024);
          var e, i = t.worldShaderDefines ? this._withWorldShaderDefines() : qt.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile();
          this.size[0] = t.width, this.size[1] = t.height, this.mmat = t.worldMatrix4, Nt.activeShader !== i ? (i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width, i._shaderValueHeight = t.height) : e = i._params2dQuick2 || i._make2dQuick2(), i.upload(this, e)) : (i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width, i._shaderValueHeight = t.height) : e = i._params2dQuick1 || i._make2dQuick1(), i.upload(this, e));
        }, i.setFilters = function (t) {
          if (this.filters = t, t)
            for (var e, i = t.length, n = 0; n < i; n++)(e = t[n]) && (this.defines.add(e.type), e.action.setValue(this));
        }, i.clear = function () {
          this.defines.setValue(this.subID);
        }, i.release = function () {
          this._inClassCache[this._inClassCache._length++] = this, this.fillStyle = null, this.strokeStyle = null, this.clear();
        }, e._initone = function (t, i) {
          e._typeClass[t] = i, e._cache[t] = [], e._cache[t]._length = 0;
        }, e.__init__ = function () {
          e._POSITION = [2, 5126, !1, 4 * pt.BYTES_PE, 0], e._TEXCOORD = [2, 5126, !1, 4 * pt.BYTES_PE, 2 * pt.BYTES_PE], e._initone(2, Ut), e._initone(4, Ht), e._initone(256, kt), e._initone(512, Bt), e._initone(1, Gt), e._initone(65, Kt), e._initone(9, Gt);
        }, e.create = function (t, i) {
          var n = e._cache[t | i];
          return n._length ? n[--n._length] : new e._typeClass[t | i](i);
        }, e._POSITION = null, e._TEXCOORD = null, e._cache = [], e._typeClass = [], e.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], e;
      }(),
      bt = function (t) {
        function e(t, i) {
          e.__super.call(this, t, i);
        }
        r(e, "laya.webgl.utils.RenderSprite3D", E);
        var i = e.prototype;
        return i.onCreate = function (t) {
          switch (t) {
            case 8:
              return void(this._fun = this._blend);
            case 4:
              return void(this._fun = this._transform);
          }
        }, i._mask = function (t, i, n, r) {
          var a, s, o = this._next,
            h = t.mask;
          if (h) {
            i.ctx.save();
            var l = i.ctx.globalCompositeOperation,
              u = new S();
            if (u.copyFrom(h.getBounds()), u.width = Math.round(u.width), u.height = Math.round(u.height), u.x = Math.round(u.x), u.y = Math.round(u.y), u.width > 0 && u.height > 0) {
              var c = t._style._tf,
                _ = ot.create();
              _.addValue("bounds", u), a = st.create([_, i], laya.webgl.utils.RenderSprite3D.tmpTarget), i.addRenderObject(a), h.render(i, -u.x, -u.y), a = st.create([_], laya.webgl.utils.RenderSprite3D.endTmpTarget), i.addRenderObject(a), i.ctx.save(), i.clipRect(n - c.translateX + u.x, r - c.translateY + u.y, u.width, u.height), o._fun.call(o, t, i, n, r), i.ctx.restore(), s = ut.create(6), l = i.ctx.globalCompositeOperation, s.blendMode = "mask", i.addRenderObject(s), x.TEMP.identity();
              var d = Et.create(1, 0),
                f = O.INV_UV,
                p = u.width,
                m = u.height;
              (u.width < 32 || u.height < 32) && ((f = e.tempUV)[0] = 0, f[1] = 0, f[2] = u.width >= 32 ? 1 : u.width / 32, f[3] = 0, f[4] = u.width >= 32 ? 1 : u.width / 32, f[5] = u.height >= 32 ? 1 : u.height / 32, f[6] = 0, f[7] = u.height >= 32 ? 1 : u.height / 32, u.width = u.width >= 32 ? u.width : 32, u.height = u.height >= 32 ? u.height : 32, f[1] *= -1, f[3] *= -1, f[5] *= -1, f[7] *= -1, f[1] += 1, f[3] += 1, f[5] += 1, f[7] += 1), i.ctx.drawTarget(_, n + u.x - c.translateX, r + u.y - c.translateY, p, m, x.TEMP, "tmpTarget", d, f, 6), a = st.create([_], laya.webgl.utils.RenderSprite3D.recycleTarget), i.addRenderObject(a), (s = ut.create(6)).blendMode = l, i.addRenderObject(s);
            }
            i.ctx.restore();
          } else o._fun.call(o, t, i, n, r);
        }, i._blend = function (t, e, i, n) {
          var r = t._style,
            a = this._next;
          r.blendMode ? (e.ctx.save(), e.ctx.globalCompositeOperation = r.blendMode, a._fun.call(a, t, e, i, n), e.ctx.restore()) : a._fun.call(a, t, e, i, n);
        }, i._transform = function (t, e, i, n) {
          var r = t.transform,
            a = this._next;
          if (r && a != E.NORENDER) {
            var s = e.ctx;
            t._style;
            r.tx = i, r.ty = n;
            var o = s._getTransformMatrix(),
              h = o.clone();
            x.mul(r, o, o), o._checkTransform(), r.tx = r.ty = 0, a._fun.call(a, t, e, 0, 0), h.copyTo(o), h.destroy();
          } else a._fun.call(a, t, e, i, n);
        }, e.tmpTarget = function (t, e) {
          var i = t.getValue("bounds"),
            n = Vt.create(i.width, i.height);
          n.start(), n.clear(0, 0, 0, 0), t.addValue("tmpTarget", n);
        }, e.endTmpTarget = function (t) {
          t.getValue("tmpTarget").end();
        }, e.recycleTarget = function (t) {
          t.getValue("tmpTarget").recycle(), t.recycle();
        }, n(e, ["tempUV", function () {
          return this.tempUV = new Array(8);
        }]), e;
      }(),
      Ct = function (t) {
        function e() {
          this.data = null, e.__super.call(this);
        }
        r(e, "laya.filters.webgl.ColorFilterActionGL", F);
        var n = e.prototype;
        return i.imps(n, {
          "laya.filters.IFilterActionGL": !0
        }), n.setValue = function (t) {
          t.colorMat = this.data._mat, t.colorAlpha = this.data._alpha;
        }, n.apply3d = function (t, e, i, n, r) {
          var a = t.getValue("bounds"),
            s = Et.create(1, 0);
          s.setFilters([this.data]);
          var o = x.TEMP;
          o.identity(), i.ctx.drawTarget(t, 0, 0, a.width, a.height, o, "src", s);
        }, e;
      }(),
      Mt = function (t) {
        function e(t, i, n, r, a) {
          this._atlasCanvas = null, this._inAtlasTextureKey = null, this._inAtlasTextureBitmapValue = null, this._inAtlasTextureOriUVValue = null, this._InAtlasWebGLImagesKey = null, this._InAtlasWebGLImagesOffsetValue = null, e.__super.call(this, t, i, a), this._inAtlasTextureKey = [], this._inAtlasTextureBitmapValue = [], this._inAtlasTextureOriUVValue = [], this._InAtlasWebGLImagesKey = {}, this._InAtlasWebGLImagesOffsetValue = [], this._atlasCanvas = new zt(), this._atlasCanvas._atlaser = this, this._atlasCanvas.width = n, this._atlasCanvas.height = r, this._atlasCanvas.activeResource(), this._atlasCanvas.lock = !0;
        }
        r(e, "laya.webgl.atlas.Atlaser", U);
        var i = e.prototype;
        return i.computeUVinAtlasTexture = function (t, e, i, n) {
          var r = k.atlasTextureWidth,
            a = k.atlasTextureHeight,
            s = i / r,
            o = n / a,
            h = (i + t.bitmap.width) / r,
            l = (n + t.bitmap.height) / a,
            u = t.bitmap.width / r,
            c = t.bitmap.height / a;
          t.uv = [s + e[0] * u, o + e[1] * c, h - (1 - e[2]) * u, o + e[3] * c, h - (1 - e[4]) * u, l - (1 - e[5]) * c, s + e[6] * u, l - (1 - e[7]) * c];
        }, i.findBitmapIsExist = function (t) {
          if (t instanceof laya.webgl.resource.WebGLImage) {
            var e = t,
              i = e.url,
              n = this._InAtlasWebGLImagesKey[i || e.id];
            if (n) return n.offsetInfoID;
          }
          return -1;
        }, i.addToAtlasTexture = function (t, e, i) {
          if (t instanceof laya.webgl.resource.WebGLImage) {
            var n = t,
              r = n.url;
            this._InAtlasWebGLImagesKey[r || n.id] = {
              bitmap: t,
              offsetInfoID: this._InAtlasWebGLImagesOffsetValue.length
            }, this._InAtlasWebGLImagesOffsetValue.push([e, i]);
          }
          this._atlasCanvas.texSubImage2D(e, i, t.atlasSource), t.clearAtlasSource();
        }, i.addToAtlas = function (t, e, i) {
          t._atlasID = this._inAtlasTextureKey.length;
          var n = t.uv.slice(),
            r = t.bitmap;
          this._inAtlasTextureKey.push(t), this._inAtlasTextureOriUVValue.push(n), this._inAtlasTextureBitmapValue.push(r), this.computeUVinAtlasTexture(t, n, e, i), t.bitmap = this._atlasCanvas;
        }, i.clear = function () {
          for (var t = 0, e = this._inAtlasTextureKey.length; t < e; t++) this._inAtlasTextureKey[t].bitmap = this._inAtlasTextureBitmapValue[t], this._inAtlasTextureKey[t].uv = this._inAtlasTextureOriUVValue[t], this._inAtlasTextureKey[t]._atlasID = -1, this._inAtlasTextureKey[t].bitmap.lock = !1, this._inAtlasTextureKey[t].bitmap.releaseResource();
          this._inAtlasTextureKey.length = 0, this._inAtlasTextureBitmapValue.length = 0, this._inAtlasTextureOriUVValue.length = 0, this._InAtlasWebGLImagesKey = null, this._InAtlasWebGLImagesOffsetValue.length = 0;
        }, i.dispose = function () {
          this.clear(), this._atlasCanvas.destroy();
        }, a(0, i, "InAtlasWebGLImagesOffsetValue", function () {
          return this._InAtlasWebGLImagesOffsetValue;
        }), a(0, i, "texture", function () {
          return this._atlasCanvas;
        }), a(0, i, "inAtlasWebGLImagesKey", function () {
          return this._InAtlasWebGLImagesKey;
        }), e;
      }(),
      It = function (t) {
        function e() {
          e.__super.call(this, e.__name2int, e.__int2name, e.__int2nameMap);
        }
        return r(e, "laya.webgl.shader.d2.ShaderDefines2D", J), e.__init__ = function () {
          e.reg("TEXTURE2D", 1), e.reg("COLOR2D", 2), e.reg("PRIMITIVE", 4), e.reg("GLOW_FILTER", 8), e.reg("BLUR_FILTER", 16), e.reg("COLOR_FILTER", 32), e.reg("COLOR_ADD", 64), e.reg("WORLDMAT", 128), e.reg("FILLTEXTURE", 256), e.reg("FSHIGHPRECISION", 1024);
        }, e.reg = function (t, i) {
          J._reg(t, i, e.__name2int, e.__int2name);
        }, e.toText = function (t, e, i) {
          return J._toText(t, e, i);
        }, e.toInt = function (t) {
          return J._toInt(t, e.__name2int);
        }, e.TEXTURE2D = 1, e.COLOR2D = 2, e.PRIMITIVE = 4, e.FILTERGLOW = 8, e.FILTERBLUR = 16, e.FILTERCOLOR = 32, e.COLORADD = 64, e.WORLDMAT = 128, e.FILLTEXTURE = 256, e.SKINMESH = 512, e.SHADERDEFINE_FSHIGHPRECISION = 1024, e.__name2int = {}, e.__int2name = [], e.__int2nameMap = [], e;
      }(),
      Dt = (function (t) {
        function e(t, i, n, r, a, s, o) {
          e.__super.call(this, t, i, n, r, 40, a, s, o);
        }
        r(e, "laya.webgl.shapes.Ellipse", it);
      }(), function (t) {
        function e(t, i, n, r, a) {
          this._points = [], this.rebuild(n), e.__super.call(this, t, i, 0, 0, 0, a, r, a, 0);
        }
        r(e, "laya.webgl.shapes.Line", it);
        var i = e.prototype;
        return i.rebuild = function (t) {
          var e = t.length;
          e != this._points.length && (this.mUint16Array = new Uint16Array(6 * (e / 2 - 1)), this.mFloat32Array = new Float32Array(5 * e)), this._points.length = 0;
          for (var i = NaN, n = NaN, r = -1, a = -1, s = t.length / 2, o = 0; o < s; o++) i = t[2 * o], n = t[2 * o + 1], (Math.abs(r - i) > .01 || Math.abs(a - n) > .01) && this._points.push(i, n), r = i, a = n;
        }, i.getData = function (t, e, i) {
          var n = [],
            r = [];
          this.borderWidth > 0 && this.createLine2(this._points, n, this.borderWidth, i, r, this._points.length / 2), this.mUint16Array.set(n, 0), this.mFloat32Array.set(r, 0), t.append(this.mUint16Array), e.append(this.mFloat32Array);
        }, e;
      }()),
      At = function (t) {
        function e(t, i, n, r, a) {
          this._points = [];
          for (var s = NaN, o = NaN, h = -1, l = -1, u = n.length / 2 - 1, c = 0; c < u; c++) s = n[2 * c], o = n[2 * c + 1], (Math.abs(h - s) > .01 || Math.abs(l - o) > .01) && this._points.push(s, o), h = s, l = o;
          s = n[2 * u], o = n[2 * u + 1], h = this._points[0], l = this._points[1], (Math.abs(h - s) > .01 || Math.abs(l - o) > .01) && this._points.push(s, o), e.__super.call(this, t, i, 0, 0, this._points.length / 2, 0, r, a);
        }
        r(e, "laya.webgl.shapes.LoopLine", it);
        var i = e.prototype;
        return i.getData = function (t, e, i) {
          if (this.borderWidth > 0) {
            for (var n = this.color, r = (n >> 16 & 255) / 255, a = (n >> 8 & 255) / 255, s = (255 & n) / 255, o = [], h = 0, l = 0, u = [], c = Math.floor(this._points.length / 2), _ = 0; _ < c; _++) h = this._points[2 * _], l = this._points[2 * _ + 1], o.push(this.x + h, this.y + l, r, a, s);
            this.createLoopLine(o, u, this.borderWidth, i + o.length / 5), t.append(new Uint16Array(u)), e.append(new Float32Array(o));
          }
        }, i.createLoopLine = function (t, e, i, n, r, a) {
          t.length;
          var s = t.concat(),
            o = r || t,
            h = this.borderColor,
            l = (h >> 16 & 255) / 255,
            u = (h >> 8 & 255) / 255,
            c = (255 & h) / 255,
            _ = [s[0], s[1]],
            d = [s[s.length - 5], s[s.length - 4]],
            f = d[0] + .5 * (_[0] - d[0]),
            p = d[1] + .5 * (_[1] - d[1]);
          s.unshift(f, p, 0, 0, 0), s.push(f, p, 0, 0, 0);
          var m, g, v, y, x, T, S, w, E, b, C, M, I, D, A, R, P, L, O, N, V = s.length / 5,
            F = n,
            B = i / 2;
          v = s[0], y = s[1], b = v - (x = s[5]), E = (E = -(y - (T = s[6]))) / (N = Math.sqrt(E * E + b * b)) * B, b = b / N * B, o.push(v - E, y - b, l, u, c, v + E, y + b, l, u, c);
          for (var U = 1; U < V - 1; U++) v = s[5 * (U - 1)], y = s[5 * (U - 1) + 1], x = s[5 * U], T = s[5 * U + 1], S = s[5 * (U + 1)], w = s[5 * (U + 1) + 1], b = v - x, M = x - S, A = (-(E = (E = -(y - T)) / (N = Math.sqrt(E * E + b * b)) * B) + v) * (-(b = b / N * B) + T) - (-E + x) * (-b + y), L = (-(C = (C = -(T - w)) / (N = Math.sqrt(C * C + M * M)) * B) + S) * (-(M = M / N * B) + T) - (-C + x) * (-M + w), O = (I = -b + y - (-b + T)) * (P = -C + x - (-C + S)) - (R = -M + w - (-M + T)) * (D = -E + x - (-E + v)), Math.abs(O) < .1 ? (O += 10.1, o.push(x - E, T - b, l, u, c, x + E, T + b, l, u, c)) : (((m = (D * L - P * A) / O) - x) * (m - x) + ((g = (R * A - I * L) / O) - T) + (g - T), o.push(m, g, l, u, c, x - (m - x), T - (g - T), l, u, c));
          a && (e = a);
          var k = this.edges + 1;
          for (U = 1; U < k; U++) e.push(F + 2 * (U - 1), F + 2 * (U - 1) + 1, F + 2 * U + 1, F + 2 * U + 1, F + 2 * U, F + 2 * (U - 1));
          return e.push(F + 2 * (U - 1), F + 2 * (U - 1) + 1, F + 1, F + 1, F, F + 2 * (U - 1)), o;
        }, e;
      }(),
      Rt = function (t) {
        function e(t, i, n, r, a, s) {
          this._points = null, this._start = -1, this._repaint = !1, this.earcutTriangles = null, this._mat = x.create(), this._points = n.slice(0, n.length), e.__super.call(this, t, i, 0, 0, this._points.length / 2, r, a, s);
        }
        r(e, "laya.webgl.shapes.Polygon", it);
        var i = e.prototype;
        return i.rebuild = function (t) {
          this._repaint || (this._points.length = 0, this._points = this._points.concat(t));
        }, i.setMatrix = function (t) {
          t.copyTo(this._mat);
        }, i.needUpdate = function (t) {
          return this._repaint = this._mat.a == t.a && this._mat.b == t.b && this._mat.c == t.c && this._mat.d == t.d && this._mat.tx == t.tx && this._mat.ty == t.ty, !this._repaint;
        }, i.getData = function (t, e, i) {
          var n, r = 0,
            a = this._points,
            s = 0;
          if (this.mUint16Array && this.mFloat32Array && this._repaint) {
            if (this._start != i) {
              for (this._start = i, n = [], s = this.earcutTriangles.length, r = 0; r < s; r++) n.push(this.earcutTriangles[r] + i);
              this.mUint16Array = new Uint16Array(n);
            }
          } else {
            this._start = i, n = [];
            var o = [],
              h = [],
              l = this.color,
              u = (l >> 16 & 255) / 255,
              c = (l >> 8 & 255) / 255,
              _ = (255 & l) / 255;
            for (s = Math.floor(a.length / 2), r = 0; r < s; r++) o.push(this.x + a[2 * r], this.y + a[2 * r + 1], u, c, _), h.push(this.x + a[2 * r], this.y + a[2 * r + 1]);
            for (this.earcutTriangles = nt.earcut(h, null, 2), s = this.earcutTriangles.length, r = 0; r < s; r++) n.push(this.earcutTriangles[r] + i);
            this.mUint16Array = new Uint16Array(n), this.mFloat32Array = new Float32Array(o);
          }
          t.append(this.mUint16Array), e.append(this.mFloat32Array);
        }, e;
      }(),
      Pt = function (t) {
        function e() {
          this._matrix = new x(), this._matrix4 = pt.defaultMatrix4.concat(), e.__super.call(this, 1e4), this.shaderValue = new Et(0, 0);
        }
        r(e, "laya.webgl.submit.SubmitCanvas", at);
        var i = e.prototype;
        return i.renderSubmit = function () {
          if (this._ctx_src._targets) return this._ctx_src._targets.flush(this._ctx_src), 1;
          var t = vt.worldAlpha,
            e = vt.worldMatrix4,
            i = vt.worldMatrix,
            n = vt.worldFilters,
            r = vt.worldShaderDefines,
            a = this.shaderValue,
            s = this._matrix,
            o = this._matrix4,
            h = x.TEMP;
          return x.mul(s, i, h), o[0] = h.a, o[1] = h.b, o[4] = h.c, o[5] = h.d, o[12] = h.tx, o[13] = h.ty, vt.worldMatrix = h.clone(), vt.worldMatrix4 = o, vt.worldAlpha = vt.worldAlpha * a.alpha, a.filters && a.filters.length && (vt.worldFilters = a.filters, vt.worldShaderDefines = a.defines), this._ctx_src.flush(), vt.worldAlpha = t, vt.worldMatrix4 = e, vt.worldMatrix.destroy(), vt.worldMatrix = i, vt.worldFilters = n, vt.worldShaderDefines = r, 1;
        }, i.releaseRender = function () {
          var t = e._cache;
          this._ctx_src = null, t[t._length++] = this;
        }, i.getRenderType = function () {
          return 10003;
        }, e.create = function (t, i, n) {
          var r = e._cache._length ? e._cache[--e._cache._length] : new e();
          r._ctx_src = t;
          var a = r.shaderValue;
          return a.alpha = i, a.defines.setValue(0), n && n.length && a.setFilters(n), r;
        }, e._cache = (e._cache = [], e._cache._length = 0, e._cache), e;
      }(),
      Lt = function (t) {
        function e(t) {
          this._preIsSameTextureShader = !1, this._isSameTexture = !0, this._texs = new Array(), this._texsID = new Array(), this._vbPos = new Array(), void 0 === t && (t = 1e4), e.__super.call(this, t);
        }
        r(e, "laya.webgl.submit.SubmitTexture", at);
        var i = e.prototype;
        return i.releaseRender = function () {
          var t = e._cache;
          t[t._length++] = this, this.shaderValue.release(), this._preIsSameTextureShader = !1, this._vb = null, this._texs.length = 0, this._vbPos.length = 0, this._isSameTexture = !0;
        }, i.addTexture = function (t, e) {
          this._texsID[this._texs.length] = t._uvID, this._texs.push(t), this._vbPos.push(e);
        }, i.checkTexture = function () {
          if (this._texs.length < 1) this._isSameTexture = !0;
          else {
            var t = this.shaderValue.textureHost.bitmap;
            if (null !== t)
              for (var e = this._vb.getFloat32Array(), i = 0, n = this._texs.length; i < n; i++) {
                var r = this._texs[i];
                r.active();
                var a = r.uv;
                if (this._texsID[i] !== r._uvID) {
                  this._texsID[i] = r._uvID;
                  var s = this._vbPos[i];
                  e[s + 2] = a[0], e[s + 3] = a[1], e[s + 6] = a[2], e[s + 7] = a[3], e[s + 10] = a[4], e[s + 11] = a[5], e[s + 14] = a[6], e[s + 15] = a[7], this._vb.setNeedUpload();
                }
                r.bitmap !== t && (this._isSameTexture = !1);
              }
          }
        }, i.renderSubmit = function () {
          if (0 === this._numEle) return e._shaderSet = !1, 1;
          var t = this.shaderValue.textureHost;
          if (t) {
            var i = t.source;
            if (!t.bitmap || !i) return e._shaderSet = !1, 1;
            this.shaderValue.texture = i;
          }
          this._vb.bind_upload(this._ib);
          var n = xt.mainContext;
          if (H.activeBlendFunction !== this._blendFn && (n.enable(3042), this._blendFn(n), H.activeBlendFunction = this._blendFn), A.drawCall++, A.trianglesFaces += this._numEle / 3, this._preIsSameTextureShader && Nt.activeShader && e._shaderSet ? Nt.activeShader.uploadTexture2D(this.shaderValue.texture) : this.shaderValue.upload(), e._shaderSet = !0, this._texs.length > 1 && !this._isSameTexture)
            for (var r = t.bitmap, a = 0, s = Nt.activeShader, o = 0, h = this._texs.length; o < h; o++) {
              var l = this._texs[o];
              l.bitmap === r && o + 1 !== h || (s.uploadTexture2D(l.source), n.drawElements(4, 6 * (o - a + 1), 5123, this._startIdx + 6 * a * pt.BYTES_PIDX), r = l.bitmap, a = o);
            } else n.drawElements(4, this._numEle, 5123, this._startIdx);
          return 1;
        }, e.create = function (t, i, n, r, a) {
          var s = e._cache._length ? e._cache[--e._cache._length] : new e();
          null == n && ((n = s._selfVb || (s._selfVb = Jt.create(-1))).clear(), r = 0), s._ib = i, s._vb = n, s._startIdx = r * pt.BYTES_PIDX, s._numEle = 0;
          var o = t._nBlendType;
          s._blendFn = t._targets ? H.targetFns[o] : H.fns[o], s.shaderValue = a, s.shaderValue.setValue(t._shader2D);
          var h = t._shader2D.filters;
          return h && s.shaderValue.setFilters(h), s;
        }, e._cache = (e._cache = [], e._cache._length = 0, e._cache), e._shaderSet = !0, e;
      }(),
      Ot = function (t) {
        function e() {
          e.__super.call(this, laya.webgl.utils.MeshTexture.const_stride, 0, 0), this.canReuse = !0, this.setAttributes(laya.webgl.utils.MeshTexture._fixattriInfo);
        }
        r(e, "laya.webgl.utils.MeshTexture", gt);
        var i = e.prototype;
        return i.addData = function (t, i, n, r, a, s) {
          for (var o = t.length / 2, h = this._vb.needSize(o * e.const_stride) >> 2, l = this._vb.getFloat32Array(), u = 0, c = 0; c < o; c++) {
            var _ = t[u],
              d = t[u + 1],
              f = _ * r.a + d * r.c + r.tx,
              p = _ * r.b + d * r.d + r.ty;
            l[h++] = f, l[h++] = p, l[h++] = i[u], l[h++] = i[u + 1], u += 2;
          }
          this._vb.setNeedUpload();
          var m = this.vertNum;
          if (m > 0) {
            (o = n.length) > e.tmpIdx.length && (e.tmpIdx = new Uint16Array(o));
            for (var g = 0; g < o; g++) e.tmpIdx[g] = n[g] + m;
            this._ib.appendU16Array(e.tmpIdx, n.length);
          } else this._ib.append(n);
          this._ib.setNeedUpload(), this.vertNum += o, this.indexNum += n.length;
        }, i.releaseMesh = function () {
          this._vb._byteLength = 0, this._ib._byteLength = 0, this.vertNum = 0, this.indexNum = 0, laya.webgl.utils.MeshTexture._POOL.push(this);
        }, i.destroy = function () {
          this._ib.destroy(), this._vb.destroy();
        }, e.getAMesh = function () {
          return laya.webgl.utils.MeshTexture._POOL.length ? laya.webgl.utils.MeshTexture._POOL.pop() : new e();
        }, e.const_stride = 16, e._POOL = [], n(e, ["_fixattriInfo", function () {
          return this._fixattriInfo = [5126, 2, 0, 5126, 2, 8];
        }, "tmpIdx", function () {
          return this.tmpIdx = new Uint16Array(4);
        }]), e;
      }(),
      Nt = function (t) {
        function e() {
          e.__super.call(this), this.lock = !0;
        }
        return r(e, "laya.webgl.shader.BaseShader", b), e.activeShader = null, e.bindShader = null, e;
      }(),
      Vt = function (t) {
        function e(t, i, n, r, a, s, o, h, l) {
          this._type = 0, this._svWidth = NaN, this._svHeight = NaN, this._preRenderTarget = null, this._alreadyResolved = !1, this._looked = !1, this._surfaceFormat = 0, this._surfaceType = 0, this._depthStencilFormat = 0, this._mipMap = !1, this._repeat = !1, this._minFifter = 0, this._magFifter = 0, this._destroy = !1, void 0 === n && (n = 6408), void 0 === r && (r = 5121), void 0 === a && (a = 34041), void 0 === s && (s = !1), void 0 === o && (o = !1), void 0 === h && (h = -1), void 0 === l && (l = -1), this._type = 1, this._w = t, this._h = i, this._surfaceFormat = n, this._surfaceType = r, this._depthStencilFormat = a, w.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189), this._mipMap = s, this._repeat = o, this._minFifter = h, this._magFifter = l, this._createWebGLRenderTarget(), this.bitmap.lock = !0, e.__super.call(this, this.bitmap, O.INV_UV);
        }
        r(e, "laya.webgl.resource.RenderTarget2D", t);
        var n = e.prototype;
        return i.imps(n, {
          "laya.resource.IDispose": !0
        }), n.getType = function () {
          return this._type;
        }, n.getTexture = function () {
          return this;
        }, n.size = function (t, e) {
          this._w == t && this._h == e || (this._w = t, this._h = e, this.release(), 0 != this._w && 0 != this._h && this._createWebGLRenderTarget());
        }, n.release = function () {
          this.destroy();
        }, n.recycle = function () {
          e.POOL.push(this);
        }, n.start = function () {
          var t = xt.mainContext;
          return this._preRenderTarget = vt.curRenderTarget, vt.curRenderTarget = this, t.bindFramebuffer(36160, this.bitmap.frameBuffer), this._alreadyResolved = !1, 1 == this._type && (t.viewport(0, 0, this._w, this._h), this._svWidth = vt.width, this._svHeight = vt.height, vt.width = this._w, vt.height = this._h, Nt.activeShader = null), this;
        }, n.clear = function (t, e, i, n) {
          void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 1);
          var r = xt.mainContext;
          r.clearColor(t, e, i, n);
          var a = 16384;
          switch (this._depthStencilFormat) {
            case 33189:
              a |= 256;
              break;
            case 36168:
              a |= 1024;
              break;
            case 34041:
              a |= 256, a |= 1024;
          }
          r.clear(a);
        }, n.end = function () {
          var t = xt.mainContext;
          t.bindFramebuffer(36160, this._preRenderTarget ? this._preRenderTarget.bitmap.frameBuffer : null), this._alreadyResolved = !0, vt.curRenderTarget = this._preRenderTarget, 1 == this._type ? (t.viewport(0, 0, this._svWidth, this._svHeight), vt.width = this._svWidth, vt.height = this._svHeight, Nt.activeShader = null) : t.viewport(0, 0, i.stage.width, i.stage.height);
        }, n.getData = function (t, e, i, n) {
          var r = xt.mainContext;
          r.bindFramebuffer(36160, this.bitmap.frameBuffer);
          if (!(36053 === r.checkFramebufferStatus(36160))) return r.bindFramebuffer(36160, null), null;
          var a = new Uint8Array(this._w * this._h * 4);
          return r.readPixels(t, e, i, n, this._surfaceFormat, this._surfaceType, a), r.bindFramebuffer(36160, null), a;
        }, n.destroy = function (e) {
          void 0 === e && (e = !1), this._destroy || (this._loaded = !1, this.bitmap.offAll(), this.bitmap.disposeResource(), this.bitmap.dispose(), this.offAll(), this.bitmap = null, this._alreadyResolved = !1, this._destroy = !0, t.prototype.destroy.call(this));
        }, n.dispose = function () {}, n._createWebGLRenderTarget = function () {
          this.bitmap = new Xt(this.width, this.height, this._surfaceFormat, this._surfaceType, this._depthStencilFormat, this._mipMap, this._repeat, this._minFifter, this._magFifter), this.bitmap.activeResource(), this._alreadyResolved = !0, this._destroy = !1, this._loaded = !0, this.bitmap.on("recovered", this, function (t) {
            this.event("recovered");
          });
        }, a(0, n, "surfaceFormat", function () {
          return this._surfaceFormat;
        }), a(0, n, "magFifter", function () {
          return this._magFifter;
        }), a(0, n, "surfaceType", function () {
          return this._surfaceType;
        }), a(0, n, "mipMap", function () {
          return this._mipMap;
        }), a(0, n, "depthStencilFormat", function () {
          return this._depthStencilFormat;
        }), a(0, n, "minFifter", function () {
          return this._minFifter;
        }), a(0, n, "source", function () {
          return this._alreadyResolved ? i.superGet(O, this, "source") : null;
        }), e.create = function (t, i, n, r, a, s, o, h, l) {
          void 0 === n && (n = 6408), void 0 === r && (r = 5121), void 0 === a && (a = 34041), void 0 === s && (s = !1), void 0 === o && (o = !1), void 0 === h && (h = -1), void 0 === l && (l = -1);
          var u = e.POOL.pop();
          return u || (u = new e(t, i)), u.bitmap && u._w == t && u._h == i && u._surfaceFormat == n && u._surfaceType == r && u._depthStencilFormat == a && u._mipMap == s && u._repeat == o && u._minFifter == h && u._magFifter == l || (u._w = t, u._h = i, u._surfaceFormat = n, u._surfaceType = r, u._depthStencilFormat = a, w.isConchWebGL && 34041 === u._depthStencilFormat && (u._depthStencilFormat = 33189), u._mipMap = s, u._repeat = o, u._minFifter = h, u._magFifter = l, u.release(), u._createWebGLRenderTarget()), u;
        }, e.TYPE2D = 1, e.TYPE3D = 2, e.POOL = [], e;
      }(O),
      Ft = function (t) {
        function e() {
          this._glBuffer = null, this._buffer = null, this._bufferType = 0, this._bufferUsage = 0, this._byteLength = 0, e.__super.call(this), e._gl = xt.mainContext;
        }
        r(e, "laya.webgl.utils.Buffer", b);
        var i = e.prototype;
        return i._bind = function () {
          this.activeResource(), e._bindActive[this._bufferType] !== this._glBuffer && (34962 === this._bufferType && (e._bindVertexBuffer = this._glBuffer), e._gl.bindBuffer(this._bufferType, e._bindActive[this._bufferType] = this._glBuffer), Nt.activeShader = null);
        }, i.recreateResource = function () {
          this._glBuffer || (this._glBuffer = e._gl.createBuffer()), this.completeCreate();
        }, i.disposeResource = function () {
          this._glBuffer && (xt.mainContext.deleteBuffer(this._glBuffer), this._glBuffer = null), this.memorySize = 0;
        }, a(0, i, "bufferUsage", function () {
          return this._bufferUsage;
        }), e._gl = null, e._bindActive = {}, e._bindVertexBuffer = null, e._enableAtributes = [], e;
      }(),
      Bt = function (t) {
        function e(t) {
          this.texcoord = null, this.offsetX = 300, this.offsetY = 0, e.__super.call(this, 512, 0);
          var i = 8 * pt.BYTES_PE;
          this.position = [2, 5126, !1, i, 0], this.texcoord = [2, 5126, !1, i, 2 * pt.BYTES_PE], this.color = [4, 5126, !1, i, 4 * pt.BYTES_PE];
        }
        return r(e, "laya.webgl.shader.d2.skinAnishader.SkinSV", Et), e;
      }(),
      Ut = function (t) {
        function e(t) {
          e.__super.call(this, 2, 0), this.color = [];
        }
        r(e, "laya.webgl.shader.d2.value.Color2dSV", Et);
        return e.prototype.setValue = function (t) {
          t.fillStyle && (this.color = t.fillStyle._color._color), t.strokeStyle && (this.color = t.strokeStyle._color._color);
        }, e;
      }(),
      kt = function (t) {
        function e(t) {
          this.u_colorMatrix = null, this.strength = 0, this.colorMat = null, this.colorAlpha = null, this.u_TexRange = [0, 1, 0, 1], this.u_offset = [0, 0], this.texcoord = Et._TEXCOORD, e.__super.call(this, 256, 0);
        }
        r(e, "laya.webgl.shader.d2.value.FillTextureSV", Et);
        var i = e.prototype;
        return i.setValue = function (t) {
          this.ALPHA = t.ALPHA, t.filters && this.setFilters(t.filters);
        }, i.clear = function () {
          this.texture = null, this.shader = null, this.defines.setValue(0);
        }, e;
      }(),
      Gt = function (t) {
        function e(t) {
          this.u_colorMatrix = null, this.strength = 0, this.blurInfo = null, this.colorMat = null, this.colorAlpha = null, this.texcoord = Et._TEXCOORD, void 0 === t && (t = 0), e.__super.call(this, 1, t);
        }
        r(e, "laya.webgl.shader.d2.value.TextureSV", Et);
        var i = e.prototype;
        return i.setValue = function (t) {
          this.ALPHA = t.ALPHA, t.filters && this.setFilters(t.filters);
        }, i.clear = function () {
          this.texture = null, this.shader = null, this.defines.setValue(0);
        }, e;
      }(),
      Ht = function (t) {
        function e(t) {
          this.a_color = null, this.u_pos = [0, 0], e.__super.call(this, 4, 0), this.position = [2, 5126, !1, 5 * pt.BYTES_PE, 0], this.a_color = [3, 5126, !1, 5 * pt.BYTES_PE, 2 * pt.BYTES_PE];
        }
        return r(e, "laya.webgl.shader.d2.value.PrimitiveSV", Et), e;
      }(),
      zt = function (t) {
        function e() {
          this._atlaser = null, this._flashCacheImage = null, this._flashCacheImageNeedFlush = !1, e.__super.call(this);
        }
        r(e, "laya.webgl.atlas.AtlasWebGLCanvas", t);
        var i = e.prototype;
        return i.recreateResource = function () {
          var t = xt.mainContext,
            e = this._source = t.createTexture(),
            i = Tt.curBindTexTarget,
            n = Tt.curBindTexValue;
          Tt.bindTexture(t, 3553, e), t.texImage2D(3553, 0, 6408, this._w, this._h, 0, 6408, 5121, null), t.texParameteri(3553, 10241, 9729), t.texParameteri(3553, 10240, 9729), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071), i && n && Tt.bindTexture(t, i, n), this.memorySize = this._w * this._h * 4, this.completeCreate();
        }, i.disposeResource = function () {
          this._source && (xt.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0);
        }, i.texSubImage2D = function (t, e, i) {
          if (w.isFlash) {
            this._flashCacheImage || (this._flashCacheImage = v.create(""), this._flashCacheImage._image.createCanvas(this._w, this._h));
            var n = i.bitmapdata;
            this._flashCacheImage._image.copyPixels(n, 0, 0, n.width, n.height, t, e), this._flashCacheImageNeedFlush || (this._flashCacheImageNeedFlush = !0);
          } else {
            var r = xt.mainContext,
              a = Tt.curBindTexTarget,
              s = Tt.curBindTexValue;
            Tt.bindTexture(r, 3553, this._source), w.isConchWebGL ? (i !== ConchTextCanvas && (t - 1 >= 0 && r.texSubImage2DEx(!0, 3553, 0, t - 1, e, 6408, 5121, i), t + 1 <= this._w && r.texSubImage2DEx(!0, 3553, 0, t + 1, e, 6408, 5121, i), e - 1 >= 0 && r.texSubImage2DEx(!0, 3553, 0, t, e - 1, 6408, 5121, i), e + 1 <= this._h && r.texSubImage2DEx(!0, 3553, 0, t, e + 1, 6408, 5121, i)), r.texSubImage2DEx(!0, 3553, 0, t, e, 6408, 5121, i)) : (r.pixelStorei(37441, !0), t - 1 >= 0 && r.texSubImage2D(3553, 0, t - 1, e, 6408, 5121, i), t + 1 <= this._w && r.texSubImage2D(3553, 0, t + 1, e, 6408, 5121, i), e - 1 >= 0 && r.texSubImage2D(3553, 0, t, e - 1, 6408, 5121, i), e + 1 <= this._h && r.texSubImage2D(3553, 0, t, e + 1, 6408, 5121, i), r.texSubImage2D(3553, 0, t, e, 6408, 5121, i), r.pixelStorei(37441, !1)), a && s && Tt.bindTexture(r, a, s);
          }
        }, i.texSubImage2DPixel = function (t, e, i, n, r) {
          var a = xt.mainContext,
            s = Tt.curBindTexTarget,
            o = Tt.curBindTexValue;
          Tt.bindTexture(a, 3553, this._source);
          var h = new Uint8Array(r.data);
          w.isConchWebGL ? a.texSubImage2DEx(!0, 3553, 0, t, e, i, n, 6408, 5121, h) : (a.pixelStorei(37441, !0), a.texSubImage2D(3553, 0, t, e, i, n, 6408, 5121, h), a.pixelStorei(37441, !1)), s && o && Tt.bindTexture(a, s, o);
        }, a(0, i, "width", t.prototype._$get_width, function (t) {
          this._w = t;
        }), a(0, i, "height", t.prototype._$get_height, function (t) {
          this._h = t;
        }), e;
      }(l),
      Wt = function (t) {
        function e() {
          this.flipY = !0, this.alwaysChange = !1, e.__super.call(this);
        }
        r(e, "laya.webgl.resource.WebGLCanvas", l);
        var i = e.prototype;
        return i.getCanvas = function () {
          return this._canvas;
        }, i.clear = function () {
          this._ctx && this._ctx.clear();
        }, i.destroy = function () {
          this._ctx && this._ctx.destroy(), this._ctx = null, laya.resource.Resource.prototype.destroy.call(this);
        }, i._setContext = function (t) {
          this._ctx = t;
        }, i.getContext = function (t, i) {
          return this._ctx ? this._ctx : this._ctx = e._createContext(this);
        }, i.size = function (t, e) {
          this._w == t && this._h == e || (this._w = t, this._h = e, this._ctx && this._ctx.size(t, e), this._canvas && (this._canvas.height = e, this._canvas.width = t));
        }, i.activeResource = function (t) {
          void 0 === t && (t = !1), this._source || this.recreateResource();
        }, i.recreateResource = function () {
          this.createWebGlTexture(), this.completeCreate();
        }, i.disposeResource = function () {
          this._source && !this.iscpuSource && (xt.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0);
        }, i.createWebGlTexture = function () {
          var t = xt.mainContext;
          this._canvas;
          var i = this._source = t.createTexture();
          this.iscpuSource = !1;
          var n = Tt.curBindTexTarget,
            r = Tt.curBindTexValue;
          Tt.bindTexture(t, 3553, i), t.pixelStorei(37440, this.flipY ? 1 : 0), w.isConchWebGL ? t.texImage2DEx(e.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (e.premulAlpha && t.pixelStorei(37441, !0), t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData), e.premulAlpha && t.pixelStorei(37441, !1)), t.texParameteri(3553, 10240, 9729), t.texParameteri(3553, 10241, 9729), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071), t.pixelStorei(37440, 0), this.memorySize = this._w * this._h * 4, n && r && Tt.bindTexture(t, n, r);
        }, i.reloadCanvasData = function () {
          var t = xt.mainContext;
          if (!this._source) throw "reloadCanvasData error, gl texture not created!";
          var i = Tt.curBindTexTarget,
            n = Tt.curBindTexValue;
          Tt.bindTexture(t, 3553, this._source), w.isConchWebGL ? t.texImage2DEx(e.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (e.premulAlpha && t.pixelStorei(37441, !0), t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData), e.premulAlpha && t.pixelStorei(37441, !1)), t.pixelStorei(37440, 0), i && n && Tt.bindTexture(t, i, n);
        }, i.texSubImage2D = function (t, e, i) {
          var n = xt.mainContext,
            r = Tt.curBindTexTarget,
            a = Tt.curBindTexValue;
          Tt.bindTexture(n, 3553, this._source), w.isConchWebGL ? n.texSubImage2DEx(!0, 3553, 0, e, i, 6408, 5121, t._source) : (n.pixelStorei(37441, !0), n.texSubImage2D(3553, 0, e, i, 6408, 5121, t._source), n.pixelStorei(37441, !1)), r && a && Tt.bindTexture(n, r, a);
        }, i.toBase64 = function (t, e, i) {
          var n = null;
          this._canvas && (n = this._canvas.toDataURL(t, e)), i.call(this, n);
        }, a(0, i, "context", function () {
          return this._ctx;
        }), a(0, i, "source", function () {
          return this.alwaysChange && this.reloadCanvasData(), this._source;
        }), a(0, i, "asBitmap", null, function (t) {
          this._ctx && (this._ctx.asBitmap = t);
        }), e._createContext = null, e.premulAlpha = !1, e;
      }(),
      jt = function (t) {
        function e(t, i) {
          this.CborderSize = 12, e.__super.call(this), this.char = t, this.isSpace = " " === t, this.xs = i.scaleX, this.ys = i.scaleY, this.font = i.font.toString(), this.fontSize = i.font.size, this.fillColor = i.fillColor, this.borderColor = i.borderColor, this.lineWidth = i.lineWidth, this.underLine = i.underLine;
          var n, r = w.isConchApp;
          r ? ((n = ConchTextCanvas)._source = ConchTextCanvas, n._source.canvas = ConchTextCanvas) : n = u.canvas.source, this.canvas = n, this._enableMerageInAtlas = !0, this._ctx = r ? n : this.canvas.getContext("2d", void 0);
          var a = N.measureText(this.char, this.font);
          this.cw = a.width * this.xs, this.ch = (a.height || this.fontSize) * this.ys, this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize), this.texture = new O(this);
        }
        r(e, "laya.webgl.resource.WebGLCharImage", l);
        var n = e.prototype;
        return i.imps(n, {
          "laya.webgl.resource.IMergeAtlasBitmap": !0
        }), n.active = function () {
          this.texture.active();
        }, n.recreateResource = function () {
          var t = w.isConchApp;
          if (this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize), this.canvas && (this.canvas.height = this._h, this.canvas.width = this._w), t) {
            var i = this.fontSize;
            1 == this.xs && 1 == this.ys || (i = parseInt(i * (this.xs > this.ys ? this.xs : this.ys) + ""));
            var n = "normal 100 " + this.font;
            n = n.replace(e._fontSizeReg, i), this.borderColor && (n += " 1 " + this.borderColor), this._ctx.font = n, this._ctx.textBaseline = "top", this._ctx.fillStyle = this.fillColor, this._ctx.fillText(this.char, this.CborderSize, this.CborderSize, null, null, null);
          } else {
            if (this._ctx.save(), this._ctx.lineJoin = "round", this._ctx.clearRect(0, 0, this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize), this._ctx.font = this.font, L.RightToLeft && (this._ctx.textAlign = "end"), this._ctx.textBaseline = "top", this._ctx.translate(this.CborderSize, this.CborderSize), 1 == this.xs && 1 == this.ys || this._ctx.scale(this.xs, this.ys), this.fillColor && this.borderColor ? (this._ctx.strokeStyle = this.borderColor, this._ctx.lineWidth = this.lineWidth, this._ctx.strokeText(this.char, 0, 0, null, null, 0, null), this._ctx.fillStyle = this.fillColor, this._ctx.fillText(this.char, 0, 0, null, null, null)) : -1 === this.lineWidth ? (this._ctx.fillStyle = this.fillColor ? this.fillColor : "white", this._ctx.fillText(this.char, 0, 0, null, null, null)) : (this._ctx.strokeStyle = this.borderColor ? this.borderColor : "white", this._ctx.lineWidth = this.lineWidth, this._ctx.strokeText(this.char, 0, 0, null, null, 0, null)), this.underLine) {
              this._ctx.lineWidth = 1, this._ctx.strokeStyle = this.fillColor, this._ctx.beginPath(), this._ctx.moveTo(0, this.fontSize + 1);
              var r = this._ctx.measureText(this.char).width + 1;
              this._ctx.lineTo(r, this.fontSize + 1), this._ctx.stroke();
            }
            this._ctx.restore();
          }
          this.borderSize = this.CborderSize, this.completeCreate();
        }, n.onresize = function (t, e) {
          this._w = t, this._h = e, this._allowMerageInAtlas = !0;
        }, n.clearAtlasSource = function () {}, a(0, n, "allowMerageInAtlas", function () {
          return this._allowMerageInAtlas;
        }), a(0, n, "atlasSource", function () {
          return this.canvas;
        }), a(0, n, "enableMerageInAtlas", function () {
          return this._enableMerageInAtlas;
        }, function (t) {
          this._enableMerageInAtlas = t;
        }), e.createOneChar = function (t, i) {
          return new e(t, i);
        }, e._fontSizeReg = new RegExp("\\d+(?=px)", "g"), e;
      }(),
      Xt = function (t) {
        function e(t, i, n, r, a, s, o, h, l) {
          void 0 === n && (n = 6408), void 0 === r && (r = 5121), void 0 === a && (a = 34041), void 0 === s && (s = !1), void 0 === o && (o = !1), void 0 === h && (h = -1), void 0 === l && (l = 1), e.__super.call(this), this._w = t, this._h = i, this._surfaceFormat = n, this._surfaceType = r, this._depthStencilFormat = a, w.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189), this._mipMap = s, this._repeat = o, this._minFifter = h, this._magFifter = l;
        }
        r(e, "laya.webgl.resource.WebGLRenderTarget", l);
        var i = e.prototype;
        return i.recreateResource = function () {
          var t = xt.mainContext;
          this._frameBuffer || (this._frameBuffer = t.createFramebuffer()), this._source || (this._source = t.createTexture());
          var e = Tt.curBindTexTarget,
            i = Tt.curBindTexValue;
          Tt.bindTexture(t, 3553, this._source), t.texImage2D(3553, 0, 6408, this._w, this._h, 0, this._surfaceFormat, this._surfaceType, null);
          var n = this._minFifter,
            r = this._magFifter,
            a = this._repeat ? 10497 : 33071,
            s = o.isPOT(this._w, this._h);
          if (s ? (this._mipMap ? -1 !== n || (n = 9987) : -1 !== n || (n = 9729), -1 !== r || (r = 9729), t.texParameteri(3553, 10241, n), t.texParameteri(3553, 10240, r), t.texParameteri(3553, 10242, a), t.texParameteri(3553, 10243, a), this._mipMap && t.generateMipmap(3553)) : (-1 !== n || (n = 9729), -1 !== r || (r = 9729), t.texParameteri(3553, 10241, n), t.texParameteri(3553, 10240, r), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), t.bindFramebuffer(36160, this._frameBuffer), t.framebufferTexture2D(36160, 36064, 3553, this._source, 0), this._depthStencilFormat) switch (this._depthStencilBuffer || (this._depthStencilBuffer = t.createRenderbuffer()), t.bindRenderbuffer(36161, this._depthStencilBuffer), t.renderbufferStorage(36161, this._depthStencilFormat, this._w, this._h), this._depthStencilFormat) {
            case 33189:
              t.framebufferRenderbuffer(36160, 36096, 36161, this._depthStencilBuffer);
              break;
            case 36168:
              t.framebufferRenderbuffer(36160, 36128, 36161, this._depthStencilBuffer);
              break;
            case 34041:
              t.framebufferRenderbuffer(36160, 33306, 36161, this._depthStencilBuffer);
          }
          t.bindFramebuffer(36160, null), e && i && Tt.bindTexture(t, e, i), t.bindRenderbuffer(36161, null), s && this._mipMap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4, this.completeCreate();
        }, i.disposeResource = function () {
          this._frameBuffer && (xt.mainContext.deleteTexture(this._source), xt.mainContext.deleteFramebuffer(this._frameBuffer), xt.mainContext.deleteRenderbuffer(this._depthStencilBuffer), this._source = null, this._frameBuffer = null, this._depthStencilBuffer = null, this.memorySize = 0);
        }, a(0, i, "depthStencilBuffer", function () {
          return this._depthStencilBuffer;
        }), a(0, i, "frameBuffer", function () {
          return this._frameBuffer;
        }), e;
      }(),
      Yt = function (t) {
        function e(t, i, n, r, a, s, o) {
          this.offsetX = 0, this.offsetY = 0, e.__super.call(this), this.repeat = !0, this.mipmap = !1, this.minFifter = -1, this.magFifter = -1, this.atlasImage = s, this.canvas = t, this._ctx = t.getContext("2d", void 0), this._w = r, this._h = a, this.offsetX = i, this.offsetY = n, this.src = o, this._enableMerageInAtlas = !0, k.enabled && this._w < k.atlasLimitWidth && this._h < k.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
        }
        r(e, "laya.webgl.resource.WebGLSubImage", l);
        var n = e.prototype;
        return i.imps(n, {
          "laya.webgl.resource.IMergeAtlasBitmap": !0
        }), n.size = function (t, e) {
          this._w = t, this._h = e, this._ctx && this._ctx.size(t, e), this.canvas && (this.canvas.height = e, this.canvas.width = t);
        }, n.recreateResource = function () {
          this.size(this._w, this._h), this._ctx.drawImage(this.atlasImage, this.offsetX, this.offsetY, this._w, this._h, 0, 0, this._w, this._h), this._allowMerageInAtlas && this._enableMerageInAtlas ? this.memorySize = 0 : this.createWebGlTexture(), this.completeCreate();
        }, n.createWebGlTexture = function () {
          var t = xt.mainContext;
          if (!this.canvas) throw "create GLTextur err:no data:" + this.canvas;
          var e = this._source = t.createTexture(),
            i = Tt.curBindTexTarget,
            n = Tt.curBindTexValue;
          Tt.bindTexture(t, 3553, e), w.isConchWebGL ? t.texImage2DEx(!0, 3553, 0, 6408, 6408, 5121, this.canvas) : (t.pixelStorei(37441, !0), t.texImage2D(3553, 0, 6408, 6408, 5121, this.canvas), t.pixelStorei(37441, !1));
          var r = this.minFifter,
            a = this.magFifter,
            s = this.repeat ? 10497 : 33071,
            h = o.isPOT(this.width, this.height);
          h ? (this.mipmap ? -1 !== r || (r = 9987) : -1 !== r || (r = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10241, r), t.texParameteri(3553, 10242, s), t.texParameteri(3553, 10243, s), this.mipmap && t.generateMipmap(3553)) : (-1 !== r || (r = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10241, r), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), i && n && Tt.bindTexture(t, i, n), this.canvas = null, h && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4;
        }, n.disposeResource = function () {
          k.enabled && this._allowMerageInAtlas || !this._source || (xt.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0);
        }, n.clearAtlasSource = function () {}, a(0, n, "allowMerageInAtlas", function () {
          return this._allowMerageInAtlas;
        }), a(0, n, "atlasSource", function () {
          return this.canvas;
        }), a(0, n, "enableMerageInAtlas", function () {
          return this._allowMerageInAtlas;
        }, function (t) {
          this._allowMerageInAtlas = t;
        }), e;
      }(),
      qt = function (t) {
        function e(t, i, n, r) {
          if (this._curActTexIndex = 0, this.tag = {}, this._program = null, this._params = null, this._paramsMap = {}, this._offset = 0, e.__super.call(this), !t || !i) throw "Shader Error";
          this._id = ++e._count, this._vs = t, this._ps = i, this._nameMap = r || {}, null != n && (e.sharders[n] = this);
        }
        r(e, "laya.webgl.shader.Shader", Nt);
        var i = e.prototype;
        return i.recreateResource = function () {
          this._compile(), this.completeCreate(), this.memorySize = 0;
        }, i.disposeResource = function () {
          xt.mainContext.deleteShader(this._vshader), xt.mainContext.deleteShader(this._pshader), xt.mainContext.deleteProgram(this._program), this._vshader = this._pshader = this._program = null, this._params = null, this._paramsMap = {}, this.memorySize = 0, this._curActTexIndex = 0;
        }, i._compile = function () {
          if (this._vs && this._ps && !this._params) {
            this._reCompile = !0, this._params = [];
            var t = [this._vs, this._ps],
              i = xt.mainContext;
            if (this._program = i.createProgram(), this._vshader = e._createShader(i, t[0], 35633), this._pshader = e._createShader(i, t[1], 35632), i.attachShader(this._program, this._vshader), i.attachShader(this._program, this._pshader), i.linkProgram(this._program), !w.isConchApp && !i.getProgramParameter(this._program, 35714)) throw i.getProgramInfoLog(this._program);
            var n, r = 0,
              a = 0,
              s = 0;
            for (s = w.isConchApp ? i.getProgramParameterEx(this._vs, this._ps, "", 35721) : i.getProgramParameter(this._program, 35721), r = 0; r < s; r++) {
              var o = null;
              n = {
                vartype: "attribute",
                glfun: null,
                ivartype: 0,
                attrib: o = w.isConchApp ? i.getActiveAttribEx(this._vs, this._ps, "", r) : i.getActiveAttrib(this._program, r),
                location: i.getAttribLocation(this._program, o.name),
                name: o.name,
                type: o.type,
                isArray: !1,
                isSame: !1,
                preValue: null,
                indexOfParams: 0
              }, this._params.push(n);
            }
            var h = 0;
            for (h = w.isConchApp ? i.getProgramParameterEx(this._vs, this._ps, "", 35718) : i.getProgramParameter(this._program, 35718), r = 0; r < h; r++) {
              var l = null;
              l = w.isConchApp ? i.getActiveUniformEx(this._vs, this._ps, "", r) : i.getActiveUniform(this._program, r), (n = {
                vartype: "uniform",
                glfun: null,
                ivartype: 1,
                attrib: o,
                location: i.getUniformLocation(this._program, l.name),
                name: l.name,
                type: l.type,
                isArray: !1,
                isSame: !1,
                preValue: null,
                indexOfParams: 0
              }).name.indexOf("[0]") > 0 && (n.name = n.name.substr(0, n.name.length - 3), n.isArray = !0, n.location = i.getUniformLocation(this._program, n.name)), this._params.push(n);
            }
            for (r = 0, a = this._params.length; r < a; r++)
              if (n = this._params[r], n.indexOfParams = r, n.index = 1, n.value = [n.location, null], n.codename = n.name, n.name = this._nameMap[n.codename] ? this._nameMap[n.codename] : n.codename, this._paramsMap[n.name] = n, n._this = this, n.uploadedValue = [], "attribute" !== n.vartype) switch (n.type) {
                case 5124:
                  n.fun = n.isArray ? this._uniform1iv : this._uniform1i;
                  break;
                case 5126:
                  n.fun = n.isArray ? this._uniform1fv : this._uniform1f;
                  break;
                case 35664:
                  n.fun = n.isArray ? this._uniform_vec2v : this._uniform_vec2;
                  break;
                case 35665:
                  n.fun = n.isArray ? this._uniform_vec3v : this._uniform_vec3;
                  break;
                case 35666:
                  n.fun = n.isArray ? this._uniform_vec4v : this._uniform_vec4;
                  break;
                case 35678:
                  n.fun = this._uniform_sampler2D;
                  break;
                case 35680:
                  n.fun = this._uniform_samplerCube;
                  break;
                case 35676:
                  n.glfun = i.uniformMatrix4fv, n.fun = this._uniformMatrix4fv;
                  break;
                case 35670:
                  n.fun = this._uniform1i;
                  break;
                case 35674:
                case 35675:
                default:
                  throw new Error("compile shader err!");
              } else n.fun = this._attribute;
          }
        }, i.getUniform = function (t) {
          return this._paramsMap[t];
        }, i._attribute = function (t, e) {
          var i = xt.mainContext,
            n = Ft._enableAtributes,
            r = t.location;
          return n[r] || i.enableVertexAttribArray(r), i.vertexAttribPointer(r, e[0], e[1], e[2], e[3], e[4] + this._offset), n[r] = Ft._bindVertexBuffer, 1;
        }, i._uniform1f = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e ? (xt.mainContext.uniform1f(t.location, i[0] = e), 1) : 0;
        }, i._uniform1fv = function (t, e) {
          if (e.length < 4) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (xt.mainContext.uniform1fv(t.location, e), i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0;
          }
          return xt.mainContext.uniform1fv(t.location, e), 1;
        }, i._uniform_vec2 = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] ? (xt.mainContext.uniform2f(t.location, i[0] = e[0], i[1] = e[1]), 1) : 0;
        }, i._uniform_vec2v = function (t, e) {
          if (e.length < 2) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (xt.mainContext.uniform2fv(t.location, e), i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0;
          }
          return xt.mainContext.uniform2fv(t.location, e), 1;
        }, i._uniform_vec3 = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (xt.mainContext.uniform3f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]), 1) : 0;
        }, i._uniform_vec3v = function (t, e) {
          return xt.mainContext.uniform3fv(t.location, e), 1;
        }, i._uniform_vec4 = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (xt.mainContext.uniform4f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]), 1) : 0;
        }, i._uniform_vec4v = function (t, e) {
          return xt.mainContext.uniform4fv(t.location, e), 1;
        }, i._uniformMatrix2fv = function (t, e) {
          return xt.mainContext.uniformMatrix2fv(t.location, !1, e), 1;
        }, i._uniformMatrix3fv = function (t, e) {
          return xt.mainContext.uniformMatrix3fv(t.location, !1, e), 1;
        }, i._uniformMatrix4fv = function (t, e) {
          return xt.mainContext.uniformMatrix4fv(t.location, !1, e), 1;
        }, i._uniform1i = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e ? (xt.mainContext.uniform1i(t.location, i[0] = e), 1) : 0;
        }, i._uniform1iv = function (t, e) {
          return xt.mainContext.uniform1iv(t.location, e), 1;
        }, i._uniform_ivec2 = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] ? (xt.mainContext.uniform2i(t.location, i[0] = e[0], i[1] = e[1]), 1) : 0;
        }, i._uniform_ivec2v = function (t, e) {
          return xt.mainContext.uniform2iv(t.location, e), 1;
        }, i._uniform_vec3i = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (xt.mainContext.uniform3i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]), 1) : 0;
        }, i._uniform_vec3vi = function (t, e) {
          return xt.mainContext.uniform3iv(t.location, e), 1;
        }, i._uniform_vec4i = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (xt.mainContext.uniform4i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]), 1) : 0;
        }, i._uniform_vec4vi = function (t, e) {
          return xt.mainContext.uniform4iv(t.location, e), 1;
        }, i._uniform_sampler2D = function (t, i) {
          var n = xt.mainContext,
            r = t.uploadedValue;
          return null == r[0] ? (r[0] = this._curActTexIndex, n.uniform1i(t.location, this._curActTexIndex), n.activeTexture(e._TEXTURES[this._curActTexIndex]), Tt.bindTexture(n, 3553, i), this._curActTexIndex++, 1) : (n.activeTexture(e._TEXTURES[r[0]]), Tt.bindTexture(n, 3553, i), 0);
        }, i._uniform_samplerCube = function (t, i) {
          var n = xt.mainContext,
            r = t.uploadedValue;
          return null == r[0] ? (r[0] = this._curActTexIndex, n.uniform1i(t.location, this._curActTexIndex), n.activeTexture(e._TEXTURES[this._curActTexIndex]), Tt.bindTexture(n, 34067, i), this._curActTexIndex++, 1) : (n.activeTexture(e._TEXTURES[r[0]]), Tt.bindTexture(n, 34067, i), 0);
        }, i._noSetValue = function (t) {
          console.log("no....:" + t.name);
        }, i.uploadOne = function (t, e) {
          this.activeResource(), Tt.UseProgram(this._program);
          var i = this._paramsMap[t];
          i.fun.call(this, i, e);
        }, i.uploadTexture2D = function (t) {
          A.shaderCall++;
          var e = xt.mainContext;
          e.activeTexture(33984), Tt.bindTexture(e, 3553, t);
        }, i.upload = function (t, e) {
          Nt.activeShader = Nt.bindShader = this, this._lastUseFrameCount === A.loopCount || this.activeResource(), Tt.UseProgram(this._program), this._reCompile ? (e = this._params, this._reCompile = !1) : e = e || this._params;
          xt.mainContext;
          for (var i, n, r = e.length, a = 0, s = 0; s < r; s++) null !== (n = t[(i = e[s]).name]) && (a += i.fun.call(this, i, n));
          A.shaderCall += a;
        }, i.uploadArray = function (t, e, i) {
          Nt.activeShader = this, Nt.bindShader = this, this.activeResource(), Tt.UseProgram(this._program);
          this._params;
          for (var n, r, a = 0, s = e - 2; s >= 0; s -= 2)(r = this._paramsMap[t[s]]) && null != (n = t[s + 1]) && (i && i[r.name] && i[r.name].bind(), a += r.fun.call(this, r, n));
          A.shaderCall += a;
        }, i.getParams = function () {
          return this._params;
        }, e.getShader = function (t) {
          return e.sharders[t];
        }, e.create = function (t, i, n, r) {
          return new e(t, i, n, r);
        }, e.withCompile = function (t, i, n, r) {
          if (n && e.sharders[n]) return e.sharders[n];
          var a = e._preCompileShader[2e-4 * t];
          if (!a) throw new Error("withCompile shader err!" + t);
          return a.createShader(i, n, r);
        }, e.withCompile2D = function (t, i, n, r, a) {
          if (r && e.sharders[r]) return e.sharders[r];
          var s = e._preCompileShader[2e-4 * t + i];
          if (!s) throw new Error("withCompile shader err!" + t + " " + i);
          return s.createShader(n, r, a);
        }, e.addInclude = function (t, e) {
          yt.addInclude(t, e);
        }, e.preCompile = function (t, i, n, r) {
          var a = 2e-4 * t;
          e._preCompileShader[a] = new yt(a, i, n, r);
        }, e.preCompile2D = function (t, i, n, r, a) {
          var s = 2e-4 * t + i;
          e._preCompileShader[s] = new yt(s, n, r, a);
        }, e._createShader = function (t, e, i) {
          var n = t.createShader(i);
          return t.shaderSource(n, e), t.compileShader(n), n;
        }, e._TEXTURES = [33984, 33985, 33986, 33987, 33988, 33989, 33990, , 33991, 33992], e._count = 0, e._preCompileShader = {}, e.SHADERNAME2ID = 2e-4, e.sharders = (e.sharders = [], e.sharders.length = 32, e.sharders), n(e, ["nameKey", function () {
          return this.nameKey = new R();
        }]), e;
      }(),
      Qt = function (t) {
        function e() {
          this._maxsize = 0, this._upload = !0, this._uploadSize = 0, e.__super.call(this), this.lock = !0;
        }
        r(e, "laya.webgl.utils.Buffer2D", t);
        var i = e.prototype;
        return i.needSize = function (t) {
          var e = this._byteLength;
          if (t) {
            var i = this._byteLength + t;
            i <= this._buffer.byteLength || this._resizeBuffer(i << 1, !0), this._byteLength = i;
          }
          return e;
        }, i._bufferData = function () {
          this._maxsize = Math.max(this._maxsize, this._byteLength), A.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength, this._buffer = this._buffer.slice(0, this._maxsize + 64), this._checkArrayUse()), this._maxsize = this._byteLength), this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength, Ft._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage), this.memorySize = this._uploadSize), Ft._gl.bufferSubData(this._bufferType, 0, this._buffer);
        }, i._bufferSubData = function (t, e, i) {
          if (void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), this._maxsize = Math.max(this._maxsize, this._byteLength), A.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength, this._buffer = this._buffer.slice(0, this._maxsize + 64), this._checkArrayUse()), this._maxsize = this._byteLength), this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength, Ft._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage), this.memorySize = this._uploadSize), e || i) {
            var n = this._buffer.slice(e, i);
            Ft._gl.bufferSubData(this._bufferType, t, n);
          } else Ft._gl.bufferSubData(this._bufferType, t, this._buffer);
        }, i._checkArrayUse = function () {}, i._bind_upload = function () {
          return !!this._upload && (this._upload = !1, this._bind(), this._bufferData(), !0);
        }, i._bind_subUpload = function (t, e, i) {
          return void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), !!this._upload && (this._upload = !1, this._bind(), this._bufferSubData(t, e, i), !0);
        }, i._resizeBuffer = function (t, e) {
          if (t < this._buffer.byteLength) return this;
          if (this.memorySize = t, e && this._buffer && this._buffer.byteLength > 0) {
            var i = new ArrayBuffer(t);
            new Uint8Array(i).set(new Uint8Array(this._buffer), 0), this._buffer = i;
          } else this._buffer = new ArrayBuffer(t);
          return this._checkArrayUse(), this._upload = !0, this;
        }, i.append = function (t) {
          this._upload = !0;
          var e, i = 0;
          i = t.byteLength, t instanceof Uint8Array ? (this._resizeBuffer(this._byteLength + i, !0), e = new Uint8Array(this._buffer, this._byteLength)) : t instanceof Uint16Array ? (this._resizeBuffer(this._byteLength + i, !0), e = new Uint16Array(this._buffer, this._byteLength)) : t instanceof Float32Array && (this._resizeBuffer(this._byteLength + i, !0), e = new Float32Array(this._buffer, this._byteLength)), e.set(t, 0), this._byteLength += i, this._checkArrayUse();
        }, i.appendU16Array = function (t, e) {
          this._resizeBuffer(this._byteLength + 2 * e, !0);
          for (var i = new Uint16Array(this._buffer, this._byteLength, e), n = 0; n < e; n++) i[n] = t[n];
          this._byteLength += 2 * e, this._checkArrayUse();
        }, i.appendEx = function (t, e) {
          this._upload = !0;
          var i = 0;
          i = t.byteLength, this._resizeBuffer(this._byteLength + i, !0), new e(this._buffer, this._byteLength).set(t, 0), this._byteLength += i, this._checkArrayUse();
        }, i.appendEx2 = function (t, e, i, n) {
          void 0 === n && (n = 1), this._upload = !0;
          var r, a = 0;
          a = i * n, this._resizeBuffer(this._byteLength + a, !0), r = new e(this._buffer, this._byteLength);
          var s = 0;
          for (s = 0; s < i; s++) r[s] = t[s];
          this._byteLength += a, this._checkArrayUse();
        }, i.getBuffer = function () {
          return this._buffer;
        }, i.setNeedUpload = function () {
          this._upload = !0;
        }, i.getNeedUpload = function () {
          return this._upload;
        }, i.upload = function () {
          var t = this._bind_upload();
          return Ft._gl.bindBuffer(this._bufferType, null), Ft._bindActive[this._bufferType] = null, Nt.activeShader = null, t;
        }, i.subUpload = function (t, e, i) {
          void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0);
          var n = this._bind_subUpload();
          return Ft._gl.bindBuffer(this._bufferType, null), Ft._bindActive[this._bufferType] = null, Nt.activeShader = null, n;
        }, i.disposeResource = function () {
          t.prototype.disposeResource.call(this), this._upload = !0, this._uploadSize = 0;
        }, i.clear = function () {
          this._byteLength = 0, this._upload = !0;
        }, a(0, i, "bufferLength", function () {
          return this._buffer.byteLength;
        }), a(0, i, "byteLength", null, function (t) {
          this._byteLength !== t && (t <= this._buffer.byteLength || this._resizeBuffer(2 * t + 256, !0), this._byteLength = t);
        }), e.__int__ = function (t) {
          $t.QuadrangleIB = $t.create(35044), mt.fillIBQuadrangle($t.QuadrangleIB, 16);
        }, e.FLOAT32 = 4, e.SHORT = 2, e;
      }(Ft),
      Kt = (function (t) {
        function e(t) {
          this.u_blurX = !1, this.u_color = null, this.u_offset = null, this.u_strength = NaN, this.u_texW = 0, this.u_texH = 0, e.__super.call(this, 9);
        }
        r(e, "laya.webgl.shader.d2.value.GlowSV", t);
        var i = e.prototype;
        i.setValue = function (e) {
          t.prototype.setValue.call(this, e);
        }, i.clear = function () {
          t.prototype.clear.call(this);
        };
      }(Gt), function (t) {
        function e(t) {
          e.__super.call(this, 64), this.defines.add(64);
        }
        r(e, "laya.webgl.shader.d2.value.TextSV", t);
        var i = e.prototype;
        return i.release = function () {
          e.pool[e._length++] = this, this.clear();
        }, i.clear = function () {
          t.prototype.clear.call(this);
        }, e.create = function () {
          return e._length ? e.pool[--e._length] : new e(null);
        }, e.pool = [], e._length = 0, e;
      }(Gt)),
      Zt = function (t) {
        function e(t, i, n, r) {
          this._params2dQuick1 = null, this._params2dQuick2 = null, this._shaderValueWidth = NaN, this._shaderValueHeight = NaN, e.__super.call(this, t, i, n, r);
        }
        r(e, "laya.webgl.shader.d2.Shader2X", t);
        var i = e.prototype;
        return i.upload2dQuick1 = function (t) {
          this.upload(t, this._params2dQuick1 || this._make2dQuick1());
        }, i._make2dQuick1 = function () {
          if (!this._params2dQuick1) {
            this.activeResource(), this._params2dQuick1 = [];
            for (var t, e = this._params, i = 0, n = e.length; i < n; i++) t = e[i], (w.isFlash || "size" !== t.name && "position" !== t.name && "texcoord" !== t.name) && this._params2dQuick1.push(t);
          }
          return this._params2dQuick1;
        }, i.disposeResource = function () {
          t.prototype.disposeResource.call(this), this._params2dQuick1 = null, this._params2dQuick2 = null;
        }, i.upload2dQuick2 = function (t) {
          this.upload(t, this._params2dQuick2 || this._make2dQuick2());
        }, i._make2dQuick2 = function () {
          if (!this._params2dQuick2) {
            this.activeResource(), this._params2dQuick2 = [];
            for (var t, e = this._params, i = 0, n = e.length; i < n; i++) t = e[i], (w.isFlash || "size" !== t.name) && this._params2dQuick2.push(t);
          }
          return this._params2dQuick2;
        }, e.create = function (t, i, n, r) {
          return new e(t, i, n, r);
        }, e;
      }(qt),
      $t = function (t) {
        function e(t) {
          this._uint8Array = null, this._uint16Array = null, void 0 === t && (t = 35044), e.__super.call(this), this._bufferUsage = t, this._bufferType = 34963, w.isFlash || (this._buffer = new ArrayBuffer(8));
        }
        r(e, "laya.webgl.utils.IndexBuffer2D", Qt);
        var i = e.prototype;
        return i._checkArrayUse = function () {
          this._uint8Array && (this._uint8Array = new Uint8Array(this._buffer)), this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));
        }, i.getUint8Array = function () {
          return this._uint8Array || (this._uint8Array = new Uint8Array(this._buffer));
        }, i.getUint16Array = function () {
          return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));
        }, i.destory = function () {
          this._uint16Array = null, this._uint8Array = null, this._buffer = null;
        }, e.QuadrangleIB = null, e.create = function (t) {
          return void 0 === t && (t = 35044), new e(t);
        }, e;
      }(),
      Jt = function (t) {
        function e(t, i) {
          this._floatArray32 = null, this._vertexStride = 0, e.__super.call(this), this._vertexStride = t, this._bufferUsage = i, this._bufferType = 34962, w.isFlash || (this._buffer = new ArrayBuffer(8)), this.getFloat32Array();
        }
        r(e, "laya.webgl.utils.VertexBuffer2D", t);
        var i = e.prototype;
        return i.getFloat32Array = function () {
          return this._floatArray32 || (this._floatArray32 = new Float32Array(this._buffer));
        }, i.bind = function (t) {
          t && t._bind(), this._bind();
        }, i.insertData = function (t, e) {
          this.getFloat32Array().set(t, e), this._upload = !0;
        }, i.bind_upload = function (t) {
          t._bind_upload() || t._bind(), this._bind_upload() || this._bind();
        }, i._checkArrayUse = function () {
          this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));
        }, i.disposeResource = function () {
          return void t.prototype.disposeResource.call(this);
        }, i.destory = function () {
          this._byteLength = 0, this._upload = !0, this._buffer = null, this._floatArray32 = null;
        }, a(0, i, "vertexStride", function () {
          return this._vertexStride;
        }), e.create = function (t, i) {
          return void 0 === i && (i = 35048), new e(t, i);
        }, e;
      }(Qt),
      te = function (t) {
        function e(t, i, n, r) {
          if (this._format = 0, this._mipmap = !1, this._allowMerageInAtlas = !1, this._enableMerageInAtlas = !1, this.repeat = !1, this._image = null, this.minFifter = 0, this.magFifter = 0, void 0 === n && (n = 6408), void 0 === r && (r = !0), e.__super.call(this, t, i), this._format = n, this._mipmap = r, this.repeat = !1, this.minFifter = -1, this.magFifter = -1, "string" == typeof t) this._url = t, this._src = t, this._image = new u.window.Image(), i && (i.onload && (this.onload = i.onload), i.onerror && (this.onerror = i.onerror), i.onCreate && i.onCreate(this)), this._image.crossOrigin = t && 0 == t.indexOf("data:") ? null : "", t && (this._image.src = t);
          else if (t instanceof ArrayBuffer) {
            this._src = i, this._url = this._src;
            var a = new c(t);
            a.readUTFBytes(4), a.readUTFBytes(2), a.getInt16();
            a.endian = "bigEndian", this._w = a.getInt16(), this._h = a.getInt16();
            a.getInt16(), a.getInt16();
            this._image = new Uint8Array(t, a.pos), this._format = xt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL, k.enabled && this._w < k.atlasLimitWidth && this._h < k.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
          } else this._src = i, this._url = this._src, this._image = t.source || t, this.onresize();
          this._$5__enableMerageInAtlas = !0;
        }
        r(e, "laya.webgl.resource.WebGLImage", v);
        var n = e.prototype;
        return i.imps(n, {
          "laya.webgl.resource.IMergeAtlasBitmap": !0
        }), n._init_ = function (t, e) {}, n._createWebGlTexture = function () {
          if (!this._image) throw "create GLTextur err:no data:" + this._image;
          var t = xt.mainContext,
            e = this._source = t.createTexture(),
            i = Tt.curBindTexTarget,
            n = Tt.curBindTexValue;
          if (Tt.bindTexture(t, 3553, e), w.isConchWebGL) switch (this._format) {
            case 6408:
              t.texImage2DEx(!0, 3553, 0, this._format, 6408, 5121, this._image);
              break;
            case xt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
              t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
          } else {
            switch (t.pixelStorei(37441, !0), this._format) {
              case 6408:
                t.texImage2D(3553, 0, this._format, 6408, 5121, this._image);
                break;
              case xt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
            }
            t.pixelStorei(37441, !1);
          }
          var r = this.minFifter,
            a = this.magFifter,
            s = this.repeat ? 10497 : 33071,
            h = o.isPOT(this._w, this._h);
          h ? (this.mipmap ? -1 !== r || (r = 9987) : -1 !== r || (r = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10241, r), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10242, s), t.texParameteri(3553, 10243, s), this.mipmap && t.generateMipmap(3553)) : (-1 !== r || (r = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10241, r), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), i && n && Tt.bindTexture(t, i, n), this._image.onload = null, this._image = null, h && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4, this._recreateLock = !1;
        }, n.recreateResource = function () {
          var t = this;
          if (null != this._src && "" !== this._src)
            if (this._needReleaseAgain = !1, this._image) {
              if (this._recreateLock) return;
              this._allowMerageInAtlas && this._$5__enableMerageInAtlas ? (this.memorySize = 0, this._recreateLock = !1) : this._createWebGlTexture(), this.completeCreate();
            } else {
              this._recreateLock = !0;
              var e = this;
              this._image = new u.window.Image(), this._image.crossOrigin = 0 == this._src.indexOf("data:") ? null : "", this._image.onload = function () {
                if (e._needReleaseAgain) return e._needReleaseAgain = !1, e._image.onload = null, void(e._image = null);
                e._allowMerageInAtlas && e._enableMerageInAtlas ? (t.memorySize = 0, t._recreateLock = !1) : e._createWebGlTexture(), e.completeCreate();
              }, this._image.src = this._src;
            }
        }, n.disposeResource = function () {
          this._recreateLock && (this._needReleaseAgain = !0), this._source && (xt.mainContext.deleteTexture(this._source), this._source = null, this._image = null, this.memorySize = 0);
        }, n.onresize = function () {
          this._w = this._image.width, this._h = this._image.height, k.enabled && this._w < k.atlasLimitWidth && this._h < k.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
        }, n.clearAtlasSource = function () {
          this._image = null;
        }, a(0, n, "format", function () {
          return this._format;
        }), a(0, n, "enableMerageInAtlas", function () {
          return this._$5__enableMerageInAtlas;
        }, function (t) {
          this._$5__enableMerageInAtlas = t;
        }), a(0, n, "mipmap", function () {
          return this._mipmap;
        }), a(0, n, "allowMerageInAtlas", function () {
          return this._allowMerageInAtlas;
        }), a(0, n, "atlasSource", function () {
          return this._image;
        }), a(0, n, "onload", null, function (t) {
          var e = this;
          this._onload = t, this._image && (this._image.onload = null != this._onload ? function () {
            e.onresize(), e._onload();
          } : null);
        }), a(0, n, "onerror", null, function (t) {
          var e = this;
          this._onerror = t, this._image && (this._image.onerror = null != this._onerror ? function () {
            e._onerror();
          } : null);
        }), e;
      }();
    i.__init([dt, U, wt, yt]);
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function (t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function (t, e, i) {
    i.un, i.uns;
    var n = i.static,
      r = i.class,
      a = i.getset,
      s = i.__newvec,
      o = laya.maths.Bezier,
      h = laya.utils.Browser,
      l = laya.utils.Byte,
      u = (laya.events.Event, laya.events.EventDispatcher),
      c = laya.display.Graphics,
      _ = laya.resource.HTMLCanvas,
      d = laya.utils.Handler,
      f = laya.net.Loader,
      p = laya.maths.MathUtil,
      m = laya.maths.Matrix,
      g = (laya.display.Node, laya.maths.Point, laya.maths.Rectangle),
      v = laya.renders.Render,
      y = (laya.renders.RenderContext, laya.resource.Resource),
      x = laya.utils.RunDriver,
      T = laya.display.Sprite,
      S = laya.utils.Stat,
      w = laya.resource.Texture,
      E = (laya.net.URL, laya.utils.Utils),
      b = function () {
        function t() {
          this.nodes = null, this.name = null, this.playTime = NaN, this.bone3DMap = null, this.totalKeyframeDatasLength = 0;
        }
        return r(t, "laya.ani.AnimationContent"), t;
      }(),
      C = function () {
        function t() {
          this.name = null, this.parentIndex = 0, this.parent = null, this.keyframeWidth = 0, this.lerpType = 0, this.interpolationMethod = null, this.childs = null, this.keyFrame = null, this.playTime = NaN, this.extenData = null, this.dataOffset = 0;
        }
        return r(t, "laya.ani.AnimationNodeContent"), t;
      }(),
      M = function () {
        function t() {}
        return r(t, "laya.ani.AnimationParser01"), t.parse = function (t, e) {
          var i = e.__getBuffer(),
            n = 0,
            r = 0,
            a = 0,
            s = 0,
            o = 0,
            h = 0,
            u = 0,
            c = e.readUTFString();
          t._aniClassName = c;
          var _, d = e.readUTFString().split("\n"),
            f = e.getUint8(),
            p = e.getUint32(),
            m = e.getUint32();
          p > 0 && (_ = i.slice(p, m));
          var g = new l(_);
          for (m > 0 && (t._publicExtData = i.slice(m, i.byteLength)), t._useParent = !!e.getUint8(), t._anis.length = f, n = 0; n < f; n++) {
            var v = t._anis[n] = new b();
            v.nodes = new Array();
            var y = v.name = d[e.getUint16()];
            t._aniMap[y] = n, v.bone3DMap = {}, v.playTime = e.getFloat32();
            var x = v.nodes.length = e.getUint8();
            for (v.totalKeyframeDatasLength = 0, r = 0; r < x; r++) {
              var T = v.nodes[r] = new C();
              T.childs = [];
              var S = e.getInt16();
              S >= 0 && (T.name = d[S], v.bone3DMap[T.name] = r), T.keyFrame = new Array(), T.parentIndex = e.getInt16(), -1 == T.parentIndex ? T.parent = null : T.parent = v.nodes[T.parentIndex], T.lerpType = e.getUint8();
              var w = e.getUint32();
              g.pos = w;
              var E = T.keyframeWidth = g.getUint16();
              if (v.totalKeyframeDatasLength += E, 0 === T.lerpType || 1 === T.lerpType)
                for (T.interpolationMethod = [], T.interpolationMethod.length = E, a = 0; a < E; a++) T.interpolationMethod[a] = et.interpolation[g.getUint8()];
              null != T.parent && T.parent.childs.push(T);
              var M = e.getUint16();
              M > 0 && (T.extenData = i.slice(e.pos, e.pos + M), e.pos += M);
              var I = e.getUint16();
              T.keyFrame.length = I;
              var D, A = 0;
              for (a = 0, s = I; a < s; a++) {
                if (D = T.keyFrame[a] = new K(), D.duration = e.getFloat32(), D.startTime = A, 2 === T.lerpType) {
                  D.interpolationData = [];
                  var R = e.getUint8(),
                    P = 0;
                  switch (P = e.getFloat32()) {
                    case 254:
                      for (D.interpolationData.length = E, u = 0; u < E; u++) D.interpolationData[u] = 0;
                      break;
                    case 255:
                      for (D.interpolationData.length = E, u = 0; u < E; u++) D.interpolationData[u] = 5;
                      break;
                    default:
                      for (D.interpolationData.push(P), h = 1; h < R; h++) D.interpolationData.push(e.getFloat32());
                  }
                }
                for (D.data = new Float32Array(E), o = 0; o < E; o++) D.data[o] = e.getFloat32(), D.data[o] > -1e-8 && D.data[o] < 1e-8 && (D.data[o] = 0);
                A += D.duration;
              }
              D.startTime = v.playTime, T.playTime = v.playTime, t._calculateKeyFrame(T, I, E);
            }
          }
        }, t;
      }(),
      I = function () {
        function t() {}
        return r(t, "laya.ani.AnimationParser02"), t.READ_DATA = function () {
          t._DATA.offset = t._reader.getUint32(), t._DATA.size = t._reader.getUint32();
        }, t.READ_BLOCK = function () {
          for (var e = t._BLOCK.count = t._reader.getUint16(), i = t._BLOCK.blockStarts = [], n = t._BLOCK.blockLengths = [], r = 0; r < e; r++) i.push(t._reader.getUint32()), n.push(t._reader.getUint32());
        }, t.READ_STRINGS = function () {
          var e = t._reader.getUint32(),
            i = t._reader.getUint16(),
            n = t._reader.pos;
          t._reader.pos = e + t._DATA.offset;
          for (var r = 0; r < i; r++) t._strings[r] = t._reader.readUTFString();
          t._reader.pos = n;
        }, t.parse = function (e, i) {
          t._templet = e, t._reader = i;
          i.__getBuffer();
          t.READ_DATA(), t.READ_BLOCK(), t.READ_STRINGS();
          for (var n = 0, r = t._BLOCK.count; n < r; n++) {
            var a = i.getUint16(),
              s = t._strings[a],
              o = t["READ_" + s];
            if (null == o) throw new Error("model file err,no this function:" + a + " " + s);
            o.call();
          }
        }, t.READ_ANIMATIONS = function () {
          var e = t._reader,
            i = e.__getBuffer(),
            n = 0,
            r = 0,
            a = 0,
            s = 0,
            o = e.getUint16(),
            h = [];
          for (h.length = o, n = 0; n < o; n++) h[n] = et.interpolation[e.getByte()];
          var l = e.getUint8();
          for (t._templet._anis.length = l, n = 0; n < l; n++) {
            var u = t._templet._anis[n] = {};
            u.nodes = new Array();
            var c = u.name = t._strings[e.getUint16()];
            t._templet._aniMap[c] = n, u.bone3DMap = {}, u.playTime = e.getFloat32();
            var _ = u.nodes.length = e.getInt16();
            for (u.totalKeyframeDatasLength = 0, r = 0; r < _; r++) {
              var d = u.nodes[r] = {};
              d.keyframeWidth = o, d.childs = [];
              var f = e.getUint16();
              f >= 0 && (d.name = t._strings[f], u.bone3DMap[d.name] = r), d.keyFrame = new Array(), d.parentIndex = e.getInt16(), -1 == d.parentIndex ? d.parent = null : d.parent = u.nodes[d.parentIndex], u.totalKeyframeDatasLength += o, d.interpolationMethod = h, null != d.parent && d.parent.childs.push(d);
              var p = e.getUint16();
              d.keyFrame.length = p;
              var m = null,
                g = null;
              for (a = 0, s = p; a < s; a++) {
                (m = d.keyFrame[a] = {}).startTime = e.getFloat32(), g && (g.duration = m.startTime - g.startTime);
                var v = t._DATA.offset,
                  y = e.getUint32(),
                  x = 4 * o,
                  T = i.slice(v + y, v + y + x);
                m.data = new Float32Array(T), g = m;
              }
              m.duration = 0, d.playTime = u.playTime, t._templet._calculateKeyFrame(d, p, o);
            }
          }
        }, t._templet = null, t._reader = null, t._strings = [], n(t, ["_BLOCK", function () {
          return this._BLOCK = {
            count: 0
          };
        }, "_DATA", function () {
          return this._DATA = {
            offset: 0,
            size: 0
          };
        }]), t;
      }(),
      D = (function () {
        function t() {}
        r(t, "laya.ani.AnimationState"), t.stopped = 0, t.paused = 1, t.playing = 2;
      }(), function () {
        function t() {
          this.name = null, this.root = null, this.parentBone = null, this.length = 10, this.transform = null, this.inheritScale = !0, this.inheritRotation = !0, this.rotation = NaN, this.resultRotation = NaN, this.d = -1, this._tempMatrix = null, this._sprite = null, this.resultTransform = new q(), this.resultMatrix = new m(), this._children = [];
        }
        r(t, "laya.ani.bone.Bone");
        var e = t.prototype;
        return e.setTempMatrix = function (t) {
          this._tempMatrix = t;
          var e = 0,
            i = 0;
          for (e = 0, i = this._children.length; e < i; e++) this._children[e].setTempMatrix(this._tempMatrix);
        }, e.update = function (t) {
          this.rotation = this.transform.skX;
          var e;
          if (t) e = this.resultTransform.getMatrix(), m.mul(e, t, this.resultMatrix), this.resultRotation = this.rotation;
          else if (this.resultRotation = this.rotation + this.parentBone.resultRotation, this.parentBone)
            if (this.inheritRotation && this.inheritScale) e = this.resultTransform.getMatrix(), m.mul(e, this.parentBone.resultMatrix, this.resultMatrix);
            else {
              var i = this.parentBone,
                n = NaN,
                r = NaN,
                a = NaN,
                s = this.parentBone.resultMatrix;
              e = this.resultTransform.getMatrix();
              var o = s.a * e.tx + s.c * e.ty + s.tx,
                h = s.b * e.tx + s.d * e.ty + s.ty,
                l = new m();
              this.inheritRotation ? (n = Math.atan2(i.resultMatrix.b, i.resultMatrix.a), r = Math.cos(n), a = Math.sin(n), l.setTo(r, a, -a, r, 0, 0), m.mul(this._tempMatrix, l, m.TEMP), m.TEMP.copyTo(l), e = this.resultTransform.getMatrix(), m.mul(e, l, this.resultMatrix), this.resultTransform.scX * this.resultTransform.scY < 0 && this.resultMatrix.rotate(.5 * Math.PI), this.resultMatrix.tx = o, this.resultMatrix.ty = h) : (this.inheritScale, e = this.resultTransform.getMatrix(), m.TEMP.identity(), m.TEMP.d = this.d, m.mul(e, m.TEMP, this.resultMatrix), this.resultMatrix.tx = o, this.resultMatrix.ty = h);
            }
          else(e = this.resultTransform.getMatrix()).copyTo(this.resultMatrix);
          var u = 0,
            c = 0;
          for (u = 0, c = this._children.length; u < c; u++) this._children[u].update();
        }, e.updateChild = function () {
          var t = 0,
            e = 0;
          for (t = 0, e = this._children.length; t < e; t++) this._children[t].update();
        }, e.setRotation = function (t) {
          this._sprite && (this._sprite.rotation = 180 * t / Math.PI);
        }, e.updateDraw = function (e, n) {
          t.ShowBones && !t.ShowBones[this.name] || (this._sprite ? (this._sprite.x = e + this.resultMatrix.tx, this._sprite.y = n + this.resultMatrix.ty) : (this._sprite = new T(), this._sprite.graphics.drawCircle(0, 0, 5, "#ff0000"), this._sprite.graphics.drawLine(0, 0, this.length, 0, "#00ff00"), this._sprite.graphics.fillText(this.name, 0, 0, "20px Arial", "#00ff00", "center"), i.stage.addChild(this._sprite), this._sprite.x = e + this.resultMatrix.tx, this._sprite.y = n + this.resultMatrix.ty));
          var r = 0,
            a = 0;
          for (r = 0, a = this._children.length; r < a; r++) this._children[r].updateDraw(e, n);
        }, e.addChild = function (t) {
          this._children.push(t), t.parentBone = this;
        }, e.findBone = function (t) {
          if (this.name == t) return this;
          var e, i, n = 0,
            r = 0;
          for (n = 0, r = this._children.length; n < r; n++)
            if (e = this._children[n], i = e.findBone(t)) return i;
          return null;
        }, e.localToWorld = function (t) {
          var e = t[0],
            i = t[1];
          t[0] = e * this.resultMatrix.a + i * this.resultMatrix.c + this.resultMatrix.tx, t[1] = e * this.resultMatrix.b + i * this.resultMatrix.d + this.resultMatrix.ty;
        }, t.ShowBones = {}, t;
      }()),
      A = function () {
        function t() {
          this.name = null, this.parent = null, this.attachmentName = null, this.srcDisplayIndex = -1, this.type = "src", this.templet = null, this.currSlotData = null, this.currTexture = null, this.currDisplayData = null, this.displayIndex = -1, this._diyTexture = null, this._parentMatrix = null, this._resultMatrix = null, this._replaceDic = {}, this._curDiyUV = null, this._curDiyVS = null, this._skinSprite = null, this.deformData = null, this._mVerticleArr = null;
        }
        r(t, "laya.ani.bone.BoneSlot");
        var e = t.prototype;
        return e.showSlotData = function (t, e) {
          void 0 === e && (e = !0), this.currSlotData = t, e && (this.displayIndex = this.srcDisplayIndex), this.currDisplayData = null, this.currTexture = null;
        }, e.showDisplayByName = function (t) {
          this.currSlotData && this.showDisplayByIndex(this.currSlotData.getDisplayByName(t));
        }, e.replaceDisplayByName = function (t, e) {
          if (this.currSlotData) {
            var i = 0;
            i = this.currSlotData.getDisplayByName(t);
            var n = 0;
            n = this.currSlotData.getDisplayByName(e), this.replaceDisplayByIndex(i, n);
          }
        }, e.replaceDisplayByIndex = function (t, e) {
          this.currSlotData && (this._replaceDic[t] = e, this.displayIndex == t && this.showDisplayByIndex(t));
        }, e.showDisplayByIndex = function (t) {
          if (null != this._replaceDic[t] && (t = this._replaceDic[t]), this.currSlotData && t > -1 && t < this.currSlotData.displayArr.length) {
            if (this.displayIndex = t, this.currDisplayData = this.currSlotData.displayArr[t], this.currDisplayData) {
              var e = this.currDisplayData.name;
              this.currTexture = this.templet.getTexture(e), this.currTexture && 0 == this.currDisplayData.type && this.currDisplayData.uvs && (!v.isConchApp || v.isConchApp && T.RUNTIMEVERION > "0.9.15") && (this.currTexture = this.currDisplayData.createTexture(this.currTexture));
            }
          } else this.displayIndex = -1, this.currDisplayData = null, this.currTexture = null;
        }, e.replaceSkin = function (t) {
          this._diyTexture = t, this._curDiyUV && (this._curDiyUV.length = 0), this.currDisplayData && this._diyTexture == this.currDisplayData.texture && (this._diyTexture = null);
        }, e.setParentMatrix = function (t) {
          this._parentMatrix = t;
        }, e.draw = function (e, i, n, r) {
          if (void 0 === n && (n = !1), void 0 === r && (r = 1), (null != this._diyTexture || null != this.currTexture) && null != this.currDisplayData || this.currDisplayData && 3 == this.currDisplayData.type) {
            var a = this.currTexture;
            this._diyTexture && (a = this._diyTexture);
            var s;
            switch (this.currDisplayData.type) {
              case 0:
                if (e) {
                  var o = this.getDisplayMatrix();
                  if (this._parentMatrix) {
                    var h = !1;
                    if (o) {
                      m.mul(o, this._parentMatrix, m.TEMP);
                      var l;
                      if (n ? (null == this._resultMatrix && (this._resultMatrix = new m()), l = this._resultMatrix) : l = new m(), !v.isWebGL && this.currDisplayData.uvs || v.isWebGL && this._diyTexture && this.currDisplayData.uvs) {
                        var u = t._tempMatrix;
                        u.identity(), this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (u.d = -1), this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4] && this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (h = !0, u.rotate(-Math.PI / 2)), m.mul(u, m.TEMP, l);
                      } else m.TEMP.copyTo(l);
                      h ? e.drawTexture(a, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, l) : e.drawTexture(a, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, l);
                    }
                  }
                }
                break;
              case 1:
                if (n ? (null == this._skinSprite && (this._skinSprite = t.createSkinMesh()), s = this._skinSprite) : s = t.createSkinMesh(), null == s) return;
                var c;
                if (null == this.currDisplayData.bones) {
                  var _ = this.currDisplayData.weights;
                  this.deformData && (_ = this.deformData);
                  var d;
                  this._diyTexture ? (this._curDiyUV || (this._curDiyUV = []), 0 == this._curDiyUV.length && (this._curDiyUV = Q.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV), this._curDiyUV = Q.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)), d = this._curDiyUV) : d = this.currDisplayData.uvs, this._mVerticleArr = _;
                  this.currDisplayData.triangles.length;
                  c = this.currDisplayData.triangles, s.init2(a, null, c, this._mVerticleArr, d);
                  var f = this.getDisplayMatrix();
                  if (this._parentMatrix && f) {
                    m.mul(f, this._parentMatrix, m.TEMP);
                    var p;
                    n ? (null == this._resultMatrix && (this._resultMatrix = new m()), p = this._resultMatrix) : p = new m(), m.TEMP.copyTo(p), s.transform = p;
                  }
                } else this.skinMesh(i, s, r);
                e.drawSkin(s);
                break;
              case 2:
                if (n ? (null == this._skinSprite && (this._skinSprite = t.createSkinMesh()), s = this._skinSprite) : s = t.createSkinMesh(), null == s) return;
                this.skinMesh(i, s, r), e.drawSkin(s);
            }
          }
        }, e.skinMesh = function (t, e, i) {
          var n, r = this.currTexture,
            a = this.currDisplayData.bones;
          this._diyTexture ? (r = this._diyTexture, this._curDiyUV || (this._curDiyUV = []), 0 == this._curDiyUV.length && (this._curDiyUV = Q.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV), this._curDiyUV = Q.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)), n = this._curDiyUV) : n = this.currDisplayData.uvs;
          var s, o, h = this.currDisplayData.weights,
            l = this.currDisplayData.triangles,
            u = 0,
            c = 0,
            _ = 0,
            d = NaN,
            f = NaN,
            p = 0,
            m = 0,
            g = [],
            v = 0,
            y = 0;
          if (this.deformData && this.deformData.length > 0) {
            var x = 0;
            for (v = 0, y = a.length; v < y;) {
              for (_ = a[v++] + v, u = 0, c = 0; v < _; v++) o = t[a[v]], d = h[p] + this.deformData[x++], f = h[p + 1] + this.deformData[x++], m = h[p + 2], u += (d * o.a + f * o.c + o.tx) * m, c += (d * o.b + f * o.d + o.ty) * m, p += 3;
              g.push(u, c);
            }
          } else
            for (v = 0, y = a.length; v < y;) {
              for (_ = a[v++] + v, u = 0, c = 0; v < _; v++) o = t[a[v]], d = h[p], f = h[p + 1], m = h[p + 2], u += (d * o.a + f * o.c + o.tx) * m, c += (d * o.b + f * o.d + o.ty) * m, p += 3;
              g.push(u, c);
            }
          this._mVerticleArr = g, s = l, e.init2(r, null, s, this._mVerticleArr, n);
        }, e.drawBonePoint = function (t) {
          t && this._parentMatrix && t.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, "#ff0000");
        }, e.getDisplayMatrix = function () {
          return this.currDisplayData ? this.currDisplayData.transform.getMatrix() : null;
        }, e.getMatrix = function () {
          return this._resultMatrix;
        }, e.copy = function () {
          var e = new t();
          return e.type = "copy", e.name = this.name, e.attachmentName = this.attachmentName, e.srcDisplayIndex = this.srcDisplayIndex, e.parent = this.parent, e.displayIndex = this.displayIndex, e.templet = this.templet, e.currSlotData = this.currSlotData, e.currTexture = this.currTexture, e.currDisplayData = this.currDisplayData, e;
        }, t.createSkinMesh = function () {
          return v.isWebGL || v.isConchApp ? x.skinAniSprite() : v.isWebGL ? null : nt.useSimpleMeshInCanvas ? new it() : new tt();
        }, n(t, ["_tempMatrix", function () {
          return this._tempMatrix = new m();
        }]), t;
      }(),
      R = function () {
        function t() {
          this.mesh = null, this.transform = null, this.context = null, this.mode = 0;
        }
        r(t, "laya.ani.bone.canvasmesh.CanvasMeshRender");
        var e = t.prototype;
        return e.renderToContext = function (t) {
          this.context = t.ctx || t, this.mesh && (0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh));
        }, e._renderNoIndexes = function (t) {
          var e = 0,
            i = t.vertices.length / 2,
            n = 0;
          for (e = 0; e < i - 2; e++) n = 2 * e, this._renderDrawTriangle(t, n, n + 2, n + 4);
        }, e._renderWithIndexes = function (t) {
          var e = t.indexes,
            i = 0,
            n = e.length;
          for (i = 0; i < n; i += 3) {
            var r = 2 * e[i],
              a = 2 * e[i + 1],
              s = 2 * e[i + 2];
            this._renderDrawTriangle(t, r, a, s);
          }
        }, e._renderDrawTriangle = function (t, e, i, n) {
          var r = this.context,
            a = t.uvs,
            s = t.vertices,
            o = t.texture,
            h = o.bitmap,
            l = h.source,
            u = o.width,
            c = o.height,
            _ = h.width,
            d = h.height,
            f = NaN,
            p = NaN,
            m = NaN,
            g = NaN,
            v = NaN,
            y = NaN;
          if (t.useUvTransform) {
            var x = t.uvTransform;
            f = (a[e] * x.a + a[e + 1] * x.c + x.tx) * _, p = (a[i] * x.a + a[i + 1] * x.c + x.tx) * _, m = (a[n] * x.a + a[n + 1] * x.c + x.tx) * _, g = (a[e] * x.b + a[e + 1] * x.d + x.ty) * d, v = (a[i] * x.b + a[i + 1] * x.d + x.ty) * d, y = (a[n] * x.b + a[n + 1] * x.d + x.ty) * d;
          } else f = a[e] * _, p = a[i] * _, m = a[n] * _, g = a[e + 1] * d, v = a[i + 1] * d, y = a[n + 1] * d;
          var T = s[e],
            S = s[i],
            w = s[n],
            E = s[e + 1],
            b = s[i + 1],
            C = s[n + 1];
          if (t.canvasPadding > 0) {
            var M = t.canvasPadding,
              I = t.canvasPadding,
              D = (T + S + w) / 3,
              A = (E + b + C) / 3,
              R = T - D,
              P = E - A,
              L = Math.sqrt(R * R + P * P);
            T = D + R / L * (L + M), E = A + P / L * (L + I), P = b - A, S = D + (R = S - D) / (L = Math.sqrt(R * R + P * P)) * (L + M), b = A + P / L * (L + I), P = C - A, w = D + (R = w - D) / (L = Math.sqrt(R * R + P * P)) * (L + M), C = A + P / L * (L + I);
          }
          if (r.save(), this.transform) {
            var O = this.transform;
            r.transform(O.a, O.b, O.c, O.d, O.tx, O.ty);
          }
          r.beginPath(), r.moveTo(T, E), r.lineTo(S, b), r.lineTo(w, C), r.closePath(), r.clip();
          var N = 1 / (f * v + g * m + p * y - v * m - g * p - f * y),
            V = T * v + g * w + S * y - v * w - g * S - T * y,
            F = f * S + T * m + p * w - S * m - T * p - f * w,
            B = f * v * w + g * S * m + T * p * y - T * v * m - g * p * w - f * S * y,
            U = E * v + g * C + b * y - v * C - g * b - E * y,
            k = f * b + E * m + p * C - b * m - E * p - f * C,
            G = f * v * C + g * b * m + E * p * y - E * v * m - g * p * C - f * b * y;
          r.transform(V * N, U * N, F * N, k * N, B * N, G * N), r.drawImage(l, o.uv[0] * _, o.uv[1] * d, u, c, o.uv[0] * _, o.uv[1] * d, u, c), r.restore();
        }, t;
      }(),
      P = function () {
        function t() {
          this.texture = null, this.uvs = [0, 0, 1, 0, 1, 1, 0, 1], this.vertices = [0, 0, 100, 0, 100, 100, 0, 100], this.indexes = [0, 1, 3, 3, 1, 2], this.uvTransform = null, this.useUvTransform = !1, this.canvasPadding = 1;
        }
        r(t, "laya.ani.bone.canvasmesh.MeshData");
        return t.prototype.getBounds = function () {
          return g._getWrapRec(this.vertices);
        }, t;
      }(),
      L = function () {
        function t() {
          this.skinName = null, this.deformSlotDataList = [];
        }
        return r(t, "laya.ani.bone.DeformAniData"), t;
      }(),
      O = function () {
        function t() {
          this.deformSlotDisplayList = [];
        }
        return r(t, "laya.ani.bone.DeformSlotData"), t;
      }(),
      N = function () {
        function t() {
          this.boneSlot = null, this.slotIndex = -1, this.attachment = null, this.deformData = null, this.frameIndex = 0, this.timeList = [], this.vectices = [], this.tweenKeyList = [];
        }
        r(t, "laya.ani.bone.DeformSlotDisplayData");
        var e = t.prototype;
        return e.binarySearch1 = function (t, e) {
          var i = 0,
            n = t.length - 2;
          if (0 == n) return 1;
          for (var r = n >>> 1;;) {
            if (t[Math.floor(r + 1)] <= e ? i = r + 1 : n = r, i == n) return i + 1;
            r = i + n >>> 1;
          }
          return 0;
        }, e.apply = function (t, e, i) {
          if (void 0 === i && (i = 1), t += .05, !(this.timeList.length <= 0)) {
            var n = 0;
            if (!(t < this.timeList[0])) {
              var r = this.vectices[0].length,
                a = [],
                s = this.binarySearch1(this.timeList, t);
              if (this.frameIndex = s, t >= this.timeList[this.timeList.length - 1]) {
                var o = this.vectices[this.vectices.length - 1];
                if (i < 1)
                  for (n = 0; n < r; n++) a[n] += (o[n] - a[n]) * i;
                else
                  for (n = 0; n < r; n++) a[n] = o[n];
                this.deformData = a;
              } else {
                this.tweenKeyList[this.frameIndex];
                var h = this.vectices[this.frameIndex - 1],
                  l = this.vectices[this.frameIndex],
                  u = this.timeList[this.frameIndex - 1],
                  c = this.timeList[this.frameIndex];
                i = this.tweenKeyList[s - 1] ? (t - u) / (c - u) : 0;
                var _ = NaN;
                for (n = 0; n < r; n++) _ = h[n], a[n] = _ + (l[n] - _) * i;
                this.deformData = a;
              }
            }
          }
        }, t;
      }(),
      V = function () {
        function t() {
          this.time = NaN, this.drawOrder = [];
        }
        return r(t, "laya.ani.bone.DrawOrderData"), t;
      }(),
      F = function () {
        function t() {
          this.name = null, this.intValue = 0, this.floatValue = NaN, this.stringValue = null, this.time = NaN;
        }
        return r(t, "laya.ani.bone.EventData"), t;
      }(),
      B = function () {
        function t(t, e) {
          this._targetBone = null, this._bones = null, this._data = null, this.name = null, this.mix = NaN, this.bendDirection = NaN, this.isSpine = !0, this._sp = null, this.isDebug = !1, this._data = t, this._targetBone = e[t.targetBoneIndex], this.isSpine = t.isSpine, null == this._bones && (this._bones = []), this._bones.length = 0;
          for (var i = 0, n = t.boneIndexs.length; i < n; i++) this._bones.push(e[t.boneIndexs[i]]);
          this.name = t.name, this.mix = t.mix, this.bendDirection = t.bendDirection;
        }
        r(t, "laya.ani.bone.IkConstraint");
        var e = t.prototype;
        return e.apply = function () {
          switch (this._bones.length) {
            case 1:
              this._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix);
              break;
            case 2:
              this.isSpine ? this._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix) : this._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);
          }
        }, e._applyIk1 = function (e, i, n, r) {
          var a = e.parentBone,
            s = 1 / (a.resultMatrix.a * a.resultMatrix.d - a.resultMatrix.b * a.resultMatrix.c),
            o = i - a.resultMatrix.tx,
            h = n - a.resultMatrix.ty,
            l = (o * a.resultMatrix.d - h * a.resultMatrix.c) * s - e.transform.x,
            u = (h * a.resultMatrix.a - o * a.resultMatrix.b) * s - e.transform.y,
            c = Math.atan2(u, l) * t.radDeg - 0 - e.transform.skX;
          e.transform.scX < 0 && (c += 180), c > 180 ? c -= 360 : c < -180 && (c += 360), e.transform.skX = e.transform.skY = e.transform.skX + c * r, e.update();
        }, e.updatePos = function (t, e) {
          this._sp && this._sp.pos(t, e);
        }, e._applyIk2 = function (e, n, r, a, s, o) {
          if (0 != o) {
            var h = e.resultTransform.x,
              l = e.resultTransform.y,
              u = e.transform.scX,
              c = e.transform.scY,
              _ = n.transform.scX,
              d = 0,
              f = 0,
              p = 0;
            u < 0 ? (u = -u, d = 180, p = -1) : (d = 0, p = 1), c < 0 && (c = -c, p = -p), _ < 0 ? (_ = -_, f = 180) : f = 0;
            var m = n.resultTransform.x,
              g = NaN,
              v = NaN,
              y = NaN,
              x = e.resultMatrix.a,
              S = e.resultMatrix.c,
              w = e.resultMatrix.b,
              E = e.resultMatrix.d,
              b = Math.abs(u - c) <= 1e-4;
            b ? (v = x * m + S * (g = n.resultTransform.y) + e.resultMatrix.tx, y = w * m + E * g + e.resultMatrix.ty) : (g = 0, v = x * m + e.resultMatrix.tx, y = w * m + e.resultMatrix.ty), this.isDebug && (this._sp || (this._sp = new T(), i.stage.addChild(this._sp)), this._sp.graphics.clear(), this._sp.graphics.drawCircle(r, a, 15, "#ffff00"), this._sp.graphics.drawCircle(v, y, 15, "#ff00ff")), e.setRotation(Math.atan2(y - e.resultMatrix.ty, v - e.resultMatrix.tx));
            var C = e.parentBone;
            x = C.resultMatrix.a, S = C.resultMatrix.c, w = C.resultMatrix.b;
            var M = 1 / (x * (E = C.resultMatrix.d) - S * w),
              I = r - C.resultMatrix.tx,
              D = a - C.resultMatrix.ty,
              A = (I * E - D * S) * M - h,
              R = (D * x - I * w) * M - l,
              P = ((I = v - C.resultMatrix.tx) * E - (D = y - C.resultMatrix.ty) * S) * M - h,
              L = (D * x - I * w) * M - l,
              O = Math.sqrt(P * P + L * L),
              N = n.length * _,
              V = NaN,
              F = NaN;
            if (b) {
              var B = (A * A + R * R - O * O - (N *= u) * N) / (2 * O * N);
              B < -1 ? B = -1 : B > 1 && (B = 1), F = Math.acos(B) * s, x = O + N * B, S = N * Math.sin(F), V = Math.atan2(R * x - A * S, A * x + R * S);
            } else {
              var U = (x = u * N) * x,
                k = (S = c * N) * S,
                G = A * A + R * R,
                H = Math.atan2(R, A),
                z = -2 * k * O,
                W = k - U;
              if ((E = z * z - 4 * W * (w = k * O * O + U * G - U * k)) > 0) {
                var j = Math.sqrt(E);
                z < 0 && (j = -j);
                var X = (j = -(z + j) / 2) / W,
                  Y = w / j,
                  q = Math.abs(X) < Math.abs(Y) ? X : Y;
                q * q <= G && (D = Math.sqrt(G - q * q) * s, V = H - Math.atan2(D, q), F = Math.atan2(D / c, (q - O) / u));
              }
              var Q = 0,
                K = Number.MAX_VALUE,
                Z = 0,
                $ = 0,
                J = 0,
                tt = 0,
                et = 0,
                it = 0;
              (E = (I = O + x) * I) > tt && (J = 0, tt = E, et = I), (E = (I = O - x) * I) < K && (Q = Math.PI, K = E, Z = I);
              var nt = Math.acos(-x * O / (U - k));
              (E = (I = x * Math.cos(nt) + O) * I + (D = S * Math.sin(nt)) * D) < K && (Q = nt, K = E, Z = I, $ = D), E > tt && (J = nt, tt = E, et = I, it = D), G <= (K + tt) / 2 ? (V = H - Math.atan2($ * s, Z), F = Q * s) : (V = H - Math.atan2(it * s, et), F = J * s);
            }
            var rt = Math.atan2(g, m) * p,
              at = e.resultTransform.skX;
            (V = (V - rt) * t.radDeg + d - at) > 180 ? V -= 360 : V < -180 && (V += 360), e.resultTransform.x = h, e.resultTransform.y = l, e.resultTransform.skX = e.resultTransform.skY = at + V * o, at = n.resultTransform.skX, (F = ((F + rt) * t.radDeg - 0) * p + f - (at %= 360)) > 180 ? F -= 360 : F < -180 && (F += 360), n.resultTransform.x = m, n.resultTransform.y = g, n.resultTransform.skX = n.resultTransform.skY = n.resultTransform.skY + F * o, e.update();
          }
        }, e._applyIk3 = function (e, n, r, a, s, o) {
          if (0 != o) {
            var h = NaN,
              l = NaN,
              u = n.resultMatrix.a * n.length,
              c = n.resultMatrix.b * n.length,
              _ = u * u + c * c,
              d = Math.sqrt(_),
              f = e.resultMatrix.tx,
              p = e.resultMatrix.ty,
              m = n.resultMatrix.tx,
              g = n.resultMatrix.ty,
              v = m - f,
              y = g - p,
              x = v * v + y * y,
              S = Math.sqrt(x),
              w = (v = r - e.resultMatrix.tx) * v + (y = a - e.resultMatrix.ty) * y,
              E = Math.sqrt(w);
            if (d + S <= E || E + d <= S || E + S <= d) {
              var b = NaN;
              m = f + (b = d + S <= E ? 1 : -1) * (r - f) * S / E, g = p + b * (a - p) * S / E;
            } else {
              var C = (x - _ + w) / (2 * w),
                M = Math.sqrt(x - C * C * w) / E,
                I = f + v * C,
                D = p + y * C,
                A = -y * M,
                R = v * M;
              s > 0 ? (m = I - A, g = D - R) : (m = I + A, g = D + R);
            }
            h = m, l = g, this.isDebug && (this._sp || (this._sp = new T(), i.stage.addChild(this._sp)), this._sp.graphics.clear(), this._sp.graphics.drawCircle(f, p, 15, "#ff00ff"), this._sp.graphics.drawCircle(r, a, 15, "#ffff00"), this._sp.graphics.drawCircle(h, l, 15, "#ff00ff"));
            var P = NaN;
            P = Math.atan2(l - e.resultMatrix.ty, h - e.resultMatrix.tx), e.setRotation(P);
            var L;
            (L = t._tempMatrix).identity(), L.rotate(P), L.scale(e.resultMatrix.getScaleX(), e.resultMatrix.getScaleY()), L.translate(e.resultMatrix.tx, e.resultMatrix.ty), L.copyTo(e.resultMatrix), e.updateChild();
            var O = NaN;
            O = Math.atan2(a - l, r - h), n.setRotation(O);
            var N;
            (N = t._tempMatrix).identity(), N.rotate(O), N.scale(n.resultMatrix.getScaleX(), n.resultMatrix.getScaleY()), N.translate(h, l), L.copyTo(n.resultMatrix), n.updateChild();
          }
        }, n(t, ["radDeg", function () {
          return this.radDeg = 180 / Math.PI;
        }, "degRad", function () {
          return this.degRad = Math.PI / 180;
        }, "_tempMatrix", function () {
          return this._tempMatrix = new m();
        }]), t;
      }(),
      U = function () {
        function t() {
          this.name = null, this.targetBoneName = null, this.bendDirection = 1, this.mix = 1, this.isSpine = !0, this.targetBoneIndex = -1, this.boneNames = [], this.boneIndexs = [];
        }
        return r(t, "laya.ani.bone.IkConstraintData"), t;
      }(),
      k = function () {
        function t() {}
        return r(t, "laya.ani.bone.MeshTools"), t.findEdge = function (t, e, i) {
          void 0 === e && (e = 0), void 0 === i && (i = !0);
          var n = 0,
            r = 0,
            a = 0;
          for (r = t.length, a = -1, n = 0; n < r; n += 2)(a < 0 || i == t[a + e] < t[n + e]) && (a = n);
          return a;
        }, t.findBestTriangle = function (e) {
          var i = 0;
          i = t.findEdge(e, 1, !0);
          var n = 0;
          n = t.findEdge(e, 1, !1);
          var r = 0;
          r = t.findEdge(e, 0, !0);
          var a = 0;
          a = t.findEdge(e, 0, !1);
          var s;
          return s = t._bestTriangle, s.length = 0, s.push(r, a), s.indexOf(i) < 0 && s.push(i), s.indexOf(n) < 0 && s.push(n), s;
        }, t.solveMesh = function (e, i) {
          (i = i || []).length = 0;
          var n;
          n = e.uvs;
          var r;
          r = e.vertices;
          var a, s, o = 0,
            h = 0,
            l = 0;
          o = (s = t.findBestTriangle(n))[0], h = s[1], l = s[2], t._absArr.length = 0;
          return t.isNormalUV(e.texture.uv) && t.adptTexture(e), a = t.solvePoints(e.texture.uv, n[o], n[o + 1], n[h] - n[o], n[h + 1] - n[o + 1], n[l] - n[o], n[l + 1] - n[o + 1], t._absArr), t.transPoints(a, r[o], r[o + 1], r[h] - r[o], r[h + 1] - r[o + 1], r[l] - r[o], r[l + 1] - r[o + 1], i);
        }, t.findWrapRect = function (e) {
          var i = 0;
          i = t.findEdge(e, 1, !0);
          var n = 0;
          n = t.findEdge(e, 1, !1);
          var r = 0;
          r = t.findEdge(e, 0, !0);
          var a = 0;
          a = t.findEdge(e, 0, !1);
          var s = NaN;
          s = e[r];
          var o = NaN;
          o = e[a];
          var h = NaN;
          h = e[i + 1];
          var l = NaN;
          return [o, l = e[n + 1], s - o, h - l];
        }, t.adptTexture = function (e) {
          var i;
          i = t.findWrapRect(e.uvs);
          var n, r, a = (n = e.texture).width,
            s = n.height;
          r = w.create(n, i[0] * a, i[1] * s, i[2] * a, i[3] * s), e.texture = r;
        }, t.isNormalUV = function (t) {
          return 0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5];
        }, t.solvePoints = function (e, i, n, r, a, s, o, h) {
          h = h || [];
          var l = 0,
            u = 0;
          u = e.length;
          var c;
          for (l = 0; l < u; l += 2) c = t.solve2(e[l], e[l + 1], i, n, r, a, s, o), h.push(c[0], c[1]);
          return h;
        }, t.transPoints = function (e, i, n, r, a, s, o, h) {
          h = h || [];
          var l = 0,
            u = 0;
          u = e.length;
          for (l = 0; l < u; l += 2) t.transPoint(e[l], e[l + 1], i, n, r, a, s, o, h);
          return h;
        }, t.transPoint = function (t, e, i, n, r, a, s, o, h) {
          var l = NaN,
            u = NaN;
          return l = i + r * t + s * e, u = n + a * t + o * e, (h = h || []).push(l, u), h;
        }, t.solve2 = function (e, i, n, r, a, s, o, h, l, u) {
          void 0 === l && (l = !1), u = u || [];
          var c = NaN,
            _ = NaN;
          if (0 == a) return t.solve2(e, i, n, r, o, h, a, s, !0, u);
          var d = NaN,
            f = NaN;
          return d = e - n, f = i - r, _ = (f - d * s / a) / (h - o * s / a), c = (d - _ * o) / a, l ? u.push(_, c) : u.push(c, _), u;
        }, t.solve = function (e, i, n, r) {
          return t.solve2(e.x, e.y, i.x, i.y, n.x, n.y, r.x, r.y);
        }, t._bestTriangle = [], t._absArr = [], t;
      }(),
      G = function () {
        function t(t, e) {
          this.target = null, this.data = null, this.bones = null, this.position = NaN, this.spacing = NaN, this.rotateMix = NaN, this.translateMix = NaN, this._debugKey = !1, this._spaces = null, this._segments = [], this._curves = [], this.data = t, this.position = t.position, this.spacing = t.spacing, this.rotateMix = t.rotateMix, this.translateMix = t.translateMix, this.bones = [];
          for (var i = this.data.bones, n = 0, r = i.length; n < r; n++) this.bones.push(e[i[n]]);
        }
        r(t, "laya.ani.bone.PathConstraint");
        var e = t.prototype;
        return e.apply = function (t, e) {
          if (this.target) {
            var i = this.translateMix,
              n = this.translateMix,
              r = n > 0,
              a = this.data.spacingMode,
              s = "length" == a,
              o = this.data.rotateMode,
              h = "tangent" == o,
              l = "chainScale" == o,
              u = [],
              c = this.bones.length,
              _ = h ? c : c + 1,
              d = [];
            this._spaces = d, d[0] = this.position;
            var f = this.spacing;
            if (l || s)
              for (var p = 0, m = _ - 1; p < m;) {
                var g = this.bones[p],
                  v = g.length,
                  y = v * g.resultMatrix.a,
                  x = v * g.resultMatrix.b;
                v = Math.sqrt(y * y + x * x), l && (u[p] = v), d[++p] = s ? Math.max(0, v + f) : f;
              } else
                for (p = 1; p < _; p++) d[p] = f;
            var T = this.computeWorldPositions(this.target, t, e, _, h, "percent" == this.data.positionMode, "percent" == a);
            if (this._debugKey) {
              for (p = 0; p < T.length; p++) e.drawCircle(T[p++], T[p++], 5, "#00ff00");
              var S = [];
              for (p = 0; p < T.length; p++) S.push(T[p++], T[p++]);
              e.drawLines(0, 0, S, "#ff0000");
            }
            var w = T[0],
              E = T[1],
              b = this.data.offsetRotation,
              C = "chain" == o && 0 == b,
              M = NaN;
            for (p = 0, M = 3; p < c; p++, M += 3) {
              (g = this.bones[p]).resultMatrix.tx += (w - g.resultMatrix.tx) * i, g.resultMatrix.ty += (E - g.resultMatrix.ty) * i;
              var I = (y = T[M]) - w,
                D = (x = T[M + 1]) - E;
              if (l && 0 != (v = u[p])) {
                var A = (Math.sqrt(I * I + D * D) / v - 1) * n + 1;
                g.resultMatrix.a *= A, g.resultMatrix.c *= A;
              }
              if (w = y, E = x, r) {
                var R = g.resultMatrix.a,
                  P = g.resultMatrix.c,
                  L = g.resultMatrix.b,
                  O = g.resultMatrix.d,
                  N = NaN,
                  V = NaN,
                  F = NaN;
                N = h ? T[M - 1] : 0 == d[p + 1] ? T[M + 2] : Math.atan2(D, I), N -= Math.atan2(L, R) - b / 180 * Math.PI, C && (V = Math.cos(N), F = Math.sin(N), w += ((v = g.length) * (V * R - F * L) - I) * n, E += (v * (F * R + V * L) - D) * n), N > Math.PI ? N -= 2 * Math.PI : N < -Math.PI && (N += 2 * Math.PI), N *= n, V = Math.cos(N), F = Math.sin(N), g.resultMatrix.a = V * R - F * L, g.resultMatrix.c = V * P - F * O, g.resultMatrix.b = F * R + V * L, g.resultMatrix.d = F * P + V * O;
              }
            }
          }
        }, e.computeWorldVertices2 = function (e, i, n, r, a, s) {
          var o, h, l = e.currDisplayData.bones,
            u = e.currDisplayData.weights,
            c = e.currDisplayData.triangles,
            _ = 0,
            d = 0,
            f = 0,
            p = 0,
            m = 0,
            g = 0,
            v = 0,
            y = 0,
            x = 0,
            T = 0,
            S = 0;
          if (null != l) {
            for (_ = 0; _ < n; _ += 2) d += (p = l[d]) + 1, f += p;
            var w = i;
            for (m = s, g = 3 * f; m < r; m += 2) {
              for (v = 0, y = 0, p = l[d++], p += d; d < p; d++, g += 3) {
                o = w[l[d]].resultMatrix, x = u[g], T = u[g + 1];
                var E = u[g + 2];
                v += (x * o.a + T * o.c + o.tx) * E, y += (x * o.b + T * o.d + o.ty) * E;
              }
              a[m] = v, a[m + 1] = y;
            }
          } else {
            c || (c = u), e.deformData && (c = e.deformData);
            var b;
            if (b = e.parent, i)
              for (S = i.length, _ = 0; _ < S; _++)
                if (i[_].name == b) {
                  h = i[_];
                  break;
                }
            var C;
            h && (C = h.resultMatrix), C || (C = t._tempMt);
            var M = C.tx,
              I = C.ty,
              D = C.a,
              A = C.b,
              R = C.c,
              P = C.d;
            for (h && (P *= h.d), d = n, m = s; m < r; d += 2, m += 2) x = c[d], T = c[d + 1], a[m] = x * D + T * A + M, a[m + 1] = -(x * R + T * P + I);
          }
        }, e.computeWorldPositions = function (t, e, i, n, r, a, s) {
          t.currDisplayData.bones, t.currDisplayData.weights, t.currDisplayData.triangles;
          var o = [],
            h = 0,
            l = t.currDisplayData.verLen,
            u = this.position,
            c = this._spaces,
            _ = [],
            d = [],
            f = l / 6,
            p = -1,
            m = NaN,
            g = 0,
            v = 0,
            y = NaN,
            x = NaN,
            T = NaN,
            S = NaN;
          if (f--, l -= 4, this.computeWorldVertices2(t, e, 2, l, o, 0), this._debugKey)
            for (h = 0; h < o.length;) i.drawCircle(o[h++], o[h++], 10, "#ff0000");
          _ = o, this._curves.length = f;
          var w = this._curves;
          m = 0;
          var E = _[0],
            b = _[1],
            C = 0,
            M = 0,
            I = 0,
            D = 0,
            A = 0,
            R = 0,
            P = NaN,
            L = NaN,
            O = NaN,
            N = NaN,
            V = NaN,
            F = NaN,
            B = NaN,
            U = NaN,
            k = 0;
          for (h = 0, k = 2; h < f; h++, k += 6) C = _[k], M = _[k + 1], I = _[k + 2], D = _[k + 3], V = 2 * (P = .1875 * (E - 2 * C + I)) + (O = .09375 * (3 * (C - I) - E + (A = _[k + 4]))), F = 2 * (L = .1875 * (b - 2 * M + D)) + (N = .09375 * (3 * (M - D) - b + (R = _[k + 5]))), B = .75 * (C - E) + P + .16666667 * O, U = .75 * (M - b) + L + .16666667 * N, m += Math.sqrt(B * B + U * U), B += V, U += F, V += O, F += N, m += Math.sqrt(B * B + U * U), B += V, U += F, m += Math.sqrt(B * B + U * U), B += V + O, U += F + N, m += Math.sqrt(B * B + U * U), w[h] = m, E = A, b = R;
          if (a && (u *= m), s)
            for (h = 0; h < n; h++) c[h] *= m;
          var G = this._segments,
            H = 0,
            z = 0;
          for (h = 0, g = 0, v = 0, z = 0; h < n; h++, g += 3)
            if (x = c[h], u += x, (y = u) < 0) this.addBeforePosition(y, _, 0, d, g);
            else if (y > m) this.addAfterPosition(y - m, _, l - 4, d, g);
          else {
            for (;; v++)
              if (S = w[v], !(y > S)) {
                0 == v ? y /= S : y = (y - (T = w[v - 1])) / (S - T);
                break;
              }
            if (v != p) {
              p = v;
              var W = 6 * v;
              for (E = _[W], b = _[W + 1], C = _[W + 2], M = _[W + 3], I = _[W + 4], D = _[W + 5], V = 2 * (P = .03 * (E - 2 * C + I)) + (O = .006 * (3 * (C - I) - E + (A = _[W + 6]))), F = 2 * (L = .03 * (b - 2 * M + D)) + (N = .006 * (3 * (M - D) - b + (R = _[W + 7]))), B = .3 * (C - E) + P + .16666667 * O, U = .3 * (M - b) + L + .16666667 * N, H = Math.sqrt(B * B + U * U), G[0] = H, W = 1; W < 8; W++) B += V, U += F, V += O, F += N, H += Math.sqrt(B * B + U * U), G[W] = H;
              B += V, U += F, H += Math.sqrt(B * B + U * U), G[8] = H, B += V + O, U += F + N, H += Math.sqrt(B * B + U * U), G[9] = H, z = 0;
            }
            for (y *= H;; z++)
              if (S = G[z], !(y > S)) {
                0 == z ? y /= S : y = z + (y - (T = G[z - 1])) / (S - T);
                break;
              }
            this.addCurvePosition(.1 * y, E, b, C, M, I, D, A, R, d, g, r || h > 0 && 0 == x);
          }
          return d;
        }, e.addBeforePosition = function (t, e, i, n, r) {
          var a = e[i],
            s = e[i + 1],
            o = e[i + 2] - a,
            h = e[i + 3] - s,
            l = Math.atan2(h, o);
          n[r] = a + t * Math.cos(l), n[r + 1] = s + t * Math.sin(l), n[r + 2] = l;
        }, e.addAfterPosition = function (t, e, i, n, r) {
          var a = e[i + 2],
            s = e[i + 3],
            o = a - e[i],
            h = s - e[i + 1],
            l = Math.atan2(h, o);
          n[r] = a + t * Math.cos(l), n[r + 1] = s + t * Math.sin(l), n[r + 2] = l;
        }, e.addCurvePosition = function (t, e, i, n, r, a, s, o, h, l, u, c) {
          0 == t && (t = 1e-4);
          var _ = t * t,
            d = _ * t,
            f = 1 - t,
            p = f * f,
            m = p * f,
            g = f * t,
            v = 3 * g,
            y = f * v,
            x = v * t,
            T = e * m + n * y + a * x + o * d,
            S = i * m + r * y + s * x + h * d;
          l[u] = T, l[u + 1] = S, l[u + 2] = c ? Math.atan2(S - (i * p + r * g * 2 + s * _), T - (e * p + n * g * 2 + a * _)) : 0;
        }, t.NONE = -1, t.BEFORE = -2, t.AFTER = -3, n(t, ["_tempMt", function () {
          return this._tempMt = new m();
        }]), t;
      }(),
      H = function () {
        function t() {
          this.name = null, this.target = null, this.positionMode = null, this.spacingMode = null, this.rotateMode = null, this.offsetRotation = NaN, this.position = NaN, this.spacing = NaN, this.rotateMix = NaN, this.translateMix = NaN, this.bones = [];
        }
        return r(t, "laya.ani.bone.PathConstraintData"), t;
      }(),
      z = function () {
        function t() {
          this.name = null, this.slotArr = [];
        }
        return r(t, "laya.ani.bone.SkinData"), t;
      }(),
      W = function () {
        function t() {
          this.name = null, this.attachmentName = null, this.type = 0, this.transform = null, this.width = NaN, this.height = NaN, this.texture = null, this.bones = null, this.uvs = null, this.weights = null, this.triangles = null, this.vertices = null, this.lengths = null, this.verLen = 0;
        }
        r(t, "laya.ani.bone.SkinSlotDisplayData");
        var e = t.prototype;
        return e.createTexture = function (t) {
          return this.texture ? this.texture : (this.texture = new w(t.bitmap, this.uvs), this.uvs[0] > this.uvs[4] && this.uvs[1] > this.uvs[5] ? (this.texture.width = t.height, this.texture.height = t.width, this.texture.offsetX = -t.offsetX, this.texture.offsetY = -t.offsetY, this.texture.sourceWidth = t.sourceHeight, this.texture.sourceHeight = t.sourceWidth) : (this.texture.width = t.width, this.texture.height = t.height, this.texture.offsetX = -t.offsetX, this.texture.offsetY = -t.offsetY, this.texture.sourceWidth = t.sourceWidth, this.texture.sourceHeight = t.sourceHeight), v.isWebGL || this.uvs[1] > this.uvs[5] && (this.texture.offsetY = this.texture.sourceHeight - this.texture.height - this.texture.offsetY), this.texture);
        }, e.destory = function () {
          this.texture && this.texture.destroy();
        }, t;
      }(),
      j = function () {
        function t() {
          this.name = null, this.displayArr = [];
        }
        r(t, "laya.ani.bone.SlotData");
        return t.prototype.getDisplayByName = function (t) {
          for (var e = 0, i = this.displayArr.length; e < i; e++)
            if (this.displayArr[e].attachmentName == t) return e;
          return -1;
        }, t;
      }(),
      X = function () {
        function t(t, e) {
          this._data = null, this._bones = null, this.target = null, this.rotateMix = NaN, this.translateMix = NaN, this.scaleMix = NaN, this.shearMix = NaN, this._temp = s(2, 0), this._data = t, null == this._bones && (this._bones = []), this.target = e[t.targetIndex];
          var i = 0,
            n = 0;
          for (i = 0, n = t.boneIndexs.length; i < n; i++) this._bones.push(e[t.boneIndexs[i]]);
          this.rotateMix = t.rotateMix, this.translateMix = t.translateMix, this.scaleMix = t.scaleMix, this.shearMix = t.shearMix;
        }
        r(t, "laya.ani.bone.TfConstraint");
        return t.prototype.apply = function () {
          for (var t, e = this.target.resultMatrix.a, i = this.target.resultMatrix.b, n = this.target.resultMatrix.c, r = this.target.resultMatrix.d, a = 0, s = this._bones.length; a < s; a++) {
            if (t = this._bones[a], this.rotateMix > 0) {
              var o = t.resultMatrix.a,
                h = t.resultMatrix.b,
                l = t.resultMatrix.c,
                u = t.resultMatrix.d,
                c = Math.atan2(n, e) - Math.atan2(l, o) + this._data.offsetRotation * Math.PI / 180;
              c > Math.PI ? c -= 2 * Math.PI : c < -Math.PI && (c += 2 * Math.PI), c *= this.rotateMix;
              var _ = Math.cos(c),
                d = Math.sin(c);
              t.resultMatrix.a = _ * o - d * l, t.resultMatrix.b = _ * h - d * u, t.resultMatrix.c = d * o + _ * l, t.resultMatrix.d = d * h + _ * u;
            }
            if (this.translateMix && (this._temp[0] = this._data.offsetX, this._temp[1] = this._data.offsetY, this.target.localToWorld(this._temp), t.resultMatrix.tx += (this._temp[0] - t.resultMatrix.tx) * this.translateMix, t.resultMatrix.ty += (this._temp[1] - t.resultMatrix.ty) * this.translateMix, t.updateChild()), this.scaleMix > 0) {
              var f = Math.sqrt(t.resultMatrix.a * t.resultMatrix.a + t.resultMatrix.c * t.resultMatrix.c),
                p = Math.sqrt(e * e + n * n),
                m = f > 1e-5 ? (f + (p - f + this._data.offsetScaleX) * this.scaleMix) / f : 0;
              t.resultMatrix.a *= m, t.resultMatrix.c *= m, f = Math.sqrt(t.resultMatrix.b * t.resultMatrix.b + t.resultMatrix.d * t.resultMatrix.d), p = Math.sqrt(i * i + r * r), m = f > 1e-5 ? (f + (p - f + this._data.offsetScaleY) * this.scaleMix) / f : 0, t.resultMatrix.b *= m, t.resultMatrix.d *= m;
            }
            if (this.shearMix > 0) {
              h = t.resultMatrix.b, u = t.resultMatrix.d;
              var g = Math.atan2(u, h);
              (c = Math.atan2(r, i) - Math.atan2(n, e) - (g - Math.atan2(t.resultMatrix.c, t.resultMatrix.a))) > Math.PI ? c -= 2 * Math.PI : c < -Math.PI && (c += 2 * Math.PI), c = g + (c + this._data.offsetShearY * Math.PI / 180) * this.shearMix, m = Math.sqrt(h * h + u * u), t.resultMatrix.b = Math.cos(c) * m, t.resultMatrix.d = Math.sin(c) * m;
            }
          }
        }, t;
      }(),
      Y = function () {
        function t() {
          this.name = null, this.targetIndex = 0, this.rotateMix = NaN, this.translateMix = NaN, this.scaleMix = NaN, this.shearMix = NaN, this.offsetRotation = NaN, this.offsetX = NaN, this.offsetY = NaN, this.offsetScaleX = NaN, this.offsetScaleY = NaN, this.offsetShearY = NaN, this.boneIndexs = [];
        }
        return r(t, "laya.ani.bone.TfConstraintData"), t;
      }(),
      q = function () {
        function t() {
          this.skX = 0, this.skY = 0, this.scX = 1, this.scY = 1, this.x = 0, this.y = 0, this.skewX = 0, this.skewY = 0, this.mMatrix = null;
        }
        r(t, "laya.ani.bone.Transform");
        var e = t.prototype;
        return e.initData = function (t) {
          void 0 != t.x && (this.x = t.x), void 0 != t.y && (this.y = t.y), void 0 != t.skX && (this.skX = t.skX), void 0 != t.skY && (this.skY = t.skY), void 0 != t.scX && (this.scX = t.scX), void 0 != t.scY && (this.scY = t.scY);
        }, e.getMatrix = function () {
          var t;
          return (t = this.mMatrix ? this.mMatrix : this.mMatrix = new m()).identity(), t.scale(this.scX, this.scY), (this.skewX || this.skewY) && this.skew(t, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180), t.rotate(this.skX * Math.PI / 180), t.translate(this.x, this.y), t;
        }, e.skew = function (t, e, i) {
          var n = Math.sin(i),
            r = Math.cos(i),
            a = Math.sin(e),
            s = Math.cos(e);
          return t.setTo(t.a * s - t.b * n, t.a * a + t.b * r, t.c * s - t.d * n, t.c * a + t.d * r, t.tx * s - t.ty * n, t.tx * a + t.ty * r), t;
        }, t;
      }(),
      Q = function () {
        function t() {}
        return r(t, "laya.ani.bone.UVTools"), t.getRelativeUV = function (t, e, i) {
          var n = t[0],
            r = t[2] - t[0],
            a = t[1],
            s = t[5] - t[1];
          i || (i = []), i.length = e.length;
          var o = 0,
            h = 0;
          h = i.length;
          var l = 1 / r,
            u = 1 / s;
          for (o = 0; o < h; o += 2) i[o] = (e[o] - n) * l, i[o + 1] = (e[o + 1] - a) * u;
          return i;
        }, t.getAbsoluteUV = function (t, e, i) {
          if (0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5]) return i ? (E.copyArray(i, e), i) : e;
          var n = t[0],
            r = t[2] - t[0],
            a = t[1],
            s = t[5] - t[1];
          i || (i = []), i.length = e.length;
          var o = 0,
            h = 0;
          for (h = i.length, o = 0; o < h; o += 2) i[o] = e[o] * r + n, i[o + 1] = e[o + 1] * s + a;
          return i;
        }, t;
      }(),
      K = function () {
        function t() {
          this.startTime = NaN, this.duration = NaN, this.interpolationData = null, this.data = null, this.nextData = null;
        }
        return r(t, "laya.ani.KeyFramesContent"), t;
      }(),
      Z = function () {
        function t() {}
        return r(t, "laya.ani.math.BezierLerp"), t.getBezierRate = function (e, i, n, r, a) {
          var s = t._getBezierParamKey(i, n, r, a),
            o = 100 * s + e;
          if (t._bezierResultCache[o]) return t._bezierResultCache[o];
          var h = t._getBezierPoints(i, n, r, a, s),
            l = 0,
            u = 0;
          for (u = h.length, l = 0; l < u; l += 2)
            if (e <= h[l]) return t._bezierResultCache[o] = h[l + 1], h[l + 1];
          return t._bezierResultCache[o] = 1, 1;
        }, t._getBezierParamKey = function (t, e, i, n) {
          return 100 * (100 * (100 * (100 * t + e) + i) + n);
        }, t._getBezierPoints = function (e, i, n, r, a) {
          if (t._bezierPointsCache[a]) return t._bezierPointsCache[a];
          var s;
          s = [0, 0, e, i, n, r, 1, 1];
          var h;
          return h = new o().getBezierPoints(s, 100, 3), t._bezierPointsCache[a] = h, h;
        }, t._bezierResultCache = {}, t._bezierPointsCache = {}, t;
      }(),
      $ = function (t) {
        function e() {
          this._destroyed = !1, this._templet = null, this._currentTime = NaN, this._currentFrameTime = NaN, this._playStart = NaN, this._playEnd = NaN, this._playDuration = NaN, this._overallDuration = NaN, this._stopWhenCircleFinish = !1, this._elapsedPlaybackTime = NaN, this._startUpdateLoopCount = NaN, this._currentAnimationClipIndex = 0, this._currentKeyframeIndex = 0, this._paused = !1, this._cacheFrameRate = 0, this._cacheFrameRateInterval = NaN, this._cachePlayRate = NaN, this._fullFrames = null, this.isCache = !0, this.playbackRate = 1, this.returnToZeroStopped = !1, e.__super.call(this), this._destroyed = !1, this._currentAnimationClipIndex = -1, this._currentKeyframeIndex = -1, this._currentTime = 0, this._overallDuration = Number.MAX_VALUE, this._stopWhenCircleFinish = !1, this._elapsedPlaybackTime = 0, this._startUpdateLoopCount = -1, this._cachePlayRate = 1, this.cacheFrameRate = 60, this.returnToZeroStopped = !1;
        }
        r(e, "laya.ani.AnimationPlayer", u);
        var n = e.prototype;
        return i.imps(n, {
          "laya.resource.IDestroy": !0
        }), n._onTempletLoadedComputeFullKeyframeIndices = function (t, e, i) {
          this._templet === i && this._cachePlayRate === t && this._cacheFrameRate === e && this._computeFullKeyframeIndices();
        }, n._computeFullKeyframeIndices = function () {
          for (var t = this._fullFrames = [], e = this._templet, i = this._cacheFrameRateInterval * this._cachePlayRate, n = 0, r = e.getAnimationCount(); n < r; n++) {
            for (var a = [], s = 0, o = e.getAnimation(n).nodes.length; s < o; s++) {
              for (var h = e.getAnimation(n).nodes[s], l = Math.floor(h.playTime / i + .01), u = new Uint16Array(l + 1), c = -1, _ = 0, d = h.keyFrame.length; _ < d; _++) {
                var f = h.keyFrame[_],
                  p = f.startTime,
                  m = p + f.duration + i;
                do {
                  for (var g = Math.floor(p / i + .5), v = c + 1; v < g; v++) u[v] = _;
                  c = g, u[g] = _, p += i;
                } while (p <= m);
              }
              a.push(u);
            }
            t.push(a);
          }
        }, n._onAnimationTempletLoaded = function () {
          this.destroyed || this._calculatePlayDuration();
        }, n._calculatePlayDuration = function () {
          if (0 !== this.state) {
            var t = this._templet.getAniDuration(this._currentAnimationClipIndex);
            0 === this._playEnd && (this._playEnd = t), this._playEnd > t && (this._playEnd = t), this._playDuration = this._playEnd - this._playStart;
          }
        }, n._setPlayParams = function (t, e) {
          this._currentTime = t, this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e + .01), 0), this._currentFrameTime = this._currentKeyframeIndex * e;
        }, n._setPlayParamsWhenStop = function (t, e) {
          this._currentTime = t, this._currentKeyframeIndex = Math.max(Math.floor(t / e + .01), 0), this._currentFrameTime = this._currentKeyframeIndex * e, this._currentAnimationClipIndex = -1;
        }, n._update = function (t) {
          if (-1 !== this._currentAnimationClipIndex && !this._paused && this._templet && this._templet.loaded) {
            var e = this._cacheFrameRateInterval * this._cachePlayRate,
              i = 0;
            this._startUpdateLoopCount !== S.loopCount && (i = t * this.playbackRate, this._elapsedPlaybackTime += i);
            var n = this.playDuration;
            if (0 !== this._overallDuration && this._elapsedPlaybackTime >= this._overallDuration || 0 === this._overallDuration && this._elapsedPlaybackTime >= n) return this._setPlayParamsWhenStop(n, e), void this.event("stopped");
            if (i += this._currentTime, n > 0)
              if (i >= n)
                do {
                  if (i -= n, this._stopWhenCircleFinish) return this._setPlayParamsWhenStop(n, e), this._stopWhenCircleFinish = !1, void this.event("stopped");
                  i < n && (this._setPlayParams(i, e), this.event("complete"));
                } while (i >= n);
              else this._setPlayParams(i, e);
            else {
              if (this._stopWhenCircleFinish) return this._setPlayParamsWhenStop(n, e), this._stopWhenCircleFinish = !1, void this.event("stopped");
              this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0, this.event("complete");
            }
          }
        }, n._destroy = function () {
          this.offAll(), this._templet = null, this._fullFrames = null, this._destroyed = !0;
        }, n.play = function (t, e, i, n, r) {
          if (void 0 === t && (t = 0), void 0 === e && (e = 1), void 0 === i && (i = 2147483647), void 0 === n && (n = 0), void 0 === r && (r = 0), !this._templet) throw new Error("AnimationPlayer:templet must not be null,maybe you need to set url.");
          if (i < 0 || n < 0 || r < 0) throw new Error("AnimationPlayer:overallDuration,playStart and playEnd must large than zero.");
          if (0 !== r && n > r) throw new Error("AnimationPlayer:start must less than end.");
          this._currentTime = 0, this._currentFrameTime = 0, this._elapsedPlaybackTime = 0, this.playbackRate = e, this._overallDuration = i, this._playStart = n, this._playEnd = r, this._paused = !1, this._currentAnimationClipIndex = t, this._currentKeyframeIndex = 0, this._startUpdateLoopCount = S.loopCount, this.event("played"), this._templet.loaded ? this._calculatePlayDuration() : this._templet.once("loaded", this, this._onAnimationTempletLoaded), this._update(0);
        }, n.playByFrame = function (t, e, i, n, r, a) {
          void 0 === t && (t = 0), void 0 === e && (e = 1), void 0 === i && (i = 2147483647), void 0 === n && (n = 0), void 0 === r && (r = 0), void 0 === a && (a = 30);
          var s = 1e3 / a;
          this.play(t, e, i, n * s, r * s);
        }, n.stop = function (t) {
          void 0 === t && (t = !0), t ? (this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0, this._currentAnimationClipIndex = -1, this.event("stopped")) : this._stopWhenCircleFinish = !0;
        }, a(0, n, "playEnd", function () {
          return this._playEnd;
        }), a(0, n, "templet", function () {
          return this._templet;
        }, function (t) {
          0 === !this.state && this.stop(!0), this._templet !== t && (this._templet = t, t.loaded ? this._computeFullKeyframeIndices() : t.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, this._cacheFrameRate]));
        }), a(0, n, "playStart", function () {
          return this._playStart;
        }), a(0, n, "playDuration", function () {
          return this._playDuration;
        }), a(0, n, "state", function () {
          return -1 === this._currentAnimationClipIndex ? 0 : this._paused ? 1 : 2;
        }), a(0, n, "currentKeyframeIndex", function () {
          return this._currentKeyframeIndex;
        }), a(0, n, "overallDuration", function () {
          return this._overallDuration;
        }), a(0, n, "currentFrameTime", function () {
          return this._currentFrameTime;
        }), a(0, n, "currentAnimationClipIndex", function () {
          return this._currentAnimationClipIndex;
        }), a(0, n, "currentPlayTime", function () {
          return this._currentTime + this._playStart;
        }), a(0, n, "cachePlayRate", function () {
          return this._cachePlayRate;
        }, function (t) {
          this._cachePlayRate !== t && (this._cachePlayRate = t, this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [t, this._cacheFrameRate])));
        }), a(0, n, "cacheFrameRate", function () {
          return this._cacheFrameRate;
        }, function (t) {
          this._cacheFrameRate !== t && (this._cacheFrameRate = t, this._cacheFrameRateInterval = 1e3 / this._cacheFrameRate, this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, t])));
        }), a(0, n, "currentTime", null, function (t) {
          if (-1 !== this._currentAnimationClipIndex && this._templet && this._templet.loaded) {
            if (t < this._playStart || t > this._playEnd) throw new Error("AnimationPlayer:value must large than playStartTime,small than playEndTime.");
            this._startUpdateLoopCount = S.loopCount;
            var e = this._cacheFrameRateInterval * this._cachePlayRate;
            this._currentTime = t, this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e), 0), this._currentFrameTime = this._currentKeyframeIndex * e;
          }
        }), a(0, n, "paused", function () {
          return this._paused;
        }, function (t) {
          this._paused = t, t && this.event("paused");
        }), a(0, n, "cacheFrameRateInterval", function () {
          return this._cacheFrameRateInterval;
        }), a(0, n, "destroyed", function () {
          return this._destroyed;
        }), e;
      }(),
      J = function (t) {
        function e() {
          e.__super.call(this), v.isConchNode && (this.drawSkin = function (t) {
            t.transform || (t.transform = m.EMPTY), this._addCmd([t]), this.setSkinMesh && this.setSkinMesh(t._ps, t.mVBData, t.mEleNum, 0, t.mTexture, t.transform);
          });
        }
        r(e, "laya.ani.GraphicsAni", c);
        return e.prototype.drawSkin = function (t) {
          var e = [t];
          this._saveToCmd(v._context._drawSkin, e);
        }, e.create = function () {
          return e._caches.pop() || new e();
        }, e.recycle = function (t) {
          t.clear(), e._caches.push(t);
        }, e._caches = [], e;
      }(),
      tt = function (t) {
        function e() {
          e.__super.call(this), this.mesh = new P();
        }
        r(e, "laya.ani.bone.canvasmesh.SkinMeshCanvas", R);
        var i = e.prototype;
        return i.init2 = function (t, e, i, n, r) {
          this.transform && (this.transform = null);
          var a;
          i ? a = i : (a = []).push(0, 1, 3, 3, 1, 2), this.mesh.texture = t, this.mesh.indexes = a, this.mesh.vertices = n, this.mesh.uvs = r;
        }, i.render = function (t, i, n) {
          this.mesh.texture && (this.transform ? (this.transform.translate(i, n), this.renderToContext(t), this.transform.translate(-i, -n)) : (this.transform = e._tempMatrix, this.transform.identity(), this.transform.translate(i, n), this.renderToContext(t), this.transform.translate(-i, -n), this.transform = null));
        }, n(e, ["_tempMatrix", function () {
          return this._tempMatrix = new m();
        }]), e;
      }(),
      et = function (t) {
        function e() {
          this._aniMap = {}, this.unfixedLastAniIndex = -1, e.__super.call(this), this._anis = new Array();
        }
        r(e, "laya.ani.AnimationTemplet", y);
        var n = e.prototype;
        return n.parse = function (t) {
          var e = new l(t);
          this._aniVersion = e.readUTFString(), M.parse(this, e);
        }, n._calculateKeyFrame = function (t, e, i) {
          var n = t.keyFrame;
          n[e] = n[0];
          for (var r = 0; r < e; r++) {
            var a = n[r];
            a.nextData = 0 === a.duration ? a.data : n[r + 1].data;
          }
          n.length--;
        }, n.onAsynLoaded = function (t, e, i) {
          var n = new l(e);
          switch (this._aniVersion = n.readUTFString(), this._aniVersion) {
            case "LAYAANIMATION:02":
              I.parse(this, n);
              break;
            default:
              M.parse(this, n);
          }
          this._endLoaded();
        }, n.disposeResource = function () {
          this._aniVersion = null, this._anis = null, this._aniMap = null, this._publicExtData = null, this.unfixedCurrentFrameIndexes = null, this.unfixedCurrentTimes = null, this.unfixedKeyframes = null, this._aniClassName = null, this._animationDatasCache = null;
        }, n.getAnimationCount = function () {
          return this._anis.length;
        }, n.getAnimation = function (t) {
          return this._anis[t];
        }, n.getAniDuration = function (t) {
          return this._anis[t].playTime;
        }, n.getNodes = function (t) {
          return this._anis[t].nodes;
        }, n.getNodeIndexWithName = function (t, e) {
          return this._anis[t].bone3DMap[e];
        }, n.getNodeCount = function (t) {
          return this._anis[t].nodes.length;
        }, n.getTotalkeyframesLength = function (t) {
          return this._anis[t].totalKeyframeDatasLength;
        }, n.getPublicExtData = function () {
          return this._publicExtData;
        }, n.getAnimationDataWithCache = function (t, e, i, n) {
          var r = e[i];
          if (r) {
            var a = r[t];
            return a ? a[n] : null;
          }
          return null;
        }, n.setAnimationDataWithCache = function (t, e, i, n, r) {
          var a = e[i] || (e[i] = {});
          (a[t] || (a[t] = []))[n] = r;
        }, n.getOriginalData = function (t, i, n, r, a) {
          for (var s = this._anis[t].nodes, o = 0, h = 0, l = s.length, u = 0; h < l; h++) {
            var c, _ = s[h];
            c = _.keyFrame[n[h][r]], _.dataOffset = u;
            var d = a - c.startTime,
              f = _.lerpType;
            if (f) switch (f) {
              case 0:
              case 1:
                for (o = 0; o < _.keyframeWidth;) o += _.interpolationMethod[o](_, o, i, u + o, c.data, d, null, c.duration, c.nextData);
                break;
              case 2:
                var p = c.interpolationData,
                  m = p.length,
                  g = 0;
                for (o = 0; o < m;) {
                  var v = p[o];
                  switch (v) {
                    case 6:
                    case 7:
                      o += e.interpolation[v](_, g, i, u + g, c.data, d, null, c.duration, c.nextData, p, o + 1);
                      break;
                    default:
                      o += e.interpolation[v](_, g, i, u + g, c.data, d, null, c.duration, c.nextData);
                  }
                  g++;
                }
            } else
              for (o = 0; o < _.keyframeWidth;) o += _.interpolationMethod[o](_, o, i, u + o, c.data, d, null, c.duration, c.nextData);
            u += _.keyframeWidth;
          }
        }, n.getNodesCurrentFrameIndex = function (t, e) {
          var i = this._anis[t].nodes;
          t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(i.length), this.unfixedCurrentTimes = new Float32Array(i.length), this.unfixedLastAniIndex = t);
          for (var n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            for (e < this.unfixedCurrentTimes[n] && (this.unfixedCurrentFrameIndexes[n] = 0), this.unfixedCurrentTimes[n] = e; this.unfixedCurrentFrameIndexes[n] < a.keyFrame.length && !(a.keyFrame[this.unfixedCurrentFrameIndexes[n]].startTime > this.unfixedCurrentTimes[n]);) this.unfixedCurrentFrameIndexes[n]++;
            this.unfixedCurrentFrameIndexes[n]--;
          }
          return this.unfixedCurrentFrameIndexes;
        }, n.getOriginalDataUnfixedRate = function (t, i, n) {
          var r = this._anis[t].nodes;
          t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(r.length), this.unfixedCurrentTimes = new Float32Array(r.length), this.unfixedKeyframes = s(r.length), this.unfixedLastAniIndex = t);
          for (var a = 0, o = 0, h = r.length, l = 0; o < h; o++) {
            var u = r[o];
            for (n < this.unfixedCurrentTimes[o] && (this.unfixedCurrentFrameIndexes[o] = 0), this.unfixedCurrentTimes[o] = n; this.unfixedCurrentFrameIndexes[o] < u.keyFrame.length && !(u.keyFrame[this.unfixedCurrentFrameIndexes[o]].startTime > this.unfixedCurrentTimes[o]);) this.unfixedKeyframes[o] = u.keyFrame[this.unfixedCurrentFrameIndexes[o]], this.unfixedCurrentFrameIndexes[o]++;
            var c = this.unfixedKeyframes[o];
            u.dataOffset = l;
            var _ = n - c.startTime;
            if (u.lerpType) switch (u.lerpType) {
              case 0:
              case 1:
                for (a = 0; a < u.keyframeWidth;) a += u.interpolationMethod[a](u, a, i, l + a, c.data, _, null, c.duration, c.nextData);
                break;
              case 2:
                var d = c.interpolationData,
                  f = d.length,
                  p = 0;
                for (a = 0; a < f;) {
                  var m = d[a];
                  switch (m) {
                    case 6:
                    case 7:
                      a += e.interpolation[m](u, p, i, l + p, c.data, _, null, c.duration, c.nextData, d, a + 1);
                      break;
                    default:
                      a += e.interpolation[m](u, p, i, l + p, c.data, _, null, c.duration, c.nextData);
                  }
                  p++;
                }
            } else
              for (a = 0; a < u.keyframeWidth;) a += u.interpolationMethod[a](u, a, i, l + a, c.data, _, null, c.duration, c.nextData);
            l += u.keyframeWidth;
          }
        }, e._LinearInterpolation_0 = function (t, e, i, n, r, a, s, o, h, l) {
          var u = 0 === o ? 0 : a / o;
          return i[n] = (1 - u) * r[e] + u * h[e], 1;
        }, e._QuaternionInterpolation_1 = function (t, e, i, n, r, a, s, o, h, l) {
          var u = 0 === o ? 0 : a / o;
          return p.slerpQuaternionArray(r, e, h, e, u, i, n), 4;
        }, e._AngleInterpolation_2 = function (t, e, i, n, r, a, s, o, h, l) {
          return 0;
        }, e._RadiansInterpolation_3 = function (t, e, i, n, r, a, s, o, h, l) {
          return 0;
        }, e._Matrix4x4Interpolation_4 = function (t, e, i, n, r, a, s, o, h, l) {
          for (var u = 0; u < 16; u++, e++) i[n + u] = r[e] + a * s[e];
          return 16;
        }, e._NoInterpolation_5 = function (t, e, i, n, r, a, s, o, h, l) {
          return i[n] = r[e], 1;
        }, e._BezierInterpolation_6 = function (t, e, i, n, r, a, s, o, h, l, u) {
          return void 0 === u && (u = 0), i[n] = r[e] + (h[e] - r[e]) * Z.getBezierRate(a / o, l[u], l[u + 1], l[u + 2], l[u + 3]), 5;
        }, e._BezierInterpolation_7 = function (t, e, i, n, r, a, s, o, h, l, u) {
          return void 0 === u && (u = 0), i[n] = l[u + 4] + l[u + 5] * Z.getBezierRate((.001 * a + l[u + 6]) / l[u + 7], l[u], l[u + 1], l[u + 2], l[u + 3]), 9;
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.interpolation = [e._LinearInterpolation_0, e._QuaternionInterpolation_1, e._AngleInterpolation_2, e._RadiansInterpolation_3, e._Matrix4x4Interpolation_4, e._NoInterpolation_5, e._BezierInterpolation_6, e._BezierInterpolation_7], e;
      }(),
      it = (function (t) {
        function e() {
          this.isCached = !1, this.canvas = null, this.tex = null, this.rec = null, e.__super.call(this);
        }
        r(e, "laya.ani.bone.canvasmesh.CacheAbleSkinMesh", tt);
        var i = e.prototype;
        i.getCanvasPic = function () {
          var t = new _("2D"),
            i = t.getContext("2d");
          this.rec = this.mesh.getBounds(), t.size(this.rec.width, this.rec.height);
          var n;
          return n = this.transform, this.transform = e.tempMt, this.transform.identity(), this.transform.translate(-this.rec.x, -this.rec.y), this.renderToContext(i), this.transform.translate(+this.rec.x, +this.rec.y), this.transform = n, new w(t);
        }, i.render = function (t, e, i) {
          this.mesh.texture && (this.isCached || (this.isCached = !0, this.tex = this.getCanvasPic()), this.transform ? (this.transform.translate(e, i), this._renderTextureToContext(t), this.transform.translate(-e, -i)) : (this.transform = tt._tempMatrix, this.transform.identity(), this.transform.translate(e, i), this._renderTextureToContext(t), this.transform.translate(-e, -i), this.transform = null));
        }, i._renderTextureToContext = function (t) {
          this.context = t.ctx || t, t.save();
          var e;
          if (e = this.tex, this.transform) {
            var i = this.transform;
            t.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
          }
          this.rec = this.mesh.getBounds(), t.translate(this.rec.x, this.rec.y), t.drawTexture(e, 0, 0, e.width, e.height, 0, 0), t.restore();
        }, n(e, ["tempMt", function () {
          return this.tempMt = new m();
        }]);
      }(), function (t) {
        function e() {
          this.cacheOK = !1, this.cacheCmdOK = !1, this.transformCmds = [], this.drawCmds = [], e.__super.call(this), this.tempMesh = new P();
        }
        r(e, "laya.ani.bone.canvasmesh.SimpleSkinMeshCanvas", t);
        var i = e.prototype;
        return i.init2 = function (e, i, n, r, a) {
          t.prototype.init2.call(this, e, i, n, r, a), this.cacheOK = !1, this.cacheCmdOK = !1, this.transformCmds.length = 6, this.drawCmds.length = 9;
        }, i.renderToContext = function (t) {
          if (this.context = t.ctx || t, this.mesh) {
            if (this.mesh.uvs.length <= 8) return void(0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh));
            this.cacheOK || (this.tempMesh.texture = this.mesh.texture, this.tempMesh.uvs = this.mesh.texture.uv, this.tempMesh.vertices = k.solveMesh(this.mesh, this.tempMesh.vertices), this.cacheOK = !0), 0 == this.mode ? this._renderWithIndexes(this.tempMesh) : this._renderNoIndexes(this.tempMesh);
          }
        }, i._renderWithIndexes = function (t) {
          if (this.cacheCmdOK) this.renderByCache(t);
          else {
            var e = t.indexes,
              i = 0,
              n = e.length;
            for (n > 1 && (n = 1), i = 0; i < n; i += 3) {
              var r = 2 * e[i],
                a = 2 * e[i + 1],
                s = 2 * e[i + 2];
              this._renderDrawTriangle(t, r, a, s);
            }
            this.cacheCmdOK = !0;
          }
        }, i._renderDrawTriangle = function (t, e, i, n) {
          var r = this.context,
            a = t.uvs,
            s = t.vertices,
            o = t.texture,
            h = o.bitmap,
            l = h.source,
            u = o.width,
            c = o.height,
            _ = h.width,
            d = h.height,
            f = NaN,
            p = NaN,
            m = NaN,
            g = NaN,
            v = NaN,
            y = NaN;
          if (t.useUvTransform) {
            var x = t.uvTransform;
            f = (a[e] * x.a + a[e + 1] * x.c + x.tx) * _, p = (a[i] * x.a + a[i + 1] * x.c + x.tx) * _, m = (a[n] * x.a + a[n + 1] * x.c + x.tx) * _, g = (a[e] * x.b + a[e + 1] * x.d + x.ty) * d, v = (a[i] * x.b + a[i + 1] * x.d + x.ty) * d, y = (a[n] * x.b + a[n + 1] * x.d + x.ty) * d;
          } else f = a[e] * _, p = a[i] * _, m = a[n] * _, g = a[e + 1] * d, v = a[i + 1] * d, y = a[n + 1] * d;
          var T = s[e],
            S = s[i],
            w = s[n],
            E = s[e + 1],
            b = s[i + 1],
            C = s[n + 1],
            M = 1 / (f * v + g * m + p * y - v * m - g * p - f * y),
            I = T * v + g * w + S * y - v * w - g * S - T * y,
            D = f * S + T * m + p * w - S * m - T * p - f * w,
            A = f * v * w + g * S * m + T * p * y - T * v * m - g * p * w - f * S * y,
            R = E * v + g * C + b * y - v * C - g * b - E * y,
            P = f * b + E * m + p * C - b * m - E * p - f * C,
            L = f * v * C + g * b * m + E * p * y - E * v * m - g * p * C - f * b * y;
          if (this.transformCmds[0] = I * M, this.transformCmds[1] = R * M, this.transformCmds[2] = D * M, this.transformCmds[3] = P * M, this.transformCmds[4] = A * M, this.transformCmds[5] = L * M, this.drawCmds[0] = l, this.drawCmds[1] = o.uv[0] * _, this.drawCmds[2] = o.uv[1] * d, this.drawCmds[3] = u, this.drawCmds[4] = c, this.drawCmds[5] = o.uv[0] * _, this.drawCmds[6] = o.uv[1] * d, this.drawCmds[7] = u, this.drawCmds[8] = c, r.save(), this.transform) {
            var O = this.transform;
            r.transform(O.a, O.b, O.c, O.d, O.tx, O.ty);
          }
          r.transform.apply(r, this.transformCmds), r.drawImage.apply(r, this.drawCmds), r.restore();
        }, i.renderByCache = function (t) {
          var e = this.context;
          if (e.save(), this.transform) {
            var i = this.transform;
            e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
          }
          e.transform.apply(e, this.transformCmds), e.drawImage.apply(e, this.drawCmds), e.restore();
        }, e;
      }(tt)),
      nt = function (t) {
        function e(t, i) {
          this._templet = null, this._player = null, this._curOriginalData = null, this._boneMatrixArray = [], this._lastTime = 0, this._currAniName = null, this._currAniIndex = -1, this._pause = !0, this._aniClipIndex = -1, this._clipIndex = -1, this._skinIndex = 0, this._skinName = "default", this._aniMode = 0, this._graphicsCache = null, this._boneSlotDic = null, this._bindBoneBoneSlotDic = null, this._boneSlotArray = null, this._index = -1, this._total = -1, this._indexControl = !1, this._aniPath = null, this._texturePath = null, this._complete = null, this._loadAniMode = 0, this._yReverseMatrix = null, this._ikArr = null, this._tfArr = null, this._pathDic = null, this._rootBone = null, this._boneList = null, this._aniSectionDic = null, this._eventIndex = 0, this._drawOrderIndex = 0, this._drawOrder = null, this._lastAniClipIndex = -1, this._lastUpdateAniClipIndex = -1, e.__super.call(this), void 0 === i && (i = 0), t && this.init(t, i);
        }
        r(e, "laya.ani.bone.Skeleton", t);
        var n = e.prototype;
        return n.init = function (t, e) {
          void 0 === e && (e = 0);
          var i = 0,
            n = 0;
          if (1 == e)
            for (this._graphicsCache = [], i = 0, n = t.getAnimationCount(); i < n; i++) this._graphicsCache.push([]);
          if (this._yReverseMatrix = t.yReverseMatrix, this._aniMode = e, this._templet = t, this._player = new $(), this._player.cacheFrameRate = t.rate, this._player.templet = t, this._player.play(), this._parseSrcBoneMatrix(), this._boneList = t.mBoneArr, this._rootBone = t.mRootBone, this._aniSectionDic = t.aniSectionDic, t.ikArr.length > 0)
            for (this._ikArr = [], i = 0, n = t.ikArr.length; i < n; i++) this._ikArr.push(new B(t.ikArr[i], this._boneList));
          if (t.pathArr.length > 0) {
            var r, a;
            null == this._pathDic && (this._pathDic = {});
            var s;
            for (i = 0, n = t.pathArr.length; i < n; i++) r = t.pathArr[i], a = new G(r, this._boneList), (s = this._boneSlotDic[r.name]) && ((a = new G(r, this._boneList)).target = s), this._pathDic[r.name] = a;
          }
          if (t.tfArr.length > 0)
            for (this._tfArr = [], i = 0, n = t.tfArr.length; i < n; i++) this._tfArr.push(new X(t.tfArr[i], this._boneList));
          if (t.skinDataArray.length > 0) {
            var o = this._templet.skinDataArray[this._skinIndex];
            this._skinName = o.name;
          }
          this._player.on("played", this, this._onPlay), this._player.on("stopped", this, this._onStop), this._player.on("paused", this, this._onPause);
        }, n.load = function (t, e, n) {
          void 0 === n && (n = 0), this._aniPath = t, this._complete = e, this._loadAniMode = n, i.loader.load([{
            url: t,
            type: "arraybuffer"
          }], d.create(this, this._onLoaded));
        }, n._onLoaded = function () {
          var t = f.getRes(this._aniPath);
          if (null != t) {
            null == rt.TEMPLET_DICTIONARY && (rt.TEMPLET_DICTIONARY = {});
            var e;
            (e = rt.TEMPLET_DICTIONARY[this._aniPath]) ? e.isParseFail ? this._parseFail() : e.isParserComplete ? this._parseComplete() : (e.on("complete", this, this._parseComplete), e.on("error", this, this._parseFail)): ((e = new rt())._setUrl(this._aniPath), rt.TEMPLET_DICTIONARY[this._aniPath] = e, e.on("complete", this, this._parseComplete), e.on("error", this, this._parseFail), e.isParserComplete = !1, e.parseData(null, t));
          }
        }, n._parseComplete = function () {
          var t = rt.TEMPLET_DICTIONARY[this._aniPath];
          t && (this.init(t, this._loadAniMode), this.play(0, !0)), this._complete && this._complete.runWith(this);
        }, n._parseFail = function () {
          console.log("[Error]:" + this._aniPath + "解析失败");
        }, n._onPlay = function () {
          this.event("played");
        }, n._onStop = function () {
          var t, e = this._templet.eventAniArr[this._aniClipIndex];
          if (e && this._eventIndex < e.length)
            for (; this._eventIndex < e.length; this._eventIndex++)(t = e[this._eventIndex]).time >= this._player.playStart && t.time <= this._player.playEnd && this.event("label", t);
          this._eventIndex = 0, this._drawOrder = null, this.event("stopped");
        }, n._onPause = function () {
          this.event("paused");
        }, n._parseSrcBoneMatrix = function () {
          var t = 0,
            e = 0;
          for (e = this._templet.srcBoneMatrixArr.length, t = 0; t < e; t++) this._boneMatrixArray.push(new m());
          if (0 == this._aniMode) this._boneSlotDic = this._templet.boneSlotDic, this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic, this._boneSlotArray = this._templet.boneSlotArray;
          else {
            null == this._boneSlotDic && (this._boneSlotDic = {}), null == this._bindBoneBoneSlotDic && (this._bindBoneBoneSlotDic = {}), null == this._boneSlotArray && (this._boneSlotArray = []);
            var i, n, r = this._templet.boneSlotArray;
            for (t = 0, e = r.length; t < e; t++) i = r[t], null == (n = this._bindBoneBoneSlotDic[i.parent]) && (this._bindBoneBoneSlotDic[i.parent] = n = []), this._boneSlotDic[i.name] = i = i.copy(), n.push(i), this._boneSlotArray.push(i);
          }
        }, n._emitMissedEvents = function (t, e, i) {
          void 0 === i && (i = 0);
          var n = this._templet.eventAniArr[this._player.currentAnimationClipIndex];
          if (n) {
            var r, a = 0,
              s = 0;
            for (s = n.length, a = i; a < s; a++)(r = n[a]).time >= this._player.playStart && r.time <= this._player.playEnd && this.event("label", r);
          }
        }, n._update = function (t) {
          if (void 0 === t && (t = !0), !(this._pause || t && this._indexControl)) {
            var e = this.timer.currTimer,
              i = this._player.currentKeyframeIndex,
              n = e - this._lastTime;
            if (t ? this._player._update(n) : i = -1, this._lastTime = e, this._player && (this._index = this._clipIndex = this._player.currentKeyframeIndex, !(this._index < 0 || n > 0 && this._clipIndex == i && this._lastUpdateAniClipIndex == this._aniClipIndex))) {
              this._lastUpdateAniClipIndex = this._aniClipIndex, i > this._clipIndex && 0 != this._eventIndex && (this._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex), this._eventIndex = 0);
              var r, a = this._templet.eventAniArr[this._aniClipIndex];
              a && this._eventIndex < a.length && ((r = a[this._eventIndex]).time >= this._player.playStart && r.time <= this._player.playEnd ? this._player.currentPlayTime >= r.time && (this.event("label", r), this._eventIndex++) : this._eventIndex++);
              var s;
              if (0 == this._aniMode) {
                if (s = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex)) return void(this.graphics != s && (this.graphics = s));
                var o = 0,
                  h = 0;
                for (h = this._clipIndex; !this._templet.getGrahicsDataWithCache(this._aniClipIndex, h - 1) && h > 0;) h--;
                if (h < this._clipIndex)
                  for (o = h; o < this._clipIndex; o++) this._createGraphics(o);
              } else if (1 == this._aniMode) {
                if (s = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex)) return void(this.graphics != s && (this.graphics = s));
                for (h = this._clipIndex; !this._getGrahicsDataWithCache(this._aniClipIndex, h - 1) && h > 0;) h--;
                if (h < this._clipIndex)
                  for (o = h; o < this._clipIndex; o++) this._createGraphics(o);
              }
              this._createGraphics();
            }
          }
        }, n._createGraphics = function (t) {
          void 0 === t && (t = -1), -1 == t && (t = this._clipIndex);
          var e, i = t * this._player.cacheFrameRateInterval,
            n = this._templet.drawOrderAniArr[this._aniClipIndex];
          if (n && n.length > 0)
            for (this._drawOrderIndex = 0, e = n[this._drawOrderIndex]; i >= e.time && (this._drawOrder = e.drawOrder, this._drawOrderIndex++, !(this._drawOrderIndex >= n.length));) e = n[this._drawOrderIndex];
          var r;
          0 == this._aniMode || 1 == this._aniMode ? this.graphics = J.create() : this.graphics instanceof laya.ani.GraphicsAni ? this.graphics.clear() : this.graphics = J.create(), r = this.graphics;
          var a = this._templet.getNodes(this._aniClipIndex);
          this._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, this._player._fullFrames[this._aniClipIndex], t, i);
          var s, o, h, u, c = this._aniSectionDic[this._aniClipIndex],
            _ = 0,
            d = 0,
            f = 0,
            p = 0,
            g = 0,
            v = this._templet.srcBoneMatrixArr.length;
          for (d = 0, g = c[0]; d < v; d++) u = this._boneList[d], h = this._templet.srcBoneMatrixArr[d], u.resultTransform.scX = h.scX * this._curOriginalData[_++], u.resultTransform.skX = h.skX + this._curOriginalData[_++], u.resultTransform.skY = h.skY + this._curOriginalData[_++], u.resultTransform.scY = h.scY * this._curOriginalData[_++], u.resultTransform.x = h.x + this._curOriginalData[_++], u.resultTransform.y = h.y + this._curOriginalData[_++], 8 === this._templet.tMatrixDataLen && (u.resultTransform.skewX = h.skewX + this._curOriginalData[_++], u.resultTransform.skewY = h.skewY + this._curOriginalData[_++]);
          var y, x = {},
            T = {};
          for (g += c[1]; d < g; d++) x[(y = a[d]).name] = this._curOriginalData[_++], T[y.name] = this._curOriginalData[_++], this._curOriginalData[_++], this._curOriginalData[_++], this._curOriginalData[_++], this._curOriginalData[_++];
          var S = {},
            w = {};
          for (g += c[2]; d < g; d++) S[(y = a[d]).name] = this._curOriginalData[_++], w[y.name] = this._curOriginalData[_++], this._curOriginalData[_++], this._curOriginalData[_++], this._curOriginalData[_++], this._curOriginalData[_++];
          if (this._pathDic) {
            var E;
            for (g += c[3]; d < g; d++)
              if (y = a[d], E = this._pathDic[y.name]) {
                switch (new l(y.extenData).getByte()) {
                  case 1:
                    E.position = this._curOriginalData[_++];
                    break;
                  case 2:
                    E.spacing = this._curOriginalData[_++];
                    break;
                  case 3:
                    E.rotateMix = this._curOriginalData[_++], E.translateMix = this._curOriginalData[_++];
                }
              }
          }
          if (this._yReverseMatrix ? this._rootBone.update(this._yReverseMatrix) : this._rootBone.update(m.TEMP.identity()), this._ikArr) {
            var b;
            for (d = 0, g = this._ikArr.length; d < g; d++) b = this._ikArr[d], S.hasOwnProperty(b.name) && (b.bendDirection = S[b.name]), w.hasOwnProperty(b.name) && (b.mix = w[b.name]), b.apply();
          }
          if (this._pathDic)
            for (var C in this._pathDic)(E = this._pathDic[C]).apply(this._boneList, r);
          if (this._tfArr) {
            for (d = 0, p = this._tfArr.length; d < p; d++) this._tfArr[d].apply();
          }
          for (d = 0, p = this._boneList.length; d < p; d++)
            if (u = this._boneList[d], o = this._bindBoneBoneSlotDic[u.name], u.resultMatrix.copyTo(this._boneMatrixArray[d]), o)
              for (f = 0, g = o.length; f < g; f++)(s = o[f]) && s.setParentMatrix(u.resultMatrix);
          var M, I = {},
            D = this._templet.deformAniArr;
          if (D && D.length > 0) {
            if (this._lastAniClipIndex != this._aniClipIndex)
              for (this._lastAniClipIndex = this._aniClipIndex, d = 0, g = this._boneSlotArray.length; d < g; d++)(s = this._boneSlotArray[d]).deformData = null;
            var A = D[this._aniClipIndex];
            M = A.default, this._setDeform(M, I, this._boneSlotArray, i);
            var R;
            for (R in A) "default" != R && R != this._skinName && (M = A[R], this._setDeform(M, I, this._boneSlotArray, i));
            M = A[this._skinName], this._setDeform(M, I, this._boneSlotArray, i);
          }
          var P, L, O;
          if (this._drawOrder)
            for (d = 0, g = this._drawOrder.length; d < g; d++) P = x[(s = this._boneSlotArray[this._drawOrder[d]]).name], L = T[s.name], isNaN(L) || (r.save(), r.alpha(L)), isNaN(P) || -2 == P || (this._templet.attachmentNames ? s.showDisplayByName(this._templet.attachmentNames[P]) : s.showDisplayByIndex(P)), I[this._drawOrder[d]] ? (O = I[this._drawOrder[d]], s.currDisplayData && O[s.currDisplayData.attachmentName] ? s.deformData = O[s.currDisplayData.attachmentName] : s.deformData = null) : s.deformData = null, isNaN(L) ? s.draw(r, this._boneMatrixArray, 2 == this._aniMode) : s.draw(r, this._boneMatrixArray, 2 == this._aniMode, L), isNaN(L) || r.restore();
          else
            for (d = 0, g = this._boneSlotArray.length; d < g; d++) P = x[(s = this._boneSlotArray[d]).name], L = T[s.name], isNaN(L) || (r.save(), r.alpha(L)), isNaN(P) || -2 == P || (this._templet.attachmentNames ? s.showDisplayByName(this._templet.attachmentNames[P]) : s.showDisplayByIndex(P)), I[d] ? (O = I[d], s.currDisplayData && O[s.currDisplayData.attachmentName] ? s.deformData = O[s.currDisplayData.attachmentName] : s.deformData = null) : s.deformData = null, isNaN(L) ? s.draw(r, this._boneMatrixArray, 2 == this._aniMode) : s.draw(r, this._boneMatrixArray, 2 == this._aniMode, L), isNaN(L) || r.restore();
          0 == this._aniMode ? this._templet.setGrahicsDataWithCache(this._aniClipIndex, t, r) : 1 == this._aniMode && this._setGrahicsDataWithCache(this._aniClipIndex, t, r);
        }, n._setDeform = function (t, e, i, n) {
          if (t) {
            var r, a, s, o = 0,
              h = 0,
              l = 0;
            if (t)
              for (o = 0, h = t.deformSlotDataList.length; o < h; o++)
                for (r = t.deformSlotDataList[o], l = 0; l < r.deformSlotDisplayList.length; l++) s = i[(a = r.deformSlotDisplayList[l]).slotIndex], a.apply(n, s), e[a.slotIndex] || (e[a.slotIndex] = {}), e[a.slotIndex][a.attachment] = a.deformData;
          }
        }, n.getAnimNum = function () {
          return this._templet.getAnimationCount();
        }, n.getAniNameByIndex = function (t) {
          return this._templet.getAniNameByIndex(t);
        }, n.getSlotByName = function (t) {
          return this._boneSlotDic[t];
        }, n.showSkinByName = function (t, e) {
          void 0 === e && (e = !0), this.showSkinByIndex(this._templet.getSkinIndexByName(t), e);
        }, n.showSkinByIndex = function (t, e) {
          void 0 === e && (e = !0);
          for (var i = 0; i < this._boneSlotArray.length; i++) this._boneSlotArray[i].showSlotData(null, e);
          if (this._templet.showSkinByIndex(this._boneSlotDic, t, e)) {
            var n = this._templet.skinDataArray[t];
            this._skinIndex = t, this._skinName = n.name;
          }
          this._clearCache();
        }, n.showSlotSkinByIndex = function (t, e) {
          if (0 != this._aniMode) {
            var i = this.getSlotByName(t);
            i && i.showDisplayByIndex(e), this._clearCache();
          }
        }, n.showSlotSkinByName = function (t, e) {
          if (0 != this._aniMode) {
            var i = this.getSlotByName(t);
            i && i.showDisplayByName(e), this._clearCache();
          }
        }, n.replaceSlotSkinName = function (t, e, i) {
          if (0 != this._aniMode) {
            var n = this.getSlotByName(t);
            n && n.replaceDisplayByName(e, i), this._clearCache();
          }
        }, n.replaceSlotSkinByIndex = function (t, e, i) {
          if (0 != this._aniMode) {
            var n = this.getSlotByName(t);
            n && n.replaceDisplayByIndex(e, i), this._clearCache();
          }
        }, n.setSlotSkin = function (t, e) {
          if (0 != this._aniMode) {
            var i = this.getSlotByName(t);
            i && i.replaceSkin(e), this._clearCache();
          }
        }, n._clearCache = function () {
          if (1 == this._aniMode)
            for (var t = 0, e = this._graphicsCache.length; t < e; t++) {
              for (var i = 0, n = this._graphicsCache[t].length; i < n; i++) {
                var r = this._graphicsCache[t][i];
                r != this.graphics && J.recycle(r);
              }
              this._graphicsCache[t].length = 0;
            }
        }, n.play = function (t, e, i, n, r, a) {
          void 0 === i && (i = !0), void 0 === n && (n = 0), void 0 === r && (r = 0), void 0 === a && (a = !0), this._indexControl = !1;
          var s = -1,
            o = NaN;
          if (o = e ? 2147483647 : 0, "string" == typeof t)
            for (var l = 0, u = this._templet.getAnimationCount(); l < u; l++) {
              var c = this._templet.getAnimation(l);
              if (c && t == c.name) {
                s = l;
                break;
              }
            } else s = t;
          s > -1 && s < this.getAnimNum() && (this._aniClipIndex = s, (i || this._pause || this._currAniIndex != s) && (this._currAniIndex = s, this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(s)), this._drawOrder = null, this._eventIndex = 0, this._player.play(s, this._player.playbackRate, o, n, r), a && this._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex), this._pause && (this._pause = !1, this._lastTime = h.now(), this.timer.frameLoop(1, this, this._update, null, !0)), this._update()));
        }, n.stop = function () {
          this._pause || (this._pause = !0, this._player && this._player.stop(!0), this.timer.clear(this, this._update));
        }, n.playbackRate = function (t) {
          this._player && (this._player.playbackRate = t);
        }, n.paused = function () {
          this._pause || (this._pause = !0, this._player && (this._player.paused = !0), this.timer.clear(this, this._update));
        }, n.resume = function () {
          this._indexControl = !1, this._pause && (this._pause = !1, this._player && (this._player.paused = !1), this._lastTime = h.now(), this.timer.frameLoop(1, this, this._update, null, !0));
        }, n._getGrahicsDataWithCache = function (t, e) {
          return this._graphicsCache[t][e];
        }, n._setGrahicsDataWithCache = function (t, e, i) {
          this._graphicsCache[t][e] = i;
        }, n.destroy = function (e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._templet = null, this._player && this._player.offAll(), this._player = null, this._curOriginalData = null, this._boneMatrixArray.length = 0, this._lastTime = 0, this.timer.clear(this, this._update);
        }, a(0, n, "url", function () {
          return this._aniPath;
        }, function (t) {
          this.load(t);
        }), a(0, n, "index", function () {
          return this._index;
        }, function (t) {
          this.player && (this._index = t, this._player.currentTime = 1e3 * this._index / this._player.cacheFrameRate, this._indexControl = !0, this._update(!1));
        }), a(0, n, "total", function () {
          return this._templet && this._player ? this._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1e3 * this._player.cacheFrameRate) : this._total = -1, this._total;
        }), a(0, n, "templet", function () {
          return this._templet;
        }), a(0, n, "player", function () {
          return this._player;
        }), e.useSimpleMeshInCanvas = !1, e;
      }(T),
      rt = (function (t) {
        function e(t) {
          this._start = 0, this._Pos = 0, this._data = null, this._curIndex = 0, this._preIndex = 0, this._playIndex = 0, this._playing = !1, this._ended = !0, this._count = 0, this._ids = null, this._loadedImage = {}, this._idOfSprite = null, this._parentMovieClip = null, this._movieClipList = null, this._labels = null, this.basePath = null, this._atlasPath = null, this._url = null, this._isRoot = !1, this._completeHandler = null, this._endFrame = -1, this.interval = 30, this.loop = !1, e.__super.call(this), this._ids = {}, this._idOfSprite = [], this._reset(), this._playing = !1, this._parentMovieClip = t, t ? (this._isRoot = !1, this._movieClipList = t._movieClipList, this._movieClipList.push(this)) : (this._movieClipList = [this], this._isRoot = !0, this._setUpNoticeType(1));
        }
        r(e, "laya.ani.swf.MovieClip", t);
        var n = e.prototype;
        n.destroy = function (e) {
          void 0 === e && (e = !0), this._clear(), t.prototype.destroy.call(this, e);
        }, n._setDisplay = function (e) {
          t.prototype._setDisplay.call(this, e), this._isRoot && this._$3__onDisplay(e);
        }, n._$3__onDisplay = function (t) {
          t ? this.timer.loop(this.interval, this, this.updates, null, !0) : this.timer.clear(this, this.updates);
        }, n.updates = function () {
          if (!this._parentMovieClip) {
            var t = 0,
              e = 0;
            for (e = this._movieClipList.length, t = 0; t < e; t++) this._movieClipList[t] && this._movieClipList[t]._update();
          }
        }, n.addLabel = function (t, e) {
          this._labels || (this._labels = {}), this._labels[e] = t;
        }, n.removeLabel = function (t) {
          if (t) {
            if (!this._labels)
              for (var e in this._labels)
                if (this._labels[e] === t) {
                  delete this._labels[e];
                  break;
                }
          } else this._labels = null;
        }, n._update = function () {
          if (this._data && this._playing) {
            if (this._playIndex++, this._playIndex >= this._count) {
              if (!this.loop) return this._playIndex--, void this.stop();
              this._playIndex = 0;
            }
            if (this._parse(this._playIndex), this._labels && this._labels[this._playIndex] && this.event("label", this._labels[this._playIndex]), -1 != this._endFrame && this._endFrame == this._playIndex) {
              if (this._endFrame = -1, null != this._completeHandler) {
                var t = this._completeHandler;
                this._completeHandler = null, t.run();
              }
              this.stop();
            }
          }
        }, n.stop = function () {
          this._playing = !1;
        }, n.gotoAndStop = function (t) {
          this.index = t, this.stop();
        }, n._clear = function () {
          if (this.stop(), this._idOfSprite.length = 0, !this._parentMovieClip) {
            this.timer.clear(this, this.updates);
            var t = 0,
              e = 0;
            for (e = this._movieClipList.length, t = 0; t < e; t++) this._movieClipList[t] != this && this._movieClipList[t]._clear();
            this._movieClipList.length = 0;
          }
          this._atlasPath && f.clearRes(this._atlasPath);
          var i;
          for (i in this._loadedImage) this._loadedImage[i] && (f.clearRes(i), this._loadedImage[i] = !1);
          this.removeChildren(), this.graphics = null, this._parentMovieClip = null;
        }, n.play = function (t, e) {
          void 0 === t && (t = 0), void 0 === e && (e = !0), this.loop = e, this._playing = !0, this._data && this._displayFrame(t);
        }, n._displayFrame = function (t) {
          void 0 === t && (t = -1), -1 != t && (this._curIndex > t && this._reset(), this._parse(t));
        }, n._reset = function (t) {
          void 0 === t && (t = !0), t && 1 != this._curIndex && this.removeChildren(), this._preIndex = this._curIndex = -1, this._Pos = this._start;
        }, n._parse = function (t) {
          var i, n, r, a = 0,
            s = 0,
            o = 0,
            h = !1,
            l = this._idOfSprite,
            u = this._data;
          for (this._ended && this._reset(), u.pos = this._Pos, this._ended = !1, this._playIndex = t, this._curIndex > t && t < this._preIndex && (this._reset(!0), u.pos = this._Pos); this._curIndex <= t && !this._ended;) switch (u.getUint16()) {
            case 12:
              if (a = u.getUint16(), s = this._ids[u.getUint16()], this._Pos = u.pos, u.pos = s, 0 == (o = u.getUint8())) {
                var c = u.getUint16();
                if (!(n = l[a])) {
                  n = l[a] = new T();
                  var _ = new T();
                  _.loadImage(this.basePath + c + ".png"), this._loadedImage[this.basePath + c + ".png"] = !0, n.addChild(_), _.size(u.getFloat32(), u.getFloat32());
                  var d = u._getMatrix();
                  _.transform = d;
                }
                n.alpha = 1;
              } else 1 == o && ((i = l[a]) || (l[a] = i = new e(this), i.interval = this.interval, i._ids = this._ids, i.basePath = this.basePath, i._setData(u, s), i._initState(), i.play(0)), i.alpha = 1);
              u.pos = this._Pos;
              break;
            case 3:
              var f = l[u.getUint16()];
              f && (this.addChild(f), f.zOrder = u.getUint16(), h = !0);
              break;
            case 4:
              (f = l[u.getUint16()]) && f.removeSelf();
              break;
            case 5:
              l[u.getUint16()][e._ValueList[u.getUint16()]] = u.getFloat32();
              break;
            case 6:
              l[u.getUint16()].visible = u.getUint8() > 0;
              break;
            case 7:
              var p = (n = l[u.getUint16()]).transform || m.create();
              p.setTo(u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32()), n.transform = p;
              break;
            case 8:
              l[u.getUint16()].setPos(u.getFloat32(), u.getFloat32());
              break;
            case 9:
              l[u.getUint16()].setSize(u.getFloat32(), u.getFloat32());
              break;
            case 10:
              l[u.getUint16()].alpha = u.getFloat32();
              break;
            case 11:
              l[u.getUint16()].setScale(u.getFloat32(), u.getFloat32());
              break;
            case 98:
              r = u.getString(), this.event(r), "stop" == r && this.stop();
              break;
            case 99:
              this._curIndex = u.getUint16(), h && this.updateZOrder();
              break;
            case 100:
              this._count = this._curIndex + 1, this._ended = !0, this._playing && (this.event("enterframe"), this.event("end"), this.event("complete")), this._reset(!1);
          }
          this._playing && !this._ended && this.event("enterframe"), this._Pos = u.pos;
        }, n._setData = function (t, e) {
          this._data = t, this._start = e + 3;
        }, n.load = function (t, e, n) {
          void 0 === e && (e = !1), this._url = t, e && (this._atlasPath = n || t.split(".swf")[0] + ".json"), this.stop(), this._clear(), this._movieClipList = [this];
          var r;
          r = [{
            url: t,
            type: "arraybuffer"
          }], this._atlasPath && r.push({
            url: this._atlasPath,
            type: "atlas"
          }), i.loader.load(r, d.create(this, this._onLoaded));
        }, n._onLoaded = function () {
          var t;
          (t = f.getRes(this._url)) ? (this.basePath = this._atlasPath ? f.getAtlas(this._atlasPath).dir : this._url.split(".swf")[0] + "/image/", this._initData(t)) : this.event("error", "file not find");
        }, n._initState = function () {
          this._reset(), this._ended = !1;
          var t = this._playing;
          for (this._playing = !1, this._curIndex = 0; !this._ended;) this._parse(++this._curIndex);
          this._playing = t;
        }, n._initData = function (t) {
          this._data = new l(t);
          var e = 0,
            i = this._data.getUint16();
          for (e = 0; e < i; e++) this._ids[this._data.getInt16()] = this._data.getInt32();
          this.interval = 1e3 / this._data.getUint16(), this._setData(this._data, this._ids[32767]), this._initState(), this.play(0), this.event("loaded"), this._parentMovieClip || this.timer.loop(this.interval, this, this.updates, null, !0);
        }, n.playTo = function (t, e, i) {
          this._completeHandler = i, this._endFrame = e, this.play(t, !1);
        }, a(0, n, "index", function () {
          return this._playIndex;
        }, function (t) {
          this._playIndex = t, this._data && this._displayFrame(this._playIndex), this._labels && this._labels[t] && this.event("label", this._labels[t]);
        }), a(0, n, "count", function () {
          return this._count;
        }), a(0, n, "playing", function () {
          return this._playing;
        }), a(0, n, "url", null, function (t) {
          this.load(t);
        }), e._ValueList = ["x", "y", "width", "height", "scaleX", "scaleY", "rotation", "alpha"];
      }(T), function (t) {
        function e() {
          this._mainTexture = null, this._textureJson = null, this._graphicsCache = [], this.srcBoneMatrixArr = [], this.ikArr = [], this.tfArr = [], this.pathArr = [], this.boneSlotDic = {}, this.bindBoneBoneSlotDic = {}, this.boneSlotArray = [], this.skinDataArray = [], this.skinDic = {}, this.subTextureDic = {}, this.isParseFail = !1, this.yReverseMatrix = null, this.drawOrderAniArr = [], this.eventAniArr = [], this.attachmentNames = null, this.deformAniArr = [], this._isDestroyed = !1, this._rate = 30, this.isParserComplete = !1, this.aniSectionDic = {}, this._skBufferUrl = null, this._textureDic = {}, this._loadList = null, this._path = null, this.tMatrixDataLen = 0, this.mRootBone = null, e.__super.call(this), this.skinSlotDisplayDataArr = [], this.mBoneArr = [];
        }
        r(e, "laya.ani.bone.Templet", t);
        var n = e.prototype;
        return n.loadAni = function (t) {
          this._skBufferUrl = t, i.loader.load(t, d.create(this, this.onComplete), null, "arraybuffer");
        }, n.onComplete = function (t) {
          if (this._isDestroyed) this.destroy();
          else {
            var e = f.getRes(this._skBufferUrl);
            e ? (this._path = this._skBufferUrl.slice(0, this._skBufferUrl.lastIndexOf("/")) + "/", this.parseData(null, e)) : this.event("error", "load failed:" + this._skBufferUrl);
          }
        }, n.parseData = function (t, e, i) {
          void 0 === i && (i = 30), !this._path && this.url && (this._path = this.url.slice(0, this.url.lastIndexOf("/")) + "/"), this._mainTexture = t, this._mainTexture && v.isWebGL && t.bitmap && (t.bitmap.enableMerageInAtlas = !1), this._rate = i, this.parse(e);
        }, n.buildArmature = function (t) {
          return void 0 === t && (t = 0), new nt(this, t);
        }, n.parse = function (i) {
          t.prototype.parse.call(this, i), this._endLoaded(), this._aniVersion != e.LAYA_ANIMATION_VISION && (console.log("[Error] 版本不一致，请使用IDE版本配套的重新导出" + this._aniVersion + "->" + e.LAYA_ANIMATION_VISION), this._loaded = !1), this.loaded ? this._mainTexture ? this._parsePublicExtData() : this._parseTexturePath() : (this.event("error", this), this.isParseFail = !0);
        }, n._parseTexturePath = function () {
          if (this._isDestroyed) this.destroy();
          else {
            var t = 0;
            this._loadList = [];
            var e, n = new l(this.getPublicExtData()),
              r = 0,
              a = 0,
              s = 0,
              o = n.getInt32(),
              h = n.readUTFString(),
              u = h.split("\n");
            for (t = 0; t < o; t++) e = this._path + u[2 * t], h = u[2 * t + 1], n.getFloat32(), n.getFloat32(), r = n.getFloat32(), a = n.getFloat32(), s = n.getFloat32(), isNaN(s) ? 0 : s, s = n.getFloat32(), isNaN(s) ? 0 : s, s = n.getFloat32(), isNaN(s) ? r : s, s = n.getFloat32(), isNaN(s) ? a : s, -1 == this._loadList.indexOf(e) && this._loadList.push(e);
            i.loader.load(this._loadList, d.create(this, this._textureComplete));
          }
        }, n._textureComplete = function () {
          for (var t, e, i = 0, n = this._loadList.length; i < n; i++) e = this._loadList[i], t = this._textureDic[e] = f.getRes(e), v.isWebGL && t && t.bitmap && (t.bitmap.enableMerageInAtlas = !1);
          this._parsePublicExtData();
        }, n._parsePublicExtData = function () {
          var t = 0,
            e = 0,
            i = 0,
            n = 0,
            r = 0;
          for (t = 0, r = this.getAnimationCount(); t < r; t++) this._graphicsCache.push([]);
          var a = !1;
          a = "Dragon" != this._aniClassName;
          var s, o, h = new l(this.getPublicExtData()),
            u = 0,
            c = 0,
            _ = 0,
            d = 0,
            f = 0,
            p = 0,
            g = 0,
            v = 0,
            y = 0,
            x = h.getInt32(),
            T = h.readUTFString(),
            S = T.split("\n");
          for (t = 0; t < x; t++) {
            if (s = this._mainTexture, o = this._path + S[2 * t], T = S[2 * t + 1], null == this._mainTexture && (s = this._textureDic[o]), !s) return this.event("error", this), void(this.isParseFail = !0);
            u = h.getFloat32(), c = h.getFloat32(), _ = h.getFloat32(), d = h.getFloat32(), y = h.getFloat32(), f = isNaN(y) ? 0 : y, y = h.getFloat32(), p = isNaN(y) ? 0 : y, y = h.getFloat32(), g = isNaN(y) ? _ : y, y = h.getFloat32(), v = isNaN(y) ? d : y, this.subTextureDic[T] = w.create(s, u, c, _, d, -f, -p, g, v);
          }
          this._mainTexture = s;
          var E, b = h.getUint16();
          for (t = 0; t < b; t++)(E = []).push(h.getUint16()), E.push(h.getUint16()), E.push(h.getUint16()), E.push(h.getUint16()), this.aniSectionDic[t] = E;
          var C, M, I, R, P, B = h.getInt16(),
            k = {};
          for (t = 0; t < B; t++) C = new D(), 0 == t ? P = C : C.root = P, C.d = a ? -1 : 1, I = h.readUTFString(), R = h.readUTFString(), C.length = h.getFloat32(), 1 == h.getByte() && (C.inheritRotation = !1), 1 == h.getByte() && (C.inheritScale = !1), C.name = I, R && ((M = k[R]) ? M.addChild(C) : this.mRootBone = C), k[I] = C, this.mBoneArr.push(C);
          this.tMatrixDataLen = h.getUint16();
          var G, X = h.getUint16(),
            Q = Math.floor(X / this.tMatrixDataLen),
            K = this.srcBoneMatrixArr;
          for (t = 0; t < Q; t++)(G = new q()).scX = h.getFloat32(), G.skX = h.getFloat32(), G.skY = h.getFloat32(), G.scY = h.getFloat32(), G.x = h.getFloat32(), G.y = h.getFloat32(), 8 === this.tMatrixDataLen && (G.skewX = h.getFloat32(), G.skewY = h.getFloat32()), K.push(G), (C = this.mBoneArr[t]).transform = G;
          var Z, $ = h.getUint16(),
            J = 0;
          for (t = 0; t < $; t++) {
            for (Z = new U(), J = h.getUint16(), e = 0; e < J; e++) Z.boneNames.push(h.readUTFString()), Z.boneIndexs.push(h.getInt16());
            Z.name = h.readUTFString(), Z.targetBoneName = h.readUTFString(), Z.targetBoneIndex = h.getInt16(), Z.bendDirection = h.getFloat32(), Z.mix = h.getFloat32(), Z.isSpine = a, this.ikArr.push(Z);
          }
          var tt, et = h.getUint16(),
            it = 0;
          for (t = 0; t < et; t++) {
            for (tt = new Y(), it = h.getUint16(), e = 0; e < it; e++) tt.boneIndexs.push(h.getInt16());
            tt.name = h.getUTFString(), tt.targetIndex = h.getInt16(), tt.rotateMix = h.getFloat32(), tt.translateMix = h.getFloat32(), tt.scaleMix = h.getFloat32(), tt.shearMix = h.getFloat32(), tt.offsetRotation = h.getFloat32(), tt.offsetX = h.getFloat32(), tt.offsetY = h.getFloat32(), tt.offsetScaleX = h.getFloat32(), tt.offsetScaleY = h.getFloat32(), tt.offsetShearY = h.getFloat32(), this.tfArr.push(tt);
          }
          var nt, rt = h.getUint16(),
            at = 0;
          for (t = 0; t < rt; t++) {
            for ((nt = new H()).name = h.readUTFString(), at = h.getUint16(), e = 0; e < at; e++) nt.bones.push(h.getInt16());
            nt.target = h.readUTFString(), nt.positionMode = h.readUTFString(), nt.spacingMode = h.readUTFString(), nt.rotateMode = h.readUTFString(), nt.offsetRotation = h.getFloat32(), nt.position = h.getFloat32(), nt.spacing = h.getFloat32(), nt.rotateMix = h.getFloat32(), nt.translateMix = h.getFloat32(), this.pathArr.push(nt);
          }
          var st, ot, ht, lt, ut = 0,
            ct = 0,
            _t = 0,
            dt = NaN,
            ft = 0,
            pt = h.getInt16();
          for (t = 0; t < pt; t++) {
            var mt = h.getUint8(),
              gt = {};
            this.deformAniArr.push(gt);
            for (var vt = 0; vt < mt; vt++)
              for ((st = new L()).skinName = h.getUTFString(), gt[st.skinName] = st, ut = h.getInt16(), e = 0; e < ut; e++)
                for (ot = new O(), st.deformSlotDataList.push(ot), ct = h.getInt16(), i = 0; i < ct; i++)
                  for (ht = new N(), ot.deformSlotDisplayList.push(ht), ht.slotIndex = h.getInt16(), ht.attachment = h.getUTFString(), _t = h.getInt16(), n = 0; n < _t; n++)
                    for (1 == h.getByte() ? ht.tweenKeyList.push(!0) : ht.tweenKeyList.push(!1), dt = h.getFloat32(), ht.timeList.push(dt), lt = [], ht.vectices.push(lt), ft = h.getInt16(), r = 0; r < ft; r++) lt.push(h.getFloat32());
          }
          var yt, xt, Tt = h.getInt16(),
            St = 0,
            wt = 0;
          for (t = 0; t < Tt; t++) {
            for (St = h.getInt16(), yt = [], e = 0; e < St; e++) {
              for ((xt = new V()).time = h.getFloat32(), wt = h.getInt16(), i = 0; i < wt; i++) xt.drawOrder.push(h.getInt16());
              yt.push(xt);
            }
            this.drawOrderAniArr.push(yt);
          }
          var Et, bt, Ct = h.getInt16(),
            Mt = 0;
          for (t = 0; t < Ct; t++) {
            for (Mt = h.getInt16(), Et = [], e = 0; e < Mt; e++)(bt = new F()).name = h.getUTFString(), bt.intValue = h.getInt32(), bt.floatValue = h.getFloat32(), bt.stringValue = h.getUTFString(), bt.time = h.getFloat32(), Et.push(bt);
            this.eventAniArr.push(Et);
          }
          var It = h.getInt16();
          if (It > 0)
            for (this.attachmentNames = [], t = 0; t < It; t++) this.attachmentNames.push(h.getUTFString());
          var Dt, At, Rt = h.getInt16();
          for (t = 0; t < Rt; t++)(Dt = new A()).name = h.readUTFString(), Dt.parent = h.readUTFString(), Dt.attachmentName = h.readUTFString(), Dt.srcDisplayIndex = Dt.displayIndex = h.getInt16(), Dt.templet = this, this.boneSlotDic[Dt.name] = Dt, null == (At = this.bindBoneBoneSlotDic[Dt.parent]) && (this.bindBoneBoneSlotDic[Dt.parent] = At = []), At.push(Dt), this.boneSlotArray.push(Dt);
          var Pt, Lt, Ot, Nt = h.readUTFString().split("\n"),
            Vt = 0,
            Ft = h.getUint8(),
            Bt = 0,
            Ut = 0,
            kt = 0,
            Gt = 0,
            Ht = 0,
            zt = 0,
            Wt = 0;
          for (t = 0; t < Ft; t++) {
            for ((Pt = new z()).name = Nt[Vt++], Bt = h.getUint8(), e = 0; e < Bt; e++) {
              for ((Lt = new j()).name = Nt[Vt++], Dt = this.boneSlotDic[Lt.name], Ut = h.getUint8(), i = 0; i < Ut; i++) {
                if (Ot = new W(), this.skinSlotDisplayDataArr.push(Ot), Ot.name = Nt[Vt++], Ot.attachmentName = Nt[Vt++], Ot.transform = new q(), Ot.transform.scX = h.getFloat32(), Ot.transform.skX = h.getFloat32(), Ot.transform.skY = h.getFloat32(), Ot.transform.scY = h.getFloat32(), Ot.transform.x = h.getFloat32(), Ot.transform.y = h.getFloat32(), Lt.displayArr.push(Ot), Ot.width = h.getFloat32(), Ot.height = h.getFloat32(), Ot.type = h.getUint8(), Ot.verLen = h.getUint16(), (B = h.getUint16()) > 0)
                  for (Ot.bones = [], n = 0; n < B; n++) {
                    var jt = h.getUint16();
                    Ot.bones.push(jt);
                  }
                if ((kt = h.getUint16()) > 0)
                  for (Ot.uvs = [], n = 0; n < kt; n++) Ot.uvs.push(h.getFloat32());
                if ((Gt = h.getUint16()) > 0)
                  for (Ot.weights = [], n = 0; n < Gt; n++) Ot.weights.push(h.getFloat32());
                if ((Ht = h.getUint16()) > 0)
                  for (Ot.triangles = [], n = 0; n < Ht; n++) Ot.triangles.push(h.getUint16());
                if ((zt = h.getUint16()) > 0)
                  for (Ot.vertices = [], n = 0; n < zt; n++) Ot.vertices.push(h.getFloat32());
                if ((Wt = h.getUint16()) > 0)
                  for (Ot.lengths = [], n = 0; n < Wt; n++) Ot.lengths.push(h.getFloat32());
              }
              Pt.slotArr.push(Lt);
            }
            this.skinDic[Pt.name] = Pt, this.skinDataArray.push(Pt);
          }
          1 == h.getUint8() ? (this.yReverseMatrix = new m(1, 0, 0, -1, 0, 0), P && P.setTempMatrix(this.yReverseMatrix)) : P && P.setTempMatrix(new m()), this.showSkinByIndex(this.boneSlotDic, 0), this.isParserComplete = !0, this.event("complete", this);
        }, n.getTexture = function (t) {
          var e = this.subTextureDic[t];
          return e || (e = this.subTextureDic[t.substr(0, t.length - 1)]), null == e ? this._mainTexture : e;
        }, n.showSkinByIndex = function (t, e, i) {
          if (void 0 === i && (i = !0), e < 0 && e >= this.skinDataArray.length) return !1;
          var n, r, a = 0,
            s = 0,
            o = this.skinDataArray[e];
          if (o) {
            for (a = 0, s = o.slotArr.length; a < s; a++)(r = o.slotArr[a]) && (n = t[r.name]) && (n.showSlotData(r, i), i && "undefined" != n.attachmentName && "null" != n.attachmentName ? n.showDisplayByName(n.attachmentName) : n.showDisplayByIndex(n.displayIndex));
            return !0;
          }
          return !1;
        }, n.getSkinIndexByName = function (t) {
          for (var e = 0, i = this.skinDataArray.length; e < i; e++)
            if (this.skinDataArray[e].name == t) return e;
          return -1;
        }, n.getGrahicsDataWithCache = function (t, e) {
          return this._graphicsCache[t][e];
        }, n.setGrahicsDataWithCache = function (t, e, i) {
          this._graphicsCache[t][e] = i;
        }, n.destroy = function () {
          this._isDestroyed = !0;
          var t;
          for (var i in this.subTextureDic)(t = this.subTextureDic[i]) && t.destroy();
          for (i in this._textureDic)(t = this._textureDic[i]) && t.destroy();
          for (var n = 0, r = this.skinSlotDisplayDataArr.length; n < r; n++) this.skinSlotDisplayDataArr[n].destory();
          this.skinSlotDisplayDataArr.length = 0, this.url && delete e.TEMPLET_DICTIONARY[this.url], laya.resource.Resource.prototype.destroy.call(this);
        }, n.getAniNameByIndex = function (t) {
          var e = this.getAnimation(t);
          return e ? e.name : null;
        }, a(0, n, "rate", function () {
          return this._rate;
        }, function (t) {
          this._rate = t;
        }), e.LAYA_ANIMATION_VISION = "LAYAANIMATION:1.6.0", e.TEMPLET_DICTIONARY = null, e;
      }(et));
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function (t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function (t, e, i) {
    i.un, i.uns;
    var n = i.static,
      r = i.class,
      a = i.getset,
      s = (i.__newvec, laya.utils.Browser, laya.display.css.CSSStyle),
      o = laya.utils.ClassUtils,
      h = (laya.events.Event, laya.utils.HTMLChar),
      l = laya.net.Loader,
      u = (laya.display.Node, laya.maths.Rectangle),
      c = laya.renders.Render,
      _ = (laya.renders.RenderContext, laya.renders.RenderSprite, laya.display.Sprite),
      d = laya.utils.Stat,
      f = laya.display.Text,
      p = laya.resource.Texture,
      m = laya.net.URL,
      g = laya.utils.Utils,
      v = function () {
        function t() {}
        return r(t, "laya.html.utils.HTMLParse"), t.parse = function (e, i, n) {
          i = (i = "<root>" + (i = i.replace(/<br>/g, "<br/>")) + "</root>").replace(t.spacePattern, t.char255);
          var r = g.parseXMLFromString(i);
          t._parseXML(e, r.childNodes[0].childNodes, n);
        }, t._parseXML = function (e, i, n, r) {
          var a = 0,
            s = 0;
          if (i.join || i.item)
            for (a = 0, s = i.length; a < s; ++a) t._parseXML(e, i[a], n, r);
          else {
            var h, l;
            if (3 == i.nodeType) {
              var u;
              return void(e instanceof laya.html.dom.HTMLDivElement ? (null == i.nodeName && (i.nodeName = "#text"), l = i.nodeName.toLowerCase(), (u = i.textContent.replace(/^\s+|\s+$/g, "")).length > 0 && (h = o.getInstance(l)) && (e.addChild(h), h.innerTEXT = u.replace(t.char255AndOneSpacePattern, " "))) : (u = i.textContent.replace(/^\s+|\s+$/g, "")).length > 0 && (e.innerTEXT = u.replace(t.char255AndOneSpacePattern, " ")));
            }
            if ("#comment" == (l = i.nodeName.toLowerCase())) return;
            if (h = o.getInstance(l)) {
              (h = e.addChild(h)).URI = n, h.href = r;
              var c = i.attributes;
              if (c && c.length > 0)
                for (a = 0, s = c.length; a < s; ++a) {
                  var _ = c[a],
                    d = _.nodeName,
                    f = _.value;
                  h._setAttributes(d, f);
                }
              t._parseXML(h, i.childNodes, n, h.href);
            } else t._parseXML(e, i.childNodes, n, r);
          }
        }, t.char255 = String.fromCharCode(255), t.spacePattern = /&nbsp;|&#160;/g, t.char255AndOneSpacePattern = new RegExp(String.fromCharCode(255) + "|(\\s+)", "g"), t;
      }(),
      y = function () {
        function t() {}
        return r(t, "laya.html.utils.Layout"), t.later = function (e) {
          null == t._will && (t._will = [], i.stage.frameLoop(1, null, function () {
            if (!(t._will.length < 1)) {
              for (var e = 0; e < t._will.length; e++) laya.html.utils.Layout.layout(t._will[e]);
              t._will.length = 0;
            }
          })), t._will.push(e);
        }, t.layout = function (e) {
          if (!e || !e._style) return null;
          if (0 == (512 & e._style._type)) return null;
          e.getStyle()._type &= -513;
          var i = t._multiLineLayout(e);
          return c.isConchApp && e.layaoutCallNative && e.layaoutCallNative(), i;
        }, t._multiLineLayout = function (e) {
          function i() {
            D.y = b, b += D.h + d, 0 == D.h && (b += p), D.mWidth = P, P = 0, D = new x(), I.push(D), D.h = 0, E = 0, L = !0, A = !1;
          }
          if (f.RightToLeft) return t._multiLineLayout2(e);
          var n = new Array();
          e._addChildsToLayout(n);
          var r, a, s, o, h, l = 0,
            u = n.length,
            c = e._getCSSStyle(),
            _ = c.letterSpacing,
            d = c.leading,
            p = c.lineHeight,
            m = c._widthAuto() || !c.wordWrap,
            g = m ? 999999 : e.width,
            v = (e.height, 0),
            y = c.italic ? c.fontSize / 3 : 0,
            T = c._getAlign(),
            S = c._getValign(),
            w = 0 !== S || 0 !== T || 0 != p,
            E = 0,
            b = 0,
            C = 0,
            M = 0,
            I = new Array(),
            D = I[0] = new x(),
            A = !1,
            R = !1;
          D.h = 0, c.italic && (g -= c.fontSize / 3);
          var P = 0,
            L = !0;
          for (l = 0; l < u; l++)
            if (null != (r = n[l]))
              if (L = !1, r instanceof laya.html.dom.HTMLBrElement) i(), D.y = b;
              else {
                if (r._isChar()) {
                  if ((o = r).isWord) A = R || "\n" === o.char, D.wordStartIndex = D.elements.length;
                  else {
                    if (I.length > 0 && E + C > g && D.wordStartIndex > 0) {
                      var O = 0;
                      O = D.elements.length - D.wordStartIndex + 1, D.elements.length = D.wordStartIndex, l -= O, i();
                      continue;
                    }
                    A = !1, P += o.width;
                  }
                  C = o.width + _, M = o.height, R = !1, (A = A || E + C > g) && i(), D.minTextHeight = Math.min(D.minTextHeight, r.height);
                } else h = r, s = (a = r._getCSSStyle()).padding, 0 === a._getCssFloat() || (w = !0), A = R || a.lineElement, C = h.width * h._style._tf.scaleX + s[1] + s[3] + _, M = h.height * h._style._tf.scaleY + s[0] + s[2], R = a.lineElement, (A = A || E + C > g && a.wordWrap) && i();
                D.elements.push(r), D.h = Math.max(D.h, M), r.x = E, r.y = b, E += C, D.w = E - _, D.y = b, v = Math.max(E + y, v);
              }
          else L || (E += t.DIV_ELEMENT_PADDING), D.wordStartIndex = D.elements.length;
          if (b = D.y + D.h, w) {
            var N = 0,
              V = g;
            for (m && e.width > 0 && (V = e.width), l = 0, u = I.length; l < u; l++) I[l].updatePos(0, V, l, N, T, S, p), N += Math.max(p, I[l].h + d);
            b = N;
          }
          return m && (e.width = v), b > e.height && (e.height = b), [v, b];
        }, t._multiLineLayout2 = function (e) {
          function i() {
            I.y = E, E += I.h + d, 0 == I.h && (E += f), I.mWidth = R, R = 0, I = new x(), M.push(I), I.h = 0, w = 0, P = !0, D = !1;
          }
          var n = new Array();
          e._addChildsToLayout(n);
          var r, a, s, o, h, l = 0,
            u = n.length,
            c = e._getCSSStyle(),
            _ = c.letterSpacing,
            d = c.leading,
            f = c.lineHeight,
            p = c._widthAuto() || !c.wordWrap,
            m = p ? 999999 : e.width,
            g = (e.height, 0),
            v = c.italic ? c.fontSize / 3 : 0,
            y = 2 - c._getAlign(),
            T = c._getValign(),
            S = 0 !== T || 0 !== y || 0 != f,
            w = 0,
            E = 0,
            b = 0,
            C = 0,
            M = new Array(),
            I = M[0] = new x(),
            D = !1,
            A = !1;
          I.h = 0, c.italic && (m -= c.fontSize / 3);
          var R = 0,
            P = !0;
          for (l = 0; l < u; l++)
            if (null != (r = n[l]))
              if (P = !1, r instanceof laya.html.dom.HTMLBrElement) i(), I.y = E;
              else {
                if (r._isChar()) {
                  if ((o = r).isWord) D = A || "\n" === o.char, I.wordStartIndex = I.elements.length;
                  else {
                    if (M.length > 0 && w + b > m && I.wordStartIndex > 0) {
                      var L = 0;
                      L = I.elements.length - I.wordStartIndex + 1, I.elements.length = I.wordStartIndex, l -= L, i();
                      continue;
                    }
                    D = !1, R += o.width;
                  }
                  b = o.width + _, C = o.height, A = !1, (D = D || w + b > m) && i(), I.minTextHeight = Math.min(I.minTextHeight, r.height);
                } else h = r, s = (a = r._getCSSStyle()).padding, 0 === a._getCssFloat() || (S = !0), D = A || a.lineElement, b = h.width * h._style._tf.scaleX + s[1] + s[3] + _, C = h.height * h._style._tf.scaleY + s[0] + s[2], A = a.lineElement, (D = D || w + b > m && a.wordWrap) && i();
                I.elements.push(r), I.h = Math.max(I.h, C), r.x = w, r.y = E, w += b, I.w = w - _, I.y = E, g = Math.max(w + v, g);
              }
          else P || (w += t.DIV_ELEMENT_PADDING), I.wordStartIndex = I.elements.length;
          if (E = I.y + I.h, S) {
            var O = 0,
              N = m;
            for (l = 0, u = M.length; l < u; l++) M[l].updatePos(0, N, l, O, y, T, f), O += Math.max(f, M[l].h + d);
            E = O;
          }
          for (p && (e.width = g), E > e.height && (e.height = E), l = 0, u = M.length; l < u; l++) M[l].revertOrder(m);
          return [g, E];
        }, t._will = null, t.DIV_ELEMENT_PADDING = 0, t;
      }(),
      x = function () {
        function t() {
          this.x = 0, this.y = 0, this.w = 0, this.h = 0, this.wordStartIndex = 0, this.minTextHeight = 99999, this.mWidth = 0, this.elements = new Array();
        }
        r(t, "laya.html.utils.LayoutLine");
        var e = t.prototype;
        return e.updatePos = function (t, e, i, n, r, a, s) {
          var o, h = 0;
          this.elements.length > 0 && (h = (o = this.elements[this.elements.length - 1]).x + o.width - this.elements[0].x);
          var l = 0,
            u = NaN;
          1 === r && (l = (e - h) / 2), 2 === r && (l = e - h), 0 === s || 0 != a || (a = 1);
          for (var c = 0, _ = this.elements.length; c < _; c++) {
            var d = (o = this.elements[c])._getCSSStyle();
            switch (0 !== l && (o.x += l), d._getValign()) {
              case 0:
                o.y = n;
                break;
              case 1:
                var f = 0;
                99999 != this.minTextHeight && (f = this.minTextHeight);
                var p = (f + s) / 2;
                p = Math.max(p, this.h), u = (laya.html.dom.HTMLImageElement, n + p - o.height), o.y = u;
                break;
              case 2:
                o.y = n + (s - o.height);
            }
          }
        }, e.revertOrder = function (t) {
          var e;
          if (this.elements.length > 0) {
            var i = 0,
              n = 0;
            for (n = this.elements.length, i = 0; i < n; i++)(e = this.elements[i]).x = t - e.x - e.width;
          }
        }, t;
      }(),
      T = function (t) {
        function e() {
          this.URI = null, this._href = null, e.__super.call(this), this._text = e._EMPTYTEXT, this.setStyle(new s(this)), this._getCSSStyle().valign = "middle", this.mouseEnabled = !0;
        }
        r(e, "laya.html.dom.HTMLElement", t);
        var n = e.prototype;
        return n.layaoutCallNative = function () {
          var t = 0;
          if (this._childs && (t = this._childs.length) > 0)
            for (var e = 0; e < t; e++) this._childs[e].layaoutCallNative && this._childs[e].layaoutCallNative();
          var i = this._getWords();
          i ? laya.html.dom.HTMLElement.fillWords(this, i, 0, 0, this.style.font, this.style.color, this.style.underLine) : this.graphics.clear();
        }, n.appendChild = function (t) {
          return this.addChild(t);
        }, n._getWords2 = function () {
          var t = this._text.text;
          if (!t || 0 === t.length) return null;
          var e, i, n = 0,
            r = 0;
          if (this._text.drawWords) i = this._text.drawWords;
          else {
            for (r = (e = t.split(" ")).length - 1, i = [], n = 0; n < r; n++) i.push(e[n], " ");
            r >= 0 && i.push(e[r]), this._text.drawWords = i;
          }
          var a = this._text.words;
          if (a && a.length === i.length) return a;
          null === a && (this._text.words = a = []), a.length = i.length;
          var s, o = this.style,
            l = o.font;
          for (n = 0, r = i.length; n < r; n++) {
            s = g.measureText(i[n], l);
            var u = a[n] = new h(i[n], s.width, s.height || o.fontSize, o);
            if (u.char.length > 1 && (u.charNum = u.char), this.href) {
              var c = new _();
              this.addChild(c), u.setSprite(c);
            }
          }
          return a;
        }, n._getWords = function () {
          if (!f.CharacterCache) return this._getWords2();
          var t = this._text.text;
          if (!t || 0 === t.length) return null;
          var e = this._text.words;
          if (e && e.length === t.length) return e;
          null === e && (this._text.words = e = []), e.length = t.length;
          for (var i, n = this.style, r = n.font, a = 0, s = t.length; a < s; a++) {
            i = g.measureText(t.charAt(a), r);
            var o = e[a] = new h(t.charAt(a), i.width, i.height || n.fontSize, n);
            if (this.href) {
              var l = new _();
              this.addChild(l), o.setSprite(l);
            }
          }
          return e;
        }, n.showLinkSprite = function () {
          var t = this._text.words;
          if (t)
            for (var e, i, n = [], r = 0; r < t.length; r++) i = t[r], (e = new _()).graphics.drawRect(0, 0, i.width, i.height, "#ff0000"), e.width = i.width, e.height = i.height, this.addChild(e), n.push(e);
        }, n._layoutLater = function () {
          var t = this.style;
          512 & t._type || (t.widthed(this) && (this._childs.length > 0 || null != this._getWords()) && t.block ? (y.later(this), t._type |= 512) : this.parent && this.parent._layoutLater());
        }, n._setAttributes = function (e, i) {
          switch (e) {
            case "style":
              return void this.style.cssText(i);
            case "class":
              return void(this.className = i);
          }
          t.prototype._setAttributes.call(this, e, i);
        }, n.updateHref = function () {
          if (null != this._href) {
            var t = this._getWords();
            if (t)
              for (var e, i, n = 0; n < t.length; n++)(i = (e = t[n]).getSprite()) && (i.size(e.width, e.height), i.on("click", this, this.onLinkHandler));
          }
        }, n.onLinkHandler = function (t) {
          switch (t.type) {
            case "click":
              for (var e = this; e;) e.event("link", [this.href]), e = e.parent;
          }
        }, n.formatURL = function (t) {
          return this.URI ? m.formatURL(t, this.URI ? this.URI.path : null) : t;
        }, a(0, n, "href", function () {
          return this._href;
        }, function (t) {
          this._href = t, null != t && (this._getCSSStyle().underLine = 1, this.updateHref());
        }), a(0, n, "color", null, function (t) {
          this.style.color = t;
        }), a(0, n, "onClick", null, function (t) {
          i._runScript("fn=function(event){" + t + ";}"), this.on("click", this, void 0);
        }), a(0, n, "id", null, function (t) {
          w.document.setElementById(t, this);
        }), a(0, n, "innerTEXT", function () {
          return this._text.text;
        }, function (t) {
          this.text = t;
        }), a(0, n, "style", function () {
          return this._style;
        }), a(0, n, "text", function () {
          return this._text.text;
        }, function (t) {
          this._text == e._EMPTYTEXT ? this._text = {
            text: t,
            words: null
          } : (this._text.text = t, this._text.words && (this._text.words.length = 0)), c.isConchApp && this.layaoutCallNative(), this._renderType |= 2048, this.repaint(), this.updateHref();
        }), a(0, n, "parent", t.prototype._$get_parent, function (t) {
          if (t instanceof laya.html.dom.HTMLElement) {
            var e = t;
            this.URI || (this.URI = e.URI), this.style.inherit(e.style);
          }
          i.superSet(_, this, "parent", t);
        }), a(0, n, "className", null, function (t) {
          this.style.attrs(w.document.styleSheets["." + t]);
        }), e.fillWords = function (t, e, i, n, r, a, s) {
          t.graphics.clear();
          for (var o = 0, h = e.length; o < h; o++) {
            var l = e[o];
            t.graphics.fillText(l.char, l.x + i, l.y + n, r, a, "left", s);
          }
        }, e._EMPTYTEXT = {
          text: null,
          words: null
        }, e;
      }(_),
      S = (function (t) {
        function e() {
          e.__super.call(this), this.style.lineElement = !0, this.style.block = !0;
        }
        r(e, "laya.html.dom.HTMLBrElement", T);
      }(), function (t) {
        function e() {
          this.contextHeight = NaN, this.contextWidth = NaN, e.__super.call(this), this.style.block = !0, this.style.lineElement = !0, this.style.width = 200, this.style.height = 200;
        }
        r(e, "laya.html.dom.HTMLDivElement", t);
        var n = e.prototype;
        return n.appendHTML = function (t) {
          v.parse(this, t, this.URI), this.layout();
        }, n._addChildsToLayout = function (t) {
          var e = this._getWords();
          if (null == e && 0 == this._childs.length) return !1;
          e && e.forEach(function (e) {
            t.push(e);
          });
          for (var i = !0, n = 0, r = this._childs.length; n < r; n++) {
            var a = this._childs[n];
            i ? i = !1 : t.push(null), a._addToLayout(t);
          }
          return !0;
        }, n._addToLayout = function (t) {
          this.layout();
        }, n.layout = function () {
          if (this.style) {
            this.style._type |= 512;
            var t = y.layout(this);
            if (t) {
              this._$P.mHtmlBounds || this._set$P("mHtmlBounds", new u());
              var e = this._$P.mHtmlBounds;
              e.x = e.y = 0, e.width = this.contextWidth = t[0], e.height = this.contextHeight = t[1], this.setBounds(e);
            }
          }
        }, a(0, n, "height", function () {
          return this._height ? this._height : this.contextHeight;
        }, t.prototype._$set_height), a(0, n, "innerHTML", null, function (t) {
          this.destroyChildren(), this.appendHTML(t);
        }), a(0, n, "width", function () {
          return this._width ? this._width : this.contextWidth;
        }, function (t) {
          var e = !1;
          e = 0 === t ? t != this._width : t != this.width, i.superSet(T, this, "width", t), e && this.layout();
        }), e;
      }(T)),
      w = function (t) {
        function e() {
          this.all = new Array(), this.styleSheets = s.styleSheets, e.__super.call(this);
        }
        r(e, "laya.html.dom.HTMLDocument", T);
        var i = e.prototype;
        return i.getElementById = function (t) {
          return this.all[t];
        }, i.setElementById = function (t, e) {
          this.all[t] = e;
        }, n(e, ["document", function () {
          return this.document = new e();
        }]), e;
      }();
    (function (t) {
      function e() {
        this._tex = null, this._url = null, this._renderArgs = [], e.__super.call(this), this.style.block = !0;
      }
      r(e, "laya.html.dom.HTMLImageElement", T);
      var i = e.prototype;
      i._addToLayout = function (t) {
        !this._style.absolute && t.push(this);
      }, i.render = function (t, e, i) {
        !this._tex || !this._tex.loaded || !this._tex.loaded || this._width < 1 || this._height < 1 || (d.spriteCount++, this._renderArgs[0] = this._tex, this._renderArgs[1] = this.x, this._renderArgs[2] = this.y, this._renderArgs[3] = this.width || this._tex.width, this._renderArgs[4] = this.height || this._tex.height, t.ctx.drawTexture2(e, i, this.style.translateX, this.style.translateY, this.transform, this.style.alpha, this.style.blendMode, this._renderArgs));
      }, i.layaoutCallNative = function () {
        var t = 0;
        if (this._childs && (t = this._childs.length) > 0)
          for (var e = 0; e < t; e++) this._childs[e].layaoutCallNative && this._childs[e].layaoutCallNative();
      }, a(0, i, "src", null, function (t) {
        function e() {
          var t = i._style;
          t.widthed(i) || i._tex.width, t.heighted(i) || i._tex.height;
          t.widthed(i) || i._width == i._tex.width || (i.width = i._tex.width, i.parent && i.parent._layoutLater()), t.heighted(i) || i._height == i._tex.height || (i.height = i._tex.height, i.parent && i.parent._layoutLater()), c.isConchApp && (i._renderArgs[0] = i._tex, i._renderArgs[1] = i.x, i._renderArgs[2] = i.y, i._renderArgs[3] = i.width || i._tex.width, i._renderArgs[4] = i.height || i._tex.height, i.graphics.drawTexture(i._tex, 0, 0, i._renderArgs[3], i._renderArgs[4])), i.repaint(), i.parentRepaint();
        }
        var i = this;
        if (t = this.formatURL(t), this._url != t) {
          this._url = t;
          var n = this._tex = l.getRes(t);
          n || (this._tex = n = new p(), n.load(t), l.cacheRes(t, n)), n.loaded ? e() : n.on("loaded", null, e);
        }
      });
    })(),
    function (t) {
      function e() {
        this.type = null, e.__super.call(this), this.visible = !1;
      }
      r(e, "laya.html.dom.HTMLLinkElement", t);
      var i = e.prototype;
      i._onload = function (t) {
        switch (this.type) {
          case "text/css":
            s.parseCSS(t, this.URI);
        }
      }, a(0, i, "href", t.prototype._$get_href, function (t) {
        var e = this;
        t = this.formatURL(t), this.URI = new m(t);
        var i = new l();
        i.once("complete", null, function (t) {
          e._onload(t);
        }), i.load(t, "text");
      }), e._cuttingStyle = new RegExp("((@keyframes[\\s\\t]+|)(.+))[\\t\\n\\r\\s]*{", "g");
    }(T),
    function (t) {
      function e() {
        e.__super.call(this), this.visible = !1;
      }
      r(e, "laya.html.dom.HTMLStyleElement", t);
      a(0, e.prototype, "text", t.prototype._$get_text, function (t) {
        s.parseCSS(t, null);
      });
    }(T),
    function (t) {
      function e() {
        e.__super.call(this), this._getCSSStyle().valign = "middle";
      }
      r(e, "laya.html.dom.HTMLIframeElement", t);
      a(0, e.prototype, "href", t.prototype._$get_href, function (t) {
        var e = this;
        t = this.formatURL(t);
        var i = new l();
        i.once("complete", null, function (i) {
          var n = e.URI;
          e.URI = new m(t), e.innerHTML = i, !n || (e.URI = n);
        }), i.load(t, "text");
      });
    }(S);
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function (t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  }),
  function (t, e, i) {
    i.un, i.uns;
    var n = i.static,
      r = i.class,
      a = i.getset,
      s = i.__newvec,
      o = (laya.ani.AnimationContent, laya.ani.AnimationPlayer),
      h = (laya.ani.AnimationState, laya.ani.AnimationTemplet),
      l = laya.maths.Arith,
      u = laya.webgl.atlas.AtlasResourceManager,
      c = laya.webgl.shader.BaseShader,
      _ = laya.utils.Browser,
      d = laya.webgl.utils.Buffer,
      f = laya.utils.Byte,
      p = (laya.ani.bone.canvasmesh.CacheAbleSkinMesh, laya.utils.ClassUtils),
      m = i.Config,
      g = (laya.events.Event, laya.events.EventDispatcher),
      v = laya.utils.Handler,
      y = laya.net.Loader,
      x = laya.net.LoaderManager,
      T = laya.maths.MathUtil,
      S = laya.display.Node,
      w = laya.renders.Render,
      E = (laya.renders.RenderContext, laya.renders.RenderSprite, laya.webgl.utils.RenderState2D),
      b = laya.resource.Resource,
      C = laya.utils.RunDriver,
      M = (laya.webgl.shader.Shader, laya.webgl.utils.ShaderCompile),
      I = laya.display.Sprite,
      D = laya.utils.Stat,
      A = laya.utils.StringKey,
      R = (laya.display.css.Style, laya.resource.Texture, laya.net.URL),
      P = laya.utils.Utils,
      L = laya.webgl.WebGL,
      O = laya.webgl.WebGLContext;
    laya.webgl.canvas.WebGLContext2D;
    i.interface("laya.d3.core.IClone"), i.interface("laya.d3.graphics.IVertex"), i.interface("laya.d3.core.render.IUpdate"), i.interface("laya.d3.core.scene.ITreeNode"), i.interface("laya.d3.core.render.IRenderable");
    var N = function () {
        function t() {}
        return r(t, "laya.d3.animation.AnimationClipParser01"), t.READ_DATA = function () {
          t._DATA.offset = t._reader.getUint32(), t._DATA.size = t._reader.getUint32();
        }, t.READ_BLOCK = function () {
          for (var e = t._BLOCK.count = t._reader.getUint16(), i = t._BLOCK.blockStarts = [], n = t._BLOCK.blockLengths = [], r = 0; r < e; r++) i.push(t._reader.getUint32()), n.push(t._reader.getUint32());
        }, t.READ_STRINGS = function () {
          var e = t._reader.getUint32(),
            i = t._reader.getUint16(),
            n = t._reader.pos;
          t._reader.pos = e + t._DATA.offset;
          for (var r = 0; r < i; r++) t._strings[r] = t._reader.readUTFString();
          t._reader.pos = n;
        }, t.parse = function (e, i) {
          t._animationClip = e, t._reader = i;
          i.__getBuffer();
          t.READ_DATA(), t.READ_BLOCK(), t.READ_STRINGS();
          for (var n = 0, r = t._BLOCK.count; n < r; n++) {
            var a = i.getUint16(),
              s = t._strings[a],
              o = t["READ_" + s];
            if (null == o) throw new Error("model file err,no this function:" + a + " " + s);
            o.call();
          }
        }, t.READ_ANIMATIONS = function () {
          var e, i = 0,
            n = 0,
            r = t._reader,
            a = r.__getBuffer(),
            s = [],
            o = r.getUint8();
          for (s.length = o, i = 0; i < o; i++) s[i] = r.getUint16();
          var h = [],
            l = r.getUint16();
          for (h.length = l, i = 0; i < l; i++) h[i] = r.getFloat32();
          var u = t._animationClip;
          u.name = t._strings[r.getUint16()];
          var c = u._duration = r.getFloat32();
          u.islooping = !!r.getByte(), u._frameRate = r.getInt16();
          var _ = r.getInt16(),
            d = u._nodes = new Array();
          d.length = _;
          (u._publicClipDatas = []).length = _;
          var f = u._nodesMap = {},
            p = 0,
            m = 0;
          for (i = 0; i < _; i++) {
            e = d[i] = new k();
            var g = r.getUint16(),
              v = e.path = [];
            for (v.length = g, n = 0; n < g; n++) v[n] = t._strings[r.getUint16()];
            var y = v.join("/"),
              x = f[y];
            x || (f[y] = x = []), x.push(e);
            var T = r.getInt16(); - 1 !== T && (e.componentType = t._strings[T]);
            var S = B._propertyIndexDic[t._strings[r.getUint16()]];
            if (null == S) throw new Error("AnimationClipParser01:unknown property name.");
            var w = S < 4,
              E = !w || w && "" === v[0];
            e._cacheProperty = E, E ? p++ : m++, e.propertyNameID = S;
            var b = s[r.getUint8()];
            e.keyFrameWidth = b / 4;
            var C = e.keyFrames = [],
              M = C.length = r.getUint16(),
              I = null,
              D = NaN;
            for (n = 0; n < M; n++) {
              var A = C[n] = new U();
              D = A.startTime = h[r.getUint16()];
              var R = r.pos;
              A.inTangent = new Float32Array(a.slice(R, R + b)), r.pos += b, R = r.pos, A.outTangent = new Float32Array(a.slice(R, R + b)), r.pos += b, R = r.pos, A.data = new Float32Array(a.slice(R, R + b)), r.pos += b, I && (I.next = A, I.duration = D - I.startTime), I = A;
            }
            A.next = null, A.duration = c - D;
          }
          var P = u._nodeToCachePropertyMap = new Int32Array(_),
            L = u._cachePropertyMap = new Int32Array(p),
            O = u._unCachePropertyMap = new Int32Array(m);
          for (p = m = 0, i = 0; i < _; i++)(e = d[i])._cacheProperty ? (P[i] = p, L[p++] = i) : O[m++] = i;
        }, t._animationClip = null, t._reader = null, t._strings = [], n(t, ["_BLOCK", function () {
          return this._BLOCK = {
            count: 0
          };
        }, "_DATA", function () {
          return this._DATA = {
            offset: 0,
            size: 0
          };
        }]), t;
      }(),
      V = function () {
        function t() {}
        return r(t, "laya.d3.animation.AnimationClipParser02"), t.READ_DATA = function () {
          t._DATA.offset = t._reader.getUint32(), t._DATA.size = t._reader.getUint32();
        }, t.READ_BLOCK = function () {
          for (var e = t._BLOCK.count = t._reader.getUint16(), i = t._BLOCK.blockStarts = [], n = t._BLOCK.blockLengths = [], r = 0; r < e; r++) i.push(t._reader.getUint32()), n.push(t._reader.getUint32());
        }, t.READ_STRINGS = function () {
          var e = t._reader.getUint32(),
            i = t._reader.getUint16(),
            n = t._reader.pos;
          t._reader.pos = e + t._DATA.offset;
          for (var r = 0; r < i; r++) t._strings[r] = t._reader.readUTFString();
          t._reader.pos = n;
        }, t.parse = function (e, i) {
          t._animationClip = e, t._reader = i;
          i.__getBuffer();
          t.READ_DATA(), t.READ_BLOCK(), t.READ_STRINGS();
          for (var n = 0, r = t._BLOCK.count; n < r; n++) {
            var a = i.getUint16(),
              s = t._strings[a],
              o = t["READ_" + s];
            if (null == o) throw new Error("model file err,no this function:" + a + " " + s);
            o.call();
          }
        }, t.READ_ANIMATIONS = function () {
          var e, i = 0,
            n = 0,
            r = t._reader,
            a = r.__getBuffer(),
            s = [],
            o = r.getUint8();
          for (s.length = o, i = 0; i < o; i++) s[i] = r.getUint16();
          var h = [],
            l = r.getUint16();
          for (h.length = l, i = 0; i < l; i++) h[i] = r.getFloat32();
          var u = t._animationClip;
          u.name = t._strings[r.getUint16()];
          var c = u._duration = r.getFloat32();
          u.islooping = !!r.getByte(), u._frameRate = r.getInt16();
          var _ = r.getInt16(),
            d = u._nodes = new Array();
          d.length = _;
          (u._publicClipDatas = []).length = _;
          var f = u._nodesMap = {},
            p = 0,
            m = 0;
          for (i = 0; i < _; i++) {
            e = d[i] = new k();
            var g = r.getUint16(),
              v = e.path = [];
            for (v.length = g, n = 0; n < g; n++) v[n] = t._strings[r.getUint16()];
            var y = v.join("/"),
              x = f[y];
            x || (f[y] = x = []), x.push(e);
            var T = r.getInt16(); - 1 !== T && (e.componentType = t._strings[T]);
            var S = B._propertyIndexDic[t._strings[r.getUint16()]];
            if (null == S) throw new Error("AnimationClipParser02:unknown property name.");
            var w = S < 4,
              E = !w || w && "" === v[0];
            e._cacheProperty = E, E ? p++ : m++, e.propertyNameID = S;
            var b = s[r.getUint8()];
            e.keyFrameWidth = b / 4;
            var C = e.keyFrames = [],
              M = C.length = r.getUint16(),
              I = null,
              D = NaN;
            for (n = 0; n < M; n++) {
              var A = C[n] = new U();
              D = A.startTime = h[r.getUint16()];
              var R = r.pos;
              A.inTangent = new Float32Array(a.slice(R, R + b)), r.pos += b, R = r.pos, A.outTangent = new Float32Array(a.slice(R, R + b)), r.pos += b, R = r.pos, A.data = new Float32Array(a.slice(R, R + b)), r.pos += b, I && (I.next = A, I.duration = D - I.startTime), I = A;
            }
            A.next = null, A.duration = c - D;
          }
          var P = r.getUint16();
          for (i = 0; i < P; i++) {
            var L = new F();
            L.time = r.getFloat32(), L.eventName = t._strings[r.getUint16()];
            var O, N = r.getUint16();
            for (N > 0 && (L.params = O = []), n = 0; n < N; n++) {
              switch (r.getByte()) {
                case 0:
                  O.push(!!r.getByte());
                  break;
                case 1:
                  O.push(r.getInt32());
                  break;
                case 2:
                  O.push(r.getFloat32());
                  break;
                case 3:
                  O.push(t._strings[r.getUint16()]);
                  break;
                default:
                  throw new Error("unknown type.");
              }
            }
            u.addEvent(L);
          }
          var V = u._nodeToCachePropertyMap = new Int32Array(_),
            G = u._cachePropertyMap = new Int32Array(p),
            H = u._unCachePropertyMap = new Int32Array(m);
          for (p = m = 0, i = 0; i < _; i++)(e = d[i])._cacheProperty ? (V[i] = p, G[p++] = i) : H[m++] = i;
        }, t._animationClip = null, t._reader = null, t._strings = [], n(t, ["_BLOCK", function () {
          return this._BLOCK = {
            count: 0
          };
        }, "_DATA", function () {
          return this._DATA = {
            offset: 0,
            size: 0
          };
        }]), t;
      }(),
      F = function () {
        function t() {
          this.time = NaN, this.eventName = null, this.params = null;
        }
        return r(t, "laya.d3.animation.AnimationEvent"), t;
      }(),
      B = function () {
        function t() {
          this._childs = [], this.transform = new $e(this);
        }
        r(t, "laya.d3.animation.AnimationNode");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.addChild = function (t) {
          t._parent = this, t.transform.setParent(this.transform), this._childs.push(t);
        }, e.removeChild = function (t) {
          var e = this._childs.indexOf(t); - 1 !== e && this._childs.splice(e, 1);
        }, e.getChildByName = function (t) {
          for (var e = 0, i = this._childs.length; e < i; e++) {
            var n = this._childs[e];
            if (n.name === t) return n;
          }
          return null;
        }, e.getChildByIndex = function (t) {
          return this._childs[t];
        }, e.getChildCount = function () {
          return this._childs.length;
        }, e.cloneTo = function (t) {
          var e = t;
          e.name = this.name;
          for (var i = 0, n = this._childs.length; i < n; i++) {
            var r = this._childs[i],
              a = r.clone();
            e.addChild(a);
            var s = r.transform,
              o = a.transform;
            o.setLocalPosition(s.getLocalPosition()), o.setLocalRotation(s.getLocalRotation()), o.setLocalScale(s.getLocalScale()), o._localRotationEuler = s._localRotationEuler, o._setWorldMatrixIgnoreUpdate(s.getWorldMatrix());
          }
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, t.__init__ = function () {
          t.registerAnimationNodeProperty("localPosition", t._getLocalPosition, t._setLocalPosition), t.registerAnimationNodeProperty("localRotation", t._getLocalRotation, t._setLocalRotation), t.registerAnimationNodeProperty("localScale", t._getLocalScale, t._setLocalScale), t.registerAnimationNodeProperty("localRotationEuler", t._getLocalRotationEuler, t._setLocalRotationEuler), t.registerAnimationNodeProperty("particleRender.sharedMaterial.tintColor", t._getParticleRenderSharedMaterialTintColor, t._setParticleRenderSharedMaterialTintColor), t.registerAnimationNodeProperty("meshRender.sharedMaterial.tilingOffset", t._getMeshRenderSharedMaterialTilingOffset, t._setMeshRenderSharedMaterialTilingOffset), t.registerAnimationNodeProperty("meshRender.sharedMaterial.albedoColor", t._getMeshRenderSharedMaterialAlbedo, t._setMeshRenderSharedMaterialAlbedo), t.registerAnimationNodeProperty("skinnedMeshRender.sharedMaterial.tilingOffset", t._getSkinnedMeshRenderSharedMaterialTilingOffset, t._setSkinnedMeshRenderSharedMaterialTilingOffset), t.registerAnimationNodeProperty("skinnedMeshRender.sharedMaterial.albedoColor", t._getSkinnedMeshRenderSharedMaterialAlbedo, t._setSkinnedMeshRenderSharedMaterialAlbedo), t.registerAnimationNodeProperty("meshRender.sharedMaterial.albedo", t._getMeshRenderSharedMaterialAlbedo, t._setMeshRenderSharedMaterialAlbedo), t.registerAnimationNodeProperty("skinnedMeshRender.sharedMaterial.albedo", t._getSkinnedMeshRenderSharedMaterialAlbedo, t._setSkinnedMeshRenderSharedMaterialAlbedo), t.registerAnimationNodeProperty("meshRender.sharedMaterial.intensity", t._getMeshRenderSharedMaterialIntensity, t._setMeshRenderSharedMaterialIntensity), t.registerAnimationNodeProperty("meshRender.sharedMaterial.alpha", t._getMeshRenderSharedMaterialAlpha, t._setMeshRenderSharedMaterialAlpha), t.registerAnimationNodeProperty("meshRender.sharedMaterial.alphaColor", t._getMeshRenderSharedMaterialAlphaColor, t._setMeshRenderSharedMaterialAlphaColor), t.registerAnimationNodeProperty("meshRender.sharedMaterial.baseColor", t._getMeshRenderSharedMaterialBaseColor, t._setMeshRenderSharedMaterialBaseColor), t.registerAnimationNodeProperty("meshRender.sharedMaterial.dissolve", t._getMeshRenderSharedMaterialDissolve, t._setMeshRenderSharedMaterialDissolve), t.registerAnimationNodeProperty("meshRender.sharedMaterial.dissolveSpeed", t._getMeshRenderSharedMaterialDissolveSpeed, t._setMeshRenderSharedMaterialDissolveSpeed), t.registerAnimationNodeProperty("meshRender.sharedMaterial.mMultiplier", t._getMeshRenderSharedMaterialMMultiplier, t._setMeshRenderSharedMaterialMMultiplier), t.registerAnimationNodeProperty("meshRender.sharedMaterial.baseScrollSpeedX", t._getMeshRenderSharedMaterialBaseScrollSpeedX, t._setMeshRenderSharedMaterialBaseScrollSpeedX), t.registerAnimationNodeProperty("meshRender.sharedMaterial.baseScrollSpeedY", t._getMeshRenderSharedMaterialBaseScrollSpeedY, t._setMeshRenderSharedMaterialBaseScrollSpeedY), t.registerAnimationNodeProperty("meshRender.sharedMaterial.secondScrollSpeedX", t._getMeshRenderSharedMaterialSecondScrollSpeedX, t._setMeshRenderSharedMaterialSecondScrollSpeedX), t.registerAnimationNodeProperty("meshRender.sharedMaterial.secondScrollSpeedY", t._getMeshRenderSharedMaterialSecondScrollSpeedY, t._setMeshRenderSharedMaterialSecondScrollSpeedY), t.registerAnimationNodeProperty("meshRender.sharedMaterial.detailTilingOffset", t._getMeshRenderSharedMaterialDetailTilingOffset, t._setMeshRenderSharedMaterialDetailTilingOffset), t.registerAnimationNodeProperty("meshRender.sharedMaterial.dissolveTilingOffset", t._getMeshRenderSharedMaterialDissolveTilingOffset, t._setMeshRenderSharedMaterialDissolveTilingOffset), t.registerAnimationNodeProperty("meshRender.sharedMaterial.maskTilingOffset", t._getMeshRenderSharedMaterialMaskTilingOffset, t._setMeshRenderSharedMaterialMaskTilingOffset);
        }, t.registerAnimationNodeProperty = function (e, i, n) {
          if (t._propertyIndexDic[e]) throw new Error("AnimationNode: this propertyName has registered.");
          t._propertyIndexDic[e] = t._propertyIDCounter, t._propertyGetFuncs[t._propertyIDCounter] = i, t._propertySetFuncs[t._propertyIDCounter] = n, t._propertyIDCounter++;
        }, t._getLocalPosition = function (t, e) {
          return t ? t.transform.getLocalPosition() : e._transform.localPosition.elements;
        }, t._setLocalPosition = function (t, e, i) {
          if (t) t.transform.setLocalPosition(i);
          else {
            var n = e._transform,
              r = n.localPosition;
            r.elements = i, n.localPosition = r;
          }
        }, t._getLocalRotation = function (t, e) {
          return t ? t.transform.getLocalRotation() : e._transform.localRotation.elements;
        }, t._setLocalRotation = function (t, e, i) {
          if (t) t.transform.setLocalRotation(i);
          else {
            var n = e._transform,
              r = n.localRotation;
            r.elements = i, n.localRotation = r;
          }
        }, t._getLocalScale = function (t, e) {
          return t ? t.transform.getLocalScale() : e._transform.localScale.elements;
        }, t._setLocalScale = function (t, e, i) {
          if (t) t.transform.setLocalScale(i);
          else {
            var n = e._transform,
              r = n.localScale;
            r.elements = i, n.localScale = r;
          }
        }, t._getLocalRotationEuler = function (t, e) {
          return t ? t.transform.getLocalRotationEuler() : e._transform.localRotationEuler.elements;
        }, t._setLocalRotationEuler = function (t, e, i) {
          if (t) t.transform.setLocalRotationEuler(i);
          else {
            var n = e._transform,
              r = n.localRotationEuler;
            r.elements = i, n.localRotationEuler = r;
          }
        }, t._getMeshRenderSharedMaterialTilingOffset = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.tilingOffset.elements : null;
          }
          return e.meshRender.sharedMaterial.tilingOffset.elements;
        }, t._setMeshRenderSharedMaterialTilingOffset = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.meshRender.material).tilingOffset).elements = i, n.tilingOffset = r);
          } else(r = (n = e.meshRender.material).tilingOffset).elements = i, n.tilingOffset = r;
        }, t._getMeshRenderSharedMaterialAlbedo = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.albedoColor.elements : null;
          }
          return e.meshRender.sharedMaterial.albedoColor.elements;
        }, t._setMeshRenderSharedMaterialAlbedo = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.meshRender.material).albedoColor).elements = i, n.albedoColor = r);
          } else(r = (n = e.meshRender.material).albedoColor).elements = i, n.albedoColor = r;
        }, t._getSkinnedMeshRenderSharedMaterialTilingOffset = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.skinnedMeshRender.sharedMaterial.tilingOffset.elements : null;
          }
          return e.skinnedMeshRender.sharedMaterial.tilingOffset.elements;
        }, t._setSkinnedMeshRenderSharedMaterialTilingOffset = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.skinnedMeshRender.material).tilingOffset).elements = i, n.tilingOffset = r);
          } else(r = (n = e.skinnedMeshRender.material).tilingOffset).elements = i, n.tilingOffset = r;
        }, t._getSkinnedMeshRenderSharedMaterialAlbedo = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.skinnedMeshRender.sharedMaterial.albedoColor.elements : null;
          }
          return e.skinnedMeshRender.sharedMaterial.albedoColor.elements;
        }, t._setSkinnedMeshRenderSharedMaterialAlbedo = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.skinnedMeshRender.material).albedoColor).elements = i, n.albedoColor = r);
          } else(r = (n = e.skinnedMeshRender.material).albedoColor).elements = i, n.albedoColor = r;
        }, t._getParticleRenderSharedMaterialTintColor = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.particleRender.sharedMaterial.tintColor.elements : null;
          }
          return e.particleRender.sharedMaterial.tintColor.elements;
        }, t._setParticleRenderSharedMaterialTintColor = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.particleRender.material).tintColor).elements = i, n.tintColor = r);
          } else(r = (n = e.particleRender.material).tintColor).elements = i, n.tintColor = r;
        }, t._getMeshRenderSharedMaterialAlphaColor = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.alphaColor.elements : null;
          }
          return e.meshRender.sharedMaterial.alphaColor.elements;
        }, t._setMeshRenderSharedMaterialAlphaColor = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.meshRender.material).alphaColor).elements = i, n.alphaColor = r);
          } else(r = (n = e.meshRender.material).alphaColor).elements = i, n.alphaColor = r;
        }, t._getMeshRenderSharedMaterialBaseColor = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.baseColor.elements : null;
          }
          return e.meshRender.sharedMaterial.baseColor.elements;
        }, t._setMeshRenderSharedMaterialBaseColor = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.meshRender.material).baseColor).elements = i, n.baseColor = r);
          } else(r = (n = e.meshRender.material).baseColor).elements = i, n.baseColor = r;
        }, t._getMeshRenderSharedMaterialDissolve = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.dissolve : 0;
          }
          return e.meshRender.sharedMaterial.dissolve;
        }, t._setMeshRenderSharedMaterialDissolve = function (t, e, i) {
          if (t) {
            var n = t.transform._entity;
            n && (n.owner.meshRender.material.dissolve = i[0]);
          } else e.meshRender.material.dissolve = i[0];
        }, t._getMeshRenderSharedMaterialDissolveSpeed = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.dissolveSpeed : 0;
          }
          return e.meshRender.sharedMaterial.dissolveSpeed;
        }, t._setMeshRenderSharedMaterialDissolveSpeed = function (t, e, i) {
          if (t) {
            var n = t.transform._entity;
            n && (n.owner.meshRender.material.dissolveSpeed = i[0]);
          } else e.meshRender.material.dissolveSpeed = i[0];
        }, t._getMeshRenderSharedMaterialMMultiplier = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.mMultiplier : 0;
          }
          return e.meshRender.sharedMaterial.mMultiplier;
        }, t._setMeshRenderSharedMaterialMMultiplier = function (t, e, i) {
          if (t) {
            var n = t.transform._entity;
            n && (n.owner.meshRender.material.mMultiplier = i[0]);
          } else e.meshRender.material.mMultiplier = i[0];
        }, t._getMeshRenderSharedMaterialBaseScrollSpeedX = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.baseScrollSpeedX : 0;
          }
          return e.meshRender.sharedMaterial.baseScrollSpeedX;
        }, t._setMeshRenderSharedMaterialBaseScrollSpeedX = function (t, e, i) {
          if (t) {
            var n = t.transform._entity;
            n && (n.owner.meshRender.material.baseScrollSpeedX = i[0]);
          } else e.meshRender.material.baseScrollSpeedX = i[0];
        }, t._getMeshRenderSharedMaterialBaseScrollSpeedY = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.baseScrollSpeedY : 0;
          }
          return e.meshRender.sharedMaterial.baseScrollSpeedY;
        }, t._setMeshRenderSharedMaterialBaseScrollSpeedY = function (t, e, i) {
          if (t) {
            var n = t.transform._entity;
            n && (n.owner.meshRender.material.baseScrollSpeedY = i[0]);
          } else e.meshRender.material.baseScrollSpeedY = i[0];
        }, t._getMeshRenderSharedMaterialSecondScrollSpeedX = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.secondScrollSpeedX : 0;
          }
          return e.meshRender.sharedMaterial.secondScrollSpeedX;
        }, t._setMeshRenderSharedMaterialSecondScrollSpeedX = function (t, e, i) {
          if (t) {
            var n = t.transform._entity;
            n && (n.owner.meshRender.material.secondScrollSpeedX = i[0]);
          } else e.meshRender.material.secondScrollSpeedX = i[0];
        }, t._getMeshRenderSharedMaterialSecondScrollSpeedY = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.secondScrollSpeedY : 0;
          }
          return e.meshRender.sharedMaterial.secondScrollSpeedY;
        }, t._setMeshRenderSharedMaterialSecondScrollSpeedY = function (t, e, i) {
          if (t) {
            var n = t.transform._entity;
            n && (n.owner.meshRender.material.secondScrollSpeedY = i[0]);
          } else e.meshRender.material.secondScrollSpeedY = i[0];
        }, t._getMeshRenderSharedMaterialAlpha = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.alpha : 0;
          }
          return e.meshRender.sharedMaterial.alpha;
        }, t._setMeshRenderSharedMaterialAlpha = function (t, e, i) {
          if (t) {
            var n = t.transform._entity;
            n && (n.owner.meshRender.material.alpha = i[0]);
          } else e.meshRender.material.alpha = i[0];
        }, t._getMeshRenderSharedMaterialIntensity = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.intensity : 0;
          }
          return e.meshRender.sharedMaterial.intensity;
        }, t._setMeshRenderSharedMaterialIntensity = function (t, e, i) {
          if (t) {
            var n = t.transform._entity;
            n && (n.owner.meshRender.material.intensity = i[0]);
          } else e.meshRender.material.intensity = i[0];
        }, t._getMeshRenderSharedMaterialDetailTilingOffset = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.detailTilingOffset.elements : null;
          }
          return e.meshRender.sharedMaterial.detailTilingOffset.elements;
        }, t._setMeshRenderSharedMaterialDetailTilingOffset = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.meshRender.material).detailTilingOffset).elements = i, n.detailTilingOffset = r);
          } else(r = (n = e.meshRender.material).detailTilingOffset).elements = i, n.detailTilingOffset = r;
        }, t._getMeshRenderSharedMaterialDissolveTilingOffset = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.dissolveTilingOffset.elements : null;
          }
          return e.meshRender.sharedMaterial.dissolveTilingOffset.elements;
        }, t._setMeshRenderSharedMaterialDissolveTilingOffset = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.meshRender.material).dissolveTilingOffset).elements = i, n.dissolveTilingOffset = r);
          } else(r = (n = e.meshRender.material).dissolveTilingOffset).elements = i, n.dissolveTilingOffset = r;
        }, t._getMeshRenderSharedMaterialMaskTilingOffset = function (t, e) {
          if (t) {
            var i = t.transform._entity;
            return i ? i.owner.meshRender.sharedMaterial.maskTilingOffset.elements : null;
          }
          return e.meshRender.sharedMaterial.maskTilingOffset.elements;
        }, t._setMeshRenderSharedMaterialMaskTilingOffset = function (t, e, i) {
          var n, r;
          if (t) {
            var a = t.transform._entity;
            a && ((r = (n = a.owner.meshRender.material).maskTilingOffset).elements = i, n.maskTilingOffset = r);
          } else(r = (n = e.meshRender.material).maskTilingOffset).elements = i, n.maskTilingOffset = r;
        }, t._propertyIDCounter = 0, t._propertyIndexDic = {}, t._propertySetFuncs = [], t._propertyGetFuncs = [], t;
      }(),
      U = function () {
        function t() {
          this.startTime = NaN, this.inTangent = null, this.outTangent = null, this.data = null, this.duration = NaN, this.next = null;
        }
        return r(t, "laya.d3.animation.Keyframe"), t;
      }(),
      k = function () {
        function t() {
          this._cacheProperty = !1, this.path = null, this.componentType = null, this.propertyNameID = 0, this.keyFrameWidth = 0, this.defaultData = null, this.keyFrames = null;
        }
        return r(t, "laya.d3.animation.KeyframeNode"), t;
      }(),
      G = function () {
        function t() {
          this._tempVector30 = new Le(), this._tempVector31 = new Le(), this._tempVector32 = new Le(), this._a = new Le(), this._b = new Le(), this._c = new Le(), this._d = new Le();
        }
        r(t, "laya.d3.core.glitter.SplineCurvePositionVelocity");
        var e = t.prototype;
        return e.Init = function (t, e, i, n) {
          t.cloneTo(this._d), e.cloneTo(this._c), Le.scale(t, 2, this._a), Le.scale(i, 2, this._tempVector30), Le.subtract(this._a, this._tempVector30, this._a), Le.add(this._a, e, this._a), Le.add(this._a, n, this._a), Le.scale(i, 3, this._b), Le.scale(t, 3, this._tempVector30), Le.subtract(this._b, this._tempVector30, this._b), Le.subtract(this._b, n, this._b), Le.scale(e, 2, this._tempVector30), Le.subtract(this._b, this._tempVector30, this._b);
        }, e.Slerp = function (t, e) {
          Le.scale(this._a, t * t * t, this._tempVector30), Le.scale(this._b, t * t, this._tempVector31), Le.scale(this._c, t, this._tempVector32), Le.add(this._tempVector30, this._tempVector31, e), Le.add(e, this._tempVector32, e), Le.add(e, this._d, e);
        }, t;
      }(),
      H = function () {
        function t(t, e, i, n) {
          this._datas = null, this._w = 0, this._h = 0, this._minHeight = NaN, this._maxHeight = NaN, this._datas = [], this._w = t, this._h = e, this._minHeight = i, this._maxHeight = n;
        }
        r(t, "laya.d3.core.HeightMap");
        var e = t.prototype;
        return e._inBounds = function (t, e) {
          return t >= 0 && t < this._h && e >= 0 && e < this._w;
        }, e.getHeight = function (t, e) {
          return this._inBounds(t, e) ? this._datas[t][e] : NaN;
        }, a(0, e, "width", function () {
          return this._w;
        }), a(0, e, "height", function () {
          return this._h;
        }), a(0, e, "maxHeight", function () {
          return this._maxHeight;
        }), a(0, e, "minHeight", function () {
          return this._minHeight;
        }), t.creatFromMesh = function (e, i, n, r) {
          for (var a = [], s = [], o = e.getSubMeshCount(), h = 0; h < o; h++) {
            for (var l = e.getSubMesh(h), u = l._getVertexBuffer(), c = u.getData(), _ = [], d = 0; d < c.length; d += u.vertexDeclaration.vertexStride / 4) {
              var f = new Le(c[d + 0], c[d + 1], c[d + 2]);
              _.push(f);
            }
            a.push(_);
            var p = l._getIndexBuffer();
            s.push(p.getData());
          }
          var m = e.boundingBox,
            g = m.min.x,
            v = m.min.z,
            y = m.max.x,
            x = m.max.z,
            T = m.min.y,
            S = m.max.y,
            w = y - g,
            E = x - v,
            b = r.elements[0] = w / (i - 1),
            C = r.elements[1] = E / (n - 1),
            M = new t(i, n, T, S),
            I = t._tempRay,
            D = I.direction.elements;
          D[0] = 0, D[1] = -1, D[2] = 0;
          var A = S + .1;
          I.origin.elements[1] = A;
          for (var R = 0; R < n; R++) {
            var P = v + R * C;
            M._datas[R] = [];
            for (var L = 0; L < i; L++) {
              var O = g + L * b,
                N = I.origin.elements;
              N[0] = O, N[2] = P;
              var V = t._getPosition(I, a, s);
              M._datas[R][L] = V === Number.MAX_VALUE ? NaN : A - V;
            }
          }
          return M;
        }, t.createFromImage = function (e, i, n) {
          for (var r = e.width, a = e.height, s = new t(r, a, i, n), o = (n - i) / 254, h = e.getPixels(), l = 0, u = 0; u < a; u++)
            for (var c = s._datas[u] = [], _ = 0; _ < r; _++) {
              var d = h[l++],
                f = h[l++],
                p = h[l++],
                m = h[l++];
              c[_] = 255 == d && 255 == f && 255 == p && 255 == m ? NaN : (d + f + p) / 3 * o + i;
            }
          return s;
        }, t._getPosition = function (t, e, i) {
          for (var n = Number.MAX_VALUE, r = 0; r < e.length; r++)
            for (var a = e[r], s = i[r], o = 0; o < s.length; o += 3) {
              var h = a[s[o + 0]],
                l = a[s[o + 1]],
                u = a[s[o + 2]],
                c = Ye.rayIntersectsTriangle(t, h, l, u);
              !isNaN(c) && c < n && (n = c);
            }
          return n;
        }, n(t, ["_tempRay", function () {
          return this._tempRay = new Re(new Le(), new Le());
        }]), t;
      }(),
      z = function () {
        function t() {
          this._visible = !0, this._nonRigidbodyOffset = 0, this._colliders = [];
        }
        r(t, "laya.d3.core.Layer");
        var e = t.prototype;
        return e._binarySearchIndex = function () {
          for (var e = 0, i = t._collsionTestList.length - 1, n = 0; e <= i;) {
            n = Math.floor((e + i) / 2);
            var r = t._collsionTestList[n];
            if (r == this._number) return n;
            r > this._number ? i = n - 1 : e = n + 1;
          }
          return e;
        }, e._addCollider = function (e) {
          0 === this._colliders.length && t._collsionTestList.splice(this._binarySearchIndex(), 0, this._number), e._isRigidbody ? (this._colliders.unshift(e), this._nonRigidbodyOffset++) : this._colliders.push(e);
        }, e._removeCollider = function (e) {
          var i = this._colliders.indexOf(e);
          i < this._nonRigidbodyOffset && this._nonRigidbodyOffset--, this._colliders.splice(i, 1), 0 === this._colliders.length && t._collsionTestList.splice(t._collsionTestList.indexOf(this._number), 1);
        }, a(0, e, "number", function () {
          return this._number;
        }), a(0, e, "visible", function () {
          return this._visible;
        }, function (e) {
          this._visible = e, t._visibleLayers = e ? t._visibleLayers | this.mask : t._visibleLayers & ~this.mask;
        }), a(0, e, "mask", function () {
          return this._mask;
        }), a(1, t, "visibleLayers", function () {
          return t._visibleLayers;
        }, function (e) {
          t._visibleLayers = e;
          for (var i = 0, n = t._layerList.length; i < n; i++) {
            var r = t._layerList[i];
            r._visible = 0 != (r._mask & t._visibleLayers);
          }
        }), t.__init__ = function () {
          t._layerList.length = 31;
          for (var e = 0; e < 31; e++) {
            var i = new t();
            t._layerList[e] = i, 0 === e ? (i.name = "Default Layer", i.visible = !0) : (i.name = "Layer-" + e, i.visible = !1), i._number = e, i._mask = Math.pow(2, e);
          }
          t.currentCreationLayer = t._layerList[0];
        }, t.getLayerByNumber = function (e) {
          if (e < 0 || e > 30) throw new Error("无法返回指定Layer，该number超出范围！");
          return t._layerList[e];
        }, t.getLayerByName = function (e) {
          for (var i = 0; i < 31; i++)
            if (t._layerList[i].name === e) return t._layerList[i];
          throw new Error("无法返回指定Layer,该name不存在");
        }, t.isVisible = function (e) {
          return 0 != (e & t._currentCameraCullingMask & t._visibleLayers);
        }, t._layerList = [], t._visibleLayers = 2147483647, t._collsionTestList = [], t._currentCameraCullingMask = 2147483647, t.maxCount = 31, t.currentCreationLayer = null, t;
      }(),
      W = function () {
        function t(t, e, i) {
          this._time = NaN, this._minCount = 0, this._maxCount = 0, this._time = t, this._minCount = e, this._maxCount = i;
        }
        r(t, "laya.d3.core.particleShuriKen.module.Burst");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          e._time = this._time, e._minCount = this._minCount, e._maxCount = this._maxCount;
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "time", function () {
          return this._time;
        }), a(0, e, "minCount", function () {
          return this._minCount;
        }), a(0, e, "maxCount", function () {
          return this._maxCount;
        }), t;
      }(),
      j = function () {
        function t(t) {
          this._color = null, this.enbale = !1, this._color = t;
        }
        r(t, "laya.d3.core.particleShuriKen.module.ColorOverLifetime");
        var e = t.prototype;
        return e.cloneTo = function (t) {
          var e = t;
          this._color.cloneTo(e._color), e.enbale = this.enbale;
        }, e.clone = function () {
          var t;
          switch (this._color.type) {
            case 0:
              t = Q.createByConstant(this._color.constant.clone());
              break;
            case 1:
              t = Q.createByGradient(this._color.gradient.clone());
              break;
            case 2:
              t = Q.createByRandomTwoConstant(this._color.constantMin.clone(), this._color.constantMax.clone());
              break;
            case 3:
              t = Q.createByRandomTwoGradient(this._color.gradientMin.clone(), this._color.gradientMax.clone());
          }
          var e = new this.constructor(t);
          return e.enbale = this.enbale, e;
        }, a(0, e, "color", function () {
          return this._color;
        }), t;
      }(),
      X = function () {
        function t() {
          this._destroyed = !1, this._emissionRate = 0, this._bursts = null, this.enbale = !1, this._destroyed = !1, this.emissionRate = 10, this._bursts = [];
        }
        r(t, "laya.d3.core.particleShuriKen.module.Emission");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0,
          "laya.resource.IDestroy": !0
        }), e._destroy = function () {
          this._bursts = null, this._destroyed = !0;
        }, e.getBurstsCount = function () {
          return this._bursts.length;
        }, e.getBurstByIndex = function (t) {
          return this._bursts[t];
        }, e.addBurst = function (t) {
          var e = this._bursts.length;
          if (e > 0)
            for (var i = 0; i < e; i++) this._bursts[i].time > t.time && this._bursts.splice(i, 0, t);
          this._bursts.push(t);
        }, e.removeBurst = function (t) {
          var e = this._bursts.indexOf(t); - 1 !== e && this._bursts.splice(e, 1);
        }, e.removeBurstByIndex = function (t) {
          this._bursts.splice(t, 1);
        }, e.clearBurst = function () {
          this._bursts.length = 0;
        }, e.cloneTo = function (t) {
          var e = t,
            i = e._bursts;
          i.length = this._bursts.length;
          for (var n = 0, r = this._bursts.length; n < r; n++) {
            var a = i[n];
            a ? this._bursts[n].cloneTo(a) : i[n] = this._bursts[n].clone();
          }
          e._emissionRate = this._emissionRate, e.enbale = this.enbale;
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "destroyed", function () {
          return this._destroyed;
        }), a(0, e, "emissionRate", function () {
          return this._emissionRate;
        }, function (t) {
          if (t < 0) throw new Error("ParticleBaseShape:emissionRate value must large or equal than 0.");
          this._emissionRate = t;
        }), t;
      }(),
      Y = function () {
        function t() {
          this._type = 0, this._constant = 0, this._overTime = null, this._constantMin = 0, this._constantMax = 0, this._overTimeMin = null, this._overTimeMax = null;
        }
        r(t, "laya.d3.core.particleShuriKen.module.FrameOverTime");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          e._type = this._type, e._constant = this._constant, this._overTime.cloneTo(e._overTime), e._constantMin = this._constantMin, e._constantMax = this._constantMax, this._overTimeMin.cloneTo(e._overTimeMin), this._overTimeMax.cloneTo(e._overTimeMax);
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "frameOverTimeData", function () {
          return this._overTime;
        }), a(0, e, "constant", function () {
          return this._constant;
        }), a(0, e, "type", function () {
          return this._type;
        }), a(0, e, "frameOverTimeDataMin", function () {
          return this._overTimeMin;
        }), a(0, e, "constantMin", function () {
          return this._constantMin;
        }), a(0, e, "frameOverTimeDataMax", function () {
          return this._overTimeMax;
        }), a(0, e, "constantMax", function () {
          return this._constantMax;
        }), t.createByConstant = function (e) {
          var i = new t();
          return i._type = 0, i._constant = e, i;
        }, t.createByOverTime = function (e) {
          var i = new t();
          return i._type = 1, i._overTime = e, i;
        }, t.createByRandomTwoConstant = function (e, i) {
          var n = new t();
          return n._type = 2, n._constantMin = e, n._constantMax = i, n;
        }, t.createByRandomTwoOverTime = function (e, i) {
          var n = new t();
          return n._type = 3, n._overTimeMin = e, n._overTimeMax = i, n;
        }, t;
      }(),
      q = function () {
        function t() {
          this._type = 0, this._separateAxes = !1, this._constant = NaN, this._constantSeparate = null, this._gradient = null, this._gradientX = null, this._gradientY = null, this._gradientZ = null, this._gradientW = null, this._constantMin = NaN, this._constantMax = NaN, this._constantMinSeparate = null, this._constantMaxSeparate = null, this._gradientMin = null, this._gradientMax = null, this._gradientXMin = null, this._gradientXMax = null, this._gradientYMin = null, this._gradientYMax = null, this._gradientZMin = null, this._gradientZMax = null, this._gradientWMin = null, this._gradientWMax = null;
        }
        r(t, "laya.d3.core.particleShuriKen.module.GradientAngularVelocity");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          e._type = this._type, e._separateAxes = this._separateAxes, e._constant = this._constant, this._constantSeparate.cloneTo(e._constantSeparate), this._gradient.cloneTo(e._gradient), this._gradientX.cloneTo(e._gradientX), this._gradientY.cloneTo(e._gradientY), this._gradientZ.cloneTo(e._gradientZ), e._constantMin = this._constantMin, e._constantMax = this._constantMax, this._constantMinSeparate.cloneTo(e._constantMinSeparate), this._constantMaxSeparate.cloneTo(e._constantMaxSeparate), this._gradientMin.cloneTo(e._gradientMin), this._gradientMax.cloneTo(e._gradientMax), this._gradientXMin.cloneTo(e._gradientXMin), this._gradientXMax.cloneTo(e._gradientXMax), this._gradientYMin.cloneTo(e._gradientYMin), this._gradientYMax.cloneTo(e._gradientYMax), this._gradientZMin.cloneTo(e._gradientZMin), this._gradientZMax.cloneTo(e._gradientZMax);
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "gradientZ", function () {
          return this._gradientZ;
        }), a(0, e, "constant", function () {
          return this._constant;
        }), a(0, e, "gradient", function () {
          return this._gradient;
        }), a(0, e, "separateAxes", function () {
          return this._separateAxes;
        }), a(0, e, "type", function () {
          return this._type;
        }), a(0, e, "constantSeparate", function () {
          return this._constantSeparate;
        }), a(0, e, "gradientX", function () {
          return this._gradientX;
        }), a(0, e, "gradientY", function () {
          return this._gradientY;
        }), a(0, e, "gradientW", function () {
          return this._gradientW;
        }), a(0, e, "gradientMin", function () {
          return this._gradientMin;
        }), a(0, e, "constantMin", function () {
          return this._constantMin;
        }), a(0, e, "gradientMax", function () {
          return this._gradientMax;
        }), a(0, e, "constantMax", function () {
          return this._constantMax;
        }), a(0, e, "gradientWMin", function () {
          return this._gradientWMin;
        }), a(0, e, "constantMinSeparate", function () {
          return this._constantMinSeparate;
        }), a(0, e, "constantMaxSeparate", function () {
          return this._constantMaxSeparate;
        }), a(0, e, "gradientXMin", function () {
          return this._gradientXMin;
        }), a(0, e, "gradientXMax", function () {
          return this._gradientXMax;
        }), a(0, e, "gradientWMax", function () {
          return this._gradientWMax;
        }), a(0, e, "gradientYMin", function () {
          return this._gradientYMin;
        }), a(0, e, "gradientYMax", function () {
          return this._gradientYMax;
        }), a(0, e, "gradientZMin", function () {
          return this._gradientZMin;
        }), a(0, e, "gradientZMax", function () {
          return this._gradientZMax;
        }), t.createByConstant = function (e) {
          var i = new t();
          return i._type = 0, i._separateAxes = !1, i._constant = e, i;
        }, t.createByConstantSeparate = function (e) {
          var i = new t();
          return i._type = 0, i._separateAxes = !0, i._constantSeparate = e, i;
        }, t.createByGradient = function (e) {
          var i = new t();
          return i._type = 1, i._separateAxes = !1, i._gradient = e, i;
        }, t.createByGradientSeparate = function (e, i, n, r) {
          var a = new t();
          return a._type = 1, a._separateAxes = !0, a._gradientX = e, a._gradientY = i, a._gradientZ = n, a._gradientW = r, a;
        }, t.createByRandomTwoConstant = function (e, i) {
          var n = new t();
          return n._type = 2, n._separateAxes = !1, n._constantMin = e, n._constantMax = i, n;
        }, t.createByRandomTwoConstantSeparate = function (e, i) {
          var n = new t();
          return n._type = 2, n._separateAxes = !0, n._constantMinSeparate = e, n._constantMaxSeparate = i, n;
        }, t.createByRandomTwoGradient = function (e, i) {
          var n = new t();
          return n._type = 3, n._separateAxes = !1, n._gradientMin = e, n._gradientMax = i, n;
        }, t.createByRandomTwoGradientSeparate = function (e, i, n, r, a, s, o, h) {
          var l = new t();
          return l._type = 3, l._separateAxes = !0, l._gradientXMin = e, l._gradientXMax = i, l._gradientYMin = n, l._gradientYMax = r, l._gradientZMin = a, l._gradientZMax = s, l._gradientWMin = o, l._gradientWMax = h, l;
        }, t;
      }(),
      Q = function () {
        function t() {
          this._type = 0, this._constant = null, this._constantMin = null, this._constantMax = null, this._gradient = null, this._gradientMin = null, this._gradientMax = null;
        }
        r(t, "laya.d3.core.particleShuriKen.module.GradientColor");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          e._type = this._type, this._constant.cloneTo(e._constant), this._constantMin.cloneTo(e._constantMin), this._constantMax.cloneTo(e._constantMax), this._gradient.cloneTo(e._gradient), this._gradientMin.cloneTo(e._gradientMin), this._gradientMax.cloneTo(e._gradientMax);
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "gradient", function () {
          return this._gradient;
        }), a(0, e, "constant", function () {
          return this._constant;
        }), a(0, e, "type", function () {
          return this._type;
        }), a(0, e, "gradientMin", function () {
          return this._gradientMin;
        }), a(0, e, "constantMin", function () {
          return this._constantMin;
        }), a(0, e, "gradientMax", function () {
          return this._gradientMax;
        }), a(0, e, "constantMax", function () {
          return this._constantMax;
        }), t.createByConstant = function (e) {
          var i = new t();
          return i._type = 0, i._constant = e, i;
        }, t.createByGradient = function (e) {
          var i = new t();
          return i._type = 1, i._gradient = e, i;
        }, t.createByRandomTwoConstant = function (e, i) {
          var n = new t();
          return n._type = 2, n._constantMin = e, n._constantMax = i, n;
        }, t.createByRandomTwoGradient = function (e, i) {
          var n = new t();
          return n._type = 3, n._gradientMin = e, n._gradientMax = i, n;
        }, t;
      }(),
      K = function () {
        function t() {
          this._alphaCurrentLength = 0, this._rgbCurrentLength = 0, this._alphaElements = null, this._rgbElements = null, this._alphaElements = new Float32Array(8), this._rgbElements = new Float32Array(16);
        }
        r(t, "laya.d3.core.particleShuriKen.module.GradientDataColor");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.addAlpha = function (t, e) {
          this._alphaCurrentLength < 8 ? (6 === this._alphaCurrentLength && 1 !== t && (t = 1, console.log("GradientDataColor warning:the forth key is  be force set to 1.")), this._alphaElements[this._alphaCurrentLength++] = t, this._alphaElements[this._alphaCurrentLength++] = e) : console.log("GradientDataColor warning:data count must lessEqual than 4");
        }, e.addRGB = function (t, e) {
          this._rgbCurrentLength < 16 ? (12 === this._rgbCurrentLength && 1 !== t && (t = 1, console.log("GradientDataColor warning:the forth key is  be force set to 1.")), this._rgbElements[this._rgbCurrentLength++] = t, this._rgbElements[this._rgbCurrentLength++] = e.x, this._rgbElements[this._rgbCurrentLength++] = e.y, this._rgbElements[this._rgbCurrentLength++] = e.z) : console.log("GradientDataColor warning:data count must lessEqual than 4");
        }, e.cloneTo = function (t) {
          var e = t,
            i = 0,
            n = 0;
          e._alphaCurrentLength = this._alphaCurrentLength;
          var r = e._alphaElements;
          for (r.length = this._alphaElements.length, i = 0, n = this._alphaElements.length; i < n; i++) r[i] = this._alphaElements[i];
          e._rgbCurrentLength = this._rgbCurrentLength;
          var a = e._rgbElements;
          for (a.length = this._rgbElements.length, i = 0, n = this._rgbElements.length; i < n; i++) a[i] = this._rgbElements[i];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "alphaGradientCount", function () {
          return this._alphaCurrentLength / 2;
        }), a(0, e, "rgbGradientCount", function () {
          return this._rgbCurrentLength / 4;
        }), t;
      }(),
      Z = function () {
        function t() {
          this._currentLength = 0, this._elements = null, this._elements = new Float32Array(8);
        }
        r(t, "laya.d3.core.particleShuriKen.module.GradientDataInt");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.add = function (t, e) {
          this._currentLength < 8 ? (6 === this._currentLength && 1 !== t && (t = 1, console.log("Warning:the forth key is  be force set to 1.")), this._elements[this._currentLength++] = t, this._elements[this._currentLength++] = e) : console.log("Warning:data count must lessEqual than 4");
        }, e.cloneTo = function (t) {
          var e = t;
          e._currentLength = this._currentLength;
          var i = e._elements;
          i.length = this._elements.length;
          for (var n = 0, r = this._elements.length; n < r; n++) i[n] = this._elements[n];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "gradientCount", function () {
          return this._currentLength / 2;
        }), t;
      }(),
      $ = function () {
        function t() {
          this._currentLength = 0, this._elements = null, this._elements = new Float32Array(8);
        }
        r(t, "laya.d3.core.particleShuriKen.module.GradientDataNumber");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.add = function (t, e) {
          this._currentLength < 8 ? (6 === this._currentLength && 1 !== t && (t = 1, console.log("GradientDataNumber warning:the forth key is  be force set to 1.")), this._elements[this._currentLength++] = t, this._elements[this._currentLength++] = e) : console.log("GradientDataNumber warning:data count must lessEqual than 4");
        }, e.getKeyByIndex = function (t) {
          return this._elements[2 * t];
        }, e.getValueByIndex = function (t) {
          return this._elements[2 * t + 1];
        }, e.getAverageValue = function () {
          for (var t = 0, e = this._currentLength - 2; t < e; t += 2) {
            this._elements[t + 1];
            this._elements[t + 3], this._elements[t + 2] - this._elements[t];
          }
          return 0;
        }, e.cloneTo = function (t) {
          var e = t;
          e._currentLength = this._currentLength;
          var i = e._elements;
          i.length = this._elements.length;
          for (var n = 0, r = this._elements.length; n < r; n++) i[n] = this._elements[n];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "gradientCount", function () {
          return this._currentLength / 2;
        }), t;
      }(),
      J = (function () {
        function t() {
          this._currentLength = 0, this._elements = null, this._elements = new Float32Array(12);
        }
        r(t, "laya.d3.core.particleShuriKen.module.GradientDataVector2");
        var e = t.prototype;
        i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.add = function (t, e) {
          this._currentLength < 8 ? (6 === this._currentLength && 1 !== t && (t = 1, console.log("GradientDataVector2 warning:the forth key is  be force set to 1.")), this._elements[this._currentLength++] = t, this._elements[this._currentLength++] = e.x, this._elements[this._currentLength++] = e.y) : console.log("GradientDataVector2 warning:data count must lessEqual than 4");
        }, e.cloneTo = function (t) {
          var e = t;
          e._currentLength = this._currentLength;
          var i = e._elements;
          i.length = this._elements.length;
          for (var n = 0, r = this._elements.length; n < r; n++) i[n] = this._elements[n];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "gradientCount", function () {
          return this._currentLength / 3;
        });
      }(), function () {
        function t() {
          this._type = 0, this._separateAxes = !1, this._gradient = null, this._gradientX = null, this._gradientY = null, this._gradientZ = null, this._constantMin = NaN, this._constantMax = NaN, this._constantMinSeparate = null, this._constantMaxSeparate = null, this._gradientMin = null, this._gradientMax = null, this._gradientXMin = null, this._gradientXMax = null, this._gradientYMin = null, this._gradientYMax = null, this._gradientZMin = null, this._gradientZMax = null;
        }
        r(t, "laya.d3.core.particleShuriKen.module.GradientSize");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.getMaxSizeInGradient = function () {
          var t = 0,
            e = 0,
            i = -Number.MAX_VALUE;
          switch (this._type) {
            case 0:
              if (this._separateAxes) {
                for (t = 0, e = this._gradientX.gradientCount; t < e; t++) i = Math.max(i, this._gradientX.getValueByIndex(t));
                for (t = 0, e = this._gradientY.gradientCount; t < e; t++) i = Math.max(i, this._gradientY.getValueByIndex(t));
              } else
                for (t = 0, e = this._gradient.gradientCount; t < e; t++) i = Math.max(i, this._gradient.getValueByIndex(t));
              break;
            case 1:
              this._separateAxes ? (i = Math.max(this._constantMinSeparate.x, this._constantMaxSeparate.x), i = Math.max(i, this._constantMinSeparate.y), i = Math.max(i, this._constantMaxSeparate.y)) : i = Math.max(this._constantMin, this._constantMax);
              break;
            case 2:
              if (this._separateAxes) {
                for (t = 0, e = this._gradientXMin.gradientCount; t < e; t++) i = Math.max(i, this._gradientXMin.getValueByIndex(t));
                for (t = 0, e = this._gradientXMax.gradientCount; t < e; t++) i = Math.max(i, this._gradientXMax.getValueByIndex(t));
                for (t = 0, e = this._gradientYMin.gradientCount; t < e; t++) i = Math.max(i, this._gradientYMin.getValueByIndex(t));
                for (t = 0, e = this._gradientZMax.gradientCount; t < e; t++) i = Math.max(i, this._gradientZMax.getValueByIndex(t));
              } else {
                for (t = 0, e = this._gradientMin.gradientCount; t < e; t++) i = Math.max(i, this._gradientMin.getValueByIndex(t));
                for (t = 0, e = this._gradientMax.gradientCount; t < e; t++) i = Math.max(i, this._gradientMax.getValueByIndex(t));
              }
          }
          return i;
        }, e.cloneTo = function (t) {
          var e = t;
          e._type = this._type, e._separateAxes = this._separateAxes, this._gradient.cloneTo(e._gradient), this._gradientX.cloneTo(e._gradientX), this._gradientY.cloneTo(e._gradientY), this._gradientZ.cloneTo(e._gradientZ), e._constantMin = this._constantMin, e._constantMax = this._constantMax, this._constantMinSeparate.cloneTo(e._constantMinSeparate), this._constantMaxSeparate.cloneTo(e._constantMaxSeparate), this._gradientMin.cloneTo(e._gradientMin), this._gradientMax.cloneTo(e._gradientMax), this._gradientXMin.cloneTo(e._gradientXMin), this._gradientXMax.cloneTo(e._gradientXMax), this._gradientYMin.cloneTo(e._gradientYMin), this._gradientYMax.cloneTo(e._gradientYMax), this._gradientZMin.cloneTo(e._gradientZMin), this._gradientZMax.cloneTo(e._gradientZMax);
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "gradientZ", function () {
          return this._gradientZ;
        }), a(0, e, "gradient", function () {
          return this._gradient;
        }), a(0, e, "separateAxes", function () {
          return this._separateAxes;
        }), a(0, e, "type", function () {
          return this._type;
        }), a(0, e, "gradientMin", function () {
          return this._gradientMin;
        }), a(0, e, "constantMin", function () {
          return this._constantMin;
        }), a(0, e, "gradientX", function () {
          return this._gradientX;
        }), a(0, e, "gradientY", function () {
          return this._gradientY;
        }), a(0, e, "gradientMax", function () {
          return this._gradientMax;
        }), a(0, e, "constantMax", function () {
          return this._constantMax;
        }), a(0, e, "constantMinSeparate", function () {
          return this._constantMinSeparate;
        }), a(0, e, "constantMaxSeparate", function () {
          return this._constantMaxSeparate;
        }), a(0, e, "gradientXMin", function () {
          return this._gradientXMin;
        }), a(0, e, "gradientXMax", function () {
          return this._gradientXMax;
        }), a(0, e, "gradientYMin", function () {
          return this._gradientYMin;
        }), a(0, e, "gradientYMax", function () {
          return this._gradientYMax;
        }), a(0, e, "gradientZMin", function () {
          return this._gradientZMin;
        }), a(0, e, "gradientZMax", function () {
          return this._gradientZMax;
        }), t.createByGradient = function (e) {
          var i = new t();
          return i._type = 0, i._separateAxes = !1, i._gradient = e, i;
        }, t.createByGradientSeparate = function (e, i, n) {
          var r = new t();
          return r._type = 0, r._separateAxes = !0, r._gradientX = e, r._gradientY = i, r._gradientZ = n, r;
        }, t.createByRandomTwoConstant = function (e, i) {
          var n = new t();
          return n._type = 1, n._separateAxes = !1, n._constantMin = e, n._constantMax = i, n;
        }, t.createByRandomTwoConstantSeparate = function (e, i) {
          var n = new t();
          return n._type = 1, n._separateAxes = !0, n._constantMinSeparate = e, n._constantMaxSeparate = i, n;
        }, t.createByRandomTwoGradient = function (e, i) {
          var n = new t();
          return n._type = 2, n._separateAxes = !1, n._gradientMin = e, n._gradientMax = i, n;
        }, t.createByRandomTwoGradientSeparate = function (e, i, n, r, a, s) {
          var o = new t();
          return o._type = 2, o._separateAxes = !0, o._gradientXMin = e, o._gradientXMax = i, o._gradientYMin = n, o._gradientYMax = r, o._gradientZMin = a, o._gradientZMax = s, o;
        }, t;
      }()),
      tt = function () {
        function t() {
          this._type = 0, this._constant = null, this._gradientX = null, this._gradientY = null, this._gradientZ = null, this._constantMin = null, this._constantMax = null, this._gradientXMin = null, this._gradientXMax = null, this._gradientYMin = null, this._gradientYMax = null, this._gradientZMin = null, this._gradientZMax = null;
        }
        r(t, "laya.d3.core.particleShuriKen.module.GradientVelocity");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          e._type = this._type, this._constant.cloneTo(e._constant), this._gradientX.cloneTo(e._gradientX), this._gradientY.cloneTo(e._gradientY), this._gradientZ.cloneTo(e._gradientZ), this._constantMin.cloneTo(e._constantMin), this._constantMax.cloneTo(e._constantMax), this._gradientXMin.cloneTo(e._gradientXMin), this._gradientXMax.cloneTo(e._gradientXMax), this._gradientYMin.cloneTo(e._gradientYMin), this._gradientYMax.cloneTo(e._gradientYMax), this._gradientZMin.cloneTo(e._gradientZMin), this._gradientZMax.cloneTo(e._gradientZMax);
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "gradientZ", function () {
          return this._gradientZ;
        }), a(0, e, "constant", function () {
          return this._constant;
        }), a(0, e, "type", function () {
          return this._type;
        }), a(0, e, "gradientXMax", function () {
          return this._gradientXMax;
        }), a(0, e, "constantMin", function () {
          return this._constantMin;
        }), a(0, e, "gradientX", function () {
          return this._gradientX;
        }), a(0, e, "gradientY", function () {
          return this._gradientY;
        }), a(0, e, "gradientXMin", function () {
          return this._gradientXMin;
        }), a(0, e, "constantMax", function () {
          return this._constantMax;
        }), a(0, e, "gradientYMin", function () {
          return this._gradientYMin;
        }), a(0, e, "gradientYMax", function () {
          return this._gradientYMax;
        }), a(0, e, "gradientZMin", function () {
          return this._gradientZMin;
        }), a(0, e, "gradientZMax", function () {
          return this._gradientZMax;
        }), t.createByConstant = function (e) {
          var i = new t();
          return i._type = 0, i._constant = e, i;
        }, t.createByGradient = function (e, i, n) {
          var r = new t();
          return r._type = 1, r._gradientX = e, r._gradientY = i, r._gradientZ = n, r;
        }, t.createByRandomTwoConstant = function (e, i) {
          var n = new t();
          return n._type = 2, n._constantMin = e, n._constantMax = i, n;
        }, t.createByRandomTwoGradient = function (e, i, n, r, a, s) {
          var o = new t();
          return o._type = 3, o._gradientXMin = e, o._gradientXMax = i, o._gradientYMin = n, o._gradientYMax = r, o._gradientZMin = a, o._gradientZMax = s, o;
        }, t;
      }(),
      et = function () {
        function t(t) {
          this._angularVelocity = null, this.enbale = !1, this._angularVelocity = t;
        }
        r(t, "laya.d3.core.particleShuriKen.module.RotationOverLifetime");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          this._angularVelocity.cloneTo(e._angularVelocity), e.enbale = this.enbale;
        }, e.clone = function () {
          var t;
          switch (this._angularVelocity.type) {
            case 0:
              t = this._angularVelocity.separateAxes ? q.createByConstantSeparate(this._angularVelocity.constantSeparate.clone()) : q.createByConstant(this._angularVelocity.constant);
              break;
            case 1:
              t = this._angularVelocity.separateAxes ? q.createByGradientSeparate(this._angularVelocity.gradientX.clone(), this._angularVelocity.gradientY.clone(), this._angularVelocity.gradientZ.clone(), this._angularVelocity.gradientW.clone()) : q.createByGradient(this._angularVelocity.gradient.clone());
              break;
            case 2:
              t = this._angularVelocity.separateAxes ? q.createByRandomTwoConstantSeparate(this._angularVelocity.constantMinSeparate.clone(), this._angularVelocity.constantMaxSeparate.clone()) : q.createByRandomTwoConstant(this._angularVelocity.constantMin, this._angularVelocity.constantMax);
              break;
            case 3:
              t = this._angularVelocity.separateAxes ? q.createByRandomTwoGradientSeparate(this._angularVelocity.gradientXMin.clone(), this._angularVelocity.gradientYMin.clone(), this._angularVelocity.gradientZMin.clone(), this._angularVelocity.gradientWMin.clone(), this._angularVelocity.gradientXMax.clone(), this._angularVelocity.gradientYMax.clone(), this._angularVelocity.gradientZMax.clone(), this._angularVelocity.gradientWMax.clone()) : q.createByRandomTwoGradient(this._angularVelocity.gradientMin.clone(), this._angularVelocity.gradientMax.clone());
          }
          var e = new this.constructor(t);
          return e.enbale = this.enbale, e;
        }, a(0, e, "angularVelocity", function () {
          return this._angularVelocity;
        }), t;
      }(),
      it = function () {
        function t() {
          this.enable = !1, this.randomDirection = !1;
        }
        r(t, "laya.d3.core.particleShuriKen.module.shape.BaseShape");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e._getShapeBoundBox = function (t) {
          throw new Error("BaseShape: must override it.");
        }, e._getSpeedBoundBox = function (t) {
          throw new Error("BaseShape: must override it.");
        }, e.generatePositionAndDirection = function (t, e, i, n) {
          throw new Error("BaseShape: must override it.");
        }, e._calculateProceduralBounds = function (t, e, i) {
          this._getShapeBoundBox(t);
          var n = t.min,
            r = t.max;
          Le.multiply(n, e, n), Le.multiply(r, e, r);
          var a = new xe(new Le(), new Le());
          this.randomDirection ? (a.min = new Le(-1, -1, -1), a.max = new Le(1, 1, 1)) : this._getSpeedBoundBox(a);
          var s = new xe(new Le(), new Le()),
            o = s.min,
            h = s.max;
          Le.scale(a.min, i.y, o), Le.scale(a.max, i.y, h), Le.add(t.min, o, o), Le.add(t.max, h, h), Le.min(t.min, o, t.min), Le.max(t.max, o, t.max);
          var l = new xe(new Le(), new Le()),
            u = l.min,
            c = l.max;
          Le.scale(a.min, i.x, u), Le.scale(a.max, i.x, c), Le.min(l.min, c, o), Le.max(l.min, c, h), Le.min(t.min, o, t.min), Le.max(t.max, o, t.max);
        }, e.cloneTo = function (t) {
          t.enable = this.enable;
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, t;
      }(),
      nt = function () {
        function t() {}
        return r(t, "laya.d3.core.particleShuriKen.module.shape.ShapeUtils"), t._randomPointUnitArcCircle = function (t, e, i) {
          var n = e.elements,
            r = NaN;
          r = i ? i.getFloat() * t : Math.random() * t, n[0] = Math.cos(r), n[1] = Math.sin(r);
        }, t._randomPointInsideUnitArcCircle = function (e, i, n) {
          var r = i.elements;
          t._randomPointUnitArcCircle(e, i, n);
          var a = NaN;
          a = n ? Math.pow(n.getFloat(), .5) : Math.pow(Math.random(), .5), r[0] = r[0] * a, r[1] = r[1] * a;
        }, t._randomPointUnitCircle = function (t, e) {
          var i = t.elements,
            n = NaN;
          n = e ? e.getFloat() * Math.PI * 2 : Math.random() * Math.PI * 2, i[0] = Math.cos(n), i[1] = Math.sin(n);
        }, t._randomPointInsideUnitCircle = function (e, i) {
          var n = e.elements;
          t._randomPointUnitCircle(e);
          var r = NaN;
          r = i ? Math.pow(i.getFloat(), .5) : Math.pow(Math.random(), .5), n[0] = n[0] * r, n[1] = n[1] * r;
        }, t._randomPointUnitSphere = function (t, e) {
          var i = t.elements,
            n = NaN,
            r = NaN;
          e ? (n = i[2] = 2 * e.getFloat() - 1, r = e.getFloat() * Math.PI * 2) : (n = i[2] = 2 * Math.random() - 1, r = Math.random() * Math.PI * 2);
          var a = Math.sqrt(1 - n * n);
          i[0] = a * Math.cos(r), i[1] = a * Math.sin(r);
        }, t._randomPointInsideUnitSphere = function (e, i) {
          var n = e.elements;
          t._randomPointUnitSphere(e);
          var r = NaN;
          r = i ? Math.pow(i.getFloat(), 1 / 3) : Math.pow(Math.random(), 1 / 3), n[0] = n[0] * r, n[1] = n[1] * r, n[2] = n[2] * r;
        }, t._randomPointInsideHalfUnitBox = function (t, e) {
          var i = t.elements;
          e ? (i[0] = e.getFloat() - .5, i[1] = e.getFloat() - .5, i[2] = e.getFloat() - .5) : (i[0] = Math.random() - .5, i[1] = Math.random() - .5, i[2] = Math.random() - .5);
        }, t;
      }(),
      rt = function () {
        function t(t) {
          this._size = null, this.enbale = !1, this._size = t;
        }
        r(t, "laya.d3.core.particleShuriKen.module.SizeOverLifetime");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          this._size.cloneTo(e._size), e.enbale = this.enbale;
        }, e.clone = function () {
          var t;
          switch (this._size.type) {
            case 0:
              t = this._size.separateAxes ? J.createByGradientSeparate(this._size.gradientX.clone(), this._size.gradientY.clone(), this._size.gradientZ.clone()) : J.createByGradient(this._size.gradient.clone());
              break;
            case 1:
              t = this._size.separateAxes ? J.createByRandomTwoConstantSeparate(this._size.constantMinSeparate.clone(), this._size.constantMaxSeparate.clone()) : J.createByRandomTwoConstant(this._size.constantMin, this._size.constantMax);
              break;
            case 2:
              t = this._size.separateAxes ? J.createByRandomTwoGradientSeparate(this._size.gradientXMin.clone(), this._size.gradientYMin.clone(), this._size.gradientZMin.clone(), this._size.gradientXMax.clone(), this._size.gradientYMax.clone(), this._size.gradientZMax.clone()) : J.createByRandomTwoGradient(this._size.gradientMin.clone(), this._size.gradientMax.clone());
          }
          var e = new this.constructor(t);
          return e.enbale = this.enbale, e;
        }, a(0, e, "size", function () {
          return this._size;
        }), t;
      }(),
      at = function () {
        function t() {
          this._type = 0, this._constant = NaN, this._constantMin = NaN, this._constantMax = NaN;
        }
        r(t, "laya.d3.core.particleShuriKen.module.StartFrame");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          e._type = this._type, e._constant = this._constant, e._constantMin = this._constantMin, e._constantMax = this._constantMax;
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "constant", function () {
          return this._constant;
        }), a(0, e, "type", function () {
          return this._type;
        }), a(0, e, "constantMin", function () {
          return this._constantMin;
        }), a(0, e, "constantMax", function () {
          return this._constantMax;
        }), t.createByConstant = function (e) {
          var i = new t();
          return i._type = 0, i._constant = e, i;
        }, t.createByRandomTwoConstant = function (e, i) {
          var n = new t();
          return n._type = 1, n._constantMin = e, n._constantMax = i, n;
        }, t;
      }(),
      st = function () {
        function t(t, e) {
          this._frame = null, this._startFrame = null, this.tiles = null, this.type = 0, this.randomRow = !1, this.rowIndex = 0, this.cycles = 0, this.enableUVChannels = 0, this.enable = !1, this.tiles = new Pe(1, 1), this.type = 0, this.randomRow = !0, this.rowIndex = 0, this.cycles = 1, this.enableUVChannels = 1, this._frame = t, this._startFrame = e;
        }
        r(t, "laya.d3.core.particleShuriKen.module.TextureSheetAnimation");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          this.tiles.cloneTo(e.tiles), e.type = this.type, e.randomRow = this.randomRow, this._frame.cloneTo(e._frame), this._startFrame.cloneTo(e._startFrame), e.cycles = this.cycles, e.enableUVChannels = this.enableUVChannels, e.enable = this.enable;
        }, e.clone = function () {
          var t;
          switch (this._frame.type) {
            case 0:
              t = Y.createByConstant(this._frame.constant);
              break;
            case 1:
              t = Y.createByOverTime(this._frame.frameOverTimeData.clone());
              break;
            case 2:
              t = Y.createByRandomTwoConstant(this._frame.constantMin, this._frame.constantMax);
              break;
            case 3:
              t = Y.createByRandomTwoOverTime(this._frame.frameOverTimeDataMin.clone(), this._frame.frameOverTimeDataMax.clone());
          }
          var e;
          switch (this._startFrame.type) {
            case 0:
              e = at.createByConstant(this._startFrame.constant);
              break;
            case 1:
              e = at.createByRandomTwoConstant(this._startFrame.constantMin, this._startFrame.constantMax);
          }
          var i = new this.constructor(t, e);
          return this.tiles.cloneTo(i.tiles), i.type = this.type, i.randomRow = this.randomRow, i.cycles = this.cycles, i.enableUVChannels = this.enableUVChannels, i.enable = this.enable, i;
        }, a(0, e, "frame", function () {
          return this._frame;
        }), a(0, e, "startFrame", function () {
          return this._startFrame;
        }), t;
      }(),
      ot = function () {
        function t(t) {
          this._velocity = null, this.enbale = !1, this.space = 0, this._velocity = t;
        }
        r(t, "laya.d3.core.particleShuriKen.module.VelocityOverLifetime");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.cloneTo = function (t) {
          var e = t;
          this._velocity.cloneTo(e._velocity), e.enbale = this.enbale, e.space = this.space;
        }, e.clone = function () {
          var t;
          switch (this._velocity.type) {
            case 0:
              t = tt.createByConstant(this._velocity.constant.clone());
              break;
            case 1:
              t = tt.createByGradient(this._velocity.gradientX.clone(), this._velocity.gradientY.clone(), this._velocity.gradientZ.clone());
              break;
            case 2:
              t = tt.createByRandomTwoConstant(this._velocity.constantMin.clone(), this._velocity.constantMax.clone());
              break;
            case 3:
              t = tt.createByRandomTwoGradient(this._velocity.gradientXMin.clone(), this._velocity.gradientYMin.clone(), this._velocity.gradientZMin.clone(), this._velocity.gradientXMax.clone(), this._velocity.gradientYMax.clone(), this._velocity.gradientZMax.clone());
          }
          var e = new this.constructor(t);
          return e.enbale = this.enbale, e.space = this.space, e;
        }, a(0, e, "velocity", function () {
          return this._velocity;
        }), t;
      }(),
      ht = function () {
        function t() {}
        return r(t, "laya.d3.core.particleShuriKen.ShurikenParticleData"), t._getStartLifetimeFromGradient = function (t, e) {
          for (var i = 1, n = t.gradientCount; i < n; i++) {
            var r = t.getKeyByIndex(i);
            if (r >= e) {
              var a = t.getKeyByIndex(i - 1),
                s = (e - a) / (r - a);
              return T.lerp(t.getValueByIndex(i - 1), t.getValueByIndex(i), s);
            }
          }
          throw new Error("ShurikenParticleData: can't get value foam startLifeTimeGradient.");
        }, t._randomInvertRoationArray = function (t, e, i, n, r) {
          var a = NaN;
          n ? (n.seed = r[6], a = n.getFloat(), r[6] = n.seed) : a = Math.random(), a < i ? (e[0] = -t[0], e[1] = -t[1], e[2] = -t[2]) : (e[0] = t[0], e[1] = t[1], e[2] = t[2]);
        }, t._randomInvertRoation = function (t, e, i, n) {
          var r = NaN;
          return i ? (i.seed = n[6], r = i.getFloat(), n[6] = i.seed) : r = Math.random(), r < e && (t = -t), t;
        }, t.create = function (e, i, n) {
          var r = e.autoRandomSeed,
            a = e._rand,
            s = e._randomSeeds;
          switch (e.startColorType) {
            case 0:
              var o = e.startColorConstant.elements;
              t.startColor[0] = o[0], t.startColor[1] = o[1], t.startColor[2] = o[2], t.startColor[3] = o[3];
              break;
            case 2:
              r ? T.lerpVector4(e.startColorConstantMin.elements, e.startColorConstantMax.elements, Math.random(), t.startColor) : (a.seed = s[3], T.lerpVector4(e.startColorConstantMin.elements, e.startColorConstantMax.elements, a.getFloat(), t.startColor), s[3] = a.seed);
          }
          var h = e.colorOverLifetime;
          if (h && h.enbale) {
            var l = h.color;
            switch (l.type) {
              case 0:
                t.startColor[0] = t.startColor[0] * l.constant.x, t.startColor[1] = t.startColor[1] * l.constant.y, t.startColor[2] = t.startColor[2] * l.constant.z, t.startColor[3] = t.startColor[3] * l.constant.w;
                break;
              case 2:
                var u = NaN;
                r ? u = Math.random() : (a.seed = s[10], u = a.getFloat(), s[10] = a.seed);
                var c = l.constantMin,
                  _ = l.constantMax;
                t.startColor[0] = t.startColor[0] * T.lerp(c.x, _.x, u), t.startColor[1] = t.startColor[1] * T.lerp(c.y, _.y, u), t.startColor[2] = t.startColor[2] * T.lerp(c.z, _.z, u), t.startColor[3] = t.startColor[3] * T.lerp(c.w, _.w, u);
            }
          }
          var d = t.startSize;
          switch (e.startSizeType) {
            case 0:
              if (e.threeDStartSize) {
                var f = e.startSizeConstantSeparate;
                d[0] = f.x, d[1] = f.y, d[2] = f.z;
              } else d[0] = d[1] = d[2] = e.startSizeConstant;
              break;
            case 2:
              if (e.threeDStartSize) {
                var p = e.startSizeConstantMinSeparate,
                  m = e.startSizeConstantMaxSeparate;
                r ? (d[0] = T.lerp(p.x, m.x, Math.random()), d[1] = T.lerp(p.y, m.y, Math.random()), d[2] = T.lerp(p.z, m.z, Math.random())) : (a.seed = s[4], d[0] = T.lerp(p.x, m.x, a.getFloat()), d[1] = T.lerp(p.y, m.y, a.getFloat()), d[2] = T.lerp(p.z, m.z, a.getFloat()), s[4] = a.seed);
              } else r ? d[0] = d[1] = d[2] = T.lerp(e.startSizeConstantMin, e.startSizeConstantMax, Math.random()) : (a.seed = s[4], d[0] = d[1] = d[2] = T.lerp(e.startSizeConstantMin, e.startSizeConstantMax, a.getFloat()), s[4] = a.seed);
          }
          var g = e.sizeOverLifetime;
          if (g && g.enbale && 1 === g.size.type) {
            var v = g.size;
            if (v.separateAxes) r ? (d[0] = d[0] * T.lerp(v.constantMinSeparate.x, v.constantMaxSeparate.x, Math.random()), d[1] = d[1] * T.lerp(v.constantMinSeparate.y, v.constantMaxSeparate.y, Math.random()), d[2] = d[2] * T.lerp(v.constantMinSeparate.z, v.constantMaxSeparate.z, Math.random())) : (a.seed = s[11], d[0] = d[0] * T.lerp(v.constantMinSeparate.x, v.constantMaxSeparate.x, a.getFloat()), d[1] = d[1] * T.lerp(v.constantMinSeparate.y, v.constantMaxSeparate.y, a.getFloat()), d[2] = d[2] * T.lerp(v.constantMinSeparate.z, v.constantMaxSeparate.z, a.getFloat()), s[11] = a.seed);
            else {
              var y = NaN;
              r ? y = T.lerp(v.constantMin, v.constantMax, Math.random()) : (a.seed = s[11], y = T.lerp(v.constantMin, v.constantMax, a.getFloat()), s[11] = a.seed), d[0] = d[0] * y, d[1] = d[1] * y, d[2] = d[2] * y;
            }
          }
          var x = i.renderMode;
          if (1 !== x) switch (e.startRotationType) {
            case 0:
              if (e.threeDStartRotation) {
                var S = e.startRotationConstantSeparate,
                  w = t._tempVector30.elements;
                t._randomInvertRoationArray(S.elements, w, e.randomizeRotationDirection, r ? null : a, s), t.startRotation[0] = w[0], t.startRotation[1] = w[1], t.startRotation[2] = 4 !== x ? -w[2] : w[2];
              } else t.startRotation[0] = t._randomInvertRoation(e.startRotationConstant, e.randomizeRotationDirection, r ? null : a, s);
              break;
            case 2:
              if (e.threeDStartRotation) {
                var E = e.startRotationConstantMinSeparate,
                  b = e.startRotationConstantMaxSeparate,
                  C = t._tempVector30.elements;
                r ? (C[0] = T.lerp(E.x, b.x, Math.random()), C[1] = T.lerp(E.y, b.y, Math.random()), C[2] = T.lerp(E.z, b.z, Math.random())) : (a.seed = s[5], C[0] = T.lerp(E.x, b.x, a.getFloat()), C[1] = T.lerp(E.y, b.y, a.getFloat()), C[2] = T.lerp(E.z, b.z, a.getFloat()), s[5] = a.seed), t._randomInvertRoationArray(C, C, e.randomizeRotationDirection, r ? null : a, s), t.startRotation[0] = C[0], t.startRotation[1] = C[1], t.startRotation[2] = 4 !== x ? -C[2] : C[2];
              } else r ? t.startRotation[0] = t._randomInvertRoation(T.lerp(e.startRotationConstantMin, e.startRotationConstantMax, Math.random()), e.randomizeRotationDirection, r ? null : a, s) : (a.seed = s[5], t.startRotation[0] = t._randomInvertRoation(T.lerp(e.startRotationConstantMin, e.startRotationConstantMax, a.getFloat()), e.randomizeRotationDirection, r ? null : a, s), s[5] = a.seed);
          }
          switch (e.startLifetimeType) {
            case 0:
              t.startLifeTime = e.startLifetimeConstant;
              break;
            case 1:
              t.startLifeTime = t._getStartLifetimeFromGradient(e.startLifeTimeGradient, e.emissionTime);
              break;
            case 2:
              r ? t.startLifeTime = T.lerp(e.startLifetimeConstantMin, e.startLifetimeConstantMax, Math.random()) : (a.seed = s[7], t.startLifeTime = T.lerp(e.startLifetimeConstantMin, e.startLifetimeConstantMax, a.getFloat()), s[7] = a.seed);
              break;
            case 3:
              var M = e.emissionTime;
              r ? t.startLifeTime = T.lerp(t._getStartLifetimeFromGradient(e.startLifeTimeGradientMin, M), t._getStartLifetimeFromGradient(e.startLifeTimeGradientMax, M), Math.random()) : (a.seed = s[7], t.startLifeTime = T.lerp(t._getStartLifetimeFromGradient(e.startLifeTimeGradientMin, M), t._getStartLifetimeFromGradient(e.startLifeTimeGradientMax, M), a.getFloat()), s[7] = a.seed);
          }
          switch (e.startSpeedType) {
            case 0:
              t.startSpeed = e.startSpeedConstant;
              break;
            case 2:
              r ? t.startSpeed = T.lerp(e.startSpeedConstantMin, e.startSpeedConstantMax, Math.random()) : (a.seed = s[8], t.startSpeed = T.lerp(e.startSpeedConstantMin, e.startSpeedConstantMax, a.getFloat()), s[8] = a.seed);
          }
          var I = e.textureSheetAnimation;
          if (I && I.enable) {
            var D = I.tiles,
              A = D.x,
              R = D.y,
              P = 1 / A,
              L = 1 / R,
              O = 0,
              N = I.startFrame;
            switch (N.type) {
              case 0:
                O = N.constant;
                break;
              case 1:
                r ? O = T.lerp(N.constantMin, N.constantMax, Math.random()) : (a.seed = s[14], O = T.lerp(N.constantMin, N.constantMax, a.getFloat()), s[14] = a.seed);
            }
            var V = I.frame;
            switch (V.type) {
              case 0:
                O += V.constant;
                break;
              case 2:
                r ? O += T.lerp(V.constantMin, V.constantMax, Math.random()) : (a.seed = s[15], O += T.lerp(V.constantMin, V.constantMax, a.getFloat()), s[15] = a.seed);
            }
            var F = 0;
            switch (I.type) {
              case 0:
                F = Math.floor(O / A);
                break;
              case 1:
                I.randomRow ? r ? F = Math.floor(Math.random() * R) : (a.seed = s[13], F = Math.floor(a.getFloat() * R), s[13] = a.seed) : F = I.rowIndex;
            }
            var B = Math.floor(O % A);
            (t.startUVInfo = t.startUVInfo)[0] = P, t.startUVInfo[1] = L, t.startUVInfo[2] = B * P, t.startUVInfo[3] = F * L;
          } else(t.startUVInfo = t.startUVInfo)[0] = 1, t.startUVInfo[1] = 1, t.startUVInfo[2] = 0, t.startUVInfo[3] = 0;
          switch (e.simulationSpace) {
            case 0:
              var U = n.position.elements;
              t.simulationWorldPostion[0] = U[0], t.simulationWorldPostion[1] = U[1], t.simulationWorldPostion[2] = U[2];
              var k = n.rotation.elements;
              t.simulationWorldRotation[0] = k[0], t.simulationWorldRotation[1] = k[1], t.simulationWorldRotation[2] = k[2], t.simulationWorldRotation[3] = k[3];
              break;
            case 1:
              break;
            default:
              throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.");
          }
        }, t.startLifeTime = NaN, t.startSpeed = NaN, n(t, ["_tempVector30", function () {
          return this._tempVector30 = new Le();
        }, "_tempQuaternion", function () {
          return this._tempQuaternion = new De();
        }, "startColor", function () {
          return this.startColor = new Float32Array(4);
        }, "startSize", function () {
          return this.startSize = new Float32Array(3);
        }, "startRotation", function () {
          return this.startRotation = new Float32Array(3);
        }, "startUVInfo", function () {
          return this.startUVInfo = new Float32Array(4);
        }, "simulationWorldPostion", function () {
          return this.simulationWorldPostion = new Float32Array(3);
        }, "simulationWorldRotation", function () {
          return this.simulationWorldRotation = new Float32Array(4);
        }]), t;
      }(),
      lt = function () {
        function t() {
          this._tempInt0 = 0, this._tempInt1 = 0, this._tempUint0 = 0, this._tempUint1 = 0, this._tempUint2 = 0, this._tempUint3 = 0, this._tempUint4 = 0, this._tempUint5 = 0, this._tempUint6 = 0, this._tempUint7 = 0, this._tempNumver0 = NaN, this._tempNumver1 = NaN, this._tempNumver2 = NaN, this._tempNumver3 = NaN, this._floatSizePerVer = 7, this._defaultBufferSize = 600 * this._floatSizePerVer, this._vb = null, this._posInVBData = 0, this._ib = null, this._posInIBData = 0, this._primitiveType = NaN, this._hasBegun = !1, this._numVertsPerPrimitive = 0, this._camera = null, this._sharderNameID = 0, this._shader = null, this._shaderCompile = null, this._vbData = new Float32Array(this._defaultBufferSize), this._ibData = new Uint16Array(this._defaultBufferSize), this._spriteShaderValue = new ke(), this._vb = qi.create(t._vertexDeclaration, this._defaultBufferSize / this._floatSizePerVer, 35048), this._ib = Yi.create("ushort", this._defaultBufferSize, 35048), this._sharderNameID = Fi.nameKey.getID("LINE"), this._shaderCompile = ui._preCompileShader[this._sharderNameID];
        }
        r(t, "laya.d3.core.PhasorSpriter3D");
        var e = t.prototype;
        return e.line = function (t, e, i, n) {
          return this._hasBegun && 1 === this._primitiveType || this.drawLinesException(), (this._posInVBData + 2 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 2 > this._ibData.length) && this.flush(), this._tempUint0 = this._posInVBData / this._floatSizePerVer, this.addVertex(t.x, t.y, t.z, e.x, e.y, e.z, e.w), this.addVertex(i.x, i.y, i.z, n.x, n.y, n.z, n.w), this.addIndexes(this._tempUint0, this._tempUint0 + 1), this;
        }, e.circle = function (t, e, i, n, r, a) {
          for (this._hasBegun && 1 === this._primitiveType || this.drawLinesException(), this._tempUint0 = 2 * e, (this._posInVBData + this._tempUint0 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 2 * this._tempUint0 > this._ibData.length) && this.flush(), this._tempUint1 = this._posInVBData / this._floatSizePerVer, this._tempNumver0 = 0, this._tempInt0 = 0; this._tempNumver0 < 6.2832; this._tempNumver0 = this._tempNumver0 + 3.1416 / e, this._tempInt0++) this.addVertex(Math.sin(this._tempNumver0) * t, Math.cos(this._tempNumver0) * t, 0, i, n, r, a), 0 === this._tempInt0 ? this.addIndexes(this._tempUint1) : this._tempInt0 === this._tempUint0 - 1 ? (this._tempUint2 = this._tempUint1 + this._tempInt0, this.addIndexes(this._tempUint2, this._tempUint2, this._tempUint1)) : (this._tempUint2 = this._tempUint1 + this._tempInt0, this.addIndexes(this._tempUint2, this._tempUint2));
          return this;
        }, e.plane = function (t, e, i, n, r, a, s, o, h) {
          return this._hasBegun && 4 === this._primitiveType || this.drawTrianglesException(), (this._posInVBData + 4 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 6 > this._ibData.length) && this.flush(), this._tempNumver0 = n / 2, this._tempNumver1 = r / 2, this._tempUint0 = this._posInVBData / this._floatSizePerVer, this.addVertex(t - this._tempNumver0, e + this._tempNumver1, i, a, s, o, h), this.addVertex(t + this._tempNumver0, e + this._tempNumver1, i, a, s, o, h), this.addVertex(t - this._tempNumver0, e - this._tempNumver1, i, a, s, o, h), this.addVertex(t + this._tempNumver0, e - this._tempNumver1, i, a, s, o, h), this._tempUint1 = this._tempUint0 + 1, this._tempUint2 = this._tempUint0 + 2, this.addIndexes(this._tempUint0, this._tempUint1, this._tempUint2, this._tempUint2, this._tempUint1, this._tempUint0 + 3), this;
        }, e.box = function (t, e, i, n, r, a, s, o, h, l) {
          return this._hasBegun && 4 === this._primitiveType || this.drawTrianglesException(), (this._posInVBData + 8 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 36 > this._ibData.length) && this.flush(), this._tempNumver0 = n / 2, this._tempNumver1 = r / 2, this._tempNumver2 = a / 2, this._tempUint0 = this._posInVBData / this._floatSizePerVer, this.addVertex(t - this._tempNumver0, e + this._tempNumver1, i + this._tempNumver2, s, o, h, l), this.addVertex(t + this._tempNumver0, e + this._tempNumver1, i + this._tempNumver2, s, o, h, l), this.addVertex(t - this._tempNumver0, e - this._tempNumver1, i + this._tempNumver2, s, o, h, l), this.addVertex(t + this._tempNumver0, e - this._tempNumver1, i + this._tempNumver2, s, o, h, l), this.addVertex(t + this._tempNumver0, e + this._tempNumver1, i - this._tempNumver2, s, o, h, l), this.addVertex(t - this._tempNumver0, e + this._tempNumver1, i - this._tempNumver2, s, o, h, l), this.addVertex(t + this._tempNumver0, e - this._tempNumver1, i - this._tempNumver2, s, o, h, l), this.addVertex(t - this._tempNumver0, e - this._tempNumver1, i - this._tempNumver2, s, o, h, l), this._tempUint1 = this._tempUint0 + 1, this._tempUint2 = this._tempUint0 + 2, this._tempUint3 = this._tempUint0 + 3, this._tempUint4 = this._tempUint0 + 4, this._tempUint5 = this._tempUint0 + 5, this._tempUint6 = this._tempUint0 + 6, this._tempUint7 = this._tempUint0 + 7, this.addIndexes(this._tempUint0, this._tempUint1, this._tempUint2, this._tempUint2, this._tempUint1, this._tempUint3, this._tempUint4, this._tempUint5, this._tempUint6, this._tempUint6, this._tempUint5, this._tempUint7, this._tempUint5, this._tempUint0, this._tempUint7, this._tempUint7, this._tempUint0, this._tempUint2, this._tempUint1, this._tempUint4, this._tempUint3, this._tempUint3, this._tempUint4, this._tempUint6, this._tempUint5, this._tempUint4, this._tempUint0, this._tempUint0, this._tempUint4, this._tempUint1, this._tempUint2, this._tempUint3, this._tempUint7, this._tempUint7, this._tempUint3, this._tempUint6), this;
        }, e.cone = function (t, e, i, n, r, a, s) {
          for (this._hasBegun && 4 === this._primitiveType || this.drawTrianglesException(), (this._posInVBData + (2 * i + 2) * this._floatSizePerVer > this._vbData.length || this._posInIBData + 6 * i > this._ibData.length) && this.flush(), this._tempUint0 = this._posInVBData, this._tempUint1 = this._posInVBData / this._floatSizePerVer, this._tempNumver0 = 2 * Math.PI / i, this.addVertexIndex(0, e, 0, n, r, a, s, this._tempUint0), this.addVertexIndex(0, 0, 0, n, r, a, s, this._tempUint0 + this._floatSizePerVer), this._tempInt0 = 2, this._tempNumver1 = 0, this._tempInt1 = 0; this._tempInt1 < i; this._tempInt1++) this._tempNumver2 = Math.cos(this._tempNumver1), this._tempNumver3 = Math.sin(this._tempNumver1), this.addVertexIndex(t * this._tempNumver2, 0, t * this._tempNumver3, n, r, a, s, this._tempUint0 + this._tempInt0 * this._floatSizePerVer), this.addIndexes(this._tempUint1, this._tempUint1 + this._tempInt0), this._tempInt1 == i - 1 ? this.addIndexes(this._tempUint1 + 2) : this.addIndexes(this._tempUint1 + this._tempInt0 + 1), this.addVertexIndex(t * this._tempNumver2, 0, t * this._tempNumver3, n, r, a, s, this._tempUint0 + (this._tempInt0 + i) * this._floatSizePerVer), this.addIndexes(this._tempUint1 + 1), this._tempInt1 == i - 1 ? this.addIndexes(this._tempUint1 + i + 2) : this.addIndexes(this._tempUint1 + this._tempInt0 + i + 1), this.addIndexes(this._tempUint1 + this._tempInt0 + i), this._tempInt0++, this._tempNumver1 += this._tempNumver0;
          return this;
        }, e.boundingBoxLine = function (t, e, i, n, r, a, s, o, h, l) {
          return this._hasBegun && 1 === this._primitiveType || this.drawLinesException(), (this._posInVBData + 8 * this._floatSizePerVer > this._vbData.length || this._posInIBData + 48 > this._ibData.length) && this.flush(), this._tempUint0 = this._posInVBData / this._floatSizePerVer, this.addVertex(t, r, a, s, o, h, l), this.addVertex(n, r, a, s, o, h, l), this.addVertex(t, e, a, s, o, h, l), this.addVertex(n, e, a, s, o, h, l), this.addVertex(n, r, i, s, o, h, l), this.addVertex(t, r, i, s, o, h, l), this.addVertex(n, e, i, s, o, h, l), this.addVertex(t, e, i, s, o, h, l), this._tempUint1 = this._tempUint0 + 1, this._tempUint2 = this._tempUint0 + 2, this._tempUint3 = this._tempUint0 + 3, this._tempUint4 = this._tempUint0 + 4, this._tempUint5 = this._tempUint0 + 5, this._tempUint6 = this._tempUint0 + 6, this._tempUint7 = this._tempUint0 + 7, this.addIndexes(this._tempUint0, this._tempUint1, this._tempUint1, this._tempUint3, this._tempUint3, this._tempUint2, this._tempUint2, this._tempUint0, this._tempUint4, this._tempUint5, this._tempUint5, this._tempUint7, this._tempUint7, this._tempUint6, this._tempUint6, this._tempUint4, this._tempUint5, this._tempUint0, this._tempUint0, this._tempUint2, this._tempUint2, this._tempUint7, this._tempUint7, this._tempUint5, this._tempUint1, this._tempUint4, this._tempUint4, this._tempUint6, this._tempUint6, this._tempUint3, this._tempUint3, this._tempUint1, this._tempUint5, this._tempUint4, this._tempUint4, this._tempUint1, this._tempUint1, this._tempUint0, this._tempUint0, this._tempUint5, this._tempUint2, this._tempUint3, this._tempUint3, this._tempUint6, this._tempUint6, this._tempUint7, this._tempUint7, this._tempUint2), this;
        }, e.addVertex = function (t, e, i, n, r, a, s) {
          return this._hasBegun || this.addVertexIndexException(), this._vbData[this._posInVBData] = t, this._vbData[this._posInVBData + 1] = e, this._vbData[this._posInVBData + 2] = i, this._vbData[this._posInVBData + 3] = n, this._vbData[this._posInVBData + 4] = r, this._vbData[this._posInVBData + 5] = a, this._vbData[this._posInVBData + 6] = s, this._posInVBData += this._floatSizePerVer, this;
        }, e.addVertexIndex = function (t, e, i, n, r, a, s, o) {
          return this._hasBegun || this.addVertexIndexException(), this._vbData[o] = t, this._vbData[o + 1] = e, this._vbData[o + 2] = i, this._vbData[o + 3] = n, this._vbData[o + 4] = r, this._vbData[o + 5] = a, this._vbData[o + 6] = s, (o += this._floatSizePerVer) > this._posInVBData && (this._posInVBData = o), this;
        }, e.addIndexes = function (t) {
          var e = arguments;
          this._hasBegun || this.addVertexIndexException();
          for (var i = 0; i < e.length; i++) this._ibData[this._posInIBData] = e[i], this._posInIBData++;
          return this;
        }, e.begin = function (t, e) {
          return this._hasBegun && this.beginException0(), 1 !== t && 4 !== t && this.beginException1(), this._primitiveType = t, this._camera = e, this._hasBegun = !0, this;
        }, e.end = function () {
          return this._hasBegun || this.endException(), this.flush(), this._hasBegun = !1, this;
        }, e.flush = function () {
          0 !== this._posInVBData && (this._ib.setData(this._ibData), this._vb.setData(this._vbData), this._vb._bind(), this._ib._bind(), this._shader = this._shaderCompile.withCompile(0, 0, 0), this._shader.bind(), this._shader.uploadAttributes(t._vertexDeclaration.shaderValues.data, null), this._spriteShaderValue.setValue(1, this._camera.projectionViewMatrix.elements), this._shader.uploadSpriteUniforms(this._spriteShaderValue.data), D.drawCall++, L.mainContext.drawElements(this._primitiveType, this._posInIBData, 5123, 0), this._posInIBData = 0, this._posInVBData = 0);
        }, e.addVertexIndexException = function () {
          throw new Error("请先调用begin()函数");
        }, e.beginException0 = function () {
          throw new Error("调用begin()前请确保已成功调用end()！");
        }, e.beginException1 = function () {
          throw new Error("只支持“LINES”和“TRIANGLES”两种基元！");
        }, e.endException = function () {
          throw new Error("调用end()前请确保已成功调用begin()！");
        }, e.drawLinesException = function () {
          throw new Error("您必须确保在此之前已调用begin()且使用“LINES”基元！");
        }, e.drawTrianglesException = function () {
          throw new Error("您必须确保在此之前已调用begin()且使用“TRIANGLES”基元！");
        }, n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(28, [new Mt(0, "vector3", 0), new Mt(12, "vector4", 1)]);
        }]), t;
      }(),
      ut = function () {
        function t() {
          this._id = 0, this._type = 0, this._mainSortID = 0, this._render = null, this._sprite3D = null, this._material = null, this._renderObj = null, this._staticBatch = null, this._tempBatchIndexStart = 0, this._tempBatchIndexEnd = 0, this._canDynamicBatch = !1, this._shaderValue = null, this._onPreRenderFunction = null, this._id = ++t._uniqueIDCounter, this._canDynamicBatch = !0, this._shaderValue = new ke();
        }
        r(t, "laya.d3.core.render.RenderElement");
        var e = t.prototype;
        return e.getDynamicBatchBakedVertexs = function (t) {
          for (var e = this._renderObj._getVertexBuffer(t), i = e.getData().slice(), n = e.vertexDeclaration, r = n.getVertexElementByUsage(0).offset / 4, a = n.getVertexElementByUsage(3).offset / 4, s = this._sprite3D.transform, o = s.worldMatrix, h = s.rotation, l = n.vertexStride / 4, u = 0, c = i.length; u < c; u += l) {
            var _ = u + r,
              d = u + a;
            Ke.transformVector3ArrayToVector3ArrayCoordinate(i, _, o, i, _), Ke.transformVector3ArrayByQuat(i, d, h, i, d);
          }
          return i;
        }, e.getBakedIndices = function () {
          return this._renderObj._getIndexBuffer().getData();
        }, e._destroy = function () {
          this._staticBatch && this._staticBatch._manager._garbageCollection(this);
        }, a(0, e, "id", function () {
          return this._id;
        }), a(0, e, "renderObj", function () {
          return this._renderObj;
        }, function (t) {
          this._renderObj !== t && (this._renderObj = t);
        }), t._uniqueIDCounter = 0, t;
      }(),
      ct = function () {
        function t(e) {
          this._id = 0, this._needSort = !1, this._renderElements = null, this._renderableRenderObjects = null, this._dynamicBatchCombineRenderElements = null, this._finalElements = null, this._scene = null, this._id = ++t._uniqueIDCounter, this._needSort = !1, this._scene = e, this._renderElements = [], this._renderableRenderObjects = [], this._dynamicBatchCombineRenderElements = [];
        }
        r(t, "laya.d3.core.render.RenderQueue");
        var e = t.prototype;
        return e._sortOpaqueFunc = function (t, e) {
          if (t._render && e._render) {
            var i = t._material.renderQueue - e._material.renderQueue;
            return 0 === i ? t._render._distanceForSort - e._render._distanceForSort : i;
          }
          return 0;
        }, e._sortAlphaFunc = function (t, e) {
          if (t._render && e._render) {
            var i = t._material.renderQueue - e._material.renderQueue;
            return 0 === i ? e._render._distanceForSort - t._render._distanceForSort : i;
          }
          return 0;
        }, e._begainRenderElement = function (t, e, i) {
          return !!e._beforeRender(t);
        }, e._sortAlpha = function (e) {
          t._cameraPosition = e, this._finalElements.sort(this._sortAlphaFunc);
        }, e._sortOpaque = function (e) {
          t._cameraPosition = e, this._finalElements.sort(this._sortOpaqueFunc);
        }, e._preRender = function (t) {
          this._finalElements = this._renderElements.concat(this._dynamicBatchCombineRenderElements);
        }, e._render = function (t, e) {
          for (var i, n, r, a, s, o, h = D.loopCount, l = this._scene, u = t.camera, c = (u.id, !1), _ = 0, d = this._finalElements.length; _ < d; _++) {
            var f, p, m, g = this._finalElements[_];
            if (null != g._onPreRenderFunction && g._onPreRenderFunction.call(g._sprite3D, t), 0 === g._type) {
              if (t.owner = m = g._sprite3D, t.renderElement = g, m._preRenderUpdateComponents(t), f = g.renderObj, p = g._material, this._begainRenderElement(t, f, p)) {
                if (i = f._getVertexBuffers(), n = f._getVertexBuffer(0), r = n.vertexDeclaration, a = t._shader = p._getShader(l._shaderDefineValue, r.shaderDefineValue, m._shaderDefineValue), c = a.bind() || h !== a._uploadLoopCount, i) {
                  if (a._uploadVertexBuffer !== i || c) {
                    for (var v = 0; v < i.length; v++) {
                      var y = i[v];
                      a.uploadAttributesX(y.vertexDeclaration.shaderValues.data, y);
                    }
                    a._uploadVertexBuffer = i;
                  }
                } else(a._uploadVertexBuffer !== n || c) && (a.uploadAttributes(r.shaderValues.data, null), a._uploadVertexBuffer = n);
                (a._uploadScene !== l || c) && (a.uploadSceneUniforms(l._shaderValues.data), a._uploadScene = l), (u !== a._uploadCamera || a._uploadSprite3D !== m || c) && (a.uploadSpriteUniforms(m._shaderValues.data), a._uploadSprite3D = m), (u !== a._uploadCamera || c) && (a.uploadCameraUniforms(u._shaderValues.data), a._uploadCamera = u), (a._uploadMaterial !== p || c) && (p._upload(), a._uploadMaterial = p), s !== p ? (p._setRenderStateBlendDepth(), p._setRenderStateFrontFace(e, m.transform), s = p, o = m) : o !== m && (p._setRenderStateFrontFace(e, m.transform), o = m), f._render(t), a._uploadLoopCount = h;
              }
              m._postRenderUpdateComponents(t);
            } else if (2 === g._type) {
              g.renderObj;
              t.owner = m = g._sprite3D, t.renderElement = g, t._batchIndexStart = g._tempBatchIndexStart, t._batchIndexEnd = g._tempBatchIndexEnd, f = g.renderObj, p = g._material, this._begainRenderElement(t, f, p) && (r = (n = f._getVertexBuffer(0)).vertexDeclaration, c = (a = t._shader = p._getShader(l._shaderDefineValue, r.shaderDefineValue, m._shaderDefineValue)).bind() || h !== a._uploadLoopCount, (a._uploadVertexBuffer !== n || c) && (a.uploadAttributes(r.shaderValues.data, null), a._uploadVertexBuffer = n), (a._uploadScene !== l || c) && (a.uploadSceneUniforms(l._shaderValues.data), a._uploadScene = l), (u !== a._uploadCamera || a._uploadSprite3D !== m || c) && (a.uploadSpriteUniforms(m._shaderValues.data), a._uploadSprite3D = m), (u !== a._uploadCamera || c) && (a.uploadCameraUniforms(u._shaderValues.data), a._uploadCamera = u), (a._uploadMaterial !== p || c) && (p._upload(), a._uploadMaterial = p), s !== p ? (p._setRenderStateBlendDepth(), p._setRenderStateFrontFace(e, m.transform), s = p, o = m) : o !== m && (p._setRenderStateFrontFace(e, m.transform), o = m), f._render(t), a._uploadLoopCount = h);
            }
          }
        }, e._renderShadow = function (t, e) {
          for (var i, n, r, a, s, o = D.loopCount, h = this._scene, l = t.camera, u = !1, c = 0, _ = this._finalElements.length; c < _; c++) {
            var d, f, p, m = this._finalElements[c];
            0 === m._type && (t.owner = p = m._sprite3D, e || p._projectionViewWorldUpdateCamera === l && p._projectionViewWorldUpdateLoopCount === D.loopCount || (p._render._renderUpdate(t._projectionViewMatrix), p._projectionViewWorldUpdateLoopCount = D.loopCount, p._projectionViewWorldUpdateCamera = l), t.renderElement = m, p._preRenderUpdateComponents(t), d = m.renderObj, f = m._material, this._begainRenderElement(t, d, null) && (n = (i = d._getVertexBuffer(0)).vertexDeclaration, u = (r = t._shader = f._getShader(h._shaderDefineValue, n.shaderDefineValue, p._shaderDefineValue)).bind() || o !== r._uploadLoopCount, (r._uploadVertexBuffer !== i || u) && (r.uploadAttributes(n.shaderValues.data, null), r._uploadVertexBuffer = i), (l !== r._uploadCamera || r._uploadSprite3D !== p || u) && (r.uploadSpriteUniforms(p._shaderValues.data), r._uploadSprite3D = p), (l !== r._uploadCamera || u) && (r.uploadCameraUniforms(l._shaderValues.data), r._uploadCamera = l), (r._uploadMaterial !== f || u) && (f._upload(), r._uploadMaterial = f), r._uploadRenderElement, a !== f ? (f._setRenderStateFrontFace(!1, p.transform), a = f, s = p) : s !== p && (f._setRenderStateFrontFace(!1, p.transform), s = p), d._render(t), r._uploadLoopCount = o), p._postRenderUpdateComponents(t));
          }
        }, e._clearRenderElements = function () {
          this._dynamicBatchCombineRenderElements.length = 0, this._renderElements.length = 0, this._needSort = !0;
        }, e._addRenderElement = function (t) {
          this._renderElements.push(t), this._needSort = !0;
        }, e._addDynamicBatchElement = function (t) {
          this._dynamicBatchCombineRenderElements.push(t);
        }, a(0, e, "id", function () {
          return this._id;
        }), t._uniqueIDCounter = 0, t._cameraPosition = null, t;
      }(),
      _t = function () {
        function t() {
          this._staticBatch = null, this._batchIndexStart = 0, this._batchIndexEnd = 0, this._viewMatrix = null, this._projectionMatrix = null, this._projectionViewMatrix = null, this._viewport = null, this._shader = null, this.elapsedTime = NaN, this.scene = null, this.owner = null, this.renderElement = null, this.camera = null;
        }
        return r(t, "laya.d3.core.render.RenderState"), t.clientWidth = 0, t.clientHeight = 0, t;
      }(),
      dt = function () {
        function t(t, e) {
          this._exactBox = null, this._relaxBox = null, this._scene = null, this._parent = null, this._currentDepth = 0, this._boundingSphere = new Se(new Le(), 0), this._corners = [new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le()], this._boundingBoxCenter = new Le(), this._children = s(8), this._objects = [], this._tempBoundBoxCorners = [new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le()], this._scene = t, this._currentDepth = e;
        }
        r(t, "laya.d3.core.scene.OctreeNode");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.scene.ITreeNode": !0
        }), e.init = function (t, e) {
          var i = new Le(),
            n = new Le();
          Le.scale(e, -.5, i), Le.scale(e, .5, n), Le.add(i, t, i), Le.add(n, t, n), this.exactBox = new xe(i, n), this.relaxBox = new xe(i, n);
        }, e.addTreeNode = function (t) {
          1 === we.boxContainsBox(this._relaxBox, t.boundingBox) ? this.addNodeDown(t, 0) : this.addObject(t);
        }, e.addChild = function (e) {
          var i = this._children[e];
          if (null == i) {
            i = new t(this._scene, this._currentDepth + 1), this._children[e] = i, i._parent = this, Le.subtract(this._exactBox.max, this._exactBox.min, t.tempSize), Le.multiply(t.tempSize, t._octreeSplit[e], t.tempCenter), Le.add(this._exactBox.min, t.tempCenter, t.tempCenter), Le.scale(t.tempSize, .25, t.tempSize);
            var n = new Le(),
              r = new Le();
            Le.subtract(t.tempCenter, t.tempSize, n), Le.add(t.tempCenter, t.tempSize, r), i.exactBox = new xe(n, r), Le.scale(t.tempSize, t.relax, t.tempSize);
            var a = new Le(),
              s = new Le();
            Le.subtract(t.tempCenter, t.tempSize, a), Le.add(t.tempCenter, t.tempSize, s), i.relaxBox = new xe(a, s);
          }
          return i;
        }, e.addObject = function (t) {
          t._treeNode = this, this._objects.push(t);
        }, e.removeObject = function (t) {
          if (t._treeNode != this) return console.log("OctreeNode::removeObject error"), !1;
          var e = this._objects.indexOf(t);
          return -1 !== e && (this._objects.splice(e, 1), !0);
        }, e.clearObject = function () {
          this._objects.length = 0;
        }, e.addNodeUp = function (t, e) {
          this._parent && 1 !== we.boxContainsBox(this._exactBox, t.boundingBox) ? this._parent.addNodeUp(t, e - 1) : this.addNodeDown(t, e);
        }, e.addNodeDown = function (t, e) {
          if (e < this._scene.treeLevel) {
            var i = this.inChildIndex(t.boundingBoxCenter),
              n = this.addChild(i);
            1 === we.boxContainsBox(n._relaxBox, t.boundingBox) ? n.addNodeDown(t, ++e) : this.addObject(t);
          } else this.addObject(t);
        }, e.inChildIndex = function (t) {
          return 4 * (t.z < this._boundingBoxCenter.z ? 0 : 1) + 2 * (t.y < this._boundingBoxCenter.y ? 0 : 1) + (t.x < this._boundingBoxCenter.x ? 0 : 1);
        }, e.updateObject = function (t) {
          1 === we.boxContainsBox(this._relaxBox, t.boundingBox) ? (this.removeObject(t), t._treeNode = null, this.addNodeDown(t, this._currentDepth)) : this._parent && (this.removeObject(t), t._treeNode = null, this._parent.addNodeUp(t, this._currentDepth - 1));
        }, e.cullingObjects = function (t, e, i, n, r) {
          var a = 0,
            s = 0,
            o = 0,
            h = 0,
            l = this._scene._dynamicBatchManager;
          for (a = 0, o = this._objects.length; a < o; a++) {
            var u = this._objects[a];
            if (z.isVisible(u._owner.layer.mask) && u.enable) {
              if (e && (D.treeSpriteCollision += 1, 0 === t.containsBoundSphere(u.boundingSphere))) continue;
              u._renderUpdate(r), u._distanceForSort = Le.distance(u.boundingSphere.center, n) + u.sortingFudge;
              var c = u._renderElements;
              for (s = 0, h = c.length; s < h; s++) {
                var _ = c[s],
                  d = _._staticBatch;
                if (d && d._material === _._material) d._addBatchRenderElement(_);
                else {
                  var f = _.renderObj;
                  f.triangleCount < 10 && 1 === f._vertexBufferCount && f._getIndexBuffer() && _._material.renderQueue < 2 && _._canDynamicBatch && !u._owner.isStatic ? l._addPrepareRenderElement(_) : this._scene.getRenderQueue(_._material.renderQueue)._addRenderElement(_);
                }
              }
            }
          }
          for (a = 0; a < 8; a++) {
            var p = this._children[a];
            if (null != p) {
              var m = e;
              if (e) {
                var g = t.containsBoundBox(p._relaxBox);
                if (D.treeNodeCollision += 1, 0 === g) continue;
                m = 2 === g;
              }
              p.cullingObjects(t, m, i, n, r);
            }
          }
        }, e.cullingShadowObjects = function (t, e, i, n, r) {
          var a = 0,
            s = 0,
            o = 0,
            h = 0;
          this._scene._dynamicBatchManager;
          for (a = 0, o = this._objects.length; a < o; a++) {
            var l = this._objects[a];
            if (l.castShadow && z.isVisible(l._owner.layer.mask) && l.enable) {
              if (i && 0 === t[0].containsBoundSphere(l.boundingSphere)) continue;
              for (var u = 1, c = t.length; u < c; u++) {
                var _ = e[u - 1];
                if (0 !== t[u].containsBoundSphere(l.boundingSphere)) {
                  var d = l._renderElements;
                  for (s = 0, h = d.length; s < h; s++) _._addRenderElement(d[s]);
                }
              }
            }
          }
          for (a = 0; a < 8; a++) {
            var f = this._children[a];
            if (null != f) {
              var p = i;
              if (i) {
                var m = t[0].containsBoundBox(f._relaxBox);
                if (0 === m) continue;
                p = 2 === m;
              }
              f.cullingShadowObjects(t, e, p, n, r);
            }
          }
        }, e.cullingShadowObjectsOnePSSM = function (t, e, i, n, r, a) {
          var s = e[0],
            o = 0,
            h = 0,
            l = 0,
            u = 0;
          for (o = 0, l = this._objects.length; o < l; o++) {
            var c = this._objects[o];
            if (c.castShadow && z.isVisible(c._owner.layer.mask) && c.enable) {
              if (n && 0 === t.containsBoundSphere(c.boundingSphere)) continue;
              c._renderUpdate(i);
              var _ = c._renderElements;
              for (h = 0, u = _.length; h < u; h++) s._addRenderElement(_[h]);
            }
          }
          for (o = 0; o < 8; o++) {
            var d = this._children[o];
            if (null != d) {
              var f = n;
              if (n) {
                var p = t.containsBoundBox(d._relaxBox);
                if (0 === p) continue;
                f = 2 === p;
              }
              d.cullingShadowObjectsOnePSSM(t, e, i, f, r, a);
            }
          }
        }, e.renderBoudingBox = function (t) {
          this._renderBoudingBox(t);
          for (var e = 0; e < 8; ++e) {
            var i = this._children[e];
            i && i.renderBoudingBox(t);
          }
        }, e.buildAllChild = function (t) {
          if (t < this._scene.treeLevel)
            for (var e = 0; e < 8; e++) {
              this.addChild(e).buildAllChild(t + 1);
            }
        }, e._renderBoudingBox = function (t) {}, a(0, e, "exactBox", function () {
          return this._exactBox;
        }, function (t) {
          this._exactBox = t, Le.add(t.min, t.max, this._boundingBoxCenter), Le.scale(this._boundingBoxCenter, .5, this._boundingBoxCenter);
        }), a(0, e, "relaxBox", function () {
          return this._relaxBox;
        }, function (t) {
          this._relaxBox = t, t.getCorners(this._corners), Se.createfromPoints(this._corners, this._boundingSphere);
        }), t.debugMode = !1, t.relax = 1.15, t.CHILDNUM = 8, n(t, ["tempVector0", function () {
          return this.tempVector0 = new Le();
        }, "tempSize", function () {
          return this.tempSize = new Le();
        }, "tempCenter", function () {
          return this.tempCenter = new Le();
        }, "_octreeSplit", function () {
          return this._octreeSplit = [new Le(.25, .25, .25), new Le(.75, .25, .25), new Le(.25, .75, .25), new Le(.75, .75, .25), new Le(.25, .25, .75), new Le(.75, .25, .75), new Le(.25, .75, .75), new Le(.75, .75, .75)];
        }]), t;
      }(),
      ft = (function () {
        function t() {}
        r(t, "laya.d3.core.scene.SceneManager");
      }(), function () {
        function t(t, e, i, n) {
          this._r = NaN, this._g = NaN, this._b = NaN, this._a = NaN, void 0 === t && (t = 1), void 0 === e && (e = 1), void 0 === i && (i = 1), void 0 === n && (n = 1), this._r = t, this._g = e, this._b = i, this._a = n;
        }
        r(t, "laya.d3.core.trail.module.Color", null, "Color$1");
        return t.prototype.cloneTo = function (t) {
          t._r = this._r, t._g = this._g, t._b = this._b, t._a = this._a;
        }, n(t, ["RED", function () {
          return this.RED = new t(1, 0, 0, 1);
        }, "GREEN", function () {
          return this.GREEN = new t(0, 1, 0, 1);
        }, "BLUE", function () {
          return this.BLUE = new t(0, 0, 1, 1);
        }, "CYAN", function () {
          return this.CYAN = new t(0, 1, 1, 1);
        }, "YELLOW", function () {
          return this.YELLOW = new t(1, .92, .016, 1);
        }, "MAGENTA", function () {
          return this.MAGENTA = new t(1, 0, 1, 1);
        }, "GRAY", function () {
          return this.GRAY = new t(.5, .5, .5, 1);
        }, "WHITE", function () {
          return this.WHITE = new t(1, 1, 1, 1);
        }, "BLACK", function () {
          return this.BLACK = new t(0, 0, 0, 1);
        }]), t;
      }()),
      pt = function () {
        function t() {
          this._mode = 0, this._colorKeys = null, this._alphaKeys = null, this.index = 0, this._colorKeyData = new Float32Array(40), this._alphaKeyData = new Float32Array(20), this._colorKeys = [], this._alphaKeys = [];
        }
        r(t, "laya.d3.core.trail.module.Gradient");
        var e = t.prototype;
        return e.setKeys = function (t, e) {
          this._colorKeys = t, this.index = 0;
          for (var i, n = 0; n < t.length; n++) {
            var r = (i = t[n]).color;
            this._colorKeyData[this.index++] = r._r, this._colorKeyData[this.index++] = r._g, this._colorKeyData[this.index++] = r._b, this._colorKeyData[this.index++] = i.time;
          }
          this._alphaKeys = e, this.index = 0;
          for (var a, s = 0; s < e.length; s++) a = e[s], this._alphaKeyData[this.index++] = a.alpha, this._alphaKeyData[this.index++] = a.time;
        }, e.cloneTo = function (t) {
          var e = 0,
            i = 0,
            n = this.colorKeys,
            r = [];
          for (e = 0, i = n.length; e < i; e++) {
            var a = new gt();
            n[e].cloneTo(a), r.push(a);
          }
          var s = this.alphaKeys,
            o = [];
          for (e = 0, i = s.length; e < i; e++) {
            var h = new mt();
            s[e].cloneTo(h), o.push(h);
          }
          t.setKeys(r, o);
        }, a(0, e, "mode", function () {
          return this._mode;
        }, function (t) {
          this._mode = t;
        }), a(0, e, "colorKeys", function () {
          return this._colorKeys;
        }, function (t) {
          this._colorKeys = t, this.index = 0;
          for (var e = 0; e < t.length; e++) {
            var i = t[e],
              n = i.color;
            this._colorKeyData[this.index++] = n._r, this._colorKeyData[this.index++] = n._g, this._colorKeyData[this.index++] = n._b, this._colorKeyData[this.index++] = i.time;
          }
        }), a(0, e, "alphaKeys", function () {
          return this._alphaKeys;
        }, function (t) {
          this._alphaKeys = t, this.index = 0;
          for (var e = 0; e < t.length; e++) {
            var i = t[e];
            this._alphaKeyData[this.index++] = i.alpha, this._alphaKeyData[this.index++] = i.time;
          }
        }), t;
      }(),
      mt = function () {
        function t(t, e) {
          this._alpha = NaN, this._time = NaN, void 0 === t && (t = 0), void 0 === e && (e = 0), this._alpha = t, this._time = e;
        }
        r(t, "laya.d3.core.trail.module.GradientAlphaKey");
        var e = t.prototype;
        return e.cloneTo = function (t) {
          t.alpha = this.alpha, t.time = this.time;
        }, a(0, e, "alpha", function () {
          return this._alpha;
        }, function (t) {
          this._alpha = t;
        }), a(0, e, "time", function () {
          return this._time;
        }, function (t) {
          this._time = t;
        }), t;
      }(),
      gt = function () {
        function t(t, e) {
          this._color = null, this._time = NaN, void 0 === e && (e = 0), this._color = t || new ft(), this._time = e;
        }
        r(t, "laya.d3.core.trail.module.GradientColorKey");
        var e = t.prototype;
        return e.cloneTo = function (t) {
          this.color.cloneTo(t.color), t.time = this.time;
        }, a(0, e, "color", function () {
          return this._color;
        }, function (t) {
          this._color = t;
        }), a(0, e, "time", function () {
          return this._time;
        }, function (t) {
          this._time = t;
        }), t;
      }(),
      vt = (function () {
        function t() {}
        r(t, "laya.d3.core.trail.module.GradientMode"), t.Blend = 0, t.Fixed = 1;
      }(), function () {
        function t() {}
        r(t, "laya.d3.core.trail.module.TextureMode"), t.Stretch = 0, t.Tile = 1;
      }(), function () {
        function t() {
          this.time = NaN, this.inTangent = NaN, this.outTangent = NaN, this.value = NaN;
        }
        r(t, "laya.d3.core.trail.module.TrailKeyFrame");
        return t.prototype.cloneTo = function (t) {
          t.time = this.time, t.inTangent = this.inTangent, t.outTangent = this.outTangent, t.value = this.value;
        }, t;
      }()),
      yt = function () {
        function t(e) {
          this._id = 0, this._owner = null, this._camera = null, this._vertexBuffers = null, this._verticesCount = 0, this._virtualVerticesCount = 0, this._maxVerticesCount = 256, this._vertices1 = null, this._vertexBuffer1 = null, this._floatCountPerVertices1 = 8, this._verticesIndex1 = 0, this._everyAddVerticeCount1 = 0, this._delLength = 0, this._vertices2 = null, this._vertexBuffer2 = null, this._floatCountPerVertices2 = 1, this._everyGroupVertexBirthTime = null, this._VerticesToTailLength = null, this._everyVertexToPreVertexDistance = null, this._pointe = null, this._pointAtoBVector3e = null, this._isStart = !1, this._isFinish = !1, this._isDead = !1, this._curtime = NaN, this._curDisappearIndex = 0, this._lastPosition = new Le(), this._curPosition = new Le(), this._delVector3 = new Le(), this._lastFixedVertexPosition = new Le(), this._pointAtoBVector3 = new Le(), this._pointA = new Le(), this._pointB = new Le(), this._owner = e, this._id = t.renderElementCount++, 0 == this._id ? e._owner.transform.position.cloneTo(this._lastPosition) : e._curSubTrailFinishPosition.cloneTo(this._lastPosition), this._everyGroupVertexBirthTime = [], this._VerticesToTailLength = new Float32Array(this._maxVerticesCount), this._everyVertexToPreVertexDistance = new Float32Array(this._maxVerticesCount), this._vertices1 = new Float32Array(this._maxVerticesCount * this._floatCountPerVertices1), this._vertices2 = new Float32Array(this._maxVerticesCount * this._floatCountPerVertices2), this._vertexBuffer1 = new qi(xt.vertexDeclaration1, this._maxVerticesCount, 35044, !0), this._vertexBuffer2 = new qi(xt.vertexDeclaration2, this._maxVerticesCount, 35044, !0), this._vertexBuffers = [], this._vertexBuffers.push(this._vertexBuffer1), this._vertexBuffers.push(this._vertexBuffer2);
        }
        r(t, "laya.d3.core.trail.TrailRenderElement");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.render.IRenderable": !0
        }), e._updateTrail = function () {
          this._everyAddVerticeCount1 = 0, this._isStart || this._addTrailByFirstPosition(this._lastPosition, this._curPosition), this._addTrailByNextPosition(this._curPosition), this._vertexBuffer1.setData(this._vertices1, this._verticesIndex1, this._verticesIndex1, this._everyAddVerticeCount1), this._verticesIndex1 += this._everyAddVerticeCount1, this._curPosition.cloneTo(this._lastPosition), 2 == this._virtualVerticesCount && (this._verticesIndex1 -= 2 * this._floatCountPerVertices1);
        }, e._addTrailByFirstPosition = function (t, e) {
          Le.subtract(e, t, this._delVector3), Le.cross(this._delVector3, this._camera.forward, this._pointAtoBVector3), Le.normalize(this._pointAtoBVector3, this._pointAtoBVector3), Le.scale(this._pointAtoBVector3, this._owner.widthMultiplier / 2, this._pointAtoBVector3), this._updateVerticesByPosition(t), t.cloneTo(this._lastFixedVertexPosition), this._verticesCount += 2, this._curtime = this._owner._hasLifeSubTrail ? this._owner._curSubTrailFinishCurTime : this._owner._curtime, this._everyGroupVertexBirthTime.push(this._curtime), this._isStart = !0, this._owner._hasLifeSubTrail = !0;
        }, e._addTrailByNextPosition = function (t) {
          Le.subtract(t, this._lastFixedVertexPosition, this._delVector3), Le.cross(this._delVector3, this._camera.forward, this._pointAtoBVector3), Le.normalize(this._pointAtoBVector3, this._pointAtoBVector3), Le.scale(this._pointAtoBVector3, this._owner.widthMultiplier / 2, this._pointAtoBVector3), this._delLength = Le.scalarLength(this._delVector3), this._delLength - this._owner.minVertexDistance >= Ee.zeroTolerance ? (this._owner._trailTotalLength += this._delLength, this._owner._trailSupplementLength = 0, this._updateVerticesByPosition(t), t.cloneTo(this._lastFixedVertexPosition), this._verticesCount += 2, this._virtualVerticesCount = 0, this._everyGroupVertexBirthTime.push(this._owner._curtime), this._verticesCount == this._maxVerticesCount && this._onTrailRenderElementFinish()) : (this._owner._trailSupplementLength = this._delLength, this._updateVerticesByPosition(t), this._virtualVerticesCount = 2);
        }, e._updateVerticesByPosition = function (t) {
          this._pointe = t.elements, this._pointAtoBVector3e = this._pointAtoBVector3.elements, this._curtime = this._owner._curtime, this._owner._hasLifeSubTrail && 0 == this._isStart && (this._pointe = this._owner._curSubTrailFinishPosition.elements, this._pointAtoBVector3e = this._owner._curSubTrailFinishDirection.elements, this._curtime = this._owner._curSubTrailFinishCurTime), this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[0], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[1], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[2], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = -this._pointAtoBVector3e[0], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = -this._pointAtoBVector3e[1], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = -this._pointAtoBVector3e[2], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._curtime, this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = 1, this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[0], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[1], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointe[2], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointAtoBVector3e[0], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointAtoBVector3e[1], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._pointAtoBVector3e[2], this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = this._curtime, this._vertices1[this._verticesIndex1 + this._everyAddVerticeCount1++] = 0, this._VerticesToTailLength[this._verticesCount / 2] = this._owner._trailTotalLength + this._owner._trailSupplementLength, 0 == this._owner._trailSupplementLength ? this._everyVertexToPreVertexDistance[this._verticesCount / 2] = this._delLength : this._everyVertexToPreVertexDistance[this._verticesCount / 2] = this._isStart ? this._owner._trailSupplementLength : 0;
        }, e._updateVertexBuffer2 = function () {
          var t = 0,
            e = 0,
            i = 0,
            n = 0;
          for (i = 0, n = (this._verticesCount + this._virtualVerticesCount) / 2; i < n; i++) e = 0 == this._owner.textureMode ? (this._VerticesToTailLength[i] - this._owner._trailDeadLength) / (this._owner._trailTotalLength + this._owner._trailSupplementLength - this._owner._trailDeadLength) : this._owner._trailTotalLength + this._owner._trailSupplementLength - this._VerticesToTailLength[i], this._vertices2[t++] = 1 - e, this._vertices2[t++] = 1 - e;
          this._vertexBuffer2.setData(this._vertices2, 0, 0, this._verticesCount + this._virtualVerticesCount);
        }, e._onTrailRenderElementFinish = function () {
          this._lastFixedVertexPosition.cloneTo(this._owner._curSubTrailFinishPosition), this._pointAtoBVector3.cloneTo(this._owner._curSubTrailFinishDirection), this._owner._curSubTrailFinishCurTime = this._owner._curtime, this._isFinish = !0;
        }, e._updateDisappear = function () {
          var t = 0,
            e = 0;
          for (t = this._curDisappearIndex, e = (this._verticesCount + this._virtualVerticesCount) / 2; t < e; t++) this._owner._curtime - this._everyGroupVertexBirthTime[t] >= this._owner.time + Ee.zeroTolerance && (this._curDisappearIndex++, this._owner._trailDeadLength += this._everyVertexToPreVertexDistance[this._curDisappearIndex], this._curDisappearIndex >= (this._verticesCount + this._virtualVerticesCount) / 2 && (this._isDead = !0));
        }, e._beforeRender = function (t) {
          return this._camera = t.camera, null != this._camera && (this._owner._owner.transform.position.cloneTo(this._curPosition), !this._isDead && (this._verticesCount < this._maxVerticesCount ? (this._owner._isStart || (this._owner._owner.transform.position.cloneTo(this._lastPosition), this._owner._isStart = !0), Le.equals(this._lastPosition, this._curPosition) || this._updateTrail()) : this._isFinish && (this._isFinish = !1, this._owner._curSubTrailFinished = !0), this._verticesCount > 0) && (this._updateVertexBuffer2(), this._updateDisappear(), !0));
        }, e._render = function (t) {
          this._isDead || (L.mainContext.drawArrays(5, 2 * this._curDisappearIndex, this._verticesCount + this._virtualVerticesCount - 2 * this._curDisappearIndex), console.log(2 * this._curDisappearIndex, this._verticesCount + this._virtualVerticesCount - 2 * this._curDisappearIndex), D.drawCall++, D.trianglesFaces += this._verticesCount + this._virtualVerticesCount - 2 * this._curDisappearIndex - 2);
        }, e._getVertexBuffer = function (t) {
          return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer1 : 1 === t ? this._vertexBuffer2 : null;
        }, e._getVertexBuffers = function () {
          return this._vertexBuffers;
        }, e._getIndexBuffer = function () {
          return null;
        }, e.reActivate = function () {
          this._id = laya.d3.core.trail.TrailRenderElement.renderElementCount++, this._isStart = !1, this._isFinish = !1, this._isDead = !1, this._verticesCount = 0, this._virtualVerticesCount = 0, this._verticesIndex1 = 0, this._delLength = 0, this._curDisappearIndex = 0, this._everyGroupVertexBirthTime = [], this._owner._curSubTrailFinishPosition.cloneTo(this._lastPosition);
        }, e._destroy = function () {
          this._vertexBuffer1.dispose(), this._vertexBuffer2.dispose(), this._vertices1 = null, this._vertexBuffer1 = null, this._vertices2 = null, this._vertexBuffer2 = null, this._vertexBuffers = null, this._everyGroupVertexBirthTime = null, this._VerticesToTailLength = null, this._everyVertexToPreVertexDistance = null, this._lastPosition = null, this._curPosition = null, this._delVector3 = null, this._lastFixedVertexPosition = null, this._pointAtoBVector3 = null, this._pointe = null, this._pointAtoBVector3e = null, this._pointA = null, this._pointB = null;
        }, a(0, e, "_vertexBufferCount", function () {
          return this._vertexBuffers.length;
        }), a(0, e, "triangleCount", function () {
          return 0;
        }), t.renderElementCount = 0, t;
      }(),
      xt = function () {
        function t() {}
        r(t, "laya.d3.core.trail.VertexTrail");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration1;
        }), a(1, t, "vertexDeclaration1", function () {
          return t._vertexDeclaration1;
        }), a(1, t, "vertexDeclaration2", function () {
          return t._vertexDeclaration2;
        }), n(t, ["_vertexDeclaration1", function () {
          return this._vertexDeclaration1 = new Ct(32, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 41), new Mt(24, "single", 33), new Mt(28, "single", 40)]);
        }, "_vertexDeclaration2", function () {
          return this._vertexDeclaration2 = new Ct(4, [new Mt(0, "single", 38)]);
        }]), t;
      }(),
      Tt = function () {
        function t(t) {
          this._vertexDeclaration = null, this._vertexDatas = null, this._indexDatas = null, this._vertexBuffer = null, this._indexBuffer = null, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0, this._combineRenderElements = null, this._materials = null, this._materialToRenderElementsOffsets = null, this._merageElements = null, this._combineRenderElementPool = null, this._combineRenderElementPoolIndex = 0, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0, this._combineRenderElements = [], this._materialToRenderElementsOffsets = [], this._materials = [], this._merageElements = [], this._combineRenderElementPool = [], this._combineRenderElementPoolIndex = 0, this._vertexDeclaration = t;
        }
        r(t, "laya.d3.graphics.DynamicBatch");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.render.IRenderable": !0
        }), e._getVertexBuffer = function (t) {
          return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
        }, e._getIndexBuffer = function () {
          return this._indexBuffer;
        }, e._getCombineRenderElementFromPool = function (t, e, i) {
          var n = this._combineRenderElementPool[this._combineRenderElementPoolIndex++];
          return n || (this._combineRenderElementPool[this._combineRenderElementPoolIndex - 1] = n = new ut(), n._sprite3D = new gn()), n._sprite3D._render._renderUpdate(i), n;
        }, e._getRenderElement = function (e, i, n) {
          this._vertexDatas || (this._vertexDatas = new Float32Array(this._vertexDeclaration.vertexStride / 4 * t.maxVertexCount), this._indexDatas = new Uint16Array(t.maxIndexCount), this._vertexBuffer = qi.create(this._vertexDeclaration, t.maxVertexCount, 35048), this._indexBuffer = Yi.create("ushort", t.maxIndexCount, 35048)), this._merageElements.length = 0;
          for (var r = 0, a = 0, s = 0, o = this._combineRenderElements.length; s < o; s++) {
            var h = this._combineRenderElements[s],
              l = h.getDynamicBatchBakedVertexs(0),
              u = h.getBakedIndices(),
              c = h._sprite3D.transform._isFrontFaceInvert,
              _ = r / (this._vertexDeclaration.vertexStride / 4),
              d = a,
              f = d + u.length;
            h._tempBatchIndexStart = d, h._tempBatchIndexEnd = f, this._indexDatas.set(u, a);
            var p = 0;
            if (c)
              for (p = d; p < f; p += 3) {
                this._indexDatas[p] = _ + this._indexDatas[p];
                var m = this._indexDatas[p + 1],
                  g = this._indexDatas[p + 2];
                this._indexDatas[p + 1] = _ + g, this._indexDatas[p + 2] = _ + m;
              } else
                for (p = d; p < f; p += 3) this._indexDatas[p] = _ + this._indexDatas[p], this._indexDatas[p + 1] = _ + this._indexDatas[p + 1], this._indexDatas[p + 2] = _ + this._indexDatas[p + 2];
            a += u.length, this._vertexDatas.set(l, r), r += l.length;
          }
          for (this._vertexBuffer.setData(this._vertexDatas), this._indexBuffer.setData(this._indexDatas), this._combineRenderElementPoolIndex = 0, s = 0, o = this._materials.length; s < o; s++) {
            var v = this._getCombineRenderElementFromPool(e, i, n);
            v._type = 2, v._staticBatch = null, v.renderObj = this;
            var y = this._combineRenderElements[this._materialToRenderElementsOffsets[s]]._tempBatchIndexStart,
              x = s + 1 === this._materialToRenderElementsOffsets.length ? a : this._combineRenderElements[this._materialToRenderElementsOffsets[s + 1]]._tempBatchIndexStart;
            v._tempBatchIndexStart = y, v._tempBatchIndexEnd = x, v._material = this._materials[s], this._merageElements.push(v);
          }
        }, e._addCombineRenderObjTest = function (e) {
          var i = e.renderObj,
            n = this._currentCombineIndexCount + i._getIndexBuffer().indexCount;
          return !(this._currentCombineVertexCount + i._getVertexBuffer().vertexCount > t.maxVertexCount || n > t.maxIndexCount);
        }, e._addCombineRenderObj = function (t) {
          var e = t.renderObj;
          this._combineRenderElements.push(t), this._currentCombineIndexCount = this._currentCombineIndexCount + e._getIndexBuffer().indexCount, this._currentCombineVertexCount = this._currentCombineVertexCount + e._getVertexBuffer().vertexCount;
        }, e._addCombineMaterial = function (t) {
          this._materials.push(t);
        }, e._addMaterialToRenderElementOffset = function (t) {
          this._materialToRenderElementsOffsets.push(t);
        }, e._clearRenderElements = function () {
          this._combineRenderElements.length = 0, this._materials.length = 0, this._materialToRenderElementsOffsets.length = 0, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0;
        }, e._addToRenderQueue = function (t, e, i, n) {
          this._getRenderElement(e, i, n);
          for (var r = 0, a = this._materials.length; r < a; r++) t.getRenderQueue(this._materials[r].renderQueue)._addDynamicBatchElement(this._merageElements[r]);
        }, e._beforeRender = function (t) {
          return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0;
        }, e._render = function (t) {
          var e = t._batchIndexEnd - t._batchIndexStart;
          L.mainContext.drawElements(4, e, 5123, 2 * t._batchIndexStart), D.drawCall++, D.trianglesFaces += e / 3;
        }, e._getVertexBuffers = function () {
          return null;
        }, a(0, e, "_vertexBufferCount", function () {
          return 1;
        }), a(0, e, "triangleCount", function () {
          return this._indexBuffer.indexCount / 3;
        }), a(0, e, "combineRenderElementsCount", function () {
          return this._combineRenderElements.length;
        }), t.maxVertexCount = 2e4, t.maxIndexCount = 4e4, t.maxCombineTriangleCount = 10, t;
      }(),
      St = function () {
        function t() {
          this._dynamicBatches = null, this._prepareDynamicBatchCombineElements = null, this._dynamicBatches = {}, this._prepareDynamicBatchCombineElements = [];
        }
        r(t, "laya.d3.graphics.DynamicBatchManager");
        var e = t.prototype;
        return e.getDynamicBatch = function (t, e) {
          var i, n = t.id.toString() + e;
          return this._dynamicBatches[n] ? i = this._dynamicBatches[n] : this._dynamicBatches[n] = i = new Tt(t), i;
        }, e._garbageCollection = function () {
          for (var t in this._dynamicBatches) 0 === this._dynamicBatches[t].combineRenderElementsCount && delete this._dynamicBatches[t];
        }, e._addPrepareRenderElement = function (t) {
          this._prepareDynamicBatchCombineElements.push(t);
        }, e._finishCombineDynamicBatch = function (e) {
          this._prepareDynamicBatchCombineElements.sort(t._sortPrepareDynamicBatch);
          for (var i, n, r, a, s, o, h, l, u = -1, c = !0, _ = 0, d = -1, f = 0, p = this._prepareDynamicBatchCombineElements.length; f < p; f++) {
            var m = (s = this._prepareDynamicBatchCombineElements[f]).renderObj._getVertexBuffer(0).vertexDeclaration,
              g = n !== m;
            g && (_ = 0, n = m);
            var v = _ !== u;
            if (v && (u = _), (g || v) && (o = this.getDynamicBatch(m, _), i = null), c)
              if (o._addCombineRenderObjTest(s)) {
                if (a = s._material, i !== a) h && (e.getRenderQueue(l._material.renderQueue)._addRenderElement(l), h = null, l = null, d = -1), h = a, d = o.combineRenderElementsCount, l = s, i = a;
                else if (h) {
                  var y = l.renderObj,
                    x = s.renderObj;
                  y._getVertexBuffer().vertexCount + x._getVertexBuffer().vertexCount > Tt.maxVertexCount || y._getIndexBuffer().indexCount + x._getIndexBuffer().indexCount > Tt.maxIndexCount ? (e.getRenderQueue(l._material.renderQueue)._addRenderElement(l), h = a, d = o.combineRenderElementsCount, l = s) : (o._addCombineMaterial(h), o._addMaterialToRenderElementOffset(d), o._addCombineRenderObj(l), h = null, l = null, d = -1, o._addCombineRenderObj(s));
                } else o._addCombineRenderObj(s);
                c = !0;
              } else h && (e.getRenderQueue(l._material.renderQueue)._addRenderElement(l), h = null, l = null, d = -1), _++, c = !1;
            else r = this._prepareDynamicBatchCombineElements[f - 1], o._addMaterialToRenderElementOffset(o.combineRenderElementsCount), i = r._material, o._addCombineMaterial(i), o._addCombineRenderObj(r), c = !0, i !== (a = s._material) ? (h = a, d = o.combineRenderElementsCount, l = s) : o._addCombineRenderObj(s), i = a;
          }
          h && (e.getRenderQueue(l._material.renderQueue)._addRenderElement(l), h = null, l = null, d = -1), this._prepareDynamicBatchCombineElements.length = 0;
        }, e._clearRenderElements = function () {
          for (var t in this._dynamicBatches) this._dynamicBatches[t]._clearRenderElements();
        }, e._addToRenderQueue = function (t, e, i, n) {
          for (var r in this._dynamicBatches) {
            var a = this._dynamicBatches[r];
            a.combineRenderElementsCount > 0 && a._addToRenderQueue(t, e, i, n);
          }
        }, e.dispose = function () {
          this._dynamicBatches = null;
        }, t._sortPrepareDynamicBatch = function (t, e) {
          return t._mainSortID - e._mainSortID;
        }, t;
      }(),
      wt = function () {
        function t() {}
        return r(t, "laya.d3.graphics.FrustumCulling"), t.renderShadowObjectCulling = function (t, e, i, n, r) {
          var a = 0,
            s = 0,
            o = 0,
            h = 0;
          for (a = 0, o = i.length; a < o; a++) {
            var l = i[a];
            l && l._clearRenderElements();
          }
          var u, c, _, d = t._cullingRenders;
          if (r > 1) {
            for (a = 0, o = t._cullingRendersLength; a < o; a++)
              if ((u = d[a]).castShadow && z.isVisible(u._owner.layer.mask) && u.enable)
                for (var f = 1, p = e.length; f < p; f++)
                  if (c = i[f - 1], 0 !== e[f].containsBoundSphere(u.boundingSphere))
                    for (s = 0, h = (_ = u._renderElements).length; s < h; s++) c._addRenderElement(_[s]);
          } else
            for (a = 0, o = t._cullingRendersLength; a < o; a++)
              if ((u = d[a]).castShadow && z.isVisible(u._owner.layer.mask) && u.enable && 0 !== e[0].containsBoundSphere(u.boundingSphere))
                for (u._renderUpdate(n), c = i[0], s = 0, h = (_ = u._renderElements).length; s < h; s++) c._addRenderElement(_[s]);
        }, t.renderShadowObjectCullingOctree = function (t, e, i, n, r) {
          for (var a = 0, s = i.length; a < s; a++) {
            var o = i[a];
            o && o._clearRenderElements();
          }
          r > 1 ? t.treeRoot.cullingShadowObjects(e, i, !0, 0, t) : t.treeRoot.cullingShadowObjectsOnePSSM(e[0], i, n, !0, 0, t);
        }, t.renderObjectCulling = function (t, e, i, n, r, a) {
          var s = 0,
            o = 0,
            h = 0,
            l = 0,
            u = e._quenes,
            c = e._dynamicBatchManager,
            _ = e._cullingRenders;
          for (s = 0, o = u.length; s < o; s++) {
            var d = u[s];
            d && d._clearRenderElements();
          }
          var f = Et._staticBatchManagers;
          for (s = 0, o = f.length; s < o; s++) f[s]._clearRenderElements();
          c._clearRenderElements();
          var p = i.transform.position;
          for (s = 0, o = e._cullingRendersLength; s < o; s++) {
            var m = _[s];
            if (z.isVisible(m._owner.layer.mask) && m.enable && 0 !== t.containsBoundSphere(m.boundingSphere) && m._renderUpdate(a)) {
              m._distanceForSort = Le.distance(m.boundingSphere.center, p) + m.sortingFudge;
              var g = m._renderElements;
              for (h = 0, l = g.length; h < l; h++) {
                var v = g[h],
                  y = v._staticBatch;
                if (y && y._material === v._material) y._addBatchRenderElement(v);
                else {
                  var x = v.renderObj;
                  x.triangleCount < 10 && 1 === x._vertexBufferCount && x._getIndexBuffer() && v._material.renderQueue < 2 && v._canDynamicBatch && !m._owner.isStatic ? c._addPrepareRenderElement(v) : e.getRenderQueue(v._material.renderQueue)._addRenderElement(v);
                }
              }
            }
          }
          for (s = 0, o = f.length; s < o; s++) f[s]._addToRenderQueue(e, n, r, a);
          c._finishCombineDynamicBatch(e), c._addToRenderQueue(e, n, r, a);
        }, t.renderObjectCullingOctree = function (t, e, i, n, r, a) {
          var s = 0,
            o = 0,
            h = e._quenes,
            l = e._dynamicBatchManager;
          for (s = 0, o = h.length; s < o; s++) {
            var u = h[s];
            u && u._clearRenderElements();
          }
          var c = Et._staticBatchManagers;
          for (s = 0, o = c.length; s < o; s++) c[s]._clearRenderElements();
          for (l._clearRenderElements(), e._cullingRenders.length = 0, e.treeRoot.cullingObjects(t, !0, 0, i.transform.position, a), s = 0, o = c.length; s < o; s++) c[s]._addToRenderQueue(e, n, r, a);
          l._finishCombineDynamicBatch(e), l._addToRenderQueue(e, n, r, a);
        }, t.renderObjectCullingNoBoundFrustum = function (t, e, i, n, r) {
          var a = 0,
            s = 0,
            o = 0,
            h = 0,
            l = t._quenes,
            u = t._dynamicBatchManager,
            c = t._cullingRenders;
          for (a = 0, s = l.length; a < s; a++) {
            var _ = l[a];
            _ && _._clearRenderElements();
          }
          var d = Et._staticBatchManagers;
          for (a = 0, s = d.length; a < s; a++) d[a]._clearRenderElements();
          u._clearRenderElements();
          var f = e.transform.position;
          for (a = 0, s = t._cullingRendersLength; a < s; a++) {
            var p = c[a];
            if (z.isVisible(p._owner.layer.mask) && p.enable) {
              p._renderUpdate(r), p._distanceForSort = Le.distance(p.boundingSphere.center, f) + p.sortingFudge;
              var m = p._renderElements;
              for (o = 0, h = m.length; o < h; o++) {
                var g = m[o],
                  v = g._staticBatch;
                if (v && v._material === g._material) v._addBatchRenderElement(g);
                else {
                  var y = g.renderObj;
                  y.triangleCount < 10 && 1 === y._vertexBufferCount && y._getIndexBuffer() && g._material.renderQueue < 2 && g._canDynamicBatch && !p._owner.isStatic ? u._addPrepareRenderElement(g) : t.getRenderQueue(g._material.renderQueue)._addRenderElement(g);
                }
              }
            }
          }
          for (a = 0, s = d.length; a < s; a++) d[a]._addToRenderQueue(t, i, n, r);
          u._finishCombineDynamicBatch(t), u._addToRenderQueue(t, i, n, r);
        }, t;
      }(),
      Et = function () {
        function t() {
          this._initBatchRenderElements = null, this._staticBatches = null, this._initBatchRenderElements = [], this._staticBatches = {};
        }
        r(t, "laya.d3.graphics.StaticBatchManager");
        var e = t.prototype;
        return e._finishInit = function () {
          for (var t in this._staticBatches) this._staticBatches[t]._finishInit();
          this._initBatchRenderElements.length = 0;
        }, e._initStaticBatchs = function (t) {
          throw new Error("StaticBatchManager:must override this function.");
        }, e._addInitBatchSprite = function (t) {
          for (var e = t._render._renderElements, i = 0, n = e.length; i < n; i++) this._initBatchRenderElements.push(e[i]);
        }, e._clearRenderElements = function () {
          for (var t in this._staticBatches) this._staticBatches[t]._clearRenderElements();
        }, e._garbageCollection = function (t) {
          var e = t._staticBatch,
            i = e._initBatchRenderElements,
            n = i.indexOf(t);
          i.splice(n, 1), 0 === i.length && (e.dispose(), delete this._staticBatches[e._key]);
        }, e._addToRenderQueue = function (t, e, i, n) {
          for (var r in this._staticBatches) {
            var a = this._staticBatches[r];
            a._batchRenderElements.length > 0 && a._updateToRenderQueue(t, n);
          }
        }, e.dispose = function () {
          this._staticBatches = null;
        }, t._addToStaticBatchQueue = function (e) {
          e instanceof laya.d3.core.RenderableSprite3D && e._addToInitStaticBatchManager();
          for (var i = 0, n = e.numChildren; i < n; i++) t._addToStaticBatchQueue(e._childs[i]);
        }, t.combine = function (e, i) {
          var n, r = 0,
            a = 0;
          if (i)
            for (r = 0, a = i.length; r < a; r++) {
              i[r]._addToInitStaticBatchManager();
            } else e && t._addToStaticBatchQueue(e);
          for (r = 0, a = t._staticBatchManagers.length; r < a; r++)(n = t._staticBatchManagers[r])._initStaticBatchs(e), n._finishInit();
        }, t._staticBatchManagers = [], t;
      }(),
      bt = function () {
        function t(t, e, i) {
          this._combineRenderElementPoolIndex = 0, this._combineRenderElementPool = null, this._initBatchRenderElements = null, this._batchRenderElements = null, this._material = null, this._rootOwner = null, this._key = null, this._manager = null, this._key = t, this._manager = e, this._combineRenderElementPoolIndex = 0, this._combineRenderElementPool = [], this._initBatchRenderElements = [], this._batchRenderElements = [], this._rootOwner = i;
        }
        r(t, "laya.d3.graphics.StaticBatch");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.render.IRenderable": !0,
          "laya.resource.IDispose": !0
        }), e._binarySearch = function (t) {
          for (var e = 0, i = this._batchRenderElements.length - 1, n = 0; e <= i;) n = Math.floor((e + i) / 2), this._compareBatchRenderElement(this._batchRenderElements[n], t) ? i = n - 1 : e = n + 1;
          return e;
        }, e._compareBatchRenderElement = function (t, e) {
          throw new Error("StaticBatch:must override this function.");
        }, e._getVertexDecLightMap = function (t) {
          return t === ae.vertexDeclaration ? te.vertexDeclaration : t === re.vertexDeclaration ? Jt.vertexDeclaration : t === Yt.vertexDeclaration ? Ht.vertexDeclaration : t === le.vertexDeclaration ? null : t === Ft.vertexDeclaration ? Bt.vertexDeclaration : t === oe.vertexDeclaration ? ie.vertexDeclaration : t === Zt.vertexDeclaration ? $t.vertexDeclaration : t === se.vertexDeclaration ? ee.vertexDeclaration : t === re.vertexDeclaration ? Jt.vertexDeclaration : t === qt.vertexDeclaration ? zt.vertexDeclaration : t === le.vertexDeclaration ? null : t === Ft.vertexDeclaration ? Bt.vertexDeclaration : t === he.vertexDeclaration ? ne.vertexDeclaration : t === Zt.vertexDeclaration ? $t.vertexDeclaration : t;
        }, e._getCombineRenderElementFromPool = function () {
          throw new Error("StaticBatch:must override this function.");
        }, e._addBatchRenderElement = function (t) {
          this._batchRenderElements.splice(this._binarySearch(t), 0, t);
        }, e._updateToRenderQueue = function (t, e) {
          this._combineRenderElementPoolIndex = 0, this._getRenderElement(t.getRenderQueue(this._material.renderQueue)._renderElements, t, e);
        }, e._getRenderElement = function (t, e, i) {
          throw new Error("StaticBatch:must override this function.");
        }, e._finishInit = function () {
          throw new Error("StaticBatch:must override this function.");
        }, e._clearRenderElements = function () {
          this._batchRenderElements.length = 0;
        }, e.dispose = function () {}, e._getVertexBuffer = function (t) {
          return void 0 === t && (t = 0), null;
        }, e._getIndexBuffer = function () {
          return null;
        }, e._beforeRender = function (t) {
          return !0;
        }, e._render = function (t) {}, e._getVertexBuffers = function () {
          return null;
        }, a(0, e, "_vertexBufferCount", function () {
          return 1;
        }), a(0, e, "triangleCount", function () {
          return 0;
        }), t.combine = function (t) {
          console.log("StaticBatch: discard property,please use StaticBatchManager.combine() function instead."), Et.combine(t);
        }, t.maxBatchVertexCount = 65535, t;
      }(),
      Ct = function () {
        function t(e, i) {
          if (this._id = 0, this._shaderValues = null, this._shaderDefineValue = 0, this._vertexStride = 0, this._vertexElements = null, this._vertexElementsDic = null, this._id = ++t._uniqueIDCounter, this._id > t.maxVertexDeclaration) throw new Error("VertexDeclaration: VertexDeclaration count should not large than ", t.maxVertexDeclaration);
          this._shaderValues = new ke(), this._vertexElementsDic = {}, this._vertexStride = e, this._vertexElements = i;
          for (var n = 0; n < i.length; n++) {
            var r = i[n],
              a = r.elementUsage;
            this._vertexElementsDic[a] = r;
            var s = [t._getTypeSize(r.elementFormat) / 4, 5126, !1, this._vertexStride, r.offset];
            switch (this._shaderValues.setValue(a, s), a) {
              case 1:
                this._addShaderDefine(ui.SHADERDEFINE_COLOR);
                break;
              case 2:
                this._addShaderDefine(ui.SHADERDEFINE_UV0);
                break;
              case 15:
                this._addShaderDefine(ui.SHADERDEFINE_UV1);
            }
          }
        }
        r(t, "laya.d3.graphics.VertexDeclaration");
        var e = t.prototype;
        return e._addShaderDefine = function (t) {
          this._shaderDefineValue |= t;
        }, e._removeShaderDefine = function (t) {
          this._shaderDefineValue &= ~t;
        }, e.getVertexElements = function () {
          return this._vertexElements.slice();
        }, e.getVertexElementByUsage = function (t) {
          return this._vertexElementsDic[t];
        }, e.unBinding = function () {}, a(0, e, "shaderDefineValue", function () {
          return this._shaderDefineValue;
        }), a(0, e, "id", function () {
          return this._id;
        }), a(0, e, "vertexStride", function () {
          return this._vertexStride;
        }), a(0, e, "shaderValues", function () {
          return this._shaderValues;
        }), t._getTypeSize = function (t) {
          switch (t) {
            case "single":
              return 4;
            case "vector2":
              return 8;
            case "vector3":
              return 12;
            case "vector4":
              return 16;
            case "color":
            case "byte4":
            case "short2":
              return 4;
            case "short4":
              return 8;
            case "normalizedshort2":
              return 4;
            case "normalizedshort4":
              return 8;
            case "halfvector2":
              return 4;
            case "halfvector4":
              return 8;
          }
          return 0;
        }, t.getVertexStride = function (e) {
          for (var i = 0, n = 0; n < e.Length; n++) {
            var r = e[n],
              a = r.offset + t._getTypeSize(r.elementFormat);
            i < a && (i = a);
          }
          return i;
        }, t._maxVertexDeclarationBit = 1e3, t._uniqueIDCounter = 1, n(t, ["maxVertexDeclaration", function () {
          return this.maxVertexDeclaration = 2147483647 - 1e3 * Math.floor(2147483.647);
        }]), t;
      }(),
      Mt = function () {
        function t(t, e, i) {
          this.offset = 0, this.elementFormat = null, this.elementUsage = 0, this.offset = t, this.elementFormat = e, this.elementUsage = i;
        }
        return r(t, "laya.d3.graphics.VertexElement"), t;
      }(),
      It = (function () {
        function t() {}
        r(t, "laya.d3.graphics.VertexElementFormat"), t.Single = "single", t.Vector2 = "vector2", t.Vector3 = "vector3", t.Vector4 = "vector4", t.Color = "color", t.Byte4 = "byte4", t.Short2 = "short2", t.Short4 = "short4", t.NormalizedShort2 = "normalizedshort2", t.NormalizedShort4 = "normalizedshort4", t.HalfVector2 = "halfvector2", t.HalfVector4 = "halfvector4";
      }(), function () {
        function t() {}
        r(t, "laya.d3.graphics.VertexElementUsage"), t.POSITION0 = 0, t.COLOR0 = 1, t.TEXTURECOORDINATE0 = 2, t.NORMAL0 = 3, t.BINORMAL0 = 4, t.TANGENT0 = 5, t.BLENDINDICES0 = 6, t.BLENDWEIGHT0 = 7, t.DEPTH0 = 8, t.FOG0 = 9, t.POINTSIZE0 = 10, t.SAMPLE0 = 11, t.TESSELLATEFACTOR0 = 12, t.COLOR1 = 13, t.NEXTTEXTURECOORDINATE0 = 14, t.TEXTURECOORDINATE1 = 15, t.NEXTTEXTURECOORDINATE1 = 16, t.CORNERTEXTURECOORDINATE0 = 17, t.VELOCITY0 = 18, t.STARTCOLOR0 = 19, t.STARTSIZE = 20, t.AGEADDSCALE0 = 21, t.STARTROTATION = 22, t.ENDCOLOR0 = 23, t.STARTLIFETIME = 24, t.TIME0 = 33, t.SHAPEPOSITIONSTARTLIFETIME = 30, t.DIRECTIONTIME = 32, t.SIZEROTATION0 = 27, t.RADIUS0 = 28, t.RADIAN0 = 29, t.STARTSPEED = 31, t.RANDOM0 = 34, t.RANDOM1 = 35, t.SIMULATIONWORLDPOSTION = 36, t.SIMULATIONWORLDROTATION = 37, t.TEXTURECOORDINATE0X = 38, t.TEXTURECOORDINATE0X1 = 39, t.TEXTURECOORDINATE0Y = 40, t.OFFSETVECTOR = 41;
      }(), function () {
        function t(t, e, i) {
          this._position = null, this._textureCoordinate0 = null, this._time = NaN, this._position = t, this._textureCoordinate0 = e, this._time = i;
        }
        r(t, "laya.d3.graphics.VertexGlitter");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate0;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "time", function () {
          return this._time;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(24, [new Mt(0, "vector3", 0), new Mt(12, "vector2", 2), new Mt(20, "single", 33)]);
        }]), t;
      }()),
      Dt = (function () {
        function t(t, e, i, n, r, a, s, o, h, l) {
          this._cornerTextureCoordinate = null, this._position = null, this._velocity = null, this._startColor = null, this._endColor = null, this._sizeRotation = null, this._radius = null, this._radian = null, this._ageAddScale = NaN, this._time = NaN, this._cornerTextureCoordinate = t, this._position = e, this._velocity = i, this._startColor = n, this._endColor = r, this._sizeRotation = a, this._radius = s, this._radian = o, this._ageAddScale = h, this._time = l;
        }
        r(t, "laya.d3.graphics.VertexParticle");
        var e = t.prototype;
        i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "endColor", function () {
          return this._endColor;
        }), a(0, e, "cornerTextureCoordinate", function () {
          return this._cornerTextureCoordinate;
        }), a(0, e, "sizeRotation", function () {
          return this._sizeRotation;
        }), a(0, e, "velocity", function () {
          return this._velocity;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "startColor", function () {
          return this._startColor;
        }), a(0, e, "radius", function () {
          return this._radius;
        }), a(0, e, "radian", function () {
          return this._radian;
        }), a(0, e, "ageAddScale", function () {
          return this._ageAddScale;
        }), a(0, e, "time", function () {
          return this._time;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(116, [new Mt(0, "vector4", 17), new Mt(16, "vector3", 0), new Mt(28, "vector3", 18), new Mt(40, "vector4", 19), new Mt(56, "vector4", 23), new Mt(72, "vector3", 27), new Mt(84, "vector2", 28), new Mt(92, "vector4", 29), new Mt(108, "single", 24), new Mt(112, "single", 33)]);
        }]);
      }(), function () {
        function t(t) {
          this._position = null, this._position = t;
        }
        r(t, "laya.d3.graphics.VertexPosition");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(12, [new Mt(0, "vector3", 0)]);
        }]), t;
      }()),
      At = function () {
        function t(t, e) {
          this._position = null, this._normal = null, this._position = t, this._normal = e;
        }
        r(t, "laya.d3.graphics.VertexPositionNormal");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(24, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3)]);
        }]), t;
      }(),
      Rt = function () {
        function t(t, e, i) {
          this._position = null, this._normal = null, this._color = null, this._position = t, this._normal = e, this._color = i;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColor");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(40, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1)]);
        }]), t;
      }(),
      Pt = function () {
        function t(t, e, i, n, r) {
          this._position = null, this._normal = null, this._color = null, this._blendIndex = null, this._blendWeight = null, this._position = t, this._normal = e, this._color = i, this._blendIndex = n, this._blendWeight = r;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorSkin");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(72, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector4", 7), new Mt(56, "vector4", 6)]);
        }]), t;
      }(),
      Lt = function () {
        function t(t, e, i, n, r, a) {
          this._position = null, this._normal = null, this._color = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._tangent = n, this._blendIndex = r, this._blendWeight = a;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorSkinSTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(88, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector4", 7), new Mt(56, "vector4", 6), new Mt(72, "vector4", 5)]);
        }]), t;
      }(),
      Ot = function () {
        function t(t, e, i, n, r, a) {
          this._position = null, this._normal = null, this._color = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._tangent = n, this._blendIndex = r, this._blendWeight = a;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorSkinTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(84, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector4", 7), new Mt(56, "vector4", 6), new Mt(72, "vector3", 5)]);
        }]), t;
      }(),
      Nt = function () {
        function t(t, e, i, n) {
          this._position = null, this._normal = null, this._color = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._tangent = n;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorSTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(56, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector4", 5)]);
        }]), t;
      }(),
      Vt = function () {
        function t(t, e, i, n) {
          this._position = null, this._normal = null, this._color = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._tangent = n;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(52, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector3", 5)]);
        }]), t;
      }(),
      Ft = function () {
        function t(t, e, i, n) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate = n;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTexture");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(48, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2)]);
        }]), t;
      }(),
      Bt = function () {
        function t(t, e, i, n, r) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate0 = n, this._textureCoordinate1 = r;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTexture0Texture1");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(56, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector2", 15)]);
        }]), t;
      }(),
      Ut = function () {
        function t(t, e, i, n, r, a, s) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate0 = n, this._textureCoordinate1 = r, this._blendIndex = a, this._blendWeight = s;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTexture0Texture1Skin");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(88, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector2", 15), new Mt(56, "vector4", 7), new Mt(72, "vector4", 6)]);
        }]), t;
      }(),
      kt = function () {
        function t(t, e, i, n, r, a, s, o) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate0 = n, this._textureCoordinate1 = r, this._tangent = a, this._blendIndex = s, this._blendWeight = o;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTexture0Texture1SkinSTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(104, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector2", 15), new Mt(56, "vector4", 7), new Mt(72, "vector4", 6), new Mt(88, "vector4", 5)]);
        }]), t;
      }(),
      Gt = function () {
        function t() {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTexture0Texture1SkinTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), e.VertexPositionNormalColorTexture0SkinTangent = function (t, e, i, n, r, a, s, o) {
          this._position = t, this._normal = e, this._color = i, this._textureCoordinate0 = n, this._textureCoordinate1 = r, this._tangent = a, this._blendIndex = s, this._blendWeight = o;
        }, a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(100, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector2", 15), new Mt(56, "vector4", 7), new Mt(72, "vector4", 6), new Mt(88, "vector3", 5)]);
        }]), t;
      }(),
      Ht = function () {
        function t(t, e, i, n, r, a) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate0 = n, this._textureCoordinate1 = r, this._tangent = a;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTexture0Texture1STangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(72, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector2", 15), new Mt(56, "vector4", 5)]);
        }]), t;
      }(),
      zt = function () {
        function t() {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._tangent = null;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTexture0Texture1Tangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), e.VertexPositionNormalColorTexture0Tangent = function (t, e, i, n, r, a) {
          this._position = t, this._normal = e, this._color = i, this._textureCoordinate0 = n, this._textureCoordinate1 = r, this._tangent = a;
        }, a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(68, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector2", 15), new Mt(56, "vector3", 5)]);
        }]), t;
      }(),
      Wt = function () {
        function t(t, e, i, n, r, a) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate = n, this._blendIndex = r, this._blendWeight = a;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTextureSkin");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(80, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector4", 7), new Mt(64, "vector4", 6)]);
        }]), t;
      }(),
      jt = function () {
        function t(t, e, i, n, r, a, s) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate = n, this._tangent = r, this._blendIndex = a, this._blendWeight = s;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTextureSkinSTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(96, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector4", 7), new Mt(64, "vector4", 6), new Mt(80, "vector4", 5)]);
        }]), t;
      }(),
      Xt = function () {
        function t(t, e, i, n, r, a, s) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate = n, this._tangent = r, this._blendIndex = a, this._blendWeight = s;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTextureSkinTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(92, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector4", 7), new Mt(64, "vector4", 6), new Mt(80, "vector3", 5)]);
        }]), t;
      }(),
      Yt = function () {
        function t(t, e, i, n, r) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate = n, this._tangent = r;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTextureSTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(64, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector4", 5)]);
        }]), t;
      }(),
      qt = function () {
        function t(t, e, i, n, r) {
          this._position = null, this._normal = null, this._color = null, this._textureCoordinate = null, this._tangent = null, this._position = t, this._normal = e, this._color = i, this._textureCoordinate = n, this._tangent = r;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalColorTextureTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "color", function () {
          return this._color;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(60, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 1), new Mt(40, "vector2", 2), new Mt(48, "vector3", 5)]);
        }]), t;
      }(),
      Qt = function () {
        function t(t, e, i) {
          this._position = null, this._normal = null, this._tangent = null, this._position = t, this._normal = e, this._tangent = i;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalSTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(40, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector4", 5)]);
        }]), t;
      }(),
      Kt = function () {
        function t(t, e, i) {
          this._position = null, this._normal = null, this._tangent = null, this._position = t, this._normal = e, this._tangent = i;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(36, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector3", 5)]);
        }]), t;
      }(),
      Zt = function () {
        function t(t, e, i) {
          this._position = null, this._normal = null, this._textureCoordinate = null, this._position = t, this._normal = e, this._textureCoordinate = i;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTexture");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(32, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2)]);
        }]), t;
      }(),
      $t = function () {
        function t(t, e, i, n) {
          this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._position = t, this._normal = e, this._textureCoordinate0 = i, this._textureCoordinate1 = n;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTexture0Texture1");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(40, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector2", 15)]);
        }]), t;
      }(),
      Jt = function () {
        function t(t, e, i, n, r, a) {
          this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._position = t, this._normal = e, this._textureCoordinate0 = i, this._textureCoordinate1 = n, this._blendIndex = r, this._blendWeight = a;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTexture0Texture1Skin");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(72, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector2", 15), new Mt(40, "vector4", 7), new Mt(56, "vector4", 6)]);
        }]), t;
      }(),
      te = function () {
        function t(t, e, i, n, r, a, s) {
          this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = t, this._normal = e, this._textureCoordinate0 = i, this._textureCoordinate1 = n, this._tangent = r, this._blendIndex = a, this._blendWeight = s;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTexture0Texture1SkinSTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(88, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector2", 15), new Mt(40, "vector4", 7), new Mt(56, "vector4", 6), new Mt(72, "vector4", 5)]);
        }]), t;
      }(),
      ee = function () {
        function t() {
          this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTexture0Texture1SkinTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), e.VertexPositionNormalTexture0SkinTangent = function (t, e, i, n, r, a, s) {
          this._position = t, this._normal = e, this._textureCoordinate0 = i, this._textureCoordinate1 = n, this._tangent = r, this._blendIndex = a, this._blendWeight = s;
        }, a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(84, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector2", 15), new Mt(40, "vector4", 7), new Mt(56, "vector4", 6), new Mt(72, "vector3", 5)]);
        }]), t;
      }(),
      ie = function () {
        function t(t, e, i, n, r) {
          this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._tangent = null, this._position = t, this._normal = e, this._textureCoordinate0 = i, this._textureCoordinate1 = n, this._tangent = r;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTexture0Texture1STangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(56, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector2", 15), new Mt(40, "vector4", 5)]);
        }]), t;
      }(),
      ne = function () {
        function t() {
          this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._tangent = null;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTexture0Texture1Tangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), e.VertexPositionNormalTexture0Tangent = function (t, e, i, n, r) {
          this._position = t, this._normal = e, this._textureCoordinate0 = i, this._textureCoordinate1 = n, this._tangent = r;
        }, a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(52, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector2", 15), new Mt(40, "vector3", 5)]);
        }]), t;
      }(),
      re = function () {
        function t(t, e, i, n, r) {
          this._position = null, this._normal = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._position = t, this._normal = e, this._textureCoordinate = i, this._blendIndex = n, this._blendWeight = r;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTextureSkin");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(64, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector4", 7), new Mt(48, "vector4", 6)]);
        }]), t;
      }(),
      ae = function () {
        function t(t, e, i, n, r, a) {
          this._position = null, this._normal = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = t, this._normal = e, this._textureCoordinate = i, this._tangent = n, this._blendIndex = r, this._blendWeight = a;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTextureSkinSTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(80, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector4", 7), new Mt(48, "vector4", 6), new Mt(64, "vector4", 5)]);
        }]), t;
      }(),
      se = function () {
        function t(t, e, i, n, r, a) {
          this._position = null, this._normal = null, this._textureCoordinate = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this._position = t, this._normal = e, this._textureCoordinate = i, this._tangent = n, this._blendIndex = r, this._blendWeight = a;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTextureSkinTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(76, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector4", 7), new Mt(48, "vector4", 6), new Mt(64, "vector3", 5)]);
        }]), t;
      }(),
      oe = function () {
        function t(t, e, i, n) {
          this._position = null, this._normal = null, this._textureCoordinate = null, this._tangent = null, this._position = t, this._normal = e, this._textureCoordinate = i, this._tangent = n;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTextureSTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(48, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector4", 5)]);
        }]), t;
      }(),
      he = function () {
        function t(t, e, i, n) {
          this._position = null, this._normal = null, this._textureCoordinate = null, this._tangent = null, this._position = t, this._normal = e, this._textureCoordinate = i, this._tangent = n;
        }
        r(t, "laya.d3.graphics.VertexPositionNormalTextureTangent");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(44, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector3", 5)]);
        }]), t;
      }(),
      le = function () {
        function t(t, e, i) {
          this._position = null, this._normal = null, this._textureCoordinate = null, this._position = t, this._normal = e, this._textureCoordinate = i;
        }
        r(t, "laya.d3.graphics.VertexPositionNTBTexture");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(56, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector3", 5), new Mt(36, "vector3", 4), new Mt(48, "vector2", 2)]);
        }]), t;
      }(),
      ue = function () {
        function t(t, e, i, n, r, a, s, o) {
          this._position = null, this._normal = null, this._textureCoordinate0 = null, this._textureCoordinate1 = null, this._blendIndex = null, this._blendWeight = null, this._tangent = null, this.binormal = null, this._position = t, this._normal = e, this._textureCoordinate0 = n, this._textureCoordinate1 = r, this._tangent = a, i = i, this._blendIndex = s, this._blendWeight = o;
        }
        r(t, "laya.d3.graphics.VertexPositionNTBTexture0Texture1Skin");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "tangent", function () {
          return this._tangent;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(0, e, "textureCoordinate1", function () {
          return this._textureCoordinate1;
        }), a(0, e, "blendIndex", function () {
          return this._blendIndex;
        }), a(0, e, "blendWeight", function () {
          return this._blendWeight;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(96, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector3", 5), new Mt(36, "vector3", 4), new Mt(48, "vector2", 2), new Mt(56, "vector2", 15), new Mt(64, "vector4", 7), new Mt(80, "vector4", 6)]);
        }]), t;
      }(),
      ce = function () {
        function t(t, e, i) {
          this._position = null, this._normal = null, this._textureCoordinate = null, this._position = t, this._normal = e, this._textureCoordinate = i;
        }
        r(t, "laya.d3.graphics.VertexPositionNTBTextureSkin");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "textureCoordinate", function () {
          return this._textureCoordinate;
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(88, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector3", 5), new Mt(36, "vector3", 4), new Mt(48, "vector2", 2), new Mt(56, "vector4", 7), new Mt(72, "vector4", 6)]);
        }]), t;
      }(),
      _e = function () {
        function t(t, e, i, n) {
          this._position = null, this._normal = null, this._textureCoord0 = null, this._textureCoord1 = null, this._position = t, this._normal = e, this._textureCoord0 = i, this._textureCoord1 = n;
        }
        r(t, "laya.d3.graphics.VertexPositionTerrain");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "normal", function () {
          return this._normal;
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "textureCoord0", function () {
          return this._textureCoord0;
        }), a(0, e, "textureCoord1", function () {
          return this._textureCoord1;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(40, [new Mt(0, "vector3", 0), new Mt(12, "vector3", 3), new Mt(24, "vector2", 2), new Mt(32, "vector2", 15)]);
        }]), t;
      }(),
      de = function () {
        function t(t, e) {
          this._position = null, this._textureCoordinate0 = null, this._position = t, this._textureCoordinate0 = e;
        }
        r(t, "laya.d3.graphics.VertexPositionTexture0");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "position", function () {
          return this._position;
        }), a(0, e, "textureCoordinate0", function () {
          return this._textureCoordinate0;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(20, [new Mt(0, "vector3", 0), new Mt(12, "vector2", 2)]);
        }]), t;
      }(),
      fe = function () {
        function t(t, e, i, n, r, a, s, o, h, l, u, c, _, d) {
          this._cornerTextureCoordinate = null, this._positionStartLifeTime = null, this._velocity = null, this._startColor = null, this._startSize = null, this._startRotation0 = null, this._startRotation1 = null, this._startRotation2 = null, this._startLifeTime = NaN, this._time = NaN, this._startSpeed = NaN, this._randoms0 = null, this._randoms1 = null, this._simulationWorldPostion = null, this._cornerTextureCoordinate = t, this._positionStartLifeTime = e, this._velocity = i, this._startColor = n, this._startSize = r, this._startRotation0 = a, this._startRotation1 = s, this._startRotation2 = o, this._startLifeTime = h, this._time = l, this._startSpeed = u, this._randoms0 = this.random0, this._randoms1 = this.random1, this._simulationWorldPostion = d;
        }
        r(t, "laya.d3.graphics.VertexShurikenParticleBillboard");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "cornerTextureCoordinate", function () {
          return this._cornerTextureCoordinate;
        }), a(0, e, "random1", function () {
          return this._randoms1;
        }), a(0, e, "startRotation2", function () {
          return this._startRotation2;
        }), a(0, e, "positionStartLifeTime", function () {
          return this._positionStartLifeTime;
        }), a(0, e, "velocity", function () {
          return this._velocity;
        }), a(0, e, "random0", function () {
          return this._randoms0;
        }), a(0, e, "startSize", function () {
          return this._startSize;
        }), a(0, e, "startColor", function () {
          return this._startColor;
        }), a(0, e, "startRotation0", function () {
          return this._startRotation0;
        }), a(0, e, "startRotation1", function () {
          return this._startRotation1;
        }), a(0, e, "startLifeTime", function () {
          return this._startLifeTime;
        }), a(0, e, "time", function () {
          return this._time;
        }), a(0, e, "startSpeed", function () {
          return this._startSpeed;
        }), a(0, e, "simulationWorldPostion", function () {
          return this._simulationWorldPostion;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(152, [new Mt(0, "vector4", 17), new Mt(16, "vector4", 30), new Mt(32, "vector4", 32), new Mt(48, "vector4", 19), new Mt(64, "vector3", 20), new Mt(76, "vector3", 22), new Mt(88, "single", 31), new Mt(92, "vector4", 34), new Mt(108, "vector4", 35), new Mt(124, "vector3", 36), new Mt(136, "vector4", 37)]);
        }]), t;
      }(),
      pe = function () {
        function t(t, e, i, n, r, a, s, o, h, l, u, c, _, d) {
          this._cornerTextureCoordinate = null, this._positionStartLifeTime = null, this._velocity = null, this._startColor = null, this._startSize = null, this._startRotation0 = null, this._startRotation1 = null, this._startRotation2 = null, this._startLifeTime = NaN, this._time = NaN, this._startSpeed = NaN, this._randoms0 = null, this._randoms1 = null, this._simulationWorldPostion = null, this._cornerTextureCoordinate = t, this._positionStartLifeTime = e, this._velocity = i, this._startColor = n, this._startSize = r, this._startRotation0 = a, this._startRotation1 = s, this._startRotation2 = o, this._startLifeTime = h, this._time = l, this._startSpeed = u, this._randoms0 = this.random0, this._randoms1 = this.random1, this._simulationWorldPostion = d;
        }
        r(t, "laya.d3.graphics.VertexShurikenParticleMesh");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.graphics.IVertex": !0
        }), a(0, e, "cornerTextureCoordinate", function () {
          return this._cornerTextureCoordinate;
        }), a(0, e, "velocity", function () {
          return this._velocity;
        }), a(0, e, "position", function () {
          return this._positionStartLifeTime;
        }), a(0, e, "random0", function () {
          return this._randoms0;
        }), a(0, e, "startSize", function () {
          return this._startSize;
        }), a(0, e, "startColor", function () {
          return this._startColor;
        }), a(0, e, "startRotation0", function () {
          return this._startRotation0;
        }), a(0, e, "startRotation1", function () {
          return this._startRotation1;
        }), a(0, e, "random1", function () {
          return this._randoms1;
        }), a(0, e, "startRotation2", function () {
          return this._startRotation2;
        }), a(0, e, "startLifeTime", function () {
          return this._startLifeTime;
        }), a(0, e, "time", function () {
          return this._time;
        }), a(0, e, "startSpeed", function () {
          return this._startSpeed;
        }), a(0, e, "simulationWorldPostion", function () {
          return this._simulationWorldPostion;
        }), a(0, e, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), a(1, t, "vertexDeclaration", function () {
          return t._vertexDeclaration;
        }), n(t, ["_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(172, [new Mt(0, "vector3", 0), new Mt(12, "vector4", 1), new Mt(28, "vector2", 2), new Mt(36, "vector4", 30), new Mt(52, "vector4", 32), new Mt(68, "vector4", 19), new Mt(84, "vector3", 20), new Mt(96, "vector3", 22), new Mt(108, "single", 31), new Mt(112, "vector4", 34), new Mt(128, "vector4", 35), new Mt(144, "vector3", 36), new Mt(156, "vector4", 37)]);
        }]), t;
      }(),
      me = function () {
        function t(t, e, i, n, r, a) {
          this._version = null, this._strings = ["BLOCK", "DATA", "STRINGS"], this._materials = null, this._subMeshes = null, this._materialMap = null, this._readData = null, this._mesh = null, this._BLOCK = {
            count: 0
          }, this._DATA = {
            offset: 0,
            size: 0
          }, this._STRINGS = {
            offset: 0,
            size: 0
          }, this._shaderAttributes = null, this._mesh = i, this._materials = n, this._subMeshes = r, this._materialMap = a, this._version = e, this._onLoaded(t);
        }
        r(t, "laya.d3.loaders.LoadModelV01");
        var e = t.prototype;
        return e._onLoaded = function (t) {
          this._readData = t, this.READ_BLOCK();
          for (var e = 0; e < this._BLOCK.count; e++) {
            var i = this._readData.getUint16(),
              n = this._strings[i],
              r = this["READ_" + n];
            if (null == r) throw new Error("model file err,no this function:" + i + " " + n);
            if (!r.call(this)) break;
          }
          return this._mesh;
        }, e.onError = function () {}, e._readString = function () {
          return this._strings[this._readData.getUint16()];
        }, e.READ_BLOCK = function () {
          this._readData.getUint16();
          return this._BLOCK.count = this._readData.getUint16(), !0;
        }, e.READ_DATA = function () {
          return this._DATA.offset = this._readData.getUint32(), this._DATA.size = this._readData.getUint32(), !0;
        }, e.READ_STRINGS = function () {
          this._STRINGS.offset = this._readData.getUint16(), this._STRINGS.size = this._readData.getUint16();
          var t = this._readData.pos;
          this._readData.pos = this._STRINGS.offset + this._DATA.offset;
          for (var e = 0; e < this._STRINGS.size; e++) this._strings[e] = this._readData.readUTFString();
          return this._readData.pos = t, !0;
        }, e.READ_MATERIAL = function () {
          var t = this._readData.getUint16(),
            e = (this._readString(), this._readString());
          return this._materials[t] = "null" !== e ? y.getRes(this._materialMap[e]) : new mi(), !0;
        }, e.READ_MESH = function () {
          this._readString();
          switch (this._version) {
            case "LAYAMODEL:01":
              console.log("Warning: The (.lm) file is converted by old fbxTools,please reConverted it use  lastest fbxTools version,later we will remove the  support of old version (.lm) support.");
              break;
            case "LAYASKINANI:01":
            case "LAYAMODEL:02":
              var t = this._readData.__getBuffer(),
                e = 0,
                i = 0,
                n = this._readData.getUint32(),
                r = this._readData.getUint32(),
                a = (new Float32Array(t.slice(n + this._DATA.offset, n + this._DATA.offset + r)), this._readData.getUint32()),
                s = this._readData.getUint32(),
                o = new Float32Array(t.slice(a + this._DATA.offset, a + this._DATA.offset + s));
              for (this.mesh._inverseBindPoses = [], e = 0, i = o.length; e < i; e += 16) {
                var h = new Ce(o[e + 0], o[e + 1], o[e + 2], o[e + 3], o[e + 4], o[e + 5], o[e + 6], o[e + 7], o[e + 8], o[e + 9], o[e + 10], o[e + 11], o[e + 12], o[e + 13], o[e + 14], o[e + 15]);
                this.mesh._inverseBindPoses.push(h);
              }
              break;
            default:
              throw new Error("LoadModel:unknown version.");
          }
          return !0;
        }, e.READ_SUBMESH = function () {
          this._readString(), this._readData.getUint8();
          var e = this._readString();
          this._shaderAttributes = e.match(t._attrReg);
          var i = this._readData.getUint32(),
            n = this._readData.getUint32(),
            r = (this._readData.getUint32(), this._readData.getUint32(), this._readData.getUint32()),
            a = this._readData.getUint32(),
            s = this._readData.getUint32(),
            o = this._readData.getUint32(),
            h = this._readData.__getBuffer(),
            l = new Fe(this._mesh),
            u = this._getVertexDeclaration(),
            c = qi.create(u, a / u.vertexStride, 35044, !0),
            _ = r + this._DATA.offset,
            d = h.slice(_, _ + a);
          c.setData(new Float32Array(d)), l._vertexBuffer = c;
          for (var f = c.vertexDeclaration.getVertexElements(), p = 0; p < f.length; p++) l._bufferUsage[f[p].elementUsage] = c;
          var m = Yi.create("ushort", n / 2, 35044, !0),
            g = i + this._DATA.offset,
            v = h.slice(g, g + n);
          m.setData(new Uint16Array(v)), l._indexBuffer = m;
          var y = h.slice(s + this._DATA.offset, s + this._DATA.offset + o);
          return l._boneIndicesList[0] = new Uint8Array(y), this._subMeshes.push(l), !0;
        }, e.READ_DATAAREA = function () {
          return !1;
        }, e._getVertexDeclaration = function () {
          for (var t = !1, e = !1, i = !1, n = !1, r = !1, a = !1, s = !1, o = !1, h = !1, l = 0; l < this._shaderAttributes.length; l += 8) switch (this._shaderAttributes[l]) {
            case "POSITION":
              t = !0;
              break;
            case "NORMAL":
              e = !0;
              break;
            case "COLOR":
              i = !0;
              break;
            case "UV":
              n = !0;
              break;
            case "UV1":
              r = !0;
              break;
            case "BLENDWEIGHT":
              s = !0;
              break;
            case "BLENDINDICES":
              o = !0;
              break;
            case "TANGENT":
              a = !0;
              break;
            case "BINORMAL":
              h = !0;
          }
          var u;
          return t && e && i && n && r && s && o && a ? u = Gt.vertexDeclaration : t && e && i && n && r && s && o ? u = Ut.vertexDeclaration : t && e && n && r && s && o && a ? u = ee.vertexDeclaration : t && e && n && r && s && o ? u = Jt.vertexDeclaration : t && e && i && n && s && o && a ? u = Xt.vertexDeclaration : t && e && i && n && s && o ? u = Wt.vertexDeclaration : t && e && a && h && n && s && o ? u = ce.vertexDeclaration : t && e && n && s && o && a ? u = se.vertexDeclaration : t && e && n && s && o ? u = re.vertexDeclaration : t && e && i && s && o && a ? u = Ot.vertexDeclaration : t && e && i && s && o ? u = Pt.vertexDeclaration : t && e && i && n && r && a ? u = zt.vertexDeclaration : t && e && i && n && r ? u = Bt.vertexDeclaration : t && e && n && r && a ? u = ne.vertexDeclaration : t && e && n && r ? u = $t.vertexDeclaration : t && e && i && n && a ? u = qt.vertexDeclaration : t && e && n && a && h ? u = le.vertexDeclaration : t && e && i && n ? u = Ft.vertexDeclaration : t && e && n && a ? u = he.vertexDeclaration : t && e && n ? u = Zt.vertexDeclaration : t && e && i && a ? u = Vt.vertexDeclaration : t && e && i && (u = Rt.vertexDeclaration), u;
        }, a(0, e, "mesh", function () {
          return this._mesh;
        }), t._attrReg = new RegExp("(\\w+)|([:,;])", "g"), t;
      }(),
      ge = function () {
        function t() {}
        return r(t, "laya.d3.loaders.LoadModelV02"), t.parse = function (e, i, n, r, a, s) {
          t._mesh = n, t._materials = r, t._subMeshes = a, t._materialMap = s, t._version = i, t._readData = e, t.READ_DATA(), t.READ_BLOCK(), t.READ_STRINGS();
          for (var o = 0, h = t._BLOCK.count; o < h; o++) {
            t._readData.pos = t._BLOCK.blockStarts[o];
            var l = t._readData.getUint16(),
              u = t._strings[l],
              c = t["READ_" + u];
            if (null == c) throw new Error("model file err,no this function:" + l + " " + u);
            c.call();
          }
          t._strings.length = 0, t._readData = null, t._version = null, t._mesh = null, t._materials = null, t._subMeshes = null, t._materialMap = null;
        }, t._readString = function () {
          return t._strings[t._readData.getUint16()];
        }, t.READ_DATA = function () {
          t._DATA.offset = t._readData.getUint32(), t._DATA.size = t._readData.getUint32();
        }, t.READ_BLOCK = function () {
          for (var e = t._BLOCK.count = t._readData.getUint16(), i = t._BLOCK.blockStarts = [], n = t._BLOCK.blockLengths = [], r = 0; r < e; r++) i.push(t._readData.getUint32()), n.push(t._readData.getUint32());
        }, t.READ_STRINGS = function () {
          var e = t._readData.getUint32(),
            i = t._readData.getUint16(),
            n = t._readData.pos;
          t._readData.pos = e + t._DATA.offset;
          for (var r = 0; r < i; r++) t._strings[r] = t._readData.readUTFString();
          t._readData.pos = n;
        }, t.READ_MATERIAL = function () {
          t._readString(), t._readString();
          var e = t._readString();
          return "" !== e && t._materials.push(y.getRes(t._materialMap[e])), !0;
        }, t.READ_MESH = function () {
          t._readString();
          var e = t._readData.__getBuffer(),
            i = 0,
            n = 0,
            r = t._readData.getInt16(),
            a = t._DATA.offset;
          for (i = 0; i < r; i++) {
            var s = a + t._readData.getUint32(),
              o = t._readData.getUint32(),
              h = new Float32Array(e.slice(s, s + o)),
              l = t._readString().match(t._attrReg),
              u = t._getVertexDeclaration(l),
              c = qi.create(u, 4 * h.length / u.vertexStride, 35044, !0);
            c.setData(h), t._mesh._vertexBuffers.push(c);
          }
          var _ = a + t._readData.getUint32(),
            d = t._readData.getUint32(),
            f = new Uint16Array(e.slice(_, _ + d)),
            p = Yi.create("ushort", d / 2, 35044, !0);
          p.setData(f), t._mesh._indexBuffer = p;
          var m = t._mesh._boneNames = [],
            g = t._readData.getUint16();
          for (m.length = g, i = 0; i < g; i++) m[i] = t._strings[t._readData.getUint16()];
          var v = t._readData.getUint32(),
            y = t._readData.getUint32(),
            x = (new Float32Array(e.slice(a + v, a + v + y)), t._readData.getUint32()),
            T = t._readData.getUint32(),
            S = new Float32Array(e.slice(a + x, a + x + T));
          for (t._mesh._inverseBindPoses = [], i = 0, n = S.length; i < n; i += 16) {
            var w = new Ce(S[i + 0], S[i + 1], S[i + 2], S[i + 3], S[i + 4], S[i + 5], S[i + 6], S[i + 7], S[i + 8], S[i + 9], S[i + 10], S[i + 11], S[i + 12], S[i + 13], S[i + 14], S[i + 15]);
            t._mesh._inverseBindPoses.push(w);
          }
          return t._mesh._skinnedDatas = new Float32Array(16 * S.length), !0;
        }, t.READ_SUBMESH = function () {
          var e = t._readData.__getBuffer(),
            i = new Fe(t._mesh),
            n = t._readData.getInt16(),
            r = t._readData.getUint32(),
            a = t._readData.getUint32();
          i._vertexBuffer = t._mesh._vertexBuffers[n], i._vertexStart = r, i._vertexCount = a;
          var s = t._readData.getUint32(),
            o = t._readData.getUint32(),
            h = t._mesh._indexBuffer;
          i._indexBuffer = h, i._indexStart = s, i._indexCount = o, i._indices = new Uint16Array(h.getData().buffer, 2 * s, o);
          var l = t._DATA.offset,
            u = i._subIndexBufferStart,
            c = i._subIndexBufferCount,
            _ = i._boneIndicesList,
            d = t._readData.getUint16();
          u.length = d, c.length = d, _.length = d;
          for (var f = 0; f < d; f++) {
            u[f] = t._readData.getUint32(), c[f] = t._readData.getUint32();
            var p = t._readData.getUint32(),
              m = t._readData.getUint32();
            i._boneIndicesList[f] = new Uint8Array(e.slice(l + p, l + p + m));
          }
          return t._subMeshes.push(i), !0;
        }, t._getVertexDeclaration = function (t) {
          for (var e = !1, i = !1, n = !1, r = !1, a = !1, s = !1, o = !1, h = !1, l = !1, u = 0; u < t.length; u++) switch (t[u]) {
            case "POSITION":
              e = !0;
              break;
            case "NORMAL":
              i = !0;
              break;
            case "COLOR":
              n = !0;
              break;
            case "UV":
              r = !0;
              break;
            case "UV1":
              a = !0;
              break;
            case "BLENDWEIGHT":
              o = !0;
              break;
            case "BLENDINDICES":
              h = !0;
              break;
            case "TANGENT":
              s = !0;
              break;
            case "BINORMAL":
              l = !0;
          }
          var c;
          return e && i && n && r && a && o && h && s ? c = Gt.vertexDeclaration : e && i && n && r && a && o && h ? c = Ut.vertexDeclaration : e && i && r && a && o && h && s ? c = ee.vertexDeclaration : e && i && r && a && o && h ? c = Jt.vertexDeclaration : e && i && n && r && o && h && s ? c = Xt.vertexDeclaration : e && i && n && r && o && h ? c = Wt.vertexDeclaration : e && i && r && o && h && s ? c = se.vertexDeclaration : e && i && r && o && h ? c = re.vertexDeclaration : e && i && n && o && h && s ? c = Ot.vertexDeclaration : e && i && n && o && h ? c = Pt.vertexDeclaration : e && i && n && r && a && s ? c = zt.vertexDeclaration : e && i && n && r && a ? c = Bt.vertexDeclaration : e && i && r && a && s ? c = ne.vertexDeclaration : e && i && r && a ? c = $t.vertexDeclaration : e && i && n && r && s ? c = qt.vertexDeclaration : e && i && r && s && l ? c = le.vertexDeclaration : e && i && n && r ? c = Ft.vertexDeclaration : e && i && r && s ? c = he.vertexDeclaration : e && i && r ? c = Zt.vertexDeclaration : e && i && n && s ? c = Vt.vertexDeclaration : e && i && n && (c = Rt.vertexDeclaration), c;
        }, t._attrReg = new RegExp("(\\w+)|([:,;])", "g"), t._strings = [], t._readData = null, t._version = null, t._mesh = null, t._materials = null, t._subMeshes = null, t._materialMap = null, n(t, ["_BLOCK", function () {
          return this._BLOCK = {
            count: 0
          };
        }, "_DATA", function () {
          return this._DATA = {
            offset: 0,
            size: 0
          };
        }]), t;
      }(),
      ve = function () {
        function t() {}
        return r(t, "laya.d3.loaders.LoadModelV03"), t.parse = function (e, i, n, r, a) {
          t._mesh = n, t._subMeshes = r, t._materialMap = a, t._version = i, t._readData = e, t.READ_DATA(), t.READ_BLOCK(), t.READ_STRINGS();
          for (var s = 0, o = t._BLOCK.count; s < o; s++) {
            t._readData.pos = t._BLOCK.blockStarts[s];
            var h = t._readData.getUint16(),
              l = t._strings[h],
              u = t["READ_" + l];
            if (null == u) throw new Error("model file err,no this function:" + h + " " + l);
            u.call();
          }
          t._strings.length = 0, t._readData = null, t._version = null, t._mesh = null, t._subMeshes = null, t._materialMap = null;
        }, t._readString = function () {
          return t._strings[t._readData.getUint16()];
        }, t.READ_DATA = function () {
          t._DATA.offset = t._readData.getUint32(), t._DATA.size = t._readData.getUint32();
        }, t.READ_BLOCK = function () {
          for (var e = t._BLOCK.count = t._readData.getUint16(), i = t._BLOCK.blockStarts = [], n = t._BLOCK.blockLengths = [], r = 0; r < e; r++) i.push(t._readData.getUint32()), n.push(t._readData.getUint32());
        }, t.READ_STRINGS = function () {
          var e = t._readData.getUint32(),
            i = t._readData.getUint16(),
            n = t._readData.pos;
          t._readData.pos = e + t._DATA.offset;
          for (var r = 0; r < i; r++) t._strings[r] = t._readData.readUTFString();
          t._readData.pos = n;
        }, t.READ_MESH = function () {
          t._readString();
          var e = t._readData.__getBuffer(),
            i = 0,
            n = 0,
            r = t._readData.getInt16(),
            a = t._DATA.offset;
          for (i = 0; i < r; i++) {
            var s, o = a + t._readData.getUint32(),
              h = t._readData.getUint32(),
              l = new Float32Array(e.slice(o, o + h)),
              u = t._readString();
            switch (t._version) {
              case "LAYAMODEL:03":
                s = t._vertexDeclarationMap_Discard[u];
                break;
              case "LAYAMODEL:0301":
                s = t._vertexDeclarationMap[u];
                break;
              default:
                throw new Error("LoadModelV03: unknown version.");
            }
            if (!s) throw new Error("LoadModelV03: unknown vertexDeclaration.");
            var c = qi.create(s, 4 * l.length / s.vertexStride, 35044, !0);
            c.setData(l), t._mesh._vertexBuffers.push(c);
          }
          var _ = a + t._readData.getUint32(),
            d = t._readData.getUint32(),
            f = new Uint16Array(e.slice(_, _ + d)),
            p = Yi.create("ushort", d / 2, 35044, !0);
          p.setData(f), t._mesh._indexBuffer = p;
          var m = t._mesh._boneNames = [],
            g = t._readData.getUint16();
          for (m.length = g, i = 0; i < g; i++) m[i] = t._strings[t._readData.getUint16()];
          t._readData.pos += 8;
          var v = t._readData.getUint32(),
            y = t._readData.getUint32(),
            x = new Float32Array(e.slice(a + v, a + v + y));
          for (t._mesh._inverseBindPoses = [], i = 0, n = x.length; i < n; i += 16) {
            var T = new Ce(x[i + 0], x[i + 1], x[i + 2], x[i + 3], x[i + 4], x[i + 5], x[i + 6], x[i + 7], x[i + 8], x[i + 9], x[i + 10], x[i + 11], x[i + 12], x[i + 13], x[i + 14], x[i + 15]);
            t._mesh._inverseBindPoses.push(T);
          }
          return t._mesh._skinnedDatas = new Float32Array(16 * x.length), !0;
        }, t.READ_SUBMESH = function () {
          var e = t._readData.__getBuffer(),
            i = new Fe(t._mesh),
            n = t._readData.getInt16(),
            r = t._readData.getUint32(),
            a = t._readData.getUint32();
          i._vertexBuffer = t._mesh._vertexBuffers[n], i._vertexStart = r, i._vertexCount = a;
          var s = t._readData.getUint32(),
            o = t._readData.getUint32(),
            h = t._mesh._indexBuffer;
          i._indexBuffer = h, i._indexStart = s, i._indexCount = o, i._indices = new Uint16Array(h.getData().buffer, 2 * s, o);
          var l = t._DATA.offset,
            u = i._subIndexBufferStart,
            c = i._subIndexBufferCount,
            _ = i._boneIndicesList,
            d = t._readData.getUint16();
          u.length = d, c.length = d, _.length = d;
          for (var f = 0; f < d; f++) {
            u[f] = t._readData.getUint32(), c[f] = t._readData.getUint32();
            var p = t._readData.getUint32(),
              m = t._readData.getUint32();
            _[f] = new Uint8Array(e.slice(l + p, l + p + m));
          }
          return t._subMeshes.push(i), !0;
        }, t._strings = [], t._readData = null, t._version = null, t._mesh = null, t._subMeshes = null, t._materialMap = null, n(t, ["_vertexDeclarationMap_Discard", function () {
          return this._vertexDeclarationMap_Discard = {
            "POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT": Gt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES": Ut.vertexDeclaration,
            "POSITION,NORMAL,TANGENT,BINORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,": ue.vertexDeclaration,
            "POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT": ee.vertexDeclaration,
            "POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES": Jt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES,TANGENT": Xt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES": Wt.vertexDeclaration,
            "POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES,TANGENT": se.vertexDeclaration,
            "POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES": re.vertexDeclaration,
            "POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES,TANGENT": Ot.vertexDeclaration,
            "POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES": Pt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,UV1,TANGENT": zt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,UV1": Bt.vertexDeclaration,
            "POSITION,NORMAL,UV,UV1,TANGENT": ne.vertexDeclaration,
            "POSITION,NORMAL,UV,UV1": $t.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,TANGENT": qt.vertexDeclaration,
            "POSITION,NORMAL,UV,TANGENT,BINORMAL": le.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV": Ft.vertexDeclaration,
            "POSITION,NORMAL,UV,TANGENT": he.vertexDeclaration,
            "POSITION,NORMAL,UV": Zt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,TANGENT": Vt.vertexDeclaration,
            "POSITION,NORMAL,COLOR": Rt.vertexDeclaration,
            "POSITION,NORMAL,TANGENT": Kt.vertexDeclaration,
            "POSITION,NORMAL": At.vertexDeclaration,
            "POSITION,UV": de.vertexDeclaration,
            POSITION: Dt.vertexDeclaration
          };
        }, "_vertexDeclarationMap", function () {
          return this._vertexDeclarationMap = {
            "POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT": kt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES": Ut.vertexDeclaration,
            "POSITION,NORMAL,TANGENT,BINORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,": ue.vertexDeclaration,
            "POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT": te.vertexDeclaration,
            "POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES": Jt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES,TANGENT": jt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES": Wt.vertexDeclaration,
            "POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES,TANGENT": ae.vertexDeclaration,
            "POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES": re.vertexDeclaration,
            "POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES,TANGENT": Lt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES": Pt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,UV1,TANGENT": Ht.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,UV1": Bt.vertexDeclaration,
            "POSITION,NORMAL,UV,UV1,TANGENT": ie.vertexDeclaration,
            "POSITION,NORMAL,UV,UV1": $t.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV,TANGENT": Yt.vertexDeclaration,
            "POSITION,NORMAL,UV,TANGENT,BINORMAL": le.vertexDeclaration,
            "POSITION,NORMAL,COLOR,UV": Ft.vertexDeclaration,
            "POSITION,NORMAL,UV,TANGENT": oe.vertexDeclaration,
            "POSITION,NORMAL,UV": Zt.vertexDeclaration,
            "POSITION,NORMAL,COLOR,TANGENT": Nt.vertexDeclaration,
            "POSITION,NORMAL,COLOR": Rt.vertexDeclaration,
            "POSITION,NORMAL,TANGENT": Qt.vertexDeclaration,
            "POSITION,NORMAL": At.vertexDeclaration,
            "POSITION,UV": de.vertexDeclaration,
            POSITION: Dt.vertexDeclaration
          };
        }, "_BLOCK", function () {
          return this._BLOCK = {
            count: 0
          };
        }, "_DATA", function () {
          return this._DATA = {
            offset: 0,
            size: 0
          };
        }]), t;
      }(),
      ye = function () {
        function t() {}
        return r(t, "laya.d3.loaders.MeshReader"), t.read = function (e, i, n, r, a) {
          var s = new f(e);
          s.pos = 0;
          var o = s.readUTFString();
          switch (o) {
            case "LAYAMODEL:01":
            case "LAYASKINANI:01":
              t._readVersion01(s, o, i, n, r, a);
              break;
            case "LAYAMODEL:02":
              ge.parse(s, o, i, n, r, a);
              break;
            case "LAYAMODEL:03":
            case "LAYAMODEL:0301":
              ve.parse(s, o, i, r, a);
              break;
            default:
              throw new Error("MeshReader: unknown mesh version.");
          }
          i._setSubMeshes(r);
        }, t._readVersion01 = function (t, e, i, n, r, a) {
          new me(t, e, i, n, r, a);
        }, t;
      }(),
      xe = function () {
        function t(t, e) {
          this.min = null, this.max = null, this.min = t, this.max = e;
        }
        r(t, "laya.d3.math.BoundBox");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.getCorners = function (t) {
          t.length = 8;
          var e = this.min.elements,
            i = this.max.elements,
            n = e[0],
            r = e[1],
            a = e[2],
            s = i[0],
            o = i[1],
            h = i[2];
          t[0] = new Le(n, o, h), t[1] = new Le(s, o, h), t[2] = new Le(s, r, h), t[3] = new Le(n, r, h), t[4] = new Le(n, o, a), t[5] = new Le(s, o, a), t[6] = new Le(s, r, a), t[7] = new Le(n, r, a);
        }, e.toDefault = function () {
          this.min.toDefault(), this.max.toDefault();
        }, e.cloneTo = function (t) {
          var e = t;
          this.min.cloneTo(e.min), this.max.cloneTo(e.max);
        }, e.clone = function () {
          var t = new this.constructor(new Le(), new Le());
          return this.cloneTo(t), t;
        }, t.createfromPoints = function (t, e) {
          if (null == t) throw new Error("points");
          var i = e.min,
            n = e.max,
            r = i.elements;
          r[0] = Number.MAX_VALUE, r[1] = Number.MAX_VALUE, r[2] = Number.MAX_VALUE;
          var a = n.elements;
          a[0] = -Number.MAX_VALUE, a[1] = -Number.MAX_VALUE, a[2] = -Number.MAX_VALUE;
          for (var s = 0, o = t.length; s < o; ++s) Le.min(i, t[s], i), Le.max(n, t[s], n);
        }, t.merge = function (t, e, i) {
          Le.min(t.min, e.min, i.min), Le.max(t.max, e.max, i.max);
        }, t;
      }(),
      Te = function () {
        function t(e) {
          this._matrix = null, this._near = null, this._far = null, this._left = null, this._right = null, this._top = null, this._bottom = null, this._matrix = e, this._near = new Ie(new Le()), this._far = new Ie(new Le()), this._left = new Ie(new Le()), this._right = new Ie(new Le()), this._top = new Ie(new Le()), this._bottom = new Ie(new Le()), t._getPlanesFromMatrix(this._matrix, this._near, this._far, this._left, this._right, this._top, this._bottom);
        }
        r(t, "laya.d3.math.BoundFrustum");
        var e = t.prototype;
        return e.equalsBoundFrustum = function (t) {
          return this._matrix.equalsOtherMatrix(t.matrix);
        }, e.equalsObj = function (t) {
          if (t instanceof laya.d3.math.BoundFrustum) {
            var e = t;
            return this.equalsBoundFrustum(e);
          }
          return !1;
        }, e.getPlane = function (t) {
          switch (t) {
            case 0:
              return this._near;
            case 1:
              return this._far;
            case 2:
              return this._left;
            case 3:
              return this._right;
            case 4:
              return this._top;
            case 5:
              return this._bottom;
            default:
              return null;
          }
        }, e.getCorners = function (e) {
          t._get3PlaneInterPoint(this._near, this._bottom, this._right).cloneTo(e[0]), t._get3PlaneInterPoint(this._near, this._top, this._right).cloneTo(e[1]), t._get3PlaneInterPoint(this._near, this._top, this._left).cloneTo(e[2]), t._get3PlaneInterPoint(this._near, this._bottom, this._left).cloneTo(e[3]), t._get3PlaneInterPoint(this._far, this._bottom, this._right).cloneTo(e[4]), t._get3PlaneInterPoint(this._far, this._top, this._right).cloneTo(e[5]), t._get3PlaneInterPoint(this._far, this._top, this._left).cloneTo(e[6]), t._get3PlaneInterPoint(this._far, this._bottom, this._left).cloneTo(e[7]);
        }, e.containsPoint = function (t) {
          for (var e = Ie.PlaneIntersectionType_Front, i = Ie.PlaneIntersectionType_Front, n = 0; n < 6; n++) {
            switch (n) {
              case 0:
                i = we.intersectsPlaneAndPoint(this._near, t);
                break;
              case 1:
                i = we.intersectsPlaneAndPoint(this._far, t);
                break;
              case 2:
                i = we.intersectsPlaneAndPoint(this._left, t);
                break;
              case 3:
                i = we.intersectsPlaneAndPoint(this._right, t);
                break;
              case 4:
                i = we.intersectsPlaneAndPoint(this._top, t);
                break;
              case 5:
                i = we.intersectsPlaneAndPoint(this._bottom, t);
            }
            switch (i) {
              case Ie.PlaneIntersectionType_Back:
                return 0;
              case Ie.PlaneIntersectionType_Intersecting:
                e = Ie.PlaneIntersectionType_Intersecting;
            }
          }
          switch (e) {
            case Ie.PlaneIntersectionType_Intersecting:
              return 2;
            default:
              return 1;
          }
        }, e.containsBoundBox = function (e) {
          for (var i, n = t._tempV30, r = t._tempV31, a = 1, s = 0; s < 6; s++) {
            if (i = this.getPlane(s), this._getBoxToPlanePVertexNVertex(e, i.normal, n, r), we.intersectsPlaneAndPoint(i, n) === Ie.PlaneIntersectionType_Back) return 0;
            we.intersectsPlaneAndPoint(i, r) === Ie.PlaneIntersectionType_Back && (a = 2);
          }
          return a;
        }, e.containsBoundSphere = function (t) {
          for (var e = Ie.PlaneIntersectionType_Front, i = Ie.PlaneIntersectionType_Front, n = 0; n < 6; n++) {
            switch (n) {
              case 0:
                i = we.intersectsPlaneAndSphere(this._near, t);
                break;
              case 1:
                i = we.intersectsPlaneAndSphere(this._far, t);
                break;
              case 2:
                i = we.intersectsPlaneAndSphere(this._left, t);
                break;
              case 3:
                i = we.intersectsPlaneAndSphere(this._right, t);
                break;
              case 4:
                i = we.intersectsPlaneAndSphere(this._top, t);
                break;
              case 5:
                i = we.intersectsPlaneAndSphere(this._bottom, t);
            }
            switch (i) {
              case Ie.PlaneIntersectionType_Back:
                return 0;
              case Ie.PlaneIntersectionType_Intersecting:
                e = Ie.PlaneIntersectionType_Intersecting;
            }
          }
          switch (e) {
            case Ie.PlaneIntersectionType_Intersecting:
              return 2;
            default:
              return 1;
          }
        }, e._getBoxToPlanePVertexNVertex = function (t, e, i, n) {
          var r = t.min,
            a = r.elements,
            s = t.max,
            o = s.elements,
            h = e.elements,
            l = h[0],
            u = h[1],
            c = h[2];
          r.cloneTo(i);
          var _ = i.elements;
          l >= 0 && (_[0] = o[0]), u >= 0 && (_[1] = o[1]), c >= 0 && (_[2] = o[2]), s.cloneTo(n);
          var d = n.elements;
          l >= 0 && (d[0] = a[0]), u >= 0 && (d[1] = a[1]), c >= 0 && (d[2] = a[2]);
        }, a(0, e, "top", function () {
          return this._top;
        }), a(0, e, "matrix", function () {
          return this._matrix;
        }, function (e) {
          this._matrix = e, t._getPlanesFromMatrix(this._matrix, this._near, this._far, this._left, this._right, this._top, this._bottom);
        }), a(0, e, "near", function () {
          return this._near;
        }), a(0, e, "far", function () {
          return this._far;
        }), a(0, e, "left", function () {
          return this._left;
        }), a(0, e, "right", function () {
          return this._right;
        }), a(0, e, "bottom", function () {
          return this._bottom;
        }), t._getPlanesFromMatrix = function (t, e, i, n, r, a, s) {
          var o = t.elements,
            h = o[0],
            l = o[1],
            u = o[2],
            c = o[3],
            _ = o[4],
            d = o[5],
            f = o[6],
            p = o[7],
            m = o[8],
            g = o[9],
            v = o[10],
            y = o[11],
            x = o[12],
            T = o[13],
            S = o[14],
            w = o[15],
            E = e.normal.elements;
          E[0] = c + u, E[1] = p + f, E[2] = y + v, e.distance = w + S, e.normalize();
          var b = i.normal.elements;
          b[0] = c - u, b[1] = p - f, b[2] = y - v, i.distance = w - S, i.normalize();
          var C = n.normal.elements;
          C[0] = c + h, C[1] = p + _, C[2] = y + m, n.distance = w + x, n.normalize();
          var M = r.normal.elements;
          M[0] = c - h, M[1] = p - _, M[2] = y - m, r.distance = w - x, r.normalize();
          var I = a.normal.elements;
          I[0] = c - l, I[1] = p - d, I[2] = y - g, a.distance = w - T, a.normalize();
          var D = s.normal.elements;
          D[0] = c + l, D[1] = p + d, D[2] = y + g, s.distance = w + T, s.normalize();
        }, t._get3PlaneInterPoint = function (e, i, n) {
          var r = e.normal,
            a = i.normal,
            s = n.normal;
          Le.cross(a, s, t._tempV30), Le.cross(s, r, t._tempV31), Le.cross(r, a, t._tempV32);
          var o = Le.dot(r, t._tempV30),
            h = Le.dot(a, t._tempV31),
            l = Le.dot(s, t._tempV32);
          Le.scale(t._tempV30, -e.distance / o, t._tempV33), Le.scale(t._tempV31, -i.distance / h, t._tempV34), Le.scale(t._tempV32, -n.distance / l, t._tempV35), Le.add(t._tempV33, t._tempV34, t._tempV36), Le.add(t._tempV35, t._tempV36, t._tempV37);
          return t._tempV37;
        }, n(t, ["_tempV30", function () {
          return this._tempV30 = new Le();
        }, "_tempV31", function () {
          return this._tempV31 = new Le();
        }, "_tempV32", function () {
          return this._tempV32 = new Le();
        }, "_tempV33", function () {
          return this._tempV33 = new Le();
        }, "_tempV34", function () {
          return this._tempV34 = new Le();
        }, "_tempV35", function () {
          return this._tempV35 = new Le();
        }, "_tempV36", function () {
          return this._tempV36 = new Le();
        }, "_tempV37", function () {
          return this._tempV37 = new Le();
        }]), t;
      }(),
      Se = function () {
        function t(t, e) {
          this.center = null, this.radius = NaN, this.center = t, this.radius = e;
        }
        r(t, "laya.d3.math.BoundSphere");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.toDefault = function () {
          this.center.toDefault(), this.radius = 0;
        }, e.intersectsRayDistance = function (t) {
          return we.intersectsRayAndSphereRD(t, this);
        }, e.intersectsRayPoint = function (t, e) {
          return we.intersectsRayAndSphereRP(t, this, e);
        }, e.cloneTo = function (t) {
          var e = t;
          this.center.cloneTo(e.center), e.radius = this.radius;
        }, e.clone = function () {
          var t = new this.constructor(new Le(), new Le());
          return this.cloneTo(t), t;
        }, t.createFromSubPoints = function (e, i, n, r) {
          if (null == e) throw new Error("points");
          if (i < 0 || i >= e.length) throw new Error("start" + i + "Must be in the range [0, " + (e.length - 1) + "]");
          if (n < 0 || i + n > e.length) throw new Error("count" + n + "Must be in the range <= " + e.length + "}");
          var a = i + n,
            s = t._tempVector3;
          s.elements[0] = 0, s.elements[1] = 0, s.elements[2] = 0;
          for (var o = i; o < a; ++o) Le.add(e[o], s, s);
          var h = r.center;
          Le.scale(s, 1 / n, h);
          var l = 0;
          for (o = i; o < a; ++o) {
            var u = Le.distanceSquared(h, e[o]);
            u > l && (l = u);
          }
          r.radius = Math.sqrt(l);
        }, t.createfromPoints = function (e, i) {
          if (null == e) throw new Error("points");
          t.createFromSubPoints(e, 0, e.length, i);
        }, n(t, ["_tempVector3", function () {
          return this._tempVector3 = new Le();
        }]), t;
      }(),
      we = function () {
        function t() {}
        return r(t, "laya.d3.math.Collision"), t.distancePlaneToPoint = function (t, e) {
          return Le.dot(t.normal, e) - t.distance;
        }, t.distanceBoxToPoint = function (t, e) {
          var i = t.min.elements,
            n = i[0],
            r = i[1],
            a = i[2],
            s = t.max.elements,
            o = s[0],
            h = s[1],
            l = s[2],
            u = e.elements,
            c = u[0],
            _ = u[1],
            d = u[2],
            f = 0;
          return c < n && (f += (n - c) * (n - c)), c > o && (f += (o - c) * (o - c)), _ < r && (f += (r - _) * (r - _)), _ > h && (f += (h - _) * (h - _)), d < a && (f += (a - d) * (a - d)), d > l && (f += (l - d) * (l - d)), Math.sqrt(f);
        }, t.distanceBoxToBox = function (t, e) {
          var i = t.min.elements,
            n = i[0],
            r = i[1],
            a = i[2],
            s = t.max.elements,
            o = s[0],
            h = s[1],
            l = s[2],
            u = e.min.elements,
            c = u[0],
            _ = u[1],
            d = u[2],
            f = e.max.elements,
            p = f[0],
            m = f[1],
            g = f[2],
            v = 0,
            y = NaN;
          return n > p ? v += (y = n - p) * y : c > o && (v += (y = c - o) * y), r > m ? v += (y = r - m) * y : _ > h && (v += (y = _ - h) * y), a > g ? v += (y = a - g) * y : d > l && (v += (y = d - l) * y), Math.sqrt(v);
        }, t.distanceSphereToPoint = function (t, e) {
          var i = Math.sqrt(Le.distanceSquared(t.center, e));
          return i -= t.radius, Math.max(i, 0);
        }, t.distanceSphereToSphere = function (t, e) {
          var i = Math.sqrt(Le.distanceSquared(t.center, e.center));
          return i -= t.radius + e.radius, Math.max(i, 0);
        }, t.intersectsRayAndTriangleRD = function (e, i, n, r, a) {
          var s = e.origin.elements,
            o = s[0],
            h = s[1],
            l = s[2],
            u = e.direction.elements,
            c = u[0],
            _ = u[1],
            d = u[2],
            f = i.elements,
            p = f[0],
            m = f[1],
            g = f[2],
            v = n.elements,
            y = v[0],
            x = v[1],
            T = v[2],
            S = r.elements,
            w = S[0],
            E = S[1],
            b = S[2],
            C = t._tempV30.elements,
            M = C[0],
            I = C[1],
            D = C[2];
          M = y - p, I = x - m, D = T - g;
          var A = t._tempV31.elements,
            R = A[0],
            P = A[1],
            L = A[2];
          R = w - p, P = E - m, L = b - g;
          var O = t._tempV32.elements,
            N = O[0],
            V = O[1],
            F = O[2],
            B = M * (N = _ * L - d * P) + I * (V = d * R - c * L) + D * (F = c * P - _ * R);
          if (Ee.isZero(B)) return 0, !1;
          var U = 1 / B,
            k = t._tempV33.elements,
            G = k[0],
            H = k[1],
            z = k[2],
            W = (G = o - p) * N + (H = h - m) * V + (z = l - g) * F;
          if ((W *= U) < 0 || W > 1) return 0, !1;
          var j = t._tempV34.elements,
            X = j[0],
            Y = j[1],
            q = j[2],
            Q = c * (X = H * D - z * I) + _ * (Y = z * M - G * D) + d * (q = G * I - H * M);
          if ((Q *= U) < 0 || W + Q > 1) return 0, !1;
          var K = R * X + P * Y + L * q;
          return (K *= U) < 0 ? (0, !1) : (K, !0);
        }, t.intersectsRayAndTriangleRP = function (e, i, n, r, a) {
          return t.intersectsRayAndTriangleRD(e, i, n, r, NaN) ? (Le.scale(e.direction, NaN, t._tempV30), Le.add(e.origin, t._tempV30, a), !0) : (a = Le.ZERO, !1);
        }, t.intersectsRayAndPoint = function (e, i) {
          Le.subtract(e.origin, i, t._tempV30);
          var n = Le.dot(t._tempV30, e.direction),
            r = Le.dot(t._tempV30, t._tempV30) - Ee.zeroTolerance;
          if (r > 0 && n > 0) return !1;
          return !(n * n - r < 0);
        }, t.intersectsRayAndRay = function (e, i, n) {
          var r = e.origin,
            a = r.elements,
            s = a[0],
            o = a[1],
            h = a[2],
            l = e.direction,
            u = l.elements,
            c = u[0],
            _ = u[1],
            d = u[2],
            f = i.origin,
            p = f.elements,
            m = p[0],
            g = p[1],
            v = p[2],
            y = i.direction,
            x = y.elements,
            T = x[0],
            S = x[1],
            w = x[2];
          Le.cross(l, y, t._tempV30);
          var E = t._tempV30.elements,
            b = Le.scalarLengthSquared(t._tempV30);
          if (Ee.isZero(b) && Ee.nearEqual(m, s) && Ee.nearEqual(g, o) && Ee.nearEqual(v, h)) return Le.ZERO.cloneTo(n), !0;
          var C = m - s,
            M = g - o,
            I = v - h,
            D = T,
            A = S,
            R = w,
            P = E[0],
            L = E[1],
            O = E[2],
            N = (C * A * O + M * R * P + I * D * L - C * R * L - M * D * O - I * A * P) / b,
            V = (C * (A = _) * O + M * (R = d) * P + I * (D = c) * L - C * R * L - M * D * O - I * A * P) / b;
          Le.scale(l, N, t._tempV30), Le.scale(y, V, t._tempV31), Le.add(r, t._tempV30, t._tempV32), Le.add(f, t._tempV31, t._tempV33);
          var F = t._tempV32.elements,
            B = t._tempV33.elements;
          return Ee.nearEqual(B[0], F[0]) && Ee.nearEqual(B[1], F[1]) && Ee.nearEqual(B[2], F[2]) ? (t._tempV32.cloneTo(n), !0) : (Le.ZERO.cloneTo(n), !1);
        }, t.intersectsPlaneAndTriangle = function (e, i, n, r) {
          var a = t.intersectsPlaneAndPoint(e, i),
            s = t.intersectsPlaneAndPoint(e, n),
            o = t.intersectsPlaneAndPoint(e, r);
          return a == Ie.PlaneIntersectionType_Front && s == Ie.PlaneIntersectionType_Front && o == Ie.PlaneIntersectionType_Front ? Ie.PlaneIntersectionType_Front : a == Ie.PlaneIntersectionType_Back && s == Ie.PlaneIntersectionType_Back && o == Ie.PlaneIntersectionType_Back ? Ie.PlaneIntersectionType_Back : Ie.PlaneIntersectionType_Intersecting;
        }, t.intersectsRayAndPlaneRD = function (t, e, i) {
          var n = e.normal,
            r = Le.dot(n, t.direction);
          if (Ee.isZero(r)) return 0, !1;
          var a = Le.dot(n, t.origin);
          return !((-e.distance - a) / r < 0);
        }, t.intersectsRayAndPlaneRP = function (e, i, n) {
          return t.intersectsRayAndPlaneRD(e, i, NaN) ? (Le.scale(e.direction, NaN, t._tempV30), Le.add(e.origin, t._tempV30, t._tempV31), t._tempV31, !0) : (Le.ZERO, !1);
        }, t.intersectsRayAndBoxRD = function (t, e) {
          var i = t.origin.elements,
            n = i[0],
            r = i[1],
            a = i[2],
            s = t.direction.elements,
            o = s[0],
            h = s[1],
            l = s[2],
            u = e.min.elements,
            c = u[0],
            _ = u[1],
            d = u[2],
            f = e.max.elements,
            p = f[0],
            m = f[1],
            g = f[2],
            v = 0,
            y = Ee.MaxValue;
          if (Ee.isZero(o)) {
            if (n < c || n > p) return -1;
          } else {
            var x = 1 / o,
              T = (c - n) * x,
              S = (p - n) * x;
            if (T > S) {
              var w = T;
              T = S, S = w;
            }
            if (v = Math.max(T, v), y = Math.min(S, y), v > y) return -1;
          }
          if (Ee.isZero(h)) {
            if (r < _ || r > m) return -1;
          } else {
            var E = 1 / h,
              b = (_ - r) * E,
              C = (m - r) * E;
            if (b > C) {
              var M = b;
              b = C, C = M;
            }
            if (v = Math.max(b, v), y = Math.min(C, y), v > y) return -1;
          }
          if (Ee.isZero(l)) {
            if (a < d || a > g) return -1;
          } else {
            var I = 1 / l,
              D = (d - a) * I,
              A = (g - a) * I;
            if (D > A) {
              var R = D;
              D = A, A = R;
            }
            if (v = Math.max(D, v), y = Math.min(A, y), v > y) return -1;
          }
          return v;
        }, t.intersectsRayAndBoxRP = function (e, i, n) {
          var r = t.intersectsRayAndBoxRD(e, i);
          return -1 === r ? (Le.ZERO.cloneTo(n), r) : (Le.scale(e.direction, r, t._tempV30), Le.add(e.origin, t._tempV30, t._tempV31), t._tempV31.cloneTo(n), r);
        }, t.intersectsRayAndSphereRD = function (e, i) {
          var n = i.radius;
          Le.subtract(e.origin, i.center, t._tempV30);
          var r = Le.dot(t._tempV30, e.direction),
            a = Le.dot(t._tempV30, t._tempV30) - n * n;
          if (a > 0 && r > 0) return -1;
          var s = r * r - a;
          if (s < 0) return -1;
          var o = -r - Math.sqrt(s);
          return o < 0 && (o = 0), o;
        }, t.intersectsRayAndSphereRP = function (e, i, n) {
          var r = t.intersectsRayAndSphereRD(e, i);
          return -1 === r ? (Le.ZERO.cloneTo(n), r) : (Le.scale(e.direction, r, t._tempV30), Le.add(e.origin, t._tempV30, t._tempV31), t._tempV31.cloneTo(n), r);
        }, t.intersectsSphereAndTriangle = function (e, i, n, r) {
          var a = e.center,
            s = e.radius;
          t.closestPointPointTriangle(a, i, n, r, t._tempV30), Le.subtract(t._tempV30, a, t._tempV31);
          return Le.dot(t._tempV31, t._tempV31) <= s * s;
        }, t.intersectsPlaneAndPoint = function (t, e) {
          var i = Le.dot(t.normal, e) + t.distance;
          return i > 0 ? Ie.PlaneIntersectionType_Front : i < 0 ? Ie.PlaneIntersectionType_Back : Ie.PlaneIntersectionType_Intersecting;
        }, t.intersectsPlaneAndPlane = function (e, i) {
          Le.cross(e.normal, i.normal, t._tempV30);
          var n = Le.dot(t._tempV30, t._tempV30);
          return !Ee.isZero(n);
        }, t.intersectsPlaneAndPlaneRL = function (e, i, n) {
          var r = e.normal,
            a = i.normal;
          Le.cross(r, a, t._tempV34);
          var s = Le.dot(t._tempV34, t._tempV34);
          return !Ee.isZero(s) && (Le.scale(a, e.distance, t._tempV30), Le.scale(r, i.distance, t._tempV31), Le.subtract(t._tempV30, t._tempV31, t._tempV32), Le.cross(t._tempV32, t._tempV34, t._tempV33), Le.normalize(t._tempV34, t._tempV34), new Re(t._tempV33, t._tempV34), !0);
        }, t.intersectsPlaneAndBox = function (e, i) {
          var n = e.distance,
            r = e.normal,
            a = r.elements,
            s = a[0],
            o = a[1],
            h = a[2],
            l = i.min.elements,
            u = l[0],
            c = l[1],
            _ = l[2],
            d = i.max.elements,
            f = d[0],
            p = d[1],
            m = d[2];
          t._tempV30.elements[0] = s > 0 ? u : f, t._tempV30.elements[1] = o > 0 ? c : p, t._tempV30.elements[2] = h > 0 ? _ : m, t._tempV31.elements[0] = s > 0 ? f : u, t._tempV31.elements[1] = o > 0 ? p : c, t._tempV31.elements[2] = h > 0 ? m : _;
          var g = Le.dot(r, t._tempV30);
          return g + n > 0 ? Ie.PlaneIntersectionType_Front : (g = Le.dot(r, t._tempV31)) + n < 0 ? Ie.PlaneIntersectionType_Back : Ie.PlaneIntersectionType_Intersecting;
        }, t.intersectsPlaneAndSphere = function (t, e) {
          var i = e.radius,
            n = Le.dot(t.normal, e.center) + t.distance;
          return n > i ? Ie.PlaneIntersectionType_Front : n < -i ? Ie.PlaneIntersectionType_Back : Ie.PlaneIntersectionType_Intersecting;
        }, t.intersectsBoxAndBox = function (t, e) {
          var i = t.min.elements,
            n = t.max.elements,
            r = e.min.elements,
            a = e.max.elements;
          return !(i[0] > a[0] || r[0] > n[0]) && (!(i[1] > a[1] || r[1] > n[1]) && !(i[2] > a[2] || r[2] > n[2]));
        }, t.intersectsBoxAndSphere = function (e, i) {
          var n = i.center,
            r = i.radius;
          Le.Clamp(n, e.min, e.max, t._tempV30);
          return Le.distanceSquared(n, t._tempV30) <= r * r;
        }, t.intersectsSphereAndSphere = function (t, e) {
          var i = t.radius + e.radius;
          return Le.distanceSquared(t.center, e.center) <= i * i;
        }, t.boxContainsPoint = function (t, e) {
          var i = t.min.elements,
            n = t.max.elements,
            r = e.elements;
          return i[0] <= r[0] && n[0] >= r[0] && i[1] <= r[1] && n[1] >= r[1] && i[2] <= r[2] && n[2] >= r[2] ? 1 : 0;
        }, t.boxContainsBox = function (t, e) {
          var i = t.min.elements,
            n = i[0],
            r = i[1],
            a = i[2],
            s = t.max.elements,
            o = s[0],
            h = s[1],
            l = s[2],
            u = e.min.elements,
            c = u[0],
            _ = u[1],
            d = u[2],
            f = e.max.elements,
            p = f[0],
            m = f[1],
            g = f[2];
          return o < c || n > p ? 0 : h < _ || r > m ? 0 : l < d || a > g ? 0 : n <= c && p <= p && r <= _ && m <= h && a <= d && g <= l ? 1 : 2;
        }, t.boxContainsSphere = function (e, i) {
          var n = e.min,
            r = n.elements,
            a = r[0],
            s = r[1],
            o = r[2],
            h = e.max,
            l = h.elements,
            u = l[0],
            c = l[1],
            _ = l[2],
            d = i.center,
            f = d.elements,
            p = f[0],
            m = f[1],
            g = f[2],
            v = i.radius;
          Le.Clamp(d, n, h, t._tempV30);
          return Le.distanceSquared(d, t._tempV30) > v * v ? 0 : a + v <= p && p <= u - v && u - a > v && s + v <= m && m <= c - v && c - s > v && o + v <= g && g <= _ - v && _ - o > v ? 1 : 2;
        }, t.sphereContainsPoint = function (t, e) {
          return Le.distanceSquared(e, t.center) <= t.radius * t.radius ? 1 : 0;
        }, t.sphereContainsTriangle = function (e, i, n, r) {
          var a = t.sphereContainsPoint(e, i),
            s = t.sphereContainsPoint(e, n),
            o = t.sphereContainsPoint(e, r);
          return 1 == a && 1 == s && 1 == o ? 1 : t.intersectsSphereAndTriangle(e, i, n, r) ? 2 : 0;
        }, t.sphereContainsBox = function (e, i) {
          var n = e.center.elements,
            r = n[0],
            a = n[1],
            s = n[2],
            o = e.radius,
            h = i.min.elements,
            l = h[0],
            u = h[1],
            c = h[2],
            _ = i.max.elements,
            d = _[0],
            f = _[1],
            p = _[2],
            m = t._tempV30.elements;
          m[0], m[1], m[2];
          if (!t.intersectsBoxAndSphere(i, e)) return 0;
          var g = o * o;
          return r - l, a - f, s - p, Le.scalarLengthSquared(t._tempV30) > g ? 2 : (r - d, a - f, s - p, Le.scalarLengthSquared(t._tempV30) > g ? 2 : (r - d, a - u, s - p, Le.scalarLengthSquared(t._tempV30) > g ? 2 : (r - l, a - u, s - p, Le.scalarLengthSquared(t._tempV30) > g ? 2 : (r - l, a - f, s - c, Le.scalarLengthSquared(t._tempV30) > g ? 2 : (r - d, a - f, s - c, Le.scalarLengthSquared(t._tempV30) > g ? 2 : (r - d, a - u, s - c, Le.scalarLengthSquared(t._tempV30) > g ? 2 : (r - l, a - u, s - c, Le.scalarLengthSquared(t._tempV30) > g ? 2 : 1)))))));
        }, t.sphereContainsSphere = function (t, e) {
          var i = t.radius,
            n = e.radius,
            r = Le.distance(t.center, e.center);
          return i + n < r ? 0 : i - n < r ? 2 : 1;
        }, t.closestPointPointTriangle = function (e, i, n, r, a) {
          Le.subtract(n, i, t._tempV30), Le.subtract(r, i, t._tempV31), Le.subtract(e, i, t._tempV32), Le.subtract(e, n, t._tempV33), Le.subtract(e, r, t._tempV34);
          var s = Le.dot(t._tempV30, t._tempV32),
            o = Le.dot(t._tempV31, t._tempV32),
            h = Le.dot(t._tempV30, t._tempV33),
            l = Le.dot(t._tempV31, t._tempV33),
            u = Le.dot(t._tempV30, t._tempV34),
            c = Le.dot(t._tempV31, t._tempV34);
          if (s <= 0 && o <= 0) i.cloneTo(a);
          else if (h >= 0 && l <= h) n.cloneTo(a);
          else {
            var _ = s * l - h * o;
            if (_ <= 0 && s >= 0 && h <= 0) {
              var d = s / (s - h);
              return Le.scale(t._tempV30, d, a), void Le.add(i, a, a);
            }
            if (c >= 0 && u <= c) r.cloneTo(a);
            else {
              var f = u * o - s * c;
              if (f <= 0 && o >= 0 && c <= 0) {
                var p = o / (o - c);
                return Le.scale(t._tempV31, p, a), void Le.add(i, a, a);
              }
              var m = h * c - u * l;
              if (m <= 0 && l - h >= 0 && u - c >= 0) {
                var g = (l - h) / (l - h + (u - c));
                return Le.subtract(r, n, a), Le.scale(a, g, a), void Le.add(n, a, a);
              }
              var v = 1 / (m + f + _),
                y = f * v,
                x = _ * v;
              Le.scale(t._tempV30, y, t._tempV35), Le.scale(t._tempV31, x, t._tempV36), Le.add(t._tempV35, t._tempV36, a), Le.add(i, a, a);
            }
          }
        }, t.closestPointPlanePoint = function (e, i, n) {
          var r = e.normal,
            a = Le.dot(r, i) - e.distance;
          Le.scale(r, a, t._tempV30), Le.subtract(i, t._tempV30, n);
        }, t.closestPointBoxPoint = function (e, i, n) {
          Le.max(i, e.min, t._tempV30), Le.min(t._tempV30, e.max, n);
        }, t.closestPointSpherePoint = function (t, e, i) {
          var n = t.center;
          Le.subtract(e, n, i), Le.normalize(i, i), Le.scale(i, t.radius, i), Le.add(i, n, i);
        }, t.closestPointSphereSphere = function (t, e, i) {
          var n = t.center;
          Le.subtract(e.center, n, i), Le.normalize(i, i), Le.scale(i, t.radius, i), Le.add(i, n, i);
        }, n(t, ["_tempV30", function () {
          return this._tempV30 = new Le();
        }, "_tempV31", function () {
          return this._tempV31 = new Le();
        }, "_tempV32", function () {
          return this._tempV32 = new Le();
        }, "_tempV33", function () {
          return this._tempV33 = new Le();
        }, "_tempV34", function () {
          return this._tempV34 = new Le();
        }, "_tempV35", function () {
          return this._tempV35 = new Le();
        }, "_tempV36", function () {
          return this._tempV36 = new Le();
        }]), t;
      }(),
      Ee = (function () {
        function t() {}
        r(t, "laya.d3.math.ContainmentType"), t.Disjoint = 0, t.Contains = 1, t.Intersects = 2;
      }(), function () {
        function t() {}
        return r(t, "laya.d3.math.MathUtils3D"), t.isZero = function (e) {
          return Math.abs(e) < t.zeroTolerance;
        }, t.nearEqual = function (e, i) {
          return !!t.isZero(e - i);
        }, t.fastInvSqrt = function (e) {
          return t.isZero(e) ? e : 1 / Math.sqrt(e);
        }, n(t, ["zeroTolerance", function () {
          return this.zeroTolerance = 1e-6;
        }, "MaxValue", function () {
          return this.MaxValue = 3.40282347e38;
        }, "MinValue", function () {
          return this.MinValue = -3.40282347e38;
        }]), t;
      }()),
      be = function () {
        function t() {
          var t = this.elements = new Float32Array(9);
          t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1;
        }
        r(t, "laya.d3.math.Matrix3x3");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.determinant = function () {
          var t = this.elements,
            e = t[0],
            i = t[1],
            n = t[2],
            r = t[3],
            a = t[4],
            s = t[5],
            o = t[6],
            h = t[7],
            l = t[8];
          return e * (l * a - s * h) + i * (-l * r + s * o) + n * (h * r - a * o);
        }, e.translate = function (t, e) {
          var i = e.elements,
            n = this.elements,
            r = t.elements,
            a = n[0],
            s = n[1],
            o = n[2],
            h = n[3],
            l = n[4],
            u = n[5],
            c = n[6],
            _ = n[7],
            d = n[8],
            f = r[0],
            p = r[1];
          i[0] = a, i[1] = s, i[2] = o, i[3] = h, i[4] = l, i[5] = u, i[6] = f * a + p * h + c, i[7] = f * s + p * l + _, i[8] = f * o + p * u + d;
        }, e.rotate = function (t, e) {
          var i = e.elements,
            n = this.elements,
            r = n[0],
            a = n[1],
            s = n[2],
            o = n[3],
            h = n[4],
            l = n[5],
            u = n[6],
            c = n[7],
            _ = n[8],
            d = Math.sin(t),
            f = Math.cos(t);
          i[0] = f * r + d * o, i[1] = f * a + d * h, i[2] = f * s + d * l, i[3] = f * o - d * r, i[4] = f * h - d * a, i[5] = f * l - d * s, i[6] = u, i[7] = c, i[8] = _;
        }, e.scale = function (t, e) {
          var i = e.elements,
            n = this.elements,
            r = t.elements,
            a = r[0],
            s = r[1];
          i[0] = a * n[0], i[1] = a * n[1], i[2] = a * n[2], i[3] = s * n[3], i[4] = s * n[4], i[5] = s * n[5], i[6] = n[6], i[7] = n[7], i[8] = n[8];
        }, e.invert = function (t) {
          var e = t.elements,
            i = this.elements,
            n = i[0],
            r = i[1],
            a = i[2],
            s = i[3],
            o = i[4],
            h = i[5],
            l = i[6],
            u = i[7],
            c = i[8],
            _ = c * o - h * u,
            d = -c * s + h * l,
            f = u * s - o * l,
            p = n * _ + r * d + a * f;
          p || (t = null), p = 1 / p, e[0] = _ * p, e[1] = (-c * r + a * u) * p, e[2] = (h * r - a * o) * p, e[3] = d * p, e[4] = (c * n - a * l) * p, e[5] = (-h * n + a * s) * p, e[6] = f * p, e[7] = (-u * n + r * l) * p, e[8] = (o * n - r * s) * p;
        }, e.transpose = function (t) {
          var e = t.elements,
            i = this.elements;
          if (t === this) {
            var n = i[1],
              r = i[2],
              a = i[5];
            e[1] = i[3], e[2] = i[6], e[3] = n, e[5] = i[7], e[6] = r, e[7] = a;
          } else e[0] = i[0], e[1] = i[3], e[2] = i[6], e[3] = i[1], e[4] = i[4], e[5] = i[7], e[6] = i[2], e[7] = i[5], e[8] = i[8];
        }, e.identity = function () {
          var t = this.elements;
          t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1;
        }, e.cloneTo = function (t) {
          var e, i, n;
          if (i = this.elements, n = t.elements, i !== n)
            for (e = 0; e < 9; ++e) n[e] = i[e];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, t.createFromTranslation = function (t, e) {
          e.elements;
          var i = t.elements;
          e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 1, e[5] = 0, e[6] = i[0], e[7] = i[1], e[8] = 1;
        }, t.createFromRotation = function (t, e) {
          var i = e.elements,
            n = Math.sin(t),
            r = Math.cos(t);
          i[0] = r, i[1] = n, i[2] = 0, i[3] = -n, i[4] = r, i[5] = 0, i[6] = 0, i[7] = 0, i[8] = 1;
        }, t.createFromScaling = function (t, e) {
          var i = e.elements,
            n = t.elements;
          i[0] = n[0], i[1] = 0, i[2] = 0, i[3] = 0, i[4] = n[1], i[5] = 0, i[6] = 0, i[7] = 0, i[8] = 1;
        }, t.createFromMatrix4x4 = function (t, e) {
          e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[4], e[4] = t[5], e[5] = t[6], e[6] = t[8], e[7] = t[9], e[8] = t[10];
        }, t.multiply = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements,
            s = r[0],
            o = r[1],
            h = r[2],
            l = r[3],
            u = r[4],
            c = r[5],
            _ = r[6],
            d = r[7],
            f = r[8],
            p = a[0],
            m = a[1],
            g = a[2],
            v = a[3],
            y = a[4],
            x = a[5],
            T = a[6],
            S = a[7],
            w = a[8];
          n[0] = p * s + m * l + g * _, n[1] = p * o + m * u + g * d, n[2] = p * h + m * c + g * f, n[3] = v * s + y * l + x * _, n[4] = v * o + y * u + x * d, n[5] = v * h + y * c + x * f, n[6] = T * s + S * l + w * _, n[7] = T * o + S * u + w * d, n[8] = T * h + S * c + w * f;
        }, t.lookAt = function (e, i, n, r) {
          Le.subtract(e, i, t._tempV30), Le.normalize(t._tempV30, t._tempV30), Le.cross(n, t._tempV30, t._tempV31), Le.normalize(t._tempV31, t._tempV31), Le.cross(t._tempV30, t._tempV31, t._tempV32);
          var a = t._tempV30.elements,
            s = t._tempV31.elements,
            o = t._tempV32.elements,
            h = r.elements;
          h[0] = s[0], h[3] = s[1], h[6] = s[2], h[1] = o[0], h[4] = o[1], h[7] = o[2], h[2] = a[0], h[5] = a[1], h[8] = a[2];
        }, t.DEFAULT = new t(), n(t, ["_tempV30", function () {
          return this._tempV30 = new Le();
        }, "_tempV31", function () {
          return this._tempV31 = new Le();
        }, "_tempV32", function () {
          return this._tempV32 = new Le();
        }]), t;
      }(),
      Ce = function () {
        function t(t, e, i, n, r, a, s, o, h, l, u, c, _, d, f, p) {
          void 0 === t && (t = 1), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === r && (r = 0), void 0 === a && (a = 1), void 0 === s && (s = 0), void 0 === o && (o = 0), void 0 === h && (h = 0), void 0 === l && (l = 0), void 0 === u && (u = 1), void 0 === c && (c = 0), void 0 === _ && (_ = 0), void 0 === d && (d = 0), void 0 === f && (f = 0), void 0 === p && (p = 1);
          var m = this.elements = new Float32Array(16);
          m[0] = t, m[1] = e, m[2] = i, m[3] = n, m[4] = r, m[5] = a, m[6] = s, m[7] = o, m[8] = h, m[9] = l, m[10] = u, m[11] = c, m[12] = _, m[13] = d, m[14] = f, m[15] = p;
        }
        r(t, "laya.d3.math.Matrix4x4");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.getElementByRowColumn = function (t, e) {
          if (t < 0 || t > 3) throw new Error("row", "Rows and columns for matrices run from 0 to 3, inclusive.");
          if (e < 0 || e > 3) throw new Error("column", "Rows and columns for matrices run from 0 to 3, inclusive.");
          return this.elements[4 * t + e];
        }, e.setElementByRowColumn = function (t, e, i) {
          if (t < 0 || t > 3) throw new Error("row", "Rows and columns for matrices run from 0 to 3, inclusive.");
          if (e < 0 || e > 3) throw new Error("column", "Rows and columns for matrices run from 0 to 3, inclusive.");
          this.elements[4 * t + e] = i;
        }, e.equalsOtherMatrix = function (t) {
          var e = this.elements,
            i = t.elements;
          return Ee.nearEqual(e[0], i[0]) && Ee.nearEqual(e[1], i[1]) && Ee.nearEqual(e[2], i[2]) && Ee.nearEqual(e[3], i[3]) && Ee.nearEqual(e[4], i[4]) && Ee.nearEqual(e[5], i[5]) && Ee.nearEqual(e[6], i[6]) && Ee.nearEqual(e[7], i[7]) && Ee.nearEqual(e[8], i[8]) && Ee.nearEqual(e[9], i[9]) && Ee.nearEqual(e[10], i[10]) && Ee.nearEqual(e[11], i[11]) && Ee.nearEqual(e[12], i[12]) && Ee.nearEqual(e[13], i[13]) && Ee.nearEqual(e[14], i[14]) && Ee.nearEqual(e[15], i[15]);
        }, e.decomposeTransRotScale = function (e, i, n) {
          var r = t._tempMatrix4x4;
          return this.decomposeTransRotMatScale(e, r, n) ? (De.createFromMatrix4x4(r, i), !0) : (i.identity(), !1);
        }, e.decomposeTransRotMatScale = function (e, i, n) {
          var r = this.elements,
            a = e.elements,
            s = i.elements,
            o = n.elements;
          a[0] = r[12], a[1] = r[13], a[2] = r[14];
          var h = r[0],
            l = r[1],
            u = r[2],
            c = r[4],
            _ = r[5],
            d = r[6],
            f = r[8],
            p = r[9],
            m = r[10],
            g = o[0] = Math.sqrt(h * h + l * l + u * u),
            v = o[1] = Math.sqrt(c * c + _ * _ + d * d),
            y = o[2] = Math.sqrt(f * f + p * p + m * m);
          if (Ee.isZero(g) || Ee.isZero(v) || Ee.isZero(y)) return s[1] = s[2] = s[3] = s[4] = s[6] = s[7] = s[8] = s[9] = s[11] = s[12] = s[13] = s[14] = 0, s[0] = s[5] = s[10] = s[15] = 1, !1;
          var x = t._tempVector0,
            T = x.elements;
          T[0] = f / y, T[1] = p / y, T[2] = m / y;
          var S = t._tempVector1,
            w = S.elements;
          w[0] = h / g, w[1] = l / g, w[2] = u / g;
          var E = t._tempVector2;
          Le.cross(x, S, E);
          var b = t._tempVector1;
          return Le.cross(E, x, b), s[3] = s[7] = s[11] = s[12] = s[13] = s[14] = 0, s[15] = 1, s[0] = b.x, s[1] = b.y, s[2] = b.z, s[4] = E.x, s[5] = E.y, s[6] = E.z, s[8] = x.x, s[9] = x.y, s[10] = x.z, s[0] * h + s[1] * l + s[2] * u < 0 && (o[0] = -g), s[4] * c + s[5] * _ + s[6] * d < 0 && (o[1] = -v), s[8] * f + s[9] * p + s[10] * m < 0 && (o[2] = -y), !0;
        }, e.decomposeYawPitchRoll = function (t) {
          var e = t.elements,
            i = Math.asin(-this.elements[9]);
          e[1] = i;
          Math.cos(i) > Ee.zeroTolerance ? (e[2] = Math.atan2(this.elements[1], this.elements[5]), e[0] = Math.atan2(this.elements[8], this.elements[10])) : (e[2] = Math.atan2(-this.elements[4], this.elements[0]), e[0] = 0);
        }, e.normalize = function () {
          var t = this.elements,
            e = t[0],
            i = t[1],
            n = t[2],
            r = Math.sqrt(e * e + i * i + n * n);
          if (!r) return t[0] = 0, t[1] = 0, void(t[2] = 0);
          1 != r && (r = 1 / r, t[0] = e * r, t[1] = i * r, t[2] = n * r);
        }, e.transpose = function () {
          var t, e;
          return t = this.elements, e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this;
        }, e.invert = function (t) {
          var e = this.elements,
            i = t.elements,
            n = e[0],
            r = e[1],
            a = e[2],
            s = e[3],
            o = e[4],
            h = e[5],
            l = e[6],
            u = e[7],
            c = e[8],
            _ = e[9],
            d = e[10],
            f = e[11],
            p = e[12],
            m = e[13],
            g = e[14],
            v = e[15],
            y = n * h - r * o,
            x = n * l - a * o,
            T = n * u - s * o,
            S = r * l - a * h,
            w = r * u - s * h,
            E = a * u - s * l,
            b = c * m - _ * p,
            C = c * g - d * p,
            M = c * v - f * p,
            I = _ * g - d * m,
            D = _ * v - f * m,
            A = d * v - f * g,
            R = y * A - x * D + T * I + S * M - w * C + E * b;
          0 !== Math.abs(R) && (R = 1 / R, i[0] = (h * A - l * D + u * I) * R, i[1] = (a * D - r * A - s * I) * R, i[2] = (m * E - g * w + v * S) * R, i[3] = (d * w - _ * E - f * S) * R, i[4] = (l * M - o * A - u * C) * R, i[5] = (n * A - a * M + s * C) * R, i[6] = (g * T - p * E - v * x) * R, i[7] = (c * E - d * T + f * x) * R, i[8] = (o * D - h * M + u * b) * R, i[9] = (r * M - n * D - s * b) * R, i[10] = (p * w - m * T + v * y) * R, i[11] = (_ * T - c * w - f * y) * R, i[12] = (h * C - o * I - l * b) * R, i[13] = (n * I - r * C + a * b) * R, i[14] = (m * x - p * S - g * y) * R, i[15] = (c * S - _ * x + d * y) * R);
        }, e.identity = function () {
          var t = this.elements;
          t[1] = t[2] = t[3] = t[4] = t[6] = t[7] = t[8] = t[9] = t[11] = t[12] = t[13] = t[14] = 0, t[0] = t[5] = t[10] = t[15] = 1;
        }, e.cloneTo = function (t) {
          var e, i, n;
          if (i = this.elements, n = t.elements, i !== n)
            for (e = 0; e < 16; ++e) n[e] = i[e];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, e.getTranslationVector = function (t) {
          var e = this.elements,
            i = t.elements;
          i[0] = e[12], i[1] = e[13], i[2] = e[14];
        }, e.setTranslationVector = function (t) {
          var e = this.elements,
            i = t.elements;
          e[12] = i[0], e[13] = i[1], e[14] = i[2];
        }, e.getForward = function (t) {
          var e = this.elements,
            i = t.elements;
          i[0] = -e[8], i[1] = -e[9], i[2] = -e[10];
        }, e.setForward = function (t) {
          var e = this.elements,
            i = t.elements;
          e[8] = -i[0], e[9] = -i[1], e[10] = -i[2];
        }, t.createRotationX = function (t, e) {
          var i = e.elements,
            n = Math.sin(t),
            r = Math.cos(t);
          i[1] = i[2] = i[3] = i[4] = i[7] = i[8] = i[11] = i[12] = i[13] = i[14] = 0, i[0] = i[15] = 1, i[5] = i[10] = r, i[6] = n, i[9] = -n;
        }, t.createRotationY = function (t, e) {
          var i = e.elements,
            n = Math.sin(t),
            r = Math.cos(t);
          i[1] = i[3] = i[4] = i[6] = i[7] = i[9] = i[11] = i[12] = i[13] = i[14] = 0, i[5] = i[15] = 1, i[0] = i[10] = r, i[2] = -n, i[8] = n;
        }, t.createRotationZ = function (t, e) {
          var i = e.elements,
            n = Math.sin(t),
            r = Math.cos(t);
          i[2] = i[3] = i[6] = i[7] = i[8] = i[9] = i[11] = i[12] = i[13] = i[14] = 0, i[10] = i[15] = 1, i[0] = i[5] = r, i[1] = n, i[4] = -n;
        }, t.createRotationYawPitchRoll = function (e, i, n, r) {
          De.createFromYawPitchRoll(e, i, n, t._tempQuaternion), t.createRotationQuaternion(t._tempQuaternion, r);
        }, t.createRotationAxis = function (t, e, i) {
          var n = t.elements,
            r = n[0],
            a = n[1],
            s = n[2],
            o = Math.cos(e),
            h = Math.sin(e),
            l = r * r,
            u = a * a,
            c = s * s,
            _ = r * a,
            d = r * s,
            f = a * s,
            p = i.elements;
          p[3] = p[7] = p[11] = p[12] = p[13] = p[14] = 0, p[15] = 1, p[0] = l + o * (1 - l), p[1] = _ - o * _ + h * s, p[2] = d - o * d - h * a, p[4] = _ - o * _ - h * s, p[5] = u + o * (1 - u), p[6] = f - o * f + h * r, p[8] = d - o * d + h * a, p[9] = f - o * f - h * r, p[10] = c + o * (1 - c);
        }, t.createRotationQuaternion = function (t, e) {
          var i = t.elements,
            n = e.elements,
            r = i[0],
            a = i[1],
            s = i[2],
            o = i[3],
            h = r * r,
            l = a * a,
            u = s * s,
            c = r * a,
            _ = s * o,
            d = s * r,
            f = a * o,
            p = a * s,
            m = r * o;
          n[3] = n[7] = n[11] = n[12] = n[13] = n[14] = 0, n[15] = 1, n[0] = 1 - 2 * (l + u), n[1] = 2 * (c + _), n[2] = 2 * (d - f), n[4] = 2 * (c - _), n[5] = 1 - 2 * (u + h), n[6] = 2 * (p + m), n[8] = 2 * (d + f), n[9] = 2 * (p - m), n[10] = 1 - 2 * (l + h);
        }, t.createTranslate = function (t, e) {
          var i = t.elements,
            n = e.elements;
          n[4] = n[8] = n[1] = n[9] = n[2] = n[6] = n[3] = n[7] = n[11] = 0, n[0] = n[5] = n[10] = n[15] = 1, n[12] = i[0], n[13] = i[1], n[14] = i[2];
        }, t.createScaling = function (t, e) {
          var i = t.elements,
            n = e.elements;
          n[0] = i[0], n[5] = i[1], n[10] = i[2], n[1] = n[4] = n[8] = n[12] = n[9] = n[13] = n[2] = n[6] = n[14] = n[3] = n[7] = n[11] = 0, n[15] = 1;
        }, t.multiply = function (t, e, i) {
          var n, r, a, s, o, h, l, u;
          if (r = i.elements, a = t.elements, s = e.elements, r === s)
            for (s = new Float32Array(16), n = 0; n < 16; ++n) s[n] = r[n];
          for (n = 0; n < 4; n++) o = a[n], h = a[n + 4], l = a[n + 8], u = a[n + 12], r[n] = o * s[0] + h * s[1] + l * s[2] + u * s[3], r[n + 4] = o * s[4] + h * s[5] + l * s[6] + u * s[7], r[n + 8] = o * s[8] + h * s[9] + l * s[10] + u * s[11], r[n + 12] = o * s[12] + h * s[13] + l * s[14] + u * s[15];
        }, t.createFromQuaternion = function (t, e) {
          var i = e.elements,
            n = t.elements,
            r = n[0],
            a = n[1],
            s = n[2],
            o = n[3],
            h = r + r,
            l = a + a,
            u = s + s,
            c = r * h,
            _ = a * h,
            d = a * l,
            f = s * h,
            p = s * l,
            m = s * u,
            g = o * h,
            v = o * l,
            y = o * u;
          i[0] = 1 - d - m, i[1] = _ + y, i[2] = f - v, i[3] = 0, i[4] = _ - y, i[5] = 1 - c - m, i[6] = p + g, i[7] = 0, i[8] = f + v, i[9] = p - g, i[10] = 1 - c - d, i[11] = 0, i[12] = 0, i[13] = 0, i[14] = 0, i[15] = 1;
        }, t.createAffineTransformation = function (t, e, i, n) {
          var r = t.elements,
            a = e.elements,
            s = i.elements,
            o = n.elements,
            h = a[0],
            l = a[1],
            u = a[2],
            c = a[3],
            _ = h + h,
            d = l + l,
            f = u + u,
            p = h * _,
            m = h * d,
            g = h * f,
            v = l * d,
            y = l * f,
            x = u * f,
            T = c * _,
            S = c * d,
            w = c * f,
            E = s[0],
            b = s[1],
            C = s[2];
          o[0] = (1 - (v + x)) * E, o[1] = (m + w) * E, o[2] = (g - S) * E, o[3] = 0, o[4] = (m - w) * b, o[5] = (1 - (p + x)) * b, o[6] = (y + T) * b, o[7] = 0, o[8] = (g + S) * C, o[9] = (y - T) * C, o[10] = (1 - (p + v)) * C, o[11] = 0, o[12] = r[0], o[13] = r[1], o[14] = r[2], o[15] = 1;
        }, t.createLookAt = function (e, i, n, r) {
          var a = r.elements,
            s = t._tempVector0,
            o = t._tempVector1,
            h = t._tempVector2;
          Le.subtract(e, i, h), Le.normalize(h, h), Le.cross(n, h, s), Le.normalize(s, s), Le.cross(h, s, o), r.identity(), a[0] = s.x, a[4] = s.y, a[8] = s.z, a[1] = o.x, a[5] = o.y, a[9] = o.z, a[2] = h.x, a[6] = h.y, a[10] = h.z, a[12] = -Le.dot(s, e), a[13] = -Le.dot(o, e), a[14] = -Le.dot(h, e);
        }, t.createPerspective = function (t, e, i, n, r) {
          var a = r.elements,
            s = 1 / Math.tan(t / 2),
            o = 1 / (i - n);
          a[0] = s / e, a[5] = s, a[10] = (n + i) * o, a[11] = -1, a[14] = 2 * n * i * o, a[1] = a[2] = a[3] = a[4] = a[6] = a[7] = a[8] = a[9] = a[12] = a[13] = a[15] = 0;
        }, t.createOrthoOffCenterRH = function (t, e, i, n, r, a, s) {
          var o = s.elements,
            h = 1 / (t - e),
            l = 1 / (i - n),
            u = 1 / (r - a);
          o[1] = o[2] = o[3] = o[4] = o[6] = o[7] = o[8] = o[9] = o[11] = 0, o[15] = 1, o[0] = -2 * h, o[5] = -2 * l, o[10] = 2 * u, o[12] = (t + e) * h, o[13] = (n + i) * l, o[14] = (a + r) * u;
        }, t.translation = function (t, e) {
          var i = t.elements,
            n = e.elements;
          n[0] = n[5] = n[10] = n[15] = 1, n[12] = i[0], n[13] = i[1], n[14] = i[2];
        }, n(t, ["_tempMatrix4x4", function () {
          return this._tempMatrix4x4 = new t();
        }, "_tempVector0", function () {
          return this._tempVector0 = new Le();
        }, "_tempVector1", function () {
          return this._tempVector1 = new Le();
        }, "_tempVector2", function () {
          return this._tempVector2 = new Le();
        }, "_tempQuaternion", function () {
          return this._tempQuaternion = new De();
        }, "DEFAULT", function () {
          return this.DEFAULT = new t();
        }, "ZERO", function () {
          return this.ZERO = new t(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        }]), t;
      }(),
      Me = function () {
        function t(t, e) {
          this.extents = null, this.transformation = null, this.extents = t, this.transformation = e;
        }
        r(t, "laya.d3.math.OrientedBoundBox");
        var e = t.prototype;
        return e.getCorners = function (e) {
          var i = t._tempV30.elements,
            n = t._tempV31.elements,
            r = t._tempV32.elements,
            a = this.extents.elements;
          i[0] = a[0], i[1] = i[2] = 0, n[1] = a[1], n[0] = n[2] = 0, r[2] = a[2], r[0] = r[1] = 0, Le.TransformNormal(t._tempV30, this.transformation, t._tempV30), Le.TransformNormal(t._tempV31, this.transformation, t._tempV31), Le.TransformNormal(t._tempV32, this.transformation, t._tempV32);
          var s = t._tempV33;
          this.transformation.getTranslationVector(s), e.length = 8, Le.add(s, t._tempV30, t._tempV34), Le.add(t._tempV34, t._tempV31, t._tempV34), Le.add(t._tempV34, t._tempV32, e[0]), Le.add(s, t._tempV30, t._tempV34), Le.add(t._tempV34, t._tempV31, t._tempV34), Le.subtract(t._tempV34, t._tempV32, e[1]), Le.subtract(s, t._tempV30, t._tempV34), Le.add(t._tempV34, t._tempV31, t._tempV34), Le.subtract(t._tempV34, t._tempV32, e[2]), Le.subtract(s, t._tempV30, t._tempV34), Le.add(t._tempV34, t._tempV31, t._tempV34), Le.add(t._tempV34, t._tempV32, e[3]), Le.add(s, t._tempV30, t._tempV34), Le.subtract(t._tempV34, t._tempV31, t._tempV34), Le.add(t._tempV34, t._tempV32, e[4]), Le.add(s, t._tempV30, t._tempV34), Le.subtract(t._tempV34, t._tempV31, t._tempV34), Le.subtract(t._tempV34, t._tempV32, e[5]), Le.subtract(s, t._tempV30, t._tempV34), Le.subtract(t._tempV34, t._tempV31, t._tempV34), Le.subtract(t._tempV34, t._tempV32, e[6]), Le.subtract(s, t._tempV30, t._tempV34), Le.subtract(t._tempV34, t._tempV31, t._tempV34), Le.add(t._tempV34, t._tempV32, e[7]);
        }, e.transform = function (t) {
          Ce.multiply(this.transformation, t, this.transformation);
        }, e.scale = function (t) {
          Le.multiply(this.extents, t, this.extents);
        }, e.translate = function (e) {
          this.transformation.getTranslationVector(t._tempV30), Le.add(t._tempV30, e, t._tempV31), this.transformation.setTranslationVector(t._tempV31);
        }, e.Size = function (t) {
          Le.scale(this.extents, 2, t);
        }, e.getSize = function (e) {
          var i = this.extents.elements;
          t._tempV30.x = i[0], t._tempV31.y = i[1], t._tempV32.z = i[2], Le.TransformNormal(t._tempV30, this.transformation, t._tempV30), Le.TransformNormal(t._tempV31, this.transformation, t._tempV31), Le.TransformNormal(t._tempV31, this.transformation, t._tempV32);
          var n = e.elements;
          n[0] = Le.scalarLength(t._tempV30), n[1] = Le.scalarLength(t._tempV31), n[2] = Le.scalarLength(t._tempV32);
        }, e.getSizeSquared = function (e) {
          var i = this.extents.elements;
          t._tempV30.x = i[0], t._tempV31.y = i[1], t._tempV32.z = i[2], Le.TransformNormal(t._tempV30, this.transformation, t._tempV30), Le.TransformNormal(t._tempV31, this.transformation, t._tempV31), Le.TransformNormal(t._tempV31, this.transformation, t._tempV32);
          var n = e.elements;
          n[0] = Le.scalarLengthSquared(t._tempV30), n[1] = Le.scalarLengthSquared(t._tempV31), n[2] = Le.scalarLengthSquared(t._tempV32);
        }, e.getCenter = function (t) {
          this.transformation.getTranslationVector(t);
        }, e.containsPoint = function (e) {
          var i = this.extents.elements,
            n = i[0],
            r = i[1],
            a = i[2];
          this.transformation.invert(t._tempM0), Le.transformCoordinate(e, t._tempM0, t._tempV30);
          var s = t._tempV30.elements,
            o = Math.abs(s[0]),
            h = Math.abs(s[1]),
            l = Math.abs(s[2]);
          return Ee.nearEqual(o, n) && Ee.nearEqual(h, r) && Ee.nearEqual(l, a) ? 2 : o < n && h < r && l < a ? 1 : 0;
        }, e.containsPoints = function (e) {
          var i = this.extents.elements,
            n = i[0],
            r = i[1],
            a = i[2];
          this.transformation.invert(t._tempM0);
          for (var s = !0, o = !1, h = 0; h < e.length; h++) {
            Le.transformCoordinate(e[h], t._tempM0, t._tempV30);
            var l = t._tempV30.elements,
              u = Math.abs(l[0]),
              c = Math.abs(l[1]),
              _ = Math.abs(l[2]);
            Ee.nearEqual(u, n) && Ee.nearEqual(c, r) && Ee.nearEqual(_, a) && (o = !0), u < n && c < r && _ < a ? o = !0 : s = !1;
          }
          return s ? 1 : o ? 2 : 0;
        }, e.containsSphere = function (e, i) {
          void 0 === i && (i = !1);
          var n = this.extents.elements,
            r = n[0],
            a = n[1],
            s = n[2],
            o = e.radius;
          this.transformation.invert(t._tempM0), Le.transformCoordinate(e.center, t._tempM0, t._tempV30);
          var h = NaN;
          i ? h = o : (Le.scale(Le.UnitX, o, t._tempV31), Le.TransformNormal(t._tempV31, t._tempM0, t._tempV31), h = Le.scalarLength(t._tempV31)), Le.scale(this.extents, -1, t._tempV32), Le.Clamp(t._tempV30, t._tempV32, this.extents, t._tempV33);
          if (Le.distanceSquared(t._tempV30, t._tempV33) > h * h) return 0;
          var l = t._tempV30.elements,
            u = l[0],
            c = l[1],
            _ = l[2],
            d = t._tempV32.elements,
            f = d[0],
            p = d[1],
            m = d[2];
          return f + h <= u && u <= r - h && r - f > h && p + h <= c && c <= a - h && a - p > h && m + h <= _ && _ <= s - h && s - m > h ? 1 : 2;
        }, e.containsOrientedBoundBox = function (e) {
          var i = 0,
            n = 0;
          e.getCorners(t._corners);
          var r = this.containsPoints(t._corners);
          if (0 != r) return r;
          var a = this.extents.elements;
          e.extents.cloneTo(t._tempV35);
          var s = t._tempV35.elements;
          t._getRows(this.transformation, t._rows1), t._getRows(e.transformation, t._rows2);
          var o = NaN,
            h = NaN,
            l = NaN;
          for (i = 0; i < 4; i++)
            for (n = 0; n < 4; n++) 3 == i || 3 == n ? (t._tempM0.setElementByRowColumn(i, n, 0), t._tempM1.setElementByRowColumn(i, n, 0)) : (l = Le.dot(t._rows1[i], t._rows2[n]), t._tempM0.setElementByRowColumn(i, n, l), t._tempM1.setElementByRowColumn(i, n, Math.abs(l)));
          e.getCenter(t._tempV34), this.getCenter(t._tempV36), Le.subtract(t._tempV34, t._tempV36, t._tempV30);
          var u = t._tempV31.elements;
          u[0] = Le.dot(t._tempV30, t._rows1[0]), u[1] = Le.dot(t._tempV30, t._rows1[1]), u[2] = Le.dot(t._tempV30, t._rows1[2]);
          var c = t._tempV32.elements,
            _ = t._tempV33.elements;
          for (i = 0; i < 3; i++)
            if (c[0] = t._tempM1.getElementByRowColumn(i, 0), c[1] = t._tempM1.getElementByRowColumn(i, 1), c[2] = t._tempM1.getElementByRowColumn(i, 2), o = a[i], h = Le.dot(t._tempV35, t._tempV32), Math.abs(u[i]) > o + h) return 0;
          for (n = 0; n < 3; n++)
            if (c[0] = t._tempM1.getElementByRowColumn(0, n), c[1] = t._tempM1.getElementByRowColumn(1, n), c[2] = t._tempM1.getElementByRowColumn(2, n), _[0] = t._tempM0.getElementByRowColumn(0, n), _[1] = t._tempM0.getElementByRowColumn(1, n), _[2] = t._tempM0.getElementByRowColumn(2, n), o = Le.dot(this.extents, t._tempV32), h = s[n], Math.abs(Le.dot(t._tempV31, t._tempV33)) > o + h) return 0;
          for (i = 0; i < 3; i++)
            for (n = 0; n < 3; n++) {
              var d = (i + 1) % 3,
                f = (i + 2) % 3,
                p = (n + 1) % 3,
                m = (n + 2) % 3;
              if (o = a[d] * t._tempM1.getElementByRowColumn(f, n) + a[f] * t._tempM1.getElementByRowColumn(d, n), h = s[p] * t._tempM1.getElementByRowColumn(i, m) + s[m] * t._tempM1.getElementByRowColumn(i, p), Math.abs(u[f] * t._tempM0.getElementByRowColumn(d, n) - u[d] * t._tempM0.getElementByRowColumn(f, n)) > o + h) return 0;
            }
          return 2;
        }, e.containsLine = function (e, i) {
          t._corners[0] = e, t._corners[1] = i;
          var n = this.containsPoints(t._corners);
          if (0 != n) return n;
          var r = this.extents.elements,
            a = r[0],
            s = r[1],
            o = r[2];
          this.transformation.invert(t._tempM0), Le.transformCoordinate(e, t._tempM0, t._tempV30), Le.transformCoordinate(i, t._tempM0, t._tempV31), Le.add(t._tempV30, t._tempV31, t._tempV32), Le.scale(t._tempV32, .5, t._tempV32), Le.subtract(t._tempV30, t._tempV32, t._tempV33);
          var h = t._tempV33.elements,
            l = h[0],
            u = h[1],
            c = h[2],
            _ = t._tempV34.elements,
            d = _[0] = Math.abs(h[0]),
            f = _[1] = Math.abs(h[1]),
            p = _[2] = Math.abs(h[2]),
            m = t._tempV32.elements,
            g = m[0],
            v = m[1],
            y = m[2];
          return Math.abs(g) > a + d ? 0 : Math.abs(v) > s + f ? 0 : Math.abs(y) > o + p ? 0 : Math.abs(v * c - y * u) > s * p + o * f ? 0 : Math.abs(g * c - y * l) > a * p + o * d ? 0 : Math.abs(g * u - v * l) > a * f + s * d ? 0 : 2;
        }, e.containsBoundBox = function (e) {
          var i = 0,
            n = 0,
            r = e.min,
            a = e.max;
          e.getCorners(t._corners);
          var s = this.containsPoints(t._corners);
          if (0 != s) return s;
          Le.subtract(a, r, t._tempV30), Le.scale(t._tempV30, .5, t._tempV30), Le.add(r, t._tempV30, t._tempV30), Le.subtract(a, t._tempV30, t._tempV31);
          var o = this.extents.elements,
            h = t._tempV31.elements;
          t._getRows(this.transformation, t._rows1), this.transformation.invert(t._tempM0);
          var l = NaN,
            u = NaN;
          for (i = 0; i < 3; i++)
            for (n = 0; n < 3; n++) t._tempM1.setElementByRowColumn(i, n, Math.abs(t._tempM0.getElementByRowColumn(i, n)));
          this.getCenter(t._tempV35), Le.subtract(t._tempV30, t._tempV35, t._tempV32);
          var c = t._tempV31.elements;
          c[0] = Le.dot(t._tempV32, t._rows1[0]), c[1] = Le.dot(t._tempV32, t._rows1[1]), c[2] = Le.dot(t._tempV32, t._rows1[2]);
          var _ = t._tempV33.elements,
            d = t._tempV34.elements;
          for (i = 0; i < 3; i++)
            if (_[0] = t._tempM1.getElementByRowColumn(i, 0), _[1] = t._tempM1.getElementByRowColumn(i, 1), _[2] = t._tempM1.getElementByRowColumn(i, 2), l = o[i], u = Le.dot(t._tempV31, t._tempV33), Math.abs(c[i]) > l + u) return 0;
          for (n = 0; n < 3; n++)
            if (_[0] = t._tempM1.getElementByRowColumn(0, n), _[1] = t._tempM1.getElementByRowColumn(1, n), _[2] = t._tempM1.getElementByRowColumn(2, n), d[0] = t._tempM0.getElementByRowColumn(0, n), d[1] = t._tempM0.getElementByRowColumn(1, n), d[2] = t._tempM0.getElementByRowColumn(2, n), l = Le.dot(this.extents, t._tempV33), u = h[n], Math.abs(Le.dot(t._tempV31, t._tempV34)) > l + u) return 0;
          for (i = 0; i < 3; i++)
            for (n = 0; n < 3; n++) {
              var f = (i + 1) % 3,
                p = (i + 2) % 3,
                m = (n + 1) % 3,
                g = (n + 2) % 3;
              if (l = o[f] * t._tempM1.getElementByRowColumn(p, n) + o[p] * t._tempM1.getElementByRowColumn(f, n), u = h[m] * t._tempM1.getElementByRowColumn(i, g) + h[g] * t._tempM1.getElementByRowColumn(i, m), Math.abs(c[p] * t._tempM0.getElementByRowColumn(f, n) - c[f] * t._tempM0.getElementByRowColumn(p, n)) > l + u) return 0;
            }
          return 2;
        }, e.intersectsRay = function (e, i) {
          Le.scale(this.extents, -1, t._tempV30), this.transformation.invert(t._tempM0), Le.TransformNormal(e.direction, t._tempM0, t._ray.direction), Le.transformCoordinate(e.origin, t._tempM0, t._ray.origin), t._boxBound1.min = t._tempV30, t._boxBound1.max = this.extents;
          var n = we.intersectsRayAndBoxRP(t._ray, t._boxBound1, i);
          return -1 !== n && Le.transformCoordinate(i, this.transformation, i), n;
        }, e._getLocalCorners = function (e) {
          e.length = 8;
          var i = this.extents.elements;
          t._tempV30.x = i[0], t._tempV31.y = i[1], t._tempV32.z = i[2], Le.add(t._tempV30, t._tempV31, t._tempV33), Le.add(t._tempV33, t._tempV32, e[0]), Le.add(t._tempV30, t._tempV31, t._tempV33), Le.subtract(t._tempV33, t._tempV32, e[1]), Le.subtract(t._tempV31, t._tempV30, t._tempV33), Le.subtract(t._tempV33, t._tempV30, e[2]), Le.subtract(t._tempV31, t._tempV30, t._tempV33), Le.add(t._tempV33, t._tempV32, e[3]), Le.subtract(t._tempV30, t._tempV31, t._tempV33), Le.add(t._tempV33, t._tempV32, e[4]), Le.subtract(t._tempV30, t._tempV31, t._tempV33), Le.subtract(t._tempV33, t._tempV32, e[5]), Le.scale(e[0], -1, e[6]), Le.subtract(t._tempV32, t._tempV30, t._tempV33), Le.subtract(t._tempV33, t._tempV31, e[7]);
        }, e.equals = function (t) {
          return this.extents == t.extents && this.transformation == t.transformation;
        }, e.cloneTo = function (t) {
          var e = t;
          this.extents.cloneTo(e.extents), this.transformation.cloneTo(e.transformation);
        }, t.createByBoundBox = function (e, i) {
          var n = e.min,
            r = e.max;
          Le.subtract(r, n, t._tempV30), Le.scale(t._tempV30, .5, t._tempV30), Le.add(n, t._tempV30, t._tempV31), Le.subtract(r, t._tempV31, t._tempV32), Ce.translation(t._tempV31, t._tempM0);
          var a = t._tempV32.clone(),
            s = t._tempM0.clone();
          i.extents = a, i.transformation = s;
        }, t.createByMinAndMaxVertex = function (e, i) {
          Le.subtract(i, e, t._tempV30), Le.scale(t._tempV30, .5, t._tempV30), Le.add(e, t._tempV30, t._tempV31), Le.subtract(i, t._tempV31, t._tempV32), Ce.translation(t._tempV31, t._tempM0);
          return new t(t._tempV32, t._tempM0);
        }, t._getRows = function (t, e) {
          e.length = 3;
          var i = t.elements,
            n = e[0].elements;
          n[0] = i[0], n[1] = i[1], n[2] = i[2];
          var r = e[1].elements;
          r[0] = i[4], r[1] = i[5], r[2] = i[6];
          var a = e[2].elements;
          a[0] = i[8], a[1] = i[9], a[2] = i[10];
        }, t.getObbtoObbMatrix4x4 = function (e, i, n, r) {
          var a = e.transformation,
            s = i.transformation;
          if (n) {
            t._getRows(a, t._rows1), t._getRows(s, t._rows2);
            for (var o = 0; o < 3; o++)
              for (var h = 0; h < 3; h++) r.setElementByRowColumn(o, h, Le.dot(t._rows2[o], t._rows1[h]));
            i.getCenter(t._tempV30), e.getCenter(t._tempV31), Le.subtract(t._tempV30, t._tempV31, t._tempV32);
            var l = r.elements;
            l[12] = Le.dot(t._tempV32, t._rows1[0]), l[13] = Le.dot(t._tempV32, t._rows1[1]), l[14] = Le.dot(t._tempV32, t._rows1[2]), l[15] = 1;
          } else a.invert(t._tempM0), Ce.multiply(s, t._tempM0, r);
        }, t.merge = function (e, i, n) {
          var r = e.extents,
            a = e.transformation;
          t.getObbtoObbMatrix4x4(e, i, n, t._tempM0), i._getLocalCorners(t._corners), Le.transformCoordinate(t._corners[0], t._tempM0, t._corners[0]), Le.transformCoordinate(t._corners[1], t._tempM0, t._corners[1]), Le.transformCoordinate(t._corners[2], t._tempM0, t._corners[2]), Le.transformCoordinate(t._corners[3], t._tempM0, t._corners[3]), Le.transformCoordinate(t._corners[4], t._tempM0, t._corners[4]), Le.transformCoordinate(t._corners[5], t._tempM0, t._corners[5]), Le.transformCoordinate(t._corners[6], t._tempM0, t._corners[6]), Le.transformCoordinate(t._corners[7], t._tempM0, t._corners[7]), Le.scale(r, -1, t._boxBound1.min), r.cloneTo(t._boxBound1.max), xe.createfromPoints(t._corners, t._boxBound2), xe.merge(t._boxBound2, t._boxBound1, t._boxBound3);
          var s = t._boxBound3.min,
            o = t._boxBound3.max;
          Le.subtract(o, s, t._tempV30), Le.scale(t._tempV30, .5, t._tempV30), Le.add(s, t._tempV30, t._tempV32), Le.subtract(o, t._tempV32, r), Le.transformCoordinate(t._tempV32, a, t._tempV33);
        }, n(t, ["_tempV30", function () {
          return this._tempV30 = new Le();
        }, "_tempV31", function () {
          return this._tempV31 = new Le();
        }, "_tempV32", function () {
          return this._tempV32 = new Le();
        }, "_tempV33", function () {
          return this._tempV33 = new Le();
        }, "_tempV34", function () {
          return this._tempV34 = new Le();
        }, "_tempV35", function () {
          return this._tempV35 = new Le();
        }, "_tempV36", function () {
          return this._tempV36 = new Le();
        }, "_tempM0", function () {
          return this._tempM0 = new Ce();
        }, "_tempM1", function () {
          return this._tempM1 = new Ce();
        }, "_corners", function () {
          return this._corners = [new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le()];
        }, "_rows1", function () {
          return this._rows1 = [new Le(), new Le(), new Le()];
        }, "_rows2", function () {
          return this._rows2 = [new Le(), new Le(), new Le()];
        }, "_ray", function () {
          return this._ray = new Re(new Le(), new Le());
        }, "_boxBound1", function () {
          return this._boxBound1 = new xe(new Le(), new Le());
        }, "_boxBound2", function () {
          return this._boxBound2 = new xe(new Le(), new Le());
        }, "_boxBound3", function () {
          return this._boxBound3 = new xe(new Le(), new Le());
        }]), t;
      }(),
      Ie = function () {
        function t(t, e) {
          this.normal = null, this.distance = NaN, void 0 === e && (e = 0), this.normal = t, this.distance = e;
        }
        r(t, "laya.d3.math.Plane");
        return t.prototype.normalize = function () {
          var t = this.normal.elements,
            e = t[0],
            i = t[1],
            n = t[2],
            r = 1 / Math.sqrt(e * e + i * i + n * n);
          t[0] = e * r, t[1] = i * r, t[2] = n * r, this.distance *= r;
        }, t.createPlaneBy3P = function (e, i, n) {
          var r = e.elements,
            a = i.elements,
            s = n.elements,
            o = a[0] - r[0],
            h = a[1] - r[1],
            l = a[2] - r[2],
            u = s[0] - r[0],
            c = s[1] - r[1],
            _ = s[2] - r[2],
            d = h * _ - l * c,
            f = l * u - o * _,
            p = o * c - h * u,
            m = 1 / Math.sqrt(d * d + f * f + p * p),
            g = d * m,
            v = f * m,
            y = p * m,
            x = t._TEMPVec3.elements;
          x[0] = g, x[1] = v, x[2] = y;
          var T = -(g * r[0] + v * r[1] + y * r[2]);
          return new t(t._TEMPVec3, T);
        }, t.PlaneIntersectionType_Back = 0, t.PlaneIntersectionType_Front = 1, t.PlaneIntersectionType_Intersecting = 2, n(t, ["_TEMPVec3", function () {
          return this._TEMPVec3 = new Le();
        }]), t;
      }(),
      De = function () {
        function t(t, e, i, n) {
          this.elements = new Float32Array(4), void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 1), this.elements[0] = t, this.elements[1] = e, this.elements[2] = i, this.elements[3] = n;
        }
        r(t, "laya.d3.math.Quaternion");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.scaling = function (t, e) {
          var i = e.elements,
            n = this.elements;
          i[0] = n[0] * t, i[1] = n[1] * t, i[2] = n[2] * t, i[3] = n[3] * t;
        }, e.normalize = function (t) {
          var e = t.elements,
            i = this.elements,
            n = i[0],
            r = i[1],
            a = i[2],
            s = i[3],
            o = n * n + r * r + a * a + s * s;
          o > 0 && (o = 1 / Math.sqrt(o), e[0] = n * o, e[1] = r * o, e[2] = a * o, e[3] = s * o);
        }, e.length = function () {
          var t = this.elements,
            e = t[0],
            i = t[1],
            n = t[2],
            r = t[3];
          return Math.sqrt(e * e + i * i + n * n + r * r);
        }, e.rotateX = function (t, e) {
          var i = e.elements,
            n = this.elements;
          t *= .5;
          var r = n[0],
            a = n[1],
            s = n[2],
            o = n[3],
            h = Math.sin(t),
            l = Math.cos(t);
          i[0] = r * l + o * h, i[1] = a * l + s * h, i[2] = s * l - a * h, i[3] = o * l - r * h;
        }, e.rotateY = function (t, e) {
          var i = e.elements,
            n = this.elements;
          t *= .5;
          var r = n[0],
            a = n[1],
            s = n[2],
            o = n[3],
            h = Math.sin(t),
            l = Math.cos(t);
          i[0] = r * l - s * h, i[1] = a * l + o * h, i[2] = s * l + r * h, i[3] = o * l - a * h;
        }, e.rotateZ = function (t, e) {
          var i = e.elements,
            n = this.elements;
          t *= .5;
          var r = n[0],
            a = n[1],
            s = n[2],
            o = n[3],
            h = Math.sin(t),
            l = Math.cos(t);
          i[0] = r * l + a * h, i[1] = a * l - r * h, i[2] = s * l + o * h, i[3] = o * l - s * h;
        }, e.getYawPitchRoll = function (e) {
          Le.transformQuat(Le.ForwardRH, this, t.TEMPVector31), Le.transformQuat(Le.Up, this, t.TEMPVector32);
          var i = t.TEMPVector32.elements;
          t.angleTo(Le.ZERO, t.TEMPVector31, t.TEMPVector33);
          var n = t.TEMPVector33.elements;
          n[0] == Math.PI / 2 ? (n[1] = t.arcTanAngle(i[2], i[0]), n[2] = 0) : n[0] == -Math.PI / 2 ? (n[1] = t.arcTanAngle(-i[2], -i[0]), n[2] = 0) : (Ce.createRotationY(-n[1], t.TEMPMatrix0), Ce.createRotationX(-n[0], t.TEMPMatrix1), Le.transformCoordinate(t.TEMPVector32, t.TEMPMatrix0, t.TEMPVector32), Le.transformCoordinate(t.TEMPVector32, t.TEMPMatrix1, t.TEMPVector32), n[2] = t.arcTanAngle(i[1], -i[0])), n[1] <= -Math.PI && (n[1] = Math.PI), n[2] <= -Math.PI && (n[2] = Math.PI), n[1] >= Math.PI && n[2] >= Math.PI && (n[1] = 0, n[2] = 0, n[0] = Math.PI - n[0]);
          var r = e.elements;
          r[0] = n[1], r[1] = n[0], r[2] = n[2];
        }, e.invert = function (t) {
          var e = t.elements,
            i = this.elements,
            n = i[0],
            r = i[1],
            a = i[2],
            s = i[3],
            o = n * n + r * r + a * a + s * s,
            h = o ? 1 / o : 0;
          e[0] = -n * h, e[1] = -r * h, e[2] = -a * h, e[3] = s * h;
        }, e.identity = function () {
          var t = this.elements;
          t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 1;
        }, e.fromArray = function (t, e) {
          void 0 === e && (e = 0), this.elements[0] = t[e + 0], this.elements[1] = t[e + 1], this.elements[2] = t[e + 2], this.elements[3] = t[e + 3];
        }, e.cloneTo = function (t) {
          var e, i, n;
          if (i = this.elements, n = t.elements, i !== n)
            for (e = 0; e < 4; ++e) n[e] = i[e];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, e.equals = function (t) {
          var e = this.elements,
            i = t.elements;
          return Ee.nearEqual(e[0], i[0]) && Ee.nearEqual(e[1], i[1]) && Ee.nearEqual(e[2], i[2]) && Ee.nearEqual(e[3], i[3]);
        }, e.lengthSquared = function () {
          var t = this.elements[0],
            e = this.elements[1],
            i = this.elements[2],
            n = this.elements[3];
          return t * t + e * e + i * i + n * n;
        }, a(0, e, "x", function () {
          return this.elements[0];
        }), a(0, e, "y", function () {
          return this.elements[1];
        }), a(0, e, "z", function () {
          return this.elements[2];
        }), a(0, e, "w", function () {
          return this.elements[3];
        }), t.createFromYawPitchRoll = function (t, e, i, n) {
          var r = .5 * i,
            a = .5 * e,
            s = .5 * t,
            o = Math.sin(r),
            h = Math.cos(r),
            l = Math.sin(a),
            u = Math.cos(a),
            c = Math.sin(s),
            _ = Math.cos(s),
            d = n.elements;
          d[0] = _ * l * h + c * u * o, d[1] = c * u * h - _ * l * o, d[2] = _ * u * o - c * l * h, d[3] = _ * u * h + c * l * o;
        }, t.multiply = function (t, e, i) {
          var n = t.elements,
            r = e.elements,
            a = i.elements,
            s = n[0],
            o = n[1],
            h = n[2],
            l = n[3],
            u = r[0],
            c = r[1],
            _ = r[2],
            d = r[3],
            f = o * _ - h * c,
            p = h * u - s * _,
            m = s * c - o * u,
            g = s * u + o * c + h * _;
          a[0] = s * d + u * l + f, a[1] = o * d + c * l + p, a[2] = h * d + _ * l + m, a[3] = l * d - g;
        }, t.arcTanAngle = function (t, e) {
          return 0 == t ? 1 == e ? Math.PI / 2 : -Math.PI / 2 : t > 0 ? Math.atan(e / t) : t < 0 ? e > 0 ? Math.atan(e / t) + Math.PI : Math.atan(e / t) - Math.PI : 0;
        }, t.angleTo = function (e, i, n) {
          Le.subtract(i, e, t.TEMPVector30), Le.normalize(t.TEMPVector30, t.TEMPVector30), n.elements[0] = Math.asin(t.TEMPVector30.y), n.elements[1] = t.arcTanAngle(-t.TEMPVector30.z, -t.TEMPVector30.x);
        }, t.createFromAxisAngle = function (t, e, i) {
          var n = i.elements,
            r = t.elements;
          e *= .5;
          var a = Math.sin(e);
          n[0] = a * r[0], n[1] = a * r[1], n[2] = a * r[2], n[3] = Math.cos(e);
        }, t.createFromMatrix3x3 = function (t, e) {
          var i, n = e.elements,
            r = t.elements,
            a = r[0] + r[4] + r[8];
          if (a > 0) i = Math.sqrt(a + 1), n[3] = .5 * i, i = .5 / i, n[0] = (r[5] - r[7]) * i, n[1] = (r[6] - r[2]) * i, n[2] = (r[1] - r[3]) * i;
          else {
            var s = 0;
            r[4] > r[0] && (s = 1), r[8] > r[3 * s + s] && (s = 2);
            var o = (s + 1) % 3,
              h = (s + 2) % 3;
            i = Math.sqrt(r[3 * s + s] - r[3 * o + o] - r[3 * h + h] + 1), n[s] = .5 * i, i = .5 / i, n[3] = (r[3 * o + h] - r[3 * h + o]) * i, n[o] = (r[3 * o + s] + r[3 * s + o]) * i, n[h] = (r[3 * h + s] + r[3 * s + h]) * i;
          }
        }, t.createFromMatrix4x4 = function (t, e) {
          var i, n, r = t.elements,
            a = e.elements,
            s = r[0] + r[5] + r[10];
          s > 0 ? (i = Math.sqrt(s + 1), a[3] = .5 * i, i = .5 / i, a[0] = (r[6] - r[9]) * i, a[1] = (r[8] - r[2]) * i, a[2] = (r[1] - r[4]) * i) : r[0] >= r[5] && r[0] >= r[10] ? (n = .5 / (i = Math.sqrt(1 + r[0] - r[5] - r[10])), a[0] = .5 * i, a[1] = (r[1] + r[4]) * n, a[2] = (r[2] + r[8]) * n, a[3] = (r[6] - r[9]) * n) : r[5] > r[10] ? (n = .5 / (i = Math.sqrt(1 + r[5] - r[0] - r[10])), a[0] = (r[4] + r[1]) * n, a[1] = .5 * i, a[2] = (r[9] + r[6]) * n, a[3] = (r[8] - r[2]) * n) : (n = .5 / (i = Math.sqrt(1 + r[10] - r[0] - r[5])), a[0] = (r[8] + r[2]) * n, a[1] = (r[9] + r[6]) * n, a[2] = .5 * i, a[3] = (r[1] - r[4]) * n);
        }, t.slerp = function (t, e, i, n) {
          var r, a, s, o, h, l = t.elements,
            u = e.elements,
            c = n.elements,
            _ = l[0],
            d = l[1],
            f = l[2],
            p = l[3],
            m = u[0],
            g = u[1],
            v = u[2],
            y = u[3];
          return (a = _ * m + d * g + f * v + p * y) < 0 && (a = -a, m = -m, g = -g, v = -v, y = -y), 1 - a > 1e-6 ? (r = Math.acos(a), s = Math.sin(r), o = Math.sin((1 - i) * r) / s, h = Math.sin(i * r) / s) : (o = 1 - i, h = i), c[0] = o * _ + h * m, c[1] = o * d + h * g, c[2] = o * f + h * v, c[3] = o * p + h * y, c;
        }, t.lerp = function (t, e, i, n) {
          var r = n.elements,
            a = t.elements,
            s = e.elements,
            o = a[0],
            h = a[1],
            l = a[2],
            u = a[3];
          r[0] = o + i * (s[0] - o), r[1] = h + i * (s[1] - h), r[2] = l + i * (s[2] - l), r[3] = u + i * (s[3] - u);
        }, t.add = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = r[0] + a[0], n[1] = r[1] + a[1], n[2] = r[2] + a[2], n[3] = r[3] + a[3];
        }, t.dot = function (t, e) {
          var i = t.elements,
            n = e.elements;
          return i[0] * n[0] + i[1] * n[1] + i[2] * n[2] + i[3] * n[3];
        }, t.rotationLookAt = function (e, i, n) {
          t.lookAt(Le.ZERO, e, i, n);
        }, t.lookAt = function (e, i, n, r) {
          be.lookAt(e, i, n, t._tempMatrix3x3), t.rotationMatrix(t._tempMatrix3x3, r);
        }, t.invert = function (t, e) {
          var i = t.elements,
            n = e.elements,
            r = t.lengthSquared();
          Ee.isZero(r) || (r = 1 / r, n[0] = -i[0] * r, n[1] = -i[1] * r, n[2] = -i[2] * r, n[3] = i[3] * r);
        }, t.rotationMatrix = function (t, e) {
          var i = t.elements,
            n = i[0],
            r = i[1],
            a = i[2],
            s = i[3],
            o = i[4],
            h = i[5],
            l = i[6],
            u = i[7],
            c = i[8],
            _ = e.elements,
            d = NaN,
            f = NaN,
            p = n + o + c;
          p > 0 ? (d = Math.sqrt(p + 1), _[3] = .5 * d, d = .5 / d, _[0] = (h - u) * d, _[1] = (l - a) * d, _[2] = (r - s) * d) : n >= o && n >= c ? (f = .5 / (d = Math.sqrt(1 + n - o - c)), _[0] = .5 * d, _[1] = (r + s) * f, _[2] = (a + l) * f, _[3] = (h - u) * f) : o > c ? (f = .5 / (d = Math.sqrt(1 + o - n - c)), _[0] = (s + r) * f, _[1] = .5 * d, _[2] = (u + h) * f, _[3] = (l - a) * f) : (f = .5 / (d = Math.sqrt(1 + c - n - o)), _[0] = (l + a) * f, _[1] = (u + h) * f, _[2] = .5 * d, _[3] = (r - s) * f);
        }, t.DEFAULT = new t(), n(t, ["TEMPVector30", function () {
          return this.TEMPVector30 = new Le();
        }, "TEMPVector31", function () {
          return this.TEMPVector31 = new Le();
        }, "TEMPVector32", function () {
          return this.TEMPVector32 = new Le();
        }, "TEMPVector33", function () {
          return this.TEMPVector33 = new Le();
        }, "TEMPMatrix0", function () {
          return this.TEMPMatrix0 = new Ce();
        }, "TEMPMatrix1", function () {
          return this.TEMPMatrix1 = new Ce();
        }, "_tempMatrix3x3", function () {
          return this._tempMatrix3x3 = new be();
        }, "NAN", function () {
          return this.NAN = new t(NaN, NaN, NaN, NaN);
        }]), t;
      }(),
      Ae = function () {
        function t(t) {
          this._temp = new Uint32Array(1), this.seeds = new Uint32Array(4), this.seeds[0] = t, this.seeds[1] = 1812433253 * this.seeds[0] + 1, this.seeds[2] = 1812433253 * this.seeds[1] + 1, this.seeds[3] = 1812433253 * this.seeds[2] + 1;
        }
        r(t, "laya.d3.math.Rand");
        var e = t.prototype;
        return e.getUint = function () {
          return this._temp[0] = this.seeds[0] ^ this.seeds[0] << 11, this.seeds[0] = this.seeds[1], this.seeds[1] = this.seeds[2], this.seeds[2] = this.seeds[3], this.seeds[3] = this.seeds[3] ^ this.seeds[3] >>> 19 ^ this._temp[0] ^ this._temp[0] >>> 8, this.seeds[3];
        }, e.getFloat = function () {
          return this.getUint(), (8388607 & this.seeds[3]) * (1 / 8388607);
        }, e.getSignedFloat = function () {
          return 2 * this.getFloat() - 1;
        }, a(0, e, "seed", function () {
          return this.seeds[0];
        }, function (t) {
          this.seeds[0] = t, this.seeds[1] = 1812433253 * this.seeds[0] + 1, this.seeds[2] = 1812433253 * this.seeds[1] + 1, this.seeds[3] = 1812433253 * this.seeds[2] + 1;
        }), t.getFloatFromInt = function (t) {
          return 1 / 8388607 * (8388607 & t);
        }, t.getByteFromInt = function (t) {
          return (8388607 & t) >>> 15;
        }, t;
      }(),
      Re = (function () {
        function t(t) {
          if (this._state0U = NaN, this._state0L = NaN, this._state1U = NaN, this._state1L = NaN, !(t instanceof Array) || 4 !== t.length) throw new Error("Rand:Seed must be an array with 4 numbers");
          this._state0U = 0 | t[0], this._state0L = 0 | t[1], this._state1U = 0 | t[2], this._state1L = 0 | t[3];
        }
        r(t, "laya.d3.math.RandX");
        var e = t.prototype;
        e.randomint = function () {
          var t = this._state0U,
            e = this._state0L,
            i = this._state1U,
            n = this._state1L,
            r = (n >>> 0) + (e >>> 0),
            a = i + t + (r / 2 >>> 31) >>> 0,
            s = r >>> 0;
          this._state0U = i, this._state0L = n;
          var o = 0,
            h = 0,
            l = 0,
            u = 0;
          o = (t ^= o = t << 23 | (-512 & e) >>> 9) ^ i, h = (e ^= h = e << 23) ^ n;
          o ^= l = t >>> 18, h ^= u = e >>> 18 | (262143 & t) << 14;
          return l = i >>> 5, u = n >>> 5 | (31 & i) << 27, o ^= l, h ^= u, this._state1U = o, this._state1L = h, [a, s];
        }, e.random = function () {
          var e = this.randomint(),
            i = e[0],
            n = 1023 << 20 | i >>> 12,
            r = 0 | (e[1] >>> 12 | (4095 & i) << 20);
          t._CONVERTION_BUFFER.setUint32(0, n, !1), t._CONVERTION_BUFFER.setUint32(4, r, !1);
          return Ae._CONVERTION_BUFFER.getFloat64(0, !1) - 1;
        }, n(t, ["_CONVERTION_BUFFER", function () {
          return this._CONVERTION_BUFFER = new DataView(new ArrayBuffer(8));
        }, "defaultRand", function () {
          return this.defaultRand = new Ae([0, Date.now() / 65536, 0, Date.now() % 65536]);
        }]);
      }(), function () {
        function t(t, e) {
          this.origin = null, this.direction = null, this.origin = t, this.direction = e;
        }
        return r(t, "laya.d3.math.Ray"), t;
      }()),
      Pe = function () {
        function t(t, e) {
          this.elements = new Float32Array(2), void 0 === t && (t = 0), void 0 === e && (e = 0);
          var i = this.elements;
          i[0] = t, i[1] = e;
        }
        r(t, "laya.d3.math.Vector2");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.fromArray = function (t, e) {
          void 0 === e && (e = 0), this.elements[0] = t[e + 0], this.elements[1] = t[e + 1];
        }, e.cloneTo = function (t) {
          var e = t.elements,
            i = this.elements;
          e[0] = i[0], e[1] = i[1];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, e, "x", function () {
          return this.elements[0];
        }, function (t) {
          this.elements[0] = t;
        }), a(0, e, "y", function () {
          return this.elements[1];
        }, function (t) {
          this.elements[1] = t;
        }), t.scale = function (t, e, i) {
          var n = i.elements,
            r = t.elements;
          n[0] = r[0] * e, n[1] = r[1] * e;
        }, n(t, ["ZERO", function () {
          return this.ZERO = new t(0, 0);
        }, "ONE", function () {
          return this.ONE = new t(1, 1);
        }]), t;
      }(),
      Le = function () {
        function t(t, e, i) {
          this.elements = new Float32Array(3), void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0);
          var n = this.elements;
          n[0] = t, n[1] = e, n[2] = i;
        }
        r(t, "laya.d3.math.Vector3");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.fromArray = function (t, e) {
          void 0 === e && (e = 0), this.elements[0] = t[e + 0], this.elements[1] = t[e + 1], this.elements[2] = t[e + 2];
        }, e.cloneTo = function (t) {
          var e = t.elements,
            i = this.elements;
          e[0] = i[0], e[1] = i[1], e[2] = i[2];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, e.toDefault = function () {
          this.elements[0] = 0, this.elements[1] = 0, this.elements[2] = 0;
        }, a(0, e, "x", function () {
          return this.elements[0];
        }, function (t) {
          this.elements[0] = t;
        }), a(0, e, "y", function () {
          return this.elements[1];
        }, function (t) {
          this.elements[1] = t;
        }), a(0, e, "z", function () {
          return this.elements[2];
        }, function (t) {
          this.elements[2] = t;
        }), t.distanceSquared = function (t, e) {
          var i = t.elements,
            n = e.elements,
            r = i[0] - n[0],
            a = i[1] - n[1],
            s = i[2] - n[2];
          return r * r + a * a + s * s;
        }, t.distance = function (t, e) {
          var i = t.elements,
            n = e.elements,
            r = i[0] - n[0],
            a = i[1] - n[1],
            s = i[2] - n[2];
          return Math.sqrt(r * r + a * a + s * s);
        }, t.min = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = Math.min(r[0], a[0]), n[1] = Math.min(r[1], a[1]), n[2] = Math.min(r[2], a[2]);
        }, t.max = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = Math.max(r[0], a[0]), n[1] = Math.max(r[1], a[1]), n[2] = Math.max(r[2], a[2]);
        }, t.transformQuat = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements,
            s = r[0],
            o = r[1],
            h = r[2],
            l = a[0],
            u = a[1],
            c = a[2],
            _ = a[3],
            d = _ * s + u * h - c * o,
            f = _ * o + c * s - l * h,
            p = _ * h + l * o - u * s,
            m = -l * s - u * o - c * h;
          n[0] = d * _ + m * -l + f * -c - p * -u, n[1] = f * _ + m * -u + p * -l - d * -c, n[2] = p * _ + m * -c + d * -u - f * -l;
        }, t.scalarLength = function (t) {
          var e = t.elements,
            i = e[0],
            n = e[1],
            r = e[2];
          return Math.sqrt(i * i + n * n + r * r);
        }, t.scalarLengthSquared = function (t) {
          var e = t.elements,
            i = e[0],
            n = e[1],
            r = e[2];
          return i * i + n * n + r * r;
        }, t.normalize = function (t, e) {
          var i = t.elements,
            n = e.elements,
            r = i[0],
            a = i[1],
            s = i[2],
            o = r * r + a * a + s * s;
          o > 0 && (o = 1 / Math.sqrt(o), n[0] = i[0] * o, n[1] = i[1] * o, n[2] = i[2] * o);
        }, t.multiply = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = r[0] * a[0], n[1] = r[1] * a[1], n[2] = r[2] * a[2];
        }, t.scale = function (t, e, i) {
          var n = i.elements,
            r = t.elements;
          n[0] = r[0] * e, n[1] = r[1] * e, n[2] = r[2] * e;
        }, t.lerp = function (t, e, i, n) {
          var r = n.elements,
            a = t.elements,
            s = e.elements,
            o = a[0],
            h = a[1],
            l = a[2];
          r[0] = o + i * (s[0] - o), r[1] = h + i * (s[1] - h), r[2] = l + i * (s[2] - l);
        }, t.transformV3ToV3 = function (e, i, n) {
          var r = t._tempVector4;
          t.transformV3ToV4(e, i, r);
          var a = r.elements,
            s = n.elements;
          s[0] = a[0], s[1] = a[1], s[2] = a[2];
        }, t.transformV3ToV4 = function (t, e, i) {
          var n = t.elements,
            r = n[0],
            a = n[1],
            s = n[2],
            o = e.elements,
            h = i.elements;
          h[0] = r * o[0] + a * o[4] + s * o[8] + o[12], h[1] = r * o[1] + a * o[5] + s * o[9] + o[13], h[2] = r * o[2] + a * o[6] + s * o[10] + o[14], h[3] = r * o[3] + a * o[7] + s * o[11] + o[15];
        }, t.TransformNormal = function (t, e, i) {
          var n = t.elements,
            r = n[0],
            a = n[1],
            s = n[2],
            o = e.elements,
            h = i.elements;
          h[0] = r * o[0] + a * o[4] + s * o[8], h[1] = r * o[1] + a * o[5] + s * o[9], h[2] = r * o[2] + a * o[6] + s * o[10];
        }, t.transformCoordinate = function (e, i, n) {
          var r = t._tempVector4.elements,
            a = e.elements,
            s = a[0],
            o = a[1],
            h = a[2],
            l = i.elements;
          r[0] = s * l[0] + o * l[4] + h * l[8] + l[12], r[1] = s * l[1] + o * l[5] + h * l[9] + l[13], r[2] = s * l[2] + o * l[6] + h * l[10] + l[14], r[3] = 1 / (s * l[3] + o * l[7] + h * l[11] + l[15]);
          var u = n.elements;
          u[0] = r[0] * r[3], u[1] = r[1] * r[3], u[2] = r[2] * r[3];
        }, t.Clamp = function (t, e, i, n) {
          var r = t.elements,
            a = r[0],
            s = r[1],
            o = r[2],
            h = e.elements,
            l = h[0],
            u = h[1],
            c = h[2],
            _ = i.elements,
            d = _[0],
            f = _[1],
            p = _[2],
            m = n.elements;
          a = (a = a > d ? d : a) < l ? l : a, s = (s = s > f ? f : s) < u ? u : s, o = (o = o > p ? p : o) < c ? c : o, m[0] = a, m[1] = s, m[2] = o;
        }, t.add = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = r[0] + a[0], n[1] = r[1] + a[1], n[2] = r[2] + a[2];
        }, t.subtract = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = r[0] - a[0], n[1] = r[1] - a[1], n[2] = r[2] - a[2];
        }, t.cross = function (t, e, i) {
          var n = t.elements,
            r = e.elements,
            a = i.elements,
            s = n[0],
            o = n[1],
            h = n[2],
            l = r[0],
            u = r[1],
            c = r[2];
          a[0] = o * c - h * u, a[1] = h * l - s * c, a[2] = s * u - o * l;
        }, t.dot = function (t, e) {
          var i = t.elements,
            n = e.elements;
          return i[0] * n[0] + i[1] * n[1] + i[2] * n[2];
        }, t.equals = function (t, e) {
          var i = t.elements,
            n = e.elements;
          return Ee.nearEqual(Math.abs(i[0]), Math.abs(n[0])) && Ee.nearEqual(Math.abs(i[1]), Math.abs(n[1])) && Ee.nearEqual(Math.abs(i[2]), Math.abs(n[2]));
        }, t.ZERO = new t(0, 0, 0), t.ONE = new t(1, 1, 1), t.NegativeUnitX = new t(-1, 0, 0), t.UnitX = new t(1, 0, 0), t.UnitY = new t(0, 1, 0), t.UnitZ = new t(0, 0, 1), t.ForwardRH = new t(0, 0, -1), t.ForwardLH = new t(0, 0, 1), t.Up = new t(0, 1, 0), t.NAN = new t(NaN, NaN, NaN), n(t, ["_tempVector4", function () {
          return this._tempVector4 = new Oe();
        }]), t;
      }(),
      Oe = function () {
        function t(t, e, i, n) {
          this.elements = new Float32Array(4), void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0);
          var r = this.elements;
          r[0] = t, r[1] = e, r[2] = i, r[3] = n;
        }
        r(t, "laya.d3.math.Vector4");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.IClone": !0
        }), e.fromArray = function (t, e) {
          void 0 === e && (e = 0), this.elements[0] = t[e + 0], this.elements[1] = t[e + 1], this.elements[2] = t[e + 2], this.elements[3] = t[e + 3];
        }, e.cloneTo = function (t) {
          var e = t.elements,
            i = this.elements;
          e[0] = i[0], e[1] = i[1], e[2] = i[2], e[3] = i[3];
        }, e.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, e.length = function () {
          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
        }, e.lengthSquared = function () {
          return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
        }, a(0, e, "x", function () {
          return this.elements[0];
        }, function (t) {
          this.elements[0] = t;
        }), a(0, e, "y", function () {
          return this.elements[1];
        }, function (t) {
          this.elements[1] = t;
        }), a(0, e, "z", function () {
          return this.elements[2];
        }, function (t) {
          this.elements[2] = t;
        }), a(0, e, "w", function () {
          return this.elements[3];
        }, function (t) {
          this.elements[3] = t;
        }), t.lerp = function (t, e, i, n) {
          var r = n.elements,
            a = t.elements,
            s = e.elements,
            o = a[0],
            h = a[1],
            l = a[2],
            u = a[3];
          r[0] = o + i * (s[0] - o), r[1] = h + i * (s[1] - h), r[2] = l + i * (s[2] - l), r[3] = u + i * (s[3] - u);
        }, t.transformByM4x4 = function (t, e, i) {
          var n = t.elements,
            r = n[0],
            a = n[1],
            s = n[2],
            o = n[3],
            h = e.elements,
            l = i.elements;
          l[0] = r * h[0] + a * h[4] + s * h[8] + o * h[12], l[1] = r * h[1] + a * h[5] + s * h[9] + o * h[13], l[2] = r * h[2] + a * h[6] + s * h[10] + o * h[14], l[3] = r * h[3] + a * h[7] + s * h[11] + o * h[15];
        }, t.equals = function (t, e) {
          var i = t.elements,
            n = e.elements;
          return Ee.nearEqual(Math.abs(i[0]), Math.abs(n[0])) && Ee.nearEqual(Math.abs(i[1]), Math.abs(n[1])) && Ee.nearEqual(Math.abs(i[2]), Math.abs(n[2])) && Ee.nearEqual(Math.abs(i[3]), Math.abs(n[3]));
        }, t.normalize = function (t, e) {
          var i = t.elements,
            n = e.elements,
            r = t.length();
          r > 0 && (n[0] = i[0] * r, n[1] = i[1] * r, n[2] = i[2] * r, n[3] = i[3] * r);
        }, t.add = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = r[0] + a[0], n[1] = r[1] + a[1], n[2] = r[2] + a[2], n[3] = r[3] + a[3];
        }, t.subtract = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = r[0] - a[0], n[1] = r[1] - a[1], n[2] = r[2] - a[2], n[3] = r[3] - a[3];
        }, t.multiply = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = r[0] * a[0], n[1] = r[1] * a[1], n[2] = r[2] * a[2], n[3] = r[3] * a[3];
        }, t.scale = function (t, e, i) {
          var n = i.elements,
            r = t.elements;
          n[0] = r[0] * e, n[1] = r[1] * e, n[2] = r[2] * e, n[3] = r[3] * e;
        }, t.Clamp = function (t, e, i, n) {
          var r = t.elements,
            a = r[0],
            s = r[1],
            o = r[2],
            h = r[3],
            l = e.elements,
            u = l[0],
            c = l[1],
            _ = l[2],
            d = l[3],
            f = i.elements,
            p = f[0],
            m = f[1],
            g = f[2],
            v = f[3],
            y = n.elements;
          a = (a = a > p ? p : a) < u ? u : a, s = (s = s > m ? m : s) < c ? c : s, o = (o = o > g ? g : o) < _ ? _ : o, h = (h = h > v ? v : h) < d ? d : h, y[0] = a, y[1] = s, y[2] = o, y[3] = h;
        }, t.distanceSquared = function (t, e) {
          var i = t.elements,
            n = e.elements,
            r = i[0] - n[0],
            a = i[1] - n[1],
            s = i[2] - n[2],
            o = i[3] - n[3];
          return r * r + a * a + s * s + o * o;
        }, t.distance = function (t, e) {
          var i = t.elements,
            n = e.elements,
            r = i[0] - n[0],
            a = i[1] - n[1],
            s = i[2] - n[2],
            o = i[3] - n[3];
          return Math.sqrt(r * r + a * a + s * s + o * o);
        }, t.dot = function (t, e) {
          var i = t.elements,
            n = e.elements;
          return i[0] * n[0] + i[1] * n[1] + i[2] * n[2] + i[3] * n[3];
        }, t.min = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = Math.min(r[0], a[0]), n[1] = Math.min(r[1], a[1]), n[2] = Math.min(r[2], a[2]), n[3] = Math.min(r[3], a[3]);
        }, t.max = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e.elements;
          n[0] = Math.max(r[0], a[0]), n[1] = Math.max(r[1], a[1]), n[2] = Math.max(r[2], a[2]), n[3] = Math.max(r[3], a[3]);
        }, n(t, ["ZERO", function () {
          return this.ZERO = new t();
        }, "ONE", function () {
          return this.ONE = new t(1, 1, 1, 1);
        }, "UnitX", function () {
          return this.UnitX = new t(1, 0, 0, 0);
        }, "UnitY", function () {
          return this.UnitY = new t(0, 1, 0, 0);
        }, "UnitZ", function () {
          return this.UnitZ = new t(0, 0, 1, 0);
        }, "UnitW", function () {
          return this.UnitW = new t(0, 0, 0, 1);
        }]), t;
      }(),
      Ne = function () {
        function t(t, e, i, n) {
          this.minDepth = 0, this.maxDepth = 1, this.x = t, this.y = e, this.width = i, this.height = n;
        }
        r(t, "laya.d3.math.Viewport");
        var e = t.prototype;
        return e.project = function (t, e, i) {
          Le.transformV3ToV3(t, e, i);
          var n = t.elements,
            r = e.elements,
            a = i.elements,
            s = n[0] * r[3] + n[1] * r[7] + n[2] * r[11] + r[15];
          1 !== s && (a[0] = a[0] / s, a[1] = a[1] / s, a[2] = a[2] / s), a[0] = .5 * (a[0] + 1) * this.width + this.x, a[1] = .5 * (1 - a[1]) * this.height + this.y, a[2] = a[2] * (this.maxDepth - this.minDepth) + this.minDepth;
        }, e.unprojectFromMat = function (t, e, i) {
          var n = t.elements,
            r = e.elements,
            a = i.elements;
          a[0] = (n[0] - this.x) / this.width * 2 - 1, a[1] = -((n[1] - this.y) / this.height * 2 - 1);
          var s = (this.maxDepth - this.minDepth) / 2;
          a[2] = (n[2] - this.minDepth - s) / s;
          var o = a[0] * r[3] + a[1] * r[7] + a[2] * r[11] + r[15];
          Le.transformV3ToV3(i, e, i), 1 !== o && (a[0] = a[0] / o, a[1] = a[1] / o, a[2] = a[2] / o);
        }, e.unprojectFromWVP = function (e, i, n, r, a) {
          Ce.multiply(i, n, t._tempMatrix4x4), r && Ce.multiply(t._tempMatrix4x4, r, t._tempMatrix4x4), t._tempMatrix4x4.invert(t._tempMatrix4x4), this.unprojectFromMat(e, t._tempMatrix4x4, a);
        }, n(t, ["_tempMatrix4x4", function () {
          return this._tempMatrix4x4 = new Ce();
        }]), t;
      }(),
      Ve = function () {
        function t() {
          this._alphaBlending = 1, this._colorIntensity = 1, this._shaderValue = new ke();
        }
        r(t, "laya.d3.resource.models.Sky");
        var e = t.prototype;
        return e._setEnvironmentDiffuse = function () {
          this._environmentDiffuse.loaded ? this.__ownerCamera._shaderValues.setValue(7, this._environmentDiffuse) : this._environmentDiffuse.on("loaded", this, this._environmentDiffuseLoaded);
        }, e._setEnvironmentSpecular = function () {
          if (this._environmentSpecular.loaded) {
            var t = this._environmentSpecular.simLodInfo;
            t && t instanceof Float32Array && this.__ownerCamera._shaderValues.setValue(9, t), this.__ownerCamera._shaderValues.setValue(8, this._environmentSpecular);
          } else this._environmentSpecular.on("loaded", this, this._environmentSpecularLoaded);
        }, e._environmentDiffuseLoaded = function () {
          this.__ownerCamera._shaderValues.setValue(7, this._environmentDiffuse);
        }, e._environmentSpecularLoaded = function () {
          var t = this._environmentSpecular.simLodInfo;
          t && t instanceof Float32Array && this.__ownerCamera._shaderValues.setValue(9, t), this.__ownerCamera._shaderValues.setValue(8, this._environmentSpecular);
        }, e._render = function (t) {}, e.destroy = function () {
          this.__ownerCamera = null;
        }, a(0, e, "_ownerCamera", null, function (t) {
          this.__ownerCamera = t, this._environmentDiffuse && this._setEnvironmentDiffuse(), this._environmentSpecular && this._setEnvironmentSpecular();
        }), a(0, e, "alphaBlending", function () {
          return this._alphaBlending;
        }, function (t) {
          this._alphaBlending = t, this._alphaBlending < 0 && (this._alphaBlending = 0), this._alphaBlending > 1 && (this._alphaBlending = 1);
        }), a(0, e, "envDiffuseSHBlue", null, function (t) {
          this.__ownerCamera._shaderValues.setValue(12, t);
        }), a(0, e, "colorIntensity", function () {
          return this._colorIntensity;
        }, function (t) {
          this._colorIntensity = t, this._colorIntensity < 0 && (this._colorIntensity = 0);
        }), a(0, e, "envDiffuseSHGreen", null, function (t) {
          this.__ownerCamera._shaderValues.setValue(11, t);
        }), a(0, e, "envDiffuseSHRed", null, function (t) {
          this.__ownerCamera._shaderValues.setValue(10, t);
        }), a(0, e, "environmentDiffuse", function () {
          return this._environmentDiffuse;
        }, function (t) {
          t.minFifter = 9728, this._environmentDiffuse = t, this.__ownerCamera && this._setEnvironmentDiffuse();
        }), a(0, e, "environmentSpecular", function () {
          return this._environmentSpecular;
        }, function (t) {
          this._environmentSpecular = t, this.__ownerCamera && this._setEnvironmentSpecular();
        }), t.MVPMATRIX = 0, t.INTENSITY = 1, t.ALPHABLENDING = 2, t.DIFFUSETEXTURE = 3, t;
      }(),
      Fe = function () {
        function t(t) {
          this._mesh = null, this._boneIndicesList = null, this._subIndexBufferStart = null, this._subIndexBufferCount = null, this._skinAnimationDatas = null, this._bufferUsage = null, this._indexInMesh = 0, this._vertexBuffer = null, this._vertexStart = 0, this._vertexCount = 0, this._indexBuffer = null, this._indexStart = 0, this._indexCount = 0, this._indices = null, this._bufferUsage = {}, this._mesh = t, this._boneIndicesList = [], this._subIndexBufferStart = [], this._subIndexBufferCount = [];
        }
        r(t, "laya.d3.resource.models.SubMesh");
        var e = t.prototype;
        return i.imps(e, {
          "laya.d3.core.render.IRenderable": !0,
          "laya.resource.IDispose": !0
        }), e._getVertexBuffer = function (t) {
          return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
        }, e._getIndexBuffer = function () {
          return this._indexBuffer;
        }, e._getStaticBatchBakedVertexs = function (e, i) {
          var n, r, a = this._vertexBuffer,
            s = a.vertexDeclaration,
            o = s.getVertexElementByUsage(0).offset / 4,
            h = s.getVertexElementByUsage(3).offset / 4,
            l = i.meshRender.lightmapScaleOffset,
            u = 0,
            c = 0,
            _ = 0,
            d = 0,
            f = 0,
            p = 0;
          if (l)
            if (r = s.getVertexElementByUsage(15)) _ = s.vertexStride / 4, n = this._vertexCount > 0 ? a.getData().slice(this._vertexStart * _, (this._vertexStart + this._vertexCount) * _) : a.getData().slice(), d = r.offset / 4;
            else {
              _ = (p = s.vertexStride / 4) + 2, n = this._vertexCount ? new Float32Array(this._vertexCount * (a.vertexDeclaration.vertexStride / 4 + 2)) : new Float32Array(a.vertexCount * (a.vertexDeclaration.vertexStride / 4 + 2)), d = (f = s.getVertexElementByUsage(2).offset / 4) + 2;
              var m = a.getData();
              for (u = 0, c = m.length / p; u < c; u++) {
                var g = 0;
                g = this._vertexCount > 0 ? (this._vertexStart + u) * p : u * p;
                var v = u * _,
                  y = 0;
                for (y = 0; y < d; y++) n[v + y] = m[g + y];
                for (y = d; y < p; y++) n[v + y + 2] = m[g + y];
              }
            }
          else _ = s.vertexStride / 4, n = this._vertexCount ? a.getData().slice(this._vertexStart * _, (this._vertexStart + this._vertexCount) * _) : a.getData().slice();
          if (e) {
            var x = e.worldMatrix,
              T = t._tempMatrix4x40;
            x.invert(T);
            var S = t._tempMatrix4x41,
              w = i.transform.worldMatrix;
            Ce.multiply(T, w, S);
          } else S = i.transform.worldMatrix;
          var E = t._tempQuaternion0;
          for (S.decomposeTransRotScale(t._tempVector30, E, t._tempVector31), u = 0, c = n.length / _; u < c; u++) {
            var b = u * _ + o,
              C = u * _ + h;
            if (Ke.transformVector3ArrayToVector3ArrayCoordinate(n, b, S, n, b), Ke.transformVector3ArrayByQuat(n, C, E, n, C), l) {
              var M = u * _ + d;
              if (r) Ke.transformLightingMapTexcoordByUV1Array(n, M, l, n, M);
              else {
                var I = u * p + f;
                Ke.transformLightingMapTexcoordByUV0Array(m, I, l, n, M);
              }
            }
          }
          return n;
        }, e._getVertexBuffers = function () {
          return null;
        }, e._beforeRender = function (t) {
          return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0;
        }, e._render = function (t) {
          var e, i = 0,
            n = t.renderElement;
          if (this._indexCount > 1) {
            var r = this._boneIndicesList.length;
            if (r > 1) {
              for (var a = 0; a < r; a++)(e = n._skinAnimationDatas || this._skinAnimationDatas) && (n._shaderValue.setValue(0, e[a]), t._shader.uploadRenderElementUniforms(n._shaderValue.data)), L.mainContext.drawElements(4, this._subIndexBufferCount[a], 5123, 2 * this._subIndexBufferStart[a]);
              D.drawCall += r;
            } else(e = n._skinAnimationDatas || this._skinAnimationDatas) && (n._shaderValue.setValue(0, e[0]), t._shader.uploadRenderElementUniforms(n._shaderValue.data)), L.mainContext.drawElements(4, this._indexCount, 5123, 2 * this._indexStart), D.drawCall++;
            i = this._indexCount;
          } else i = this._indexBuffer.indexCount, (e = n._skinAnimationDatas || this._skinAnimationDatas) && (n._shaderValue.setValue(0, e[0]), t._shader.uploadRenderElementUniforms(n._shaderValue.data)), L.mainContext.drawElements(4, i, 5123, 0), D.drawCall++;
          D.trianglesFaces += i / 3;
        }, e.getIndices = function () {
          return this._indexCount > 0 ? this._indices : this._indexBuffer.getData();
        }, e.dispose = function () {
          this._indexBuffer.destroy(), this._vertexBuffer.destroy(), this._mesh = null, this._boneIndicesList = null, this._subIndexBufferStart = null, this._subIndexBufferCount = null, this._skinAnimationDatas = null, this._bufferUsage = null, this._vertexBuffer = null, this._indexBuffer = null;
        }, a(0, e, "_vertexBufferCount", function () {
          return 1;
        }), a(0, e, "triangleCount", function () {
          return this._indexBuffer.indexCount / 3;
        }), n(t, ["_tempVector30", function () {
          return this._tempVector30 = new Le();
        }, "_tempVector31", function () {
          return this._tempVector31 = new Le();
        }, "_tempQuaternion0", function () {
          return this._tempQuaternion0 = new De();
        }, "_tempMatrix4x40", function () {
          return this._tempMatrix4x40 = new Ce();
        }, "_tempMatrix4x41", function () {
          return this._tempMatrix4x41 = new Ce();
        }]), t;
      }(),
      Be = function () {
        function t(t) {
          this.defineCounter = 0, this.defines = null, t ? (this.defineCounter = t.defineCounter, this.defines = t.defines.slice()) : (this.defineCounter = 0, this.defines = []);
        }
        r(t, "laya.d3.shader.ShaderDefines", null, "ShaderDefines$1");
        return t.prototype.registerDefine = function (t) {
          var e = Math.pow(2, this.defineCounter++);
          return this.defines[e] = t, e;
        }, t;
      }(),
      Ue = function () {
        function t() {}
        return r(t, "laya.d3.shader.ShaderInit3D"), t.__init__ = function () {
          ui._globalRegDefine("HIGHPRECISION", ui.SHADERDEFINE_HIGHPRECISION), ui._globalRegDefine("FOG", ui.SHADERDEFINE_FOG), ui._globalRegDefine("DIRECTIONLIGHT", ui.SHADERDEFINE_DIRECTIONLIGHT), ui._globalRegDefine("POINTLIGHT", ui.SHADERDEFINE_POINTLIGHT), ui._globalRegDefine("SPOTLIGHT", ui.SHADERDEFINE_SPOTLIGHT), ui._globalRegDefine("UV", ui.SHADERDEFINE_UV0), ui._globalRegDefine("COLOR", ui.SHADERDEFINE_COLOR), ui._globalRegDefine("UV1", ui.SHADERDEFINE_UV1), ui._globalRegDefine("CASTSHADOW", Ge.SHADERDEFINE_CAST_SHADOW), ui._globalRegDefine("SHADOWMAP_PSSM1", Ge.SHADERDEFINE_SHADOW_PSSM1), ui._globalRegDefine("SHADOWMAP_PSSM2", Ge.SHADERDEFINE_SHADOW_PSSM2), ui._globalRegDefine("SHADOWMAP_PSSM3", Ge.SHADERDEFINE_SHADOW_PSSM3), ui._globalRegDefine("SHADOWMAP_PCF_NO", Ge.SHADERDEFINE_SHADOW_PCF_NO), ui._globalRegDefine("SHADOWMAP_PCF1", Ge.SHADERDEFINE_SHADOW_PCF1), ui._globalRegDefine("SHADOWMAP_PCF2", Ge.SHADERDEFINE_SHADOW_PCF2), ui._globalRegDefine("SHADOWMAP_PCF3", Ge.SHADERDEFINE_SHADOW_PCF3), ui._globalRegDefine("DEPTHFOG", ui.SAHDERDEFINE_DEPTHFOG), Fi.addInclude("LightHelper.glsl", "\nstruct DirectionLight\n{\n vec3 Direction;\n vec3 Diffuse;\n};\n\nstruct PointLight\n{\n vec3 Diffuse;\n vec3 Attenuation;\n vec3 Position;\n float Range;\n};\n\nstruct SpotLight\n{\n vec3 Diffuse;\n vec3 Attenuation;\n vec3 Position;\n vec3 Direction;\n float Spot;\n float Range;\n};\n\n\nvec3 NormalSampleToWorldSpace(vec3 normalMapSample, vec3 unitNormal, vec3 tangent)\n{\n\tvec3 normalT = 2.0*normalMapSample - 1.0;\n\n\t// Build orthonormal basis.\n\tvec3 N = normalize(unitNormal);\n\tvec3 T = normalize(tangent- dot(tangent, N)*N);\n\tvec3 B = cross(T, N);\n\n\tmat3 TBN = mat3(T, B, N);\n\n\t// Transform from tangent space to world space.\n\tvec3 bumpedNormal = TBN*normalT;\n\n\treturn bumpedNormal;\n}\n\n\nvoid  computeDirectionLight(in vec3 matDif,in vec3 matAmb,in vec4 matSpe,in DirectionLight dirLight,in vec3 ambinentColor,in vec3 normal,in vec3 toEye,out vec3 dif,out vec3 amb,out vec3 spec)\n{\n\tdif=vec3(0.0);//不初始化在IOS中闪烁，PC中不会闪烁\n\tamb=vec3(0.0);\n\tspec=vec3(0.0);\n\tvec3 lightVec=-normalize(dirLight.Direction);\n\t\n\tamb=matAmb*ambinentColor;\n\t\n\tfloat  diffuseFactor=dot(lightVec, normal);\n\t\n\tif(diffuseFactor>0.0)\n\t{\n\t   vec3 v = reflect(-lightVec, normal);\n\t   float specFactor = pow(max(dot(v, toEye), 0.0), matSpe.w);\n\t   \n\t   dif = diffuseFactor * matDif * dirLight.Diffuse;\n\t   spec = specFactor * matSpe.rgb;\n\t}\n\t\n}\n\nvoid computePointLight(in vec3 matDif,in vec3 matAmb,in vec4 matSpe,in PointLight poiLight,in vec3 ambinentColor, in vec3 pos,in vec3 normal,in vec3 toEye,out vec3 dif,out vec3 amb,out vec3 spec)\n{\n\tdif=vec3(0.0);\n\tamb=vec3(0.0);\n\tspec=vec3(0.0);\n\tvec3 lightVec = poiLight.Position - pos;\n\t\t\n\tfloat d = length(lightVec);\n\t\n\tif( d > poiLight.Range )\n\t\treturn;\n\t\t\n\tlightVec /= d; \n\t\n\tamb = matAmb*ambinentColor;\t\n\n\tfloat diffuseFactor = dot(lightVec, normal);\n\n\tif( diffuseFactor > 0.0 )\n\t{\n\t\tvec3 v= reflect(-lightVec, normal);\n\t\tfloat specFactor = pow(max(dot(v, toEye), 0.0), matSpe.w);\n\t\t\t\t\t\n\t\tdif = diffuseFactor * matDif * poiLight.Diffuse;\n\t\tspec = specFactor * matSpe.rgb;\n\t}\n\n\tfloat attenuate = 1.0 / dot(poiLight.Attenuation, vec3(1.0, d, d*d));\n\n\tdif *= attenuate;\n\tspec*= attenuate;\n}\n\nvoid ComputeSpotLight(in vec3 matDif,in vec3 matAmb,in vec4 matSpe,in SpotLight spoLight,in vec3 ambinentColor,in vec3 pos, in vec3 normal,in vec3 toEye,out vec3 dif,out vec3 amb,out vec3 spec)\n{\n\tamb = vec3(0.0);\n\tdif =vec3(0.0);\n\tspec= vec3(0.0);\n\tvec3 lightVec = spoLight.Position - pos;\n\t\t\n\tfloat d = length(lightVec);\n\t\n\tif( d > spoLight.Range)\n\t\treturn;\n\t\t\n\tlightVec /= d; \n\t\n\tamb = matAmb*ambinentColor;\t\n\n\tfloat diffuseFactor = dot(lightVec, normal);\n\n\tif(diffuseFactor > 0.0)\n\t{\n\t\tvec3 v= reflect(-lightVec, normal);\n\t\tfloat specFactor = pow(max(dot(v, toEye), 0.0), matSpe.w);\n\t\t\t\t\t\n\t\tdif = diffuseFactor * matDif * spoLight.Diffuse;\n\t\tspec = specFactor * matSpe.rgb;\n\t}\n\t\n\tfloat spot = pow(max(dot(-lightVec, normalize(spoLight.Direction)), 0.0), spoLight.Spot);\n\n\tfloat attenuate = spot/dot(spoLight.Attenuation, vec3(1.0, d, d*d));\n\n\tamb *= spot;\n\tdif *= attenuate;\n\tspec*= attenuate;\n}\n\n"), Fi.addInclude("Lighting.glsl", "\nstruct DirectionLight\n{\n\tvec3 Color;\n\tvec3 Direction;\n};\n\nstruct PointLight\n{\n\tvec3 Color;\n\tvec3 Position;\n\tfloat Range;\n};\n\nstruct SpotLight\n{\n\tvec3 Color;\n\tvec3 Position;\n\tvec3 Direction;\n\tfloat Spot;\n\tfloat Range;\n};\n\n// U3D中使用衰减纹理,此函数模拟并非正确\n//float U3DAttenuation(in vec3 L,in float invLightRadius)\n//{\n//\tfloat fRatio = clamp(length(L) * invLightRadius,0.0,1.0);\n//\tfRatio *= fRatio;\n//\treturn 1.0 / (1.0 + 25.0 * fRatio)* clamp(4.0*(1.0 - fRatio),0.0,1.0); //fade to black as if 4 pixel texture\n//} \n\n// Same as Just Cause 2 and Crysis 2 (you can read GPU Pro 1 book for more information)\nfloat BasicAttenuation(in vec3 L,in float invLightRadius)\n{\n\tvec3 distance = L * invLightRadius;\n\tfloat attenuation = clamp(1.0 - dot(distance, distance),0.0,1.0); // Equals float attenuation = saturate(1.0f - dot(L, L) / (lightRadius *  lightRadius)); \t\n\treturn attenuation * attenuation;\n} \n\n// Inspired on http://fools.slindev.com/viewtopic.php?f=11&t=21&view=unread#unread\t\nfloat NaturalAttenuation(in vec3 L,in float invLightRadius)\n{\n\tfloat attenuationFactor = 30.0;\n\tvec3 distance = L * invLightRadius;\n\tfloat attenuation = dot(distance, distance); // Equals float attenuation = dot(L, L) / (lightRadius *  lightRadius);\n\tattenuation = 1.0 / (attenuation * attenuationFactor + 1.0);\n\t// Second we move down the function therewith it reaches zero at abscissa 1:\n\tattenuationFactor = 1.0 / (attenuationFactor + 1.0); //attenuationFactor contains now the value we have to subtract\n\tattenuation = max(attenuation - attenuationFactor, 0.0); // The max fixes a bug.\n\t// Finally we expand the equation along the y-axis so that it starts with a function value of 1 again.\n\tattenuation /= 1.0 - attenuationFactor;\n\treturn attenuation;\n} \n\nvoid LayaAirBlinnPhongLight (in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir,in vec3 lightColor, in vec3 lightVec,out vec3 diffuseColor,out vec3 specularColor)\n{\n    mediump vec3 h = normalize(viewDir-lightVec);\n    lowp float ln = max (0.0, dot (-lightVec,normal));\n    float nh = max (0.0, dot (h,normal));\n\tdiffuseColor=lightColor * ln;\n\tspecularColor=lightColor *specColor*pow (nh, specColorIntensity*128.0) * gloss;\n}\n\nvoid LayaAirBlinnPhongDiectionLight (in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir, in DirectionLight light,out vec3 diffuseColor,out vec3 specularColor)\n{\n\tvec3 lightVec=normalize(light.Direction);\n\tLayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.Color,lightVec,diffuseColor,specularColor);\n}\n\nvoid LayaAirBlinnPhongPointLight (in vec3 pos,in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir, in PointLight light,out vec3 diffuseColor,out vec3 specularColor)\n{\n\tvec3 lightVec =  pos-light.Position;\n\t//if( length(lightVec) > light.Range )\n\t//\treturn;\n\tLayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.Color,lightVec/length(lightVec),diffuseColor,specularColor);\n\tfloat attenuate = BasicAttenuation(lightVec, 1.0/light.Range);\n\tdiffuseColor *= attenuate;\n\tspecularColor*= attenuate;\n}\n\nvoid LayaAirBlinnPhongSpotLight (in vec3 pos,in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir, in SpotLight light,out vec3 diffuseColor,out vec3 specularColor)\n{\n\tvec3 lightVec =  pos-light.Position;\n\t//if( length(lightVec) > light.Range )\n\t//\treturn;\n\tvec3 normalLightVec=lightVec/length(lightVec);\n\tLayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.Color,normalLightVec,diffuseColor,specularColor);\n\tfloat spot = pow(max(dot(normalLightVec, normalize(light.Direction)), 0.0), light.Spot);\n\tfloat attenuate = spot*BasicAttenuation(lightVec, 1.0/light.Range);\n\tdiffuseColor *= attenuate;\n\tspecularColor*= attenuate;\n}\n\nvec3 NormalSampleToWorldSpace(vec3 normalMapSample, vec3 unitNormal, vec3 tangent,vec3 binormal)\n{\n\tvec3 normalT =vec3(2.0*normalMapSample.x - 1.0,1.0-2.0*normalMapSample.y,2.0*normalMapSample.z - 1.0);\n\t\n\t// Build orthonormal basis.\n\tvec3 N = normalize(unitNormal);\n\tvec3 T = normalize(tangent);\n\tvec3 B = normalize(binormal);\n\tmat3 TBN = mat3(T, B, N);\n\t\n\t// Transform from tangent space to world space.\n\tvec3 bumpedNormal = TBN*normalT;\n\n\treturn bumpedNormal;\n}\n\n\n"), Fi.addInclude("ShadowHelper.glsl", "uniform sampler2D u_shadowMap1;\nuniform sampler2D u_shadowMap2;\nuniform sampler2D u_shadowMap3;\nuniform vec2\t  u_shadowPCFoffset;\nuniform vec4     u_shadowPSSMDistance;\nvec4 packDepth(const in float depth)\n{\n\tconst vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n\tconst vec4 bitMask\t= vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n\tvec4 res = mod(depth*bitShift*vec4(255), vec4(256))/vec4(255);\n\tres -= res.xxyz * bitMask;\n\treturn res;\n}\nfloat unpackDepth(const in vec4 rgbaDepth)\n{\n\tconst vec4 bitShift = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n\tfloat depth = dot(rgbaDepth, bitShift);\n\treturn depth;\n}\nfloat tex2DPCF( sampler2D shadowMap,vec2 texcoord,vec2 invsize,float zRef )\n{\n\tvec2 texelpos =texcoord / invsize;\n\tvec2 lerps = fract( texelpos );\n\tfloat sourcevals[4];\n\tsourcevals[0] = float( unpackDepth(texture2D(shadowMap,texcoord)) > zRef );\n\tsourcevals[1] = float( unpackDepth(texture2D(shadowMap,texcoord + vec2(invsize.x,0))) > zRef );\n\tsourcevals[2] = float( unpackDepth(texture2D(shadowMap,texcoord + vec2(0,invsize.y))) > zRef );\n\tsourcevals[3] = float( unpackDepth(texture2D(shadowMap,texcoord + vec2(invsize.x, invsize.y) )) > zRef );\n\treturn mix( mix(sourcevals[0],sourcevals[2],lerps.y),mix(sourcevals[1],sourcevals[3],lerps.y),lerps.x );\n}\nfloat getShadowPSSM3( sampler2D shadowMap1,sampler2D shadowMap2,sampler2D shadowMap3,mat4 lightShadowVP[4],vec4 pssmDistance,vec2 shadowPCFOffset,vec3 worldPos,float posViewZ,float zBias )\n{\n\tfloat value = 1.0;\n\tint nPSNum = int(posViewZ>pssmDistance.x);\n\tnPSNum += int(posViewZ>pssmDistance.y);\n\tnPSNum += int(posViewZ>pssmDistance.z);\n\t//真SB,webgl不支持在PS中直接访问数组\n\tmat4 lightVP;\n\tif( nPSNum == 0 )\n\t{\n\t\tlightVP = lightShadowVP[1];\n\t}\n\telse if( nPSNum == 1 )\n\t{\n\t\tlightVP = lightShadowVP[2];\n\t}\n\telse if( nPSNum == 2 )\n\t{\n\t\tlightVP = lightShadowVP[3];\n\t}\n\tvec4 vLightMVPPos = lightVP * vec4(worldPos,1.0);\n\t//为了效率，在CPU计算/2.0 + 0.5\n\t//vec3 vText = (vLightMVPPos.xyz / vLightMVPPos.w)/2.0 + 0.5;\n\tvec3 vText = vLightMVPPos.xyz / vLightMVPPos.w;\n\tfloat fMyZ = vText.z - zBias;\n\t/*\n\tbvec4 bInFrustumVec = bvec4 ( vText.x >= 0.0, vText.x <= 1.0, vText.y >= 0.0, vText.y <= 1.0 );\n\tbool bInFrustum = all( bInFrustumVec );\n\tbvec2 bFrustumTestVec = bvec2( bInFrustum, fMyZ <= 1.0 );\n\tbool bFrustumTest = all( bFrustumTestVec );\n\tif ( bFrustumTest ) \n\t*/\n\tif( fMyZ <= 1.0 )\n\t{\n\t\tfloat zdepth=0.0;\n#ifdef SHADOWMAP_PCF3\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue =  tex2DPCF( shadowMap1, vText.xy,shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.xy),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.x,0),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(0,shadowPCFOffset.y),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue = value/4.0;\n\t\t} \n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap3,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF2\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap3,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n\n#endif\n#ifdef SHADOWMAP_PCF1\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap2,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap3,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF_NO\n\t\tvec4 color;\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap1,vText.xy );\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap2,vText.xy );\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap3,vText.xy );\n\t\t}\n\t\tzdepth = unpackDepth(color);\n\t\tvalue = float(fMyZ < zdepth);\n#endif\n\t}\n\treturn value;\n}\nfloat getShadowPSSM2( sampler2D shadowMap1,sampler2D shadowMap2,mat4 lightShadowVP[4],vec4 pssmDistance,vec2 shadowPCFOffset,vec3 worldPos,float posViewZ,float zBias )\n{\n\tfloat value = 1.0;\n\tint nPSNum = int(posViewZ>pssmDistance.x);\n\tnPSNum += int(posViewZ>pssmDistance.y);\n\t//真SB,webgl不支持在PS中直接访问数组\n\tmat4 lightVP;\n\tif( nPSNum == 0 )\n\t{\n\t\tlightVP = lightShadowVP[1];\n\t}\n\telse if( nPSNum == 1 )\n\t{\n\t\tlightVP = lightShadowVP[2];\n\t}\n\tvec4 vLightMVPPos = lightVP * vec4(worldPos,1.0);\n\t//为了效率，在CPU计算/2.0 + 0.5\n\t//vec3 vText = (vLightMVPPos.xyz / vLightMVPPos.w)/2.0 + 0.5;\n\tvec3 vText = vLightMVPPos.xyz / vLightMVPPos.w;\n\tfloat fMyZ = vText.z - zBias;\n\t/*\n\tbvec4 bInFrustumVec = bvec4 ( vText.x >= 0.0, vText.x <= 1.0, vText.y >= 0.0, vText.y <= 1.0 );\n\tbool bInFrustum = all( bInFrustumVec );\n\tbvec2 bFrustumTestVec = bvec2( bInFrustum, fMyZ <= 1.0 );\n\tbool bFrustumTest = all( bFrustumTestVec );\n\tif ( bFrustumTest ) \n\t*/\n\tif( fMyZ <= 1.0 )\n\t{\n\t\tfloat zdepth=0.0;\n#ifdef SHADOWMAP_PCF3\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue =  tex2DPCF( shadowMap1, vText.xy,shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.xy),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.x,0),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(0,shadowPCFOffset.y),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue = value/4.0;\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF2\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF1\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap2,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF_NO\n\t\tvec4 color;\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap1,vText.xy );\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap2,vText.xy );\n\t\t}\n\t\tzdepth = unpackDepth(color);\n\t\tvalue = float(fMyZ < zdepth);\n#endif\n\t}\n\treturn value;\n}\nfloat getShadowPSSM1( sampler2D shadowMap1,vec4 lightMVPPos,vec4 pssmDistance,vec2 shadowPCFOffset,float posViewZ,float zBias )\n{\n\tfloat value = 1.0;\n\tif( posViewZ < pssmDistance.x )\n\t{\n\t\tvec3 vText = lightMVPPos.xyz / lightMVPPos.w;\n\t\tfloat fMyZ = vText.z - zBias;\n\t\t/*\n\t\tbvec4 bInFrustumVec = bvec4 ( vText.x >= 0.0, vText.x <= 1.0, vText.y >= 0.0, vText.y <= 1.0 );\n\t\tbool bInFrustum = all( bInFrustumVec );\n\t\tbvec2 bFrustumTestVec = bvec2( bInFrustum, fMyZ <= 1.0 );\n\t\tbool bFrustumTest = all( bFrustumTestVec );\n\t\t*/\n\t\tif ( fMyZ <= 1.0 ) \n\t\t{\n\t\t\tfloat zdepth=0.0;\n#ifdef SHADOWMAP_PCF3\n\t\t\tvalue =  tex2DPCF( shadowMap1, vText.xy,shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.xy),shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.x,0),shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(0,shadowPCFOffset.y),shadowPCFOffset,fMyZ );\n\t\t\tvalue = value/4.0;\n#endif\n#ifdef SHADOWMAP_PCF2\t\t\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n#endif\n#ifdef SHADOWMAP_PCF1\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n#endif\n#ifdef SHADOWMAP_PCF_NO\t\t\n\t\t\tvec4 color = texture2D( shadowMap1,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n#endif\n\t\t}\n\t}\n\treturn value;\n}"), Fi.addInclude("WaveFunction.glsl", "\nuniform vec2 u_WaveInfoD[20];\nuniform vec4 u_WaveInfo[20];\n\nuniform float TEXWAVE_UV_SCALE ;//= 20.0; //每texwidth像素代表的实际距离\n/**\n\t这里的计算都是\n*/\n\n/**\n* 计算一个波形\n*  开始计算的时候都按照z向上，最后输出的时候，颠倒一下。\n* @param tm {float} 毫秒\n*/\nvoid calcGerstnerWave(float curtm, vec3 pos, float deep, vec2 uvpos, out vec3 opos, out vec3 B, out vec3 T, out vec3 N, out float foamS){\n\tfloat tm = curtm/1000.;\n\topos = pos;\n\tvec3 wpos=vec3(0.);\t\t//累加的位置\n\tN=vec3(0.,0.,0.);\t//输出的法线初始化一下\n\tT=vec3(0.,0.,0.);\n\tB=vec3(0.,0.,0.);\n\tvec2 cD ;//= D;\n\t//float deepAtt = max(0.,min(deep,1.0));\n\t//A*=deepAtt; //TODO\n\t\n\tfor( int i=0; i<4; i++){\n\t\tcD = u_WaveInfoD[i];//vec2(wi.winfo[0],wi.winfo[1]);// wi.vDir;\n\t\tfloat Q = u_WaveInfo[i].x;//wi.QorK;\n\t\tfloat A = u_WaveInfo[i].y;//wi.A;\n\t\tfloat W = u_WaveInfo[i].z;//wi.omega;\n\t\tfloat P = u_WaveInfo[i].w;//wi.phi;\n\t\tfloat dop = dot(cD,uvpos);\n\t\tfloat c = cos(dop*W - tm*P);//TODO 优化\n\t\tfloat s = sin(dop*W - tm*P);\n\t\tfloat AWs = A*W*s;\n\t\tfloat AWc = A*W*c;\n\t\tfloat _QxyAWs = -Q*cD.x*cD.y*AWs;\n\t\t\n\t\twpos += vec3(Q*A*cD.x*c,\n\t\t\t\t\tQ*A*cD.y*c,\n\t\t\t\t\tA*s);\n\t\tN += vec3(-cD.x*AWc,\n\t\t\t\t-cD.y*AWc,\n\t\t\t\tQ*AWs);//记得最后1-\n\t\tT += vec3(_QxyAWs,\n\t\t\t\tQ*cD.y*cD.y*AWs,//记得1-\n\t\t\t\tcD.y*AWc\n\t\t\t);\n\t\tB += vec3(Q*cD.x*cD.x*AWs,//记得1-\n\t\t\t\t_QxyAWs,\n\t\t\t\tcD.x*AWc\n\t\t\t);\n\t\t//float v1 = exp(-tan((dop*W - tm*P)/2.+1.07));//除2，+pi/2 这样正好能对齐\n#ifdef USE_FOAM\t\t\n\t\tfloat v1 = 0.5-sin((dop*W - tm*P)/1.+2.0)/2.;\n\t\tfoamS += pow(v1,9.)/4.;\n#endif\n\t}\n\tT.y=1.-T.y; B.x=1.-B.x;N.z=1.-N.z;\n\topos += vec3(wpos.x,wpos.z*min(deep/10.,1.),wpos.y);\n\t//y和z交换一下。现在根据uv计算的位置，所以直接交换yz就行。其他情况下有问题么\n\tT.xyz=T.xzy;\n\tB.xyz=B.xzy;\n\tN.xyz=N.xzy;\n}\n\n\nvoid calcWave(float curtm, vec2 uv, out vec3 B, out vec3 T, out vec3 N){\n\tfloat tm = curtm/1000.;\n\tN=vec3(0.,0.,0.);\t//输出的法线初始化一下\n\tvec2 uvpos = uv*TEXWAVE_UV_SCALE; //TODO 这个范围是什么 就是1？\n\tuvpos.y*=-1.;\n\tvec2 cD;// = D;\n\tconst int NumWaves = 4;\n\tfloat scale = 1./float(NumWaves);\n\tfor( int i=0; i<NumWaves; i++){\n\t\tcD = u_WaveInfoD[i];//vec2(wi.winfo[0],wi.winfo[1]);// wi.vDir;\n\t\tfloat k = 1.5;//u_WaveInfo[i].x;//wi.QorK; TODO  不知道为什么，这个取u_WaveInfo[i].x，在mi3w上就会闪。测试发现实际值也传过来了，就是1.5\n\t\tfloat A = u_WaveInfo[i].y;//wi.A;\n\t\tfloat W = u_WaveInfo[i].z;//wi.omega;\n\t\tfloat P = u_WaveInfo[i].w;//wi.phi;\n\t\t\n\t\tfloat dop = dot(cD,uvpos);\n\t\tfloat c = cos(dop*W - tm*P);//TODO 优化\n\t\tfloat s = sin(dop*W - tm*P);\n\t\t/*\n\t\tfloat AWs = A*W*s;\n\t\tfloat AWc = A*W*c;\n\t\tfloat _QxyAWs = -Q*cD.x*cD.y*AWs;\n\t\t\n\t\tN += vec3(-cD.x*AWc,\n\t\t\t\t-cD.y*AWc,\n\t\t\t\tQ*AWs);//记得最后1-\n\t\t*/\n\t\tfloat kWAc = scale*c;//k*W*A*c;  为了提高精度，这里只保留sin，cos部分，实际使用的时候再乘回来。\n\t\t//float kWAc = k*W*A*c;  \n\t\tN += vec3(\n\t\t\t-kWAc*cD.x*pow((s+1.)/2.,k-1.),\n\t\t\t-kWAc*cD.y*pow((s+1.)/2.,k-1.),\n\t\t\t1.\n\t\t);\n\t}\n\t//N.z=1.-N.z;\n\t//y和z交换一下。现在根据uv计算的位置，所以直接交换yz就行。其他情况下有问题么\n\tN.xyz=N.xzy;\n}\n"), Fi.addInclude("BRDF.glsl", "vec4 LayaAirBRDF(in vec3 diffuseColor, in vec3 specularColor, in float oneMinusReflectivity, in float smoothness, in vec3 normal, in vec3 viewDir, in vec3 lightDir, in vec3 lightColor, in vec3 gi)\n{\n\tfloat perceptualRoughness = SmoothnessToPerceptualRoughness(smoothness);\n\tvec3 halfDir = SafeNormalize(viewDir - lightDir);\n\t\n\tfloat nv = abs(dot(normal, viewDir));\n\t\n\tfloat nl = clamp(dot(normal,   -lightDir),  0.0, 1.0);\n\tfloat nh = clamp(dot(normal,     halfDir),  0.0, 1.0);\n\tfloat lv = clamp(dot(lightDir,   viewDir),  0.0, 1.0);\n\tfloat lh = clamp(dot(lightDir,  -halfDir),  0.0, 1.0);\n\t\n\tfloat diffuseTerm = DisneyDiffuse(nv, nl, lh, perceptualRoughness) * nl;\n\t\n\tfloat roughness = PerceptualRoughnessToRoughness(perceptualRoughness);\n\t\n\t//#if UNITY_BRDF_GGX\n\tfloat V = SmithJointGGXVisibilityTerm(nl, nv, roughness);\n\tfloat D = GGXTerm(nh, roughness);\n\t\n\tfloat specularTerm = V * D * PI;\n\t\n\tspecularTerm = sqrt(max(0.0001, specularTerm));\n\tspecularTerm = max(0.0, specularTerm * nl);\n\t\n\tvec4 color;\n\tcolor.rgb = diffuseColor * (gi + lightColor * diffuseTerm) + specularTerm * lightColor * FresnelTerm (specularColor, lh);\n\t\n\tcolor.a = 1.0;\n\treturn color;\n}"), Fi.addInclude("PBRUtils.glsl", "struct DirectionLight\n{\n\tvec3 Color;\n\tvec3 Direction;\n};\n\nvec3 UnpackScaleNormal(in vec2 uv0)\n{\n\t#ifdef NORMALTEXTURE\n\t\tvec3 normalT;\n\t\tvec4 normalMapSample = texture2D(u_NormalTexture, uv0);\n\t\tnormalT.x = 2.0 * normalMapSample.x - 1.0;\n\t\tnormalT.y = 1.0 - 2.0 * normalMapSample.y;\n\t\tnormalT.xy *= u_normalScale;\n\t\tnormalT.z = sqrt(1.0 - clamp(dot(normalT.xy, normalT.xy), 0.0, 1.0));\n\t\t\n\t\tvec3 T = normalize(v_Tangent);\n\t\tvec3 B = normalize(v_Binormal);\n\t\tvec3 N = normalize(v_Normal);\n\t\tmat3 TBN = mat3(T, B, N);\n\t\t\n\t\tvec3 bumpedNormal = TBN * normalize(normalT);\n\t\treturn bumpedNormal;\n\t#else\n\t\treturn normalize(v_Normal);\n\t#endif\n}\n\nvec4 DielectricSpecularColor = vec4(0.220916301, 0.220916301, 0.220916301, 1.0 - 0.220916301);\n\nfloat PI = 3.14159265359;\n\nvec3 FresnelTerm (in vec3 F0, in float cosA)\n{\n\treturn F0 + (vec3(1.0) - F0) * pow(1.0 - cosA, 5.0);\n}\n\nfloat PerceptualRoughnessToRoughness(in float perceptualRoughness)\n{\n\treturn perceptualRoughness * perceptualRoughness;\n}\n\nfloat PerceptualRoughnessToSpecularPower(in float perceptualRoughness)\n{\n\tfloat m = PerceptualRoughnessToRoughness(perceptualRoughness);\n\tfloat sq = max(0.0001, m * m);\n\tfloat n = (2.0 / sq) - 2.0;\n\tn = max(n, 0.0001);\n\treturn n;\n}\n\nfloat RoughnessToPerceptualRoughness(in float roughness)\n{\n\treturn sqrt(roughness);\n}\n\nfloat SmoothnessToRoughness(in float smoothness)\n{\n\treturn (1.0 - smoothness) * (1.0 - smoothness);\n}\n\nfloat SmoothnessToPerceptualRoughness(in float smoothness)\n{\n\treturn (1.0 - smoothness);\n}\n\nvec3 SafeNormalize(in vec3 inVec)\n{\n\tfloat dp3 = max(0.001,dot(inVec,inVec));\n\treturn inVec * (1.0 / sqrt(dp3));\n}\n\nfloat DisneyDiffuse(in float NdotV, in float NdotL, in float LdotH, in float perceptualRoughness)\n{\n\tfloat fd90 = 0.5 + 2.0 * LdotH * LdotH * perceptualRoughness;\n\tfloat lightScatter\t= (1.0 + (fd90 - 1.0) * pow(1.0 - NdotL,5.0));\n\tfloat viewScatter\t= (1.0 + (fd90 - 1.0) * pow(1.0 - NdotV,5.0));\n\n\treturn lightScatter * viewScatter;\n}\n\nfloat SmithJointGGXVisibilityTerm (float NdotL, float NdotV, float roughness)\n{\n\tfloat a = roughness;\n\tfloat lambdaV = NdotL * (NdotV * (1.0 - a) + a);\n\tfloat lambdaL = NdotV * (NdotL * (1.0 - a) + a);\n\n\treturn 0.5 / (lambdaV + lambdaL + 0.00001);\n}\n\nfloat GGXTerm (float NdotH, float roughness)\n{\n\tfloat a2 = roughness * roughness;\n\tfloat d = (NdotH * a2 - NdotH) * NdotH + 1.0;\n\treturn 0.31830988618 * a2 / (d * d + 0.0000001);\n}\n\nfloat OneMinusReflectivityFromMetallic(in float metallic)\n{\n\tfloat oneMinusDielectricSpec = DielectricSpecularColor.a;\n\treturn oneMinusDielectricSpec - metallic * oneMinusDielectricSpec;\n}\n\nfloat SpecularStrength(vec3 specular)\n{\n    //(SHADER_TARGET < 30)return specular.r; \n    return max (max (specular.r, specular.g), specular.b);\n}\n\nvec3 DiffuseAndSpecularFromMetallic(in vec3 diffuseColor, in float metallic, out vec3 specularColor, out float oneMinusReflectivity)\n{\n\tspecularColor = mix(DielectricSpecularColor.rgb, diffuseColor, metallic);\n\toneMinusReflectivity = OneMinusReflectivityFromMetallic(metallic);\n\treturn diffuseColor * oneMinusReflectivity;\n}\n\nvec3 EnergyConservationBetweenDiffuseAndSpecular(in vec3 diffuseColor, in vec3 specularColor, out float oneMinusReflectivity)\n{\n\toneMinusReflectivity = 1.0 - SpecularStrength(specularColor);\n\treturn diffuseColor * oneMinusReflectivity;\n}\n\nvec4 Occlusion(in vec2 uv0){\n\t#ifdef OCCLUSIONTEXTURE\n\t\tvec4 occlusionTextureColor = texture2D(u_OcclusionTexture, uv0);\n\t\tfloat occ = occlusionTextureColor.g;\n\t\tfloat oneMinusT = 1.0 - u_occlusionStrength;\n\t\tfloat lerpOneTo = oneMinusT + occ * u_occlusionStrength;\n\t\treturn occlusionTextureColor * lerpOneTo;\n\t#else\n\t\treturn vec4(1.0);\n\t#endif\n}\n\nvec2 ParallaxOffset(in vec3 viewDir){\n\t#ifdef PARALLAXTEXTURE\n\t\tfloat h = texture2D(u_ParallaxTexture, v_Texcoord0).g;\n\t\th = h * u_parallaxScale - u_parallaxScale / 2.0;\n\t\tvec3 v = viewDir;\n\t\tv.z += 0.42;\n\t\tvec2 offset = h * (v.xy / v.z);\n\t\treturn v_Texcoord0 + offset;\n\t#else\n\t\treturn v_Texcoord0;\n\t#endif\n}\n\n"), Fi.addInclude("PBRStandardLighting.glsl", '#include "PBRUtils.glsl"\n#include "BRDF.glsl"\n\nvec4 PBRStandardLight(in vec3 diffuseColor, in float metallic, in float smoothness, in vec3 normal, in vec3 viewDir, in vec3 lightDir, in vec3 lightColor, in vec3 gi)\n{\n\tfloat oneMinusReflectivity;\n\tvec3 specularColor;\n\tdiffuseColor = DiffuseAndSpecularFromMetallic (diffuseColor, metallic, specularColor, oneMinusReflectivity);\n\t\n\tvec4 color = LayaAirBRDF(diffuseColor, specularColor, oneMinusReflectivity, smoothness, normal, viewDir, lightDir, lightColor, gi);\n\treturn color;\n}\n\nvec4 PBRStandardDiectionLight (in vec3 diffuseColor, in float metallic, in float smoothness, in vec3 normal, in vec3 viewDir, in DirectionLight light, in vec3 gi)\n{\n\tvec3 lightVec = normalize(light.Direction);\n\treturn PBRStandardLight(diffuseColor, metallic, smoothness, normal, viewDir, lightVec, light.Color, gi);\n}\n\nvec2 MetallicGloss(in float diffuseTextureAlpha, in vec2 uv0)\n{\n\tvec2 mg;\n\t\n\t#ifdef METALLICGLOSSTEXTURE\n\t\tvec4 metallicGlossTextureColor = texture2D(u_MetallicGlossTexture, uv0);\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tmg.r = metallicGlossTextureColor.r;\n\t\t\tmg.g = diffuseTextureAlpha;\n\t\t#else\n\t\t    mg = metallicGlossTextureColor.ra;\n\t\t#endif\n\t\tmg.g *= u_smoothnessScale;\n\t#else\n\t\tmg.r = u_metallic;\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tmg.g = diffuseTextureAlpha * u_smoothnessScale;\n\t\t#else\n\t\t\tmg.g = u_smoothness;\n\t\t#endif\n\t#endif\n\t\n\treturn mg;\n}\n\n'), Fi.addInclude("PBRSpecularLighting.glsl", '#include "PBRUtils.glsl"\n#include "BRDF.glsl"\n\nvec4 PBRSpecularLight(in vec3 diffuseColor, in vec3 specularColor, in float smoothness, in vec3 normal, in vec3 viewDir, in vec3 lightDir, in vec3 lightColor, in vec3 gi)\n{\n\tfloat oneMinusReflectivity;\n\tdiffuseColor = EnergyConservationBetweenDiffuseAndSpecular (diffuseColor, specularColor, oneMinusReflectivity);\n\t\n\tvec4 color = LayaAirBRDF(diffuseColor, specularColor, oneMinusReflectivity, smoothness, normal, viewDir, lightDir, lightColor, gi);\n\treturn color;\n}\n\nvec4 PBRSpecularDiectionLight (in vec3 diffuseColor, in vec3 specularColor, in float smoothness, in vec3 normal, in vec3 viewDir, in DirectionLight light, in vec3 gi)\n{\n\tvec3 lightVec = normalize(light.Direction);\n\treturn PBRSpecularLight(diffuseColor, specularColor, smoothness, normal, viewDir, lightVec, light.Color, gi);\n}\n\nvec4 SpecularGloss(float diffuseTextureAlpha, in vec2 uv0)\n{\n    vec4 sg;\n\t\n\t#ifdef SPECULARTEXTURE\n\t\tvec4 specularTextureColor = texture2D(u_SpecularTexture, uv0);\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tsg.rgb = specularTextureColor.rgb;\n\t\t\tsg.a = diffuseTextureAlpha;\n\t\t#else\n\t\t\tsg = specularTextureColor;\n\t\t#endif\n\t\tsg.a *= u_smoothnessScale;\n\t#else\n\t\tsg.rgb = u_SpecularColor.rgb;\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tsg.a = diffuseTextureAlpha * u_smoothnessScale;\n\t\t#else\n\t\t\tsg.a = u_smoothness;\n\t\t#endif\n\t#endif\n\t\n    return sg;\n}\n\n');
          var t, e, i = {
              a_Position: 0,
              a_Color: 1,
              a_Normal: 3,
              a_Texcoord0: 2,
              a_Texcoord1: 15,
              a_BoneWeights: 7,
              a_BoneIndices: 6,
              a_Tangent0: 5
            },
            n = {
              u_Bones: [0, 0],
              u_DiffuseTexture: [1, 1],
              u_SpecularTexture: [3, 1],
              u_NormalTexture: [2, 1],
              u_ReflectTexture: [5, 1],
              u_AlphaTestValue: [0, 1],
              u_DiffuseColor: [6, 1],
              u_MaterialSpecular: [8, 1],
              u_Shininess: [9, 1],
              u_MaterialReflect: [10, 1],
              u_TilingOffset: [11, 1],
              u_WorldMat: [0, 2],
              u_MvpMatrix: [1, 2],
              u_LightmapScaleOffset: [2, 2],
              u_LightMap: [3, 2],
              u_CameraPos: [0, 3],
              u_FogStart: [1, 4],
              u_FogRange: [2, 4],
              u_FogColor: [0, 4],
              "u_DirectionLight.Color": [4, 4],
              "u_DirectionLight.Direction": [3, 4],
              "u_PointLight.Position": [5, 4],
              "u_PointLight.Range": [6, 4],
              "u_PointLight.Color": [8, 4],
              "u_SpotLight.Position": [9, 4],
              "u_SpotLight.Direction": [10, 4],
              "u_SpotLight.Range": [12, 4],
              "u_SpotLight.Spot": [11, 4],
              "u_SpotLight.Color": [14, 4],
              u_AmbientColor: [21, 4],
              u_shadowMap1: [18, 4],
              u_shadowMap2: [19, 4],
              u_shadowMap3: [20, 4],
              u_shadowPSSMDistance: [15, 4],
              u_lightShadowVP: [16, 4],
              u_shadowPCFoffset: [17, 4]
            },
            r = Fi.nameKey.add("BLINNPHONG");
          t = 'attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))||(defined(LIGHTMAP)&&defined(UV))\n\tattribute vec2 a_Texcoord0;\n\tvarying vec2 v_Texcoord0;\n#endif\n\n#if defined(LIGHTMAP)&&defined(UV1)\n\tattribute vec2 a_Texcoord1;\n#endif\n\n#ifdef LIGHTMAP\n\tuniform vec4 u_LightmapScaleOffset;\n\tvarying vec2 v_LightMapUV;\n#endif\n\n#ifdef COLOR\n\tattribute vec4 a_Color;\n\tvarying vec4 v_Color;\n#endif\n\n#ifdef BONE\n\tconst int c_MaxBoneCount = 24;\n\tattribute vec4 a_BoneIndices;\n\tattribute vec4 a_BoneWeights;\n\tuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tattribute vec3 a_Normal;\n\tvarying vec3 v_Normal; \n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tuniform vec3 u_CameraPos;\n\tvarying vec3 v_ViewDir; \n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP))&&defined(NORMALMAP)\n\tattribute vec4 a_Tangent0;\n\tvarying vec3 v_Tangent;\n\tvarying vec3 v_Binormal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\tuniform mat4 u_WorldMat;\n\tvarying vec3 v_PositionWorld;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvoid main_castShadow()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position=skinTransform*a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\t \n\t//TODO没考虑UV动画呢\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tv_Texcoord0=a_Texcoord0;\n\t#endif\n\t\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position=skinTransform*a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\t\tmat3 worldMat;\n\t\t#ifdef BONE\n\t\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t\t#else\n\t\t\tworldMat=mat3(u_WorldMat);\n\t\t#endif  \n\t\tv_Normal=worldMat*a_Normal;//TODO:法线可以用"魔法"矩阵\n\t\t#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\t\tv_Tangent=worldMat*a_Tangent0.xyz;\n\t\t\tv_Binormal=cross(v_Normal,v_Tangent)*a_Tangent0.w;\n\t\t#endif\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\t\t#ifdef BONE\n\t\t\tv_PositionWorld=(u_WorldMat*position).xyz;\n\t\t#else\n\t\t\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n\t\t#endif\n\t#endif\n\t\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\t\tv_ViewDir=u_CameraPos-v_PositionWorld;\n\t#endif\n\n\t#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\n\t\tv_Texcoord0=a_Texcoord0;\n\t\t#ifdef TILINGOFFSET\n\t\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t\t\tv_Texcoord0=vec2(v_Texcoord0.x,1.0+v_Texcoord0.y);\n\t\t#endif\n\t#endif\n\n\t#ifdef LIGHTMAP\n\t\t#ifdef SCALEOFFSETLIGHTINGMAPUV\n\t\t\t#ifdef UV1\n\t\t\t\tv_LightMapUV=vec2(a_Texcoord1.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,1.0+a_Texcoord1.y*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n\t\t\t#else\n\t\t\t\tv_LightMapUV=vec2(a_Texcoord0.x,a_Texcoord0.y-1.0)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\n\t\t\t#endif \n\t\t#else\n\t\t\t#ifdef UV1\n\t\t\t\tv_LightMapUV=a_Texcoord1;\n\t\t\t#else\n\t\t\t\tv_LightMapUV=a_Texcoord0;\n\t\t\t#endif \n\t\t#endif \n\t#endif\n\n\t#ifdef COLOR\n\t\tv_Color=a_Color;\n\t#endif\n\n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1 \n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif\n}', e = '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#include "Lighting.glsl";\n\nuniform vec4 u_DiffuseColor;\n\n#ifdef COLOR\n\tvarying vec4 v_Color;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tvarying vec3 v_ViewDir; \n#endif\n\n#ifdef ALPHATEST\n\tuniform float u_AlphaTestValue;\n#endif\n\n#ifdef DIFFUSEMAP\n\tuniform sampler2D u_DiffuseTexture;\n#endif\n\n#ifdef REFLECTMAP\n\tuniform samplerCube u_ReflectTexture;\n\tuniform vec3 u_MaterialReflect;\n#endif\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\n\tvarying vec2 v_Texcoord0;\n#endif\n\n#ifdef LIGHTMAP\n\tvarying vec2 v_LightMapUV;\n\tuniform sampler2D u_LightMap;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tuniform vec3 u_MaterialSpecular;\n\tuniform float u_Shininess;\n\t#ifdef SPECULARMAP \n\t\tuniform sampler2D u_SpecularTexture;\n\t#endif\n#endif\n\n#ifdef FOG\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\t#ifdef ADDTIVEFOG\n\t#else\n\t\tuniform vec3 u_FogColor;\n\t#endif\n#endif\n\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tvarying vec3 v_Normal;\n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\tuniform sampler2D u_NormalTexture;\n\tvarying vec3 v_Tangent;\n\tvarying vec3 v_Binormal;\n#endif\n\n#ifdef DIRECTIONLIGHT\n\tuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\n\tuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\n\tuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n\n#if defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#include "ShadowHelper.glsl"\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nvoid main_castShadow()\n{\n\t//gl_FragColor=vec4(v_posViewZ,0.0,0.0,1.0);\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\nvoid main_normal()\n{\n\tvec4 mainColor=u_DiffuseColor;\n\t#ifdef DIFFUSEMAP\n\t\tvec4 difTexColor=texture2D(u_DiffuseTexture, v_Texcoord0);\n\t\tmainColor=mainColor*difTexColor;\n\t#endif \n\t#ifdef COLOR\n\t\tmainColor=mainColor*v_Color;\n\t#endif \n    \n\t#ifdef ALPHATEST\n\t\tif(mainColor.a<u_AlphaTestValue)\n\t\t\tdiscard;\n\t#endif\n  \n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\t\tvec3 normal;\n\t\t#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\t\tvec3 normalMapSample = texture2D(u_NormalTexture, v_Texcoord0).rgb;\n\t\t\tnormal = normalize(NormalSampleToWorldSpace(normalMapSample, v_Normal, v_Tangent,v_Binormal));\n\t\t#else\n\t\t\tnormal = normalize(v_Normal);\n\t\t#endif\n\t#endif\n\t\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tvec3 viewDir= normalize(v_ViewDir);\n\t\tvec3 diffuse = vec3(0.0);\n\t\tvec3 specular= vec3(0.0);\n\t\tvec3 dif,spe;\n\t\t#ifdef SPECULARMAP\n\t\t\tvec3 gloss=texture2D(u_SpecularTexture, v_Texcoord0).rgb;\n\t\t#else\n\t\t\t#ifdef DIFFUSEMAP\n\t\t\t\tvec3 gloss=vec3(difTexColor.a);\n\t\t\t#else\n\t\t\t\tvec3 gloss=vec3(1.0);\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\n\t\n\t#ifdef DIRECTIONLIGHT\n\t\tLayaAirBlinnPhongDiectionLight(u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_DirectionLight,dif,spe);\n\t\tdiffuse+=dif;\n\t\tspecular+=spe;\n\t#endif\n \n\t#ifdef POINTLIGHT\n\t\tLayaAirBlinnPhongPointLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_PointLight,dif,spe);\n\t\tdiffuse+=dif;\n\t\tspecular+=spe;\n\t#endif\n\n\t#ifdef SPOTLIGHT\n\t\tLayaAirBlinnPhongSpotLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_SpotLight,dif,spe);\n\t\tdiffuse+=dif;\n\t\tspecular+=spe;\n\t#endif\n\n\t\n\tvec3 finalDiffuse;\n\t#ifdef LIGHTMAP\n\t\tfinalDiffuse=texture2D(u_LightMap, v_LightMapUV).rgb*2.0;\n\t\t//float exponent = texture2D(u_LightMap, v_LightMapUV).a;\n\t\t//finalDiffuse = texture2D(u_LightMap, v_LightMapUV).rgb;\n\t\t//float ratio = pow(2.0, exponent * 255.0 - (128.0 + 8.0));\n\t\t//finalDiffuse = finalDiffuse * 255.0 * ratio;\t\n\t\t//finalDiffuse = sqrt(finalDiffuse);\n\t#else\n\t\tfinalDiffuse=vec3(0.0);\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tfinalDiffuse+=diffuse;\n\t#endif\n\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t\t#endif\n\t\tgl_FragColor =vec4(mainColor.rgb*(u_AmbientColor + finalDiffuse)*shadowValue,mainColor.a);\n\t#else\n\t\tgl_FragColor =vec4(mainColor.rgb*(u_AmbientColor + finalDiffuse),mainColor.a);\n\t#endif\n\t\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\t#ifdef RECEIVESHADOW\n\t\t\tgl_FragColor.rgb+=specular*shadowValue;\n\t\t#else\n\t\t\tgl_FragColor.rgb+=specular;\n\t\t#endif\n\t#endif\n\n\n\t#ifdef REFLECTMAP\n\t\tvec3 incident = -viewDir;\n\t\tvec3 reflectionVector = reflect(incident,normal);\n\t\tvec3 reflectionColor  = textureCube(u_ReflectTexture,reflectionVector).rgb;\n\t\tgl_FragColor.rgb += u_MaterialReflect*reflectionColor;\n\t#endif\n\t  \n\t#ifdef FOG\n\t\tfloat lerpFact=clamp((1.0/gl_FragCoord.w-u_FogStart)/u_FogRange,0.0,1.0);\n\t\t#ifdef ADDTIVEFOG\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\n\t\t#else\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\t\t\n\t\tmain_castShadow();\n\t#else\n\t  main_normal();\n\t#endif  \n}\n\n';
          var a = ui.add(r, t, e, i, n);
          Bi.SHADERDEFINE_DIFFUSEMAP = a.registerMaterialDefine("DIFFUSEMAP"), Bi.SHADERDEFINE_NORMALMAP = a.registerMaterialDefine("NORMALMAP"), Bi.SHADERDEFINE_SPECULARMAP = a.registerMaterialDefine("SPECULARMAP"), Bi.SHADERDEFINE_REFLECTMAP = a.registerMaterialDefine("REFLECTMAP"), Bi.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), Bi.SHADERDEFINE_ADDTIVEFOG = a.registerMaterialDefine("ADDTIVEFOG"), i = {
            a_Position: 0,
            a_Color: 1,
            a_Normal: 3,
            a_Texcoord0: 2,
            a_Texcoord1: 15,
            a_TexcoordNext0: 14,
            a_BoneWeights: 7,
            a_BoneIndices: 6,
            a_Tangent0: 5
          }, n = {
            u_Bones: [0, 0],
            u_DiffuseTexture: [1, 1],
            u_SpecularTexture: [3, 1],
            u_NormalTexture: [2, 1],
            u_AmbientTexture: [5, 1],
            u_ReflectTexture: [6, 1],
            u_AlphaTestValue: [0, 1],
            u_Albedo: [7, 1],
            u_UVMatrix: [13, 1],
            u_UVAge: [14, 1],
            u_UVAniAge: [8, 1],
            u_MaterialDiffuse: [10, 1],
            u_MaterialAmbient: [9, 1],
            u_MaterialSpecular: [11, 1],
            u_MaterialReflect: [12, 1],
            u_TilingOffset: [15, 1],
            u_WorldMat: [0, 2],
            u_MvpMatrix: [1, 2],
            u_LightmapScaleOffset: [2, 2],
            u_LightMap: [3, 2],
            u_CameraPos: [0, 3],
            u_FogStart: [1, 4],
            u_FogRange: [2, 4],
            u_FogColor: [0, 4],
            "u_DirectionLight.Direction": [3, 4],
            "u_DirectionLight.Diffuse": [4, 4],
            "u_PointLight.Position": [5, 4],
            "u_PointLight.Range": [6, 4],
            "u_PointLight.Attenuation": [7, 4],
            "u_PointLight.Diffuse": [8, 4],
            "u_SpotLight.Position": [9, 4],
            "u_SpotLight.Direction": [10, 4],
            "u_SpotLight.Range": [12, 4],
            "u_SpotLight.Spot": [11, 4],
            "u_SpotLight.Attenuation": [13, 4],
            "u_SpotLight.Diffuse": [14, 4],
            u_AmbientColor: [21, 4],
            u_shadowMap1: [18, 4],
            u_shadowMap2: [19, 4],
            u_shadowMap3: [20, 4],
            u_shadowPSSMDistance: [15, 4],
            u_lightShadowVP: [16, 4],
            u_shadowPCFoffset: [17, 4]
          };
          var s = Fi.nameKey.add("SIMPLE");
          t = "attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\n\n\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(COLOR)&&defined(SPECULARMAP)||defined(NORMALMAP)))||(defined(LIGHTMAP)&&defined(UV))\nattribute vec2 a_Texcoord0;\nvarying vec2 v_Texcoord0;\n  #ifdef UVTRANSFORM \n  uniform mat4 u_UVMatrix;\n  #endif\n#endif\n\n#if defined(AMBIENTMAP)||(defined(LIGHTMAP)&&defined(UV1))\nattribute vec2 a_Texcoord1;\n#endif\n\n#if defined(AMBIENTMAP)||defined(LIGHTMAP)\nuniform vec4 u_LightmapScaleOffset;\nvarying vec2 v_LightMapUV;\n#endif\n\n\n#ifdef COLOR\nattribute vec4 a_Color;\nvarying vec4 v_Color;\n#endif\n\n#ifdef BONE\nattribute vec4 a_BoneIndices;\nattribute vec4 a_BoneWeights;\nconst int c_MaxBoneCount = 24;\nuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\nattribute vec3 a_Normal;\nvarying vec3 v_Normal;\n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP))&&defined(NORMALMAP)\nattribute vec3 a_Tangent0;\nvarying vec3 v_Tangent0;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\nuniform mat4 u_WorldMat;\nvarying vec3 v_PositionWorld;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvoid main_castShadow()\n{\n#ifdef BONE\n\tmat4 skinTransform=mat4(0.0);\n\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\tvec4 position=skinTransform*a_Position;\n\tgl_Position = u_MvpMatrix * position;\n#else\n\tgl_Position = u_MvpMatrix * a_Position;\n#endif\n \n//TODO没考虑UV动画呢\n#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\tv_Texcoord0=a_Texcoord0;\n#endif\n\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n#ifdef BONE\n\tmat4 skinTransform=mat4(0.0);\n\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\tvec4 position=skinTransform*a_Position;\n\tgl_Position = u_MvpMatrix * position;\n#else\n\tgl_Position = u_MvpMatrix * a_Position;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tmat3 worldMat;\n\t#ifdef BONE\n\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t#else\n\t\tworldMat=mat3(u_WorldMat);\n\t#endif  \n\tv_Normal=worldMat*a_Normal;\n\t#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\tv_Tangent0=worldMat*a_Tangent0;\n\t#endif\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\t#ifdef BONE\n\t\tv_PositionWorld=(u_WorldMat*position).xyz;\n\t#else\n\t\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n\t#endif\n#endif\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(COLOR)&&defined(SPECULARMAP)||defined(NORMALMAP)))\n\tv_Texcoord0=a_Texcoord0;\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t\tv_Texcoord0=vec2(v_Texcoord0.x,v_Texcoord0.y+1.0);\n\t#endif\n\t#ifdef UVTRANSFORM\n\t\tv_Texcoord0=(u_UVMatrix*vec4(v_Texcoord0,0.0,1.0)).xy;\n\t#endif\n#endif\n\n#if defined(AMBIENTMAP)||defined(LIGHTMAP)\n\t#ifdef SCALEOFFSETLIGHTINGMAPUV\n\t\t#ifdef UV1\n\t\t\tv_LightMapUV=vec2(a_Texcoord1.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,1.0+a_Texcoord1.y*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n\t\t#else\n\t\t\tv_LightMapUV=vec2(a_Texcoord0.x,a_Texcoord0.y-1.0)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\n\t\t#endif \n\t#else\n\t\t#ifdef UV1\n\t\t\tv_LightMapUV=a_Texcoord1;\n\t\t#else\n\t\t\tv_LightMapUV=a_Texcoord0;\n\t\t#endif \n\t#endif \n#endif\n\n#ifdef COLOR\n\tv_Color=a_Color;\n#endif\n\n#ifdef RECEIVESHADOW\n\tv_posViewZ = gl_Position.w;\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t#endif\n#endif\n}\n\nvoid main()\n{\n#ifdef CASTSHADOW\n\tmain_castShadow();\n#else\n\tmain_normal();\n#endif\n}", e = '#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#include "LightHelper.glsl";\n\nuniform vec4 u_Albedo;\n\n#ifdef ALPHATEST\nuniform float u_AlphaTestValue;\n#endif\n\n#ifdef DIFFUSEMAP\nuniform sampler2D u_DiffuseTexture;\n#endif\n\n#ifdef REFLECTMAP\nuniform samplerCube u_ReflectTexture;\nuniform vec3 u_MaterialReflect;\n#endif\n\n#if   defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(COLOR)&&defined(SPECULARMAP)||defined(NORMALMAP)))\nvarying vec2 v_Texcoord0;\n#endif\n\n#if defined(AMBIENTMAP)||defined(LIGHTMAP)\nvarying vec2 v_LightMapUV;\n#endif\n#ifdef AMBIENTMAP\nuniform sampler2D u_AmbientTexture;\n#endif\n#ifdef LIGHTMAP\nuniform sampler2D u_LightMap;\n#endif\n\n#ifdef COLOR\nvarying vec4 v_Color;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\nuniform vec3 u_MaterialDiffuse;\nuniform vec4 u_MaterialSpecular;\n  #if (defined(DIFFUSEMAP)||defined(COLOR))&&defined(SPECULARMAP) \n  uniform sampler2D u_SpecularTexture;\n  #endif\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(AMBIENTMAP)||defined(LIGHTMAP)\nuniform vec3 u_MaterialAmbient;\n#endif\n\n#if defined(FOG)||defined(DEPTHFOG)\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\t#ifdef ADDTIVEFOG\n\t#else\n\t\tuniform vec3 u_FogColor;\n\t#endif\n#endif\n\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\nvarying vec3 v_Normal;\n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\nuniform sampler2D u_NormalTexture;\nvarying vec3 v_Tangent0;\n#endif\n\n#ifdef DIRECTIONLIGHT\nuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\nuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\nuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)||(defined(RECEIVESHADOW)&&(defined(SHADOWMAP_PSM2)||defined(SHADOWMAP_PSM3)))\nuniform vec3 u_CameraPos;\n#endif\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)\nvarying vec3 v_PositionWorld;\n#endif\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\nvarying float v_posViewZ;\n\n\n\nvoid main_castShadow()\n{\n\t//gl_FragColor=vec4(v_posViewZ,0.0,0.0,1.0);\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\nvoid main_normal()\n{\n#if defined(DIFFUSEMAP)&&!defined(COLOR)\n\tgl_FragColor=texture2D(u_DiffuseTexture, v_Texcoord0);\n#endif \n  \n#if defined(COLOR)&&!defined(DIFFUSEMAP)\n\tgl_FragColor=v_Color;\n#endif \n  \n#if defined(DIFFUSEMAP)&&defined(COLOR)\n\tvec4 texColor=texture2D(u_DiffuseTexture, v_Texcoord0);\n\tgl_FragColor=texColor*v_Color;\n#endif\n  \n#if !defined(DIFFUSEMAP)&&!defined(COLOR)\n\tgl_FragColor=vec4(1.0,1.0,1.0,1.0);\n#endif \n    \n#ifdef ALPHATEST\n\tif(gl_FragColor.a-u_AlphaTestValue<0.0)\n\t\tdiscard;\n#endif\n  \n  \n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tvec3 normal;\n    #if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\tvec3 normalMapSample = texture2D(u_NormalTexture, v_Texcoord0).rgb;\n\t\tnormal = normalize(NormalSampleToWorldSpace(normalMapSample, v_Normal, v_Tangent0));\n\t#else\n\t\tnormal = normalize(v_Normal);\n    #endif\n#endif\n\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tvec3 diffuse = vec3(0.0);\n\tvec3 ambient = vec3(0.0);\n\tvec3 specular= vec3(0.0);\n\tvec3 dif, amb, spe;\n#endif\n  \n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(REFLECTMAP)\n\tvec3 toEye;\n\t#ifdef FOG\n\t\ttoEye=u_CameraPos-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t#else\n\t\ttoEye=normalize(u_CameraPos-v_PositionWorld);\n\t#endif\n#endif\n\t\n#ifdef DIRECTIONLIGHT\n\tcomputeDirectionLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_DirectionLight,u_AmbientColor,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n \n#ifdef POINTLIGHT\n\tcomputePointLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_PointLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef SPOTLIGHT\n\tComputeSpotLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_SpotLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef RECEIVESHADOW\n\tfloat shadowValue = 1.0;\n\t#ifdef SHADOWMAP_PSSM3\n\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif\n\t#ifdef SHADOWMAP_PSSM2\n\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif \n\t#ifdef SHADOWMAP_PSSM1\n\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t#endif\n#endif\n\n#ifdef AMBIENTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_AmbientTexture, v_LightMapUV).rgb); \n\t#else\n\t\t#if defined(RECEIVESHADOW)\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_AmbientTexture, v_LightMapUV).rgb * shadowValue);\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_AmbientTexture, v_LightMapUV).rgb); \n\t\t#endif\n\t#endif\n#endif\n\n#ifdef LIGHTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb); \n\t#else\n\t\t#if defined(RECEIVESHADOW)\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue);\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb); \n\t\t#endif\n\t#endif\n#endif\n\ngl_FragColor=gl_FragColor*u_Albedo;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t#if (defined(DIFFUSEMAP)||defined(COLOR))&&defined(SPECULARMAP)\n\t\tspecular =specular*texture2D(u_SpecularTexture, v_Texcoord0).rgb;\n    #endif\n\t#ifdef RECEIVESHADOW\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse*shadowValue) + specular*shadowValue,gl_FragColor.a);\n\t#else\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse) + specular,gl_FragColor.a);\n\t#endif\n#endif\n  \n#ifdef REFLECTMAP\n\tvec3 incident = -toEye;\n\tvec3 reflectionVector = reflect(incident,normal);\n\tvec3 reflectionColor  = textureCube(u_ReflectTexture,reflectionVector).rgb;\n\tgl_FragColor.rgb += u_MaterialReflect*reflectionColor;\n#endif\n  \n#ifdef FOG\n\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\t#ifdef ADDTIVEFOG\n\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\n\t#else\n\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n\t#endif\n#endif\n#ifdef DEPTHFOG\n\tfloat lerpFact = (-v_PositionWorld.y-u_FogStart)/u_FogRange;\n\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n#endif\n}\n\nvoid main()\n{\n#ifdef CASTSHADOW\t\t\n\tmain_castShadow();\n#else\n  main_normal();\n#endif  \n}\n\n', a = ui.add(s, t, e, i, n), Wi.SHADERDEFINE_DIFFUSEMAP = a.registerMaterialDefine("DIFFUSEMAP"), Wi.SHADERDEFINE_NORMALMAP = a.registerMaterialDefine("NORMALMAP"), Wi.SHADERDEFINE_SPECULARMAP = a.registerMaterialDefine("SPECULARMAP"), Wi.SHADERDEFINE_EMISSIVEMAP = a.registerMaterialDefine("EMISSIVEMAP"), Wi.SHADERDEFINE_AMBIENTMAP = a.registerMaterialDefine("AMBIENTMAP"), Wi.SHADERDEFINE_REFLECTMAP = a.registerMaterialDefine("REFLECTMAP"), Wi.SHADERDEFINE_UVTRANSFORM = a.registerMaterialDefine("UVTRANSFORM"), Wi.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), Wi.SHADERDEFINE_ADDTIVEFOG = a.registerMaterialDefine("ADDTIVEFOG"), i = {
            a_Position: 0,
            a_Color: 1
          }, n = {
            u_MvpMatrix: [1, 2]
          };
          var o = Fi.nameKey.add("LINE");
          t = "attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\nattribute vec4 a_Color;\nvarying vec4 v_Color;\n\n\nvoid main()\n{\n  gl_Position = u_MvpMatrix * a_Position;\n  v_Color=a_Color;\n}", e = "#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec4 v_Color;\n\nvoid main()\n{\n  gl_FragColor=v_Color; \n}\n\n", ui.add(o, t, e, i, n), i = {
            a_position: 0,
            a_normal: 3,
            tangent: 5,
            binormal: 4,
            uv: 2,
            a_BoneWeights: 7,
            a_BoneIndices: 6,
            a_Tangent0: 5
          }, n = {
            u_Bones: [0, 0],
            u_lodRect: [9, 3],
            irrad_mat_red: [10, 3],
            irrad_mat_green: [11, 3],
            irrad_mat_blue: [12, 3],
            u_hdrexposure: [13, 3],
            u_aoObjPos: [14, 1],
            texBaseColor: [1, 1],
            texNormal: [2, 1],
            texPbrInfo: [3, 1],
            texPrefilterdEnv: [8, 3],
            texHSNoise: [15, 1],
            texPrefilterDiff: [7, 3],
            u_AlphaTestValue: [0, 1],
            texBRDFLUT: [4, 1],
            u_UVAniAge: [5, 1],
            u_roughness: [6, 1],
            u_metaless: [7, 1],
            u_UVMatrix: [8, 1],
            u_UVAge: [9, 1],
            modelMatrix: [0, 2],
            mvp: [1, 2],
            cameraPosition: [0, 3],
            u_View: [1, 3],
            u_Project: [2, 3],
            u_FogStart: [1, 4],
            u_FogRange: [2, 4],
            u_FogColor: [0, 4],
            "u_DirectionLight.Direction": [3, 4],
            "u_DirectionLight.Diffuse": [4, 4],
            "u_PointLight.Position": [5, 4],
            "u_PointLight.Range": [6, 4],
            "u_PointLight.Attenuation": [7, 4],
            "u_PointLight.Diffuse": [8, 4],
            "u_SpotLight.Position": [9, 4],
            "u_SpotLight.Direction": [10, 4],
            "u_SpotLight.Range": [12, 4],
            "u_SpotLight.Spot": [11, 4],
            "u_SpotLight.Attenuation": [13, 4],
            "u_SpotLight.Diffuse": [14, 4],
            u_shadowMap1: [18, 4],
            u_shadowMap2: [19, 4],
            u_shadowMap3: [20, 4],
            u_shadowPSSMDistance: [15, 4],
            u_lightShadowVP: [16, 4],
            u_shadowPCFoffset: [17, 4]
          };
          var h = Fi.nameKey.add("PBR");
          t = "\nuniform mat4 modelMatrix;\n//uniform mat4 modelViewMatrix;\n//uniform mat4 projectionMatrix;\nuniform mat4 u_View;\nuniform mat4 u_Project;\nuniform mat4 mvp;\n//uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n\nattribute vec3 a_position;\nattribute vec3 a_normal;\n#ifdef HAS_TANGENT\nattribute vec3 tangent;\nattribute vec3 binormal;\n#endif\nattribute vec2 uv;\n#ifdef BONE\nattribute vec4 a_BoneIndices;\nattribute vec4 a_BoneWeights;\nconst int c_MaxBoneCount = 24;\nuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\nvarying vec3 vLightDir;\nvarying vec3 vViewDir;\n#ifdef HAS_TANGENT\nvarying vec3 vWorldTangent;\nvarying vec3 vWorldBinormal;\n#endif\n\n#ifdef RECEIVESHADOW\nvarying float v_posViewZ;\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\nvoid main() {\n#ifdef BONE\n\tmat4 skinTransform=mat4(0.0);\n\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\tgl_Position = mvp*skinTransform*vec4(a_position,1.);\n\tmat4 modelMat = modelMatrix*skinTransform;\n#else\n\tgl_Position = mvp*vec4(a_position,1.);\n\tmat4 modelMat = modelMatrix;\n#endif\t\n\tvWorldPos = modelMat*vec4(a_position,1.);\n\n#ifdef CASTSHADOW \n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tvUv = uv;\n\t#endif\t\n#else\n    vUv = uv;\n\tvWorldNorm = normalize((modelMat*vec4(a_normal,0.0)).xyz);\n\t#ifdef HAS_TANGENT\n\tvWorldTangent = normalize((modelMat*vec4(tangent,0.0)).xyz);\n\tvWorldBinormal = normalize((modelMat*vec4(binormal,0.0)).xyz);\n\t#endif\n    \n    vViewDir = (vWorldPos.xyz-cameraPosition);//这个不能normalize。否则无法线性差值了\n#ifdef RECEIVESHADOW\n\tv_posViewZ = gl_Position.z;\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tv_lightMVPPos = u_lightShadowVP[0] * vWorldPos;\n\t#endif\n#endif\t\n#endif\n}\n", e = '//#version 300 es\n\nprecision highp float;\nprecision lowp int;\n\nconst float PI = 3.14159265358979323846264;\nconst float _2PI = 6.2831853071796;\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\n#ifdef HAS_TANGENT\nvarying vec3 vWorldTangent;\nvarying vec3 vWorldBinormal;\n#endif\nvarying vec3 vViewDir;\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\n//\nuniform sampler2D texBaseColor;\nuniform sampler2D texNormal;\n//预计算的贴图\nuniform sampler2D texPrefilterdEnv;\nuniform sampler2D texBRDFLUT;\nuniform sampler2D texPrefilterDiff;\n#ifdef HAS_PBRINFO\nuniform sampler2D texPbrInfo;   //Ao, Roughness, Metallic\n#endif\nuniform float u_hdrexposure;\nuniform float u_AlphaTestValue;\n\nuniform float u_roughness;\nuniform float u_metaless;\nconst float maxlv = 7.;\t//现在只支持512分辨率的环境贴图\nconst int nmaxlv = 9;//\n\t\t\t\t\t\t\t\nuniform mat4 irrad_mat_red;\nuniform mat4 irrad_mat_green;\nuniform mat4 irrad_mat_blue;\t\t\t\t\t\t\t\n\nvec3 speccontrib = vec3(0.);\n\nconst float _maxu8 = 255.0;\nconst float _maxu16 = 65535.0;\nconst float _shift8 = 256.0;    //平移的话是*256而不是255\nvec2 _RGBAToU16(const in vec4 rgba){\n    return vec2((rgba.r*_maxu8+rgba.g*_maxu8*_shift8)/_maxu16, (rgba.b*_maxu8+rgba.a*_maxu8*_shift8)/_maxu16);\n}\nvec3 _RGBEToRGB( const in vec4 rgba ){\n    float f = pow(2.0, rgba.w * 255.0 - (128.0 + 8.0));\n    return rgba.rgb * (255.0 * f);\n}\n\nfloat saturate(float v){\n    return min(max(v,0.),1.);\n}\n\nvec4 tex2dLod(sampler2D tex, float u, float v, float lod){\n\tvec2 uv = vec2(u,v);\n\tuv+=mod(gl_FragCoord.xy-vec2(0.5),2.0)*vec2(128.,0.);\n\treturn texture2D(tex,uv,lod-16.);\n}\n\n/*\n* 对一个全景图进行采样。假设x轴指向中心。\n*/\nvec4 texPanorama(sampler2D tex, const in vec3 dir){\n\tfloat envu = atan(dir.z,dir.x)/_2PI+0.5; \t\n\tfloat envv = acos(dir.y)/PI;//(1.0-dir.y)/2.0;\n\treturn texture2D(tex,vec2(envu,envv));\n}\n\nvec4 texPanoramaLod(sampler2D tex, const in vec3 dir, float lod){\n\tfloat envu = atan(dir.z,dir.x)/_2PI+0.5; \t\n\tfloat envv = acos(dir.y)/PI;//(1.0-dir.y)/2.0;\n\treturn tex2dLod(tex,envu,envv,lod);\n}\n\n/*\n    计算sh光照。\n    使用level=2，所以需要9个系数。\n    https://cseweb.ucsd.edu/~ravir/papers/envmap/envmap.pdf\n*/\nfloat environment_exposure = 1.0;\nvec3 diff_sh9(vec3 dir){\n\tvec4 shDir = vec4(dir.x,-dir.z,dir.y,1.0);\n  return max(vec3(0.0), vec3(\n\tdot(shDir, irrad_mat_red * shDir),\n\tdot(shDir, irrad_mat_green * shDir),\n\tdot(shDir, irrad_mat_blue * shDir)\n\t)) * environment_exposure;\t\n}\n\n#ifdef HAS_TANGENT\nvec3 applyNormalTex( vec3 norm, vec3 surf_norm ) {\n    vec3 mapN = norm * 2.0 - 1.0;\n    //mapN.xy = normalScale * mapN.xy;\n    mat3 tsn = mat3( vWorldTangent, vWorldBinormal, surf_norm );\n    return normalize( tsn * mapN );\n}\n#endif\n\nvec4 pbrlight(vec3 normal, float rough, float NoV, vec3 R){\n    vec4 basecolor = texture2D(texBaseColor,vUv);\n\tbasecolor.rgb = pow(basecolor.rgb,vec3(2.2));\n\tfloat metaless = 1.0; \t\n\tconst float ismetalinfov = (128./255.);\n\tif(basecolor.a>=ismetalinfov){//这时候表示金属度\n\t\tmetaless = (basecolor.a-ismetalinfov)*2.;\n\t\tbasecolor.a = 1.0;\n\t}else{\n\t\tmetaless = 0.;\n\t\tbasecolor.a = basecolor.a*2.0;\n\t}\n\t#ifdef FIX_METALESS\n\tmetaless = u_metaless;\n\t#endif\n\t#ifdef HAS_PBRINFO\t\n\tvec4 pbrinfo = texture2D(texPbrInfo, vUv);\n\tmetaless = pbrinfo.b;\n\trough = pbrinfo.g;\n\t#endif\n    const vec3 nonmetalF0 =vec3(0.02);\n    vec3 F0 =  mix(nonmetalF0, basecolor.rgb, metaless);\n\t\n    vec4 PrefilteredColor = texPanoramaLod(texPrefilterdEnv, R, rough*maxlv);\n    PrefilteredColor.rgb = _RGBEToRGB(PrefilteredColor);\n    vec4 EnvBRDF = texture2D(texBRDFLUT,vec2(rough , NoV));//TODO lod\n    vec2 rg = _RGBAToU16(EnvBRDF);    \n    speccontrib = (F0* rg.x + saturate( 50.0 * PrefilteredColor.g ) * rg.y);\n\tvec3 color_spec = PrefilteredColor.rgb*speccontrib;\n\t\n\tvec3 color_diff=diff_sh9(normal);\n\tvec3 outc =  color_diff*mix(basecolor.rgb,vec3(0.),metaless)*(vec3(1.0)-speccontrib)+color_spec;\n\t#ifdef HAS_PBRINFO\n\toutc*=pbrinfo.r;\n\t#endif\n\treturn vec4(outc, basecolor.a);\n}\n\nvec3 oldlight(vec4 normal, float NoV, vec3 R){\n    vec4 basecolor = texture2D(texBaseColor,vUv);\n\tconst vec3 lightdir=normalize(vec3(1.,1.,0.));\n\tconst vec3 spcecol = vec3(1.,0.8,0.8);\n\tconst vec3 amb = vec3(0.5);\n\tvec3 diffv =  (vec3(saturate(dot(lightdir,normal.xyz)))+amb);\n\t//vec3 spec = spcecol* pow(saturate(dot(R,lightdir)),(1.-pbrinfo.g)*5.);\n\treturn diffv*basecolor.rgb;//+spec;\n}\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\nvarying float v_posViewZ;\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nvoid main() {\n#ifdef CASTSHADOW\n\tgl_FragColor=packDepth(gl_FragCoord.w);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(texBaseColor,vUv).w;\n\t\tif( alpha < u_AlphaTestValue ){\n\t\t\tdiscard;\n\t\t}\n\t#endif\n#else\n\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,vWorldPos.xyz,v_posViewZ,0.0001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,vWorldPos.xyz,v_posViewZ,0.0001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.0001);\n\t\t#endif\n\t#endif\t\n\t\n    vec3 normal =  normalize(vWorldNorm);\n\tvec4 normtex = texture2D( texNormal, vUv );\n\t#ifdef HAS_TANGENT\t\n\tnormal = applyNormalTex(normtex.xyz, normal);\n\t#endif\n    vec3 view   = -normalize(vViewDir);\n    float NoV = saturate(dot( view, normal ));\n    vec3 R = 2. * NoV * normal - view;\n\tfloat roughness = normtex.a;\n\t#ifdef FIX_ROUGHNESS\n\troughness = u_roughness;\n\t#endif\n\t\n\tvec4 pbrl = pbrlight(normal,roughness,NoV,R)*u_hdrexposure;\n    gl_FragColor.rgb =  pow(pbrl.rgb,vec3(0.45455));\n\t//gl_FragColor.rgb = oldlight(normtex,NoV,R);\n\t#ifdef RECEIVESHADOW\n\tgl_FragColor.rgb *= max(shadowValue,0.7);\n\t#endif\n\t\n    gl_FragColor.a = pbrl.a;\n\n#endif\n}\n', a = ui.add(h, t, e, i, n), Gi.SHADERDEFINE_FIX_METALESS = a.registerMaterialDefine("FIX_METALESS"), Gi.SHADERDEFINE_FIX_ROUGHNESS = a.registerMaterialDefine("FIX_ROUGHNESS"), Gi.SHADERDEFINE_HAS_TANGENT = a.registerMaterialDefine("HAS_TANGENT"), Gi.SHADERDEFINE_HAS_PBRINFO = a.registerMaterialDefine("HAS_PBRINFO"), Gi.SHADERDEFINE_USE_GROUNDTRUTH = a.registerMaterialDefine("USE_GROUNDTRUTH"), Gi.SHADERDEFINE_TEST_CLIPZ = a.registerMaterialDefine("CLIPZ"), i = {
            a_Position: 0,
            a_Normal: 3,
            a_Tangent0: 5,
            a_Texcoord0: 2,
            a_BoneWeights: 7,
            a_BoneIndices: 6
          }, n = {
            u_Bones: [0, 0],
            u_MvpMatrix: [1, 2],
            u_WorldMat: [0, 2],
            u_CameraPos: [0, 3],
            u_AlphaTestValue: [0, 1],
            u_DiffuseColor: [7, 1],
            u_EmissionColor: [8, 1],
            u_DiffuseTexture: [1, 1],
            u_NormalTexture: [3, 1],
            u_ParallaxTexture: [4, 1],
            u_MetallicGlossTexture: [2, 1],
            u_OcclusionTexture: [5, 1],
            u_EmissionTexture: [6, 1],
            u_metallic: [9, 1],
            u_smoothness: [10, 1],
            u_smoothnessScale: [11, 1],
            u_occlusionStrength: [13, 1],
            u_normalScale: [14, 1],
            u_parallaxScale: [15, 1],
            u_TilingOffset: [17, 1],
            "u_DirectionLight.Direction": [3, 4],
            "u_DirectionLight.Color": [4, 4],
            u_AmbientColor: [21, 4],
            u_shadowMap1: [18, 4],
            u_shadowMap2: [19, 4],
            u_shadowMap3: [20, 4],
            u_shadowPSSMDistance: [15, 4],
            u_lightShadowVP: [16, 4],
            u_shadowPCFoffset: [17, 4]
          };
          var l = Fi.nameKey.add("PBRStandard");
          t = "attribute vec4 a_Position;\nattribute vec3 a_Normal;\nattribute vec4 a_Tangent0;\nattribute vec2 a_Texcoord0;\n\nuniform mat4 u_MvpMatrix;\nuniform mat4 u_WorldMat;\nuniform vec3 u_CameraPos;\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\nvarying vec3 v_PositionWorld;\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n\t  varying vec4 v_lightMVPPos;\n\t  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef BONE\n\tconst int c_MaxBoneCount = 24;\n\tattribute vec4 a_BoneIndices;\n\tattribute vec4 a_BoneWeights;\n\tuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\nvoid main_castShadow()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\t \n\t//TODO没考虑UV动画呢\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tv_Texcoord0 = a_Texcoord0;\n\t#endif\n\t\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n\tmat3 worldMat;\n\t#ifdef BONE\n\t\tmat4 skinTransform = mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t\tv_PositionWorld = (u_WorldMat * position).xyz;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t\tworldMat = mat3(u_WorldMat);\n\t\tv_PositionWorld = (u_WorldMat * a_Position).xyz;\n\t#endif\n\t\n\tv_Normal = worldMat * a_Normal;\n\tv_Tangent = worldMat * a_Tangent0.xyz;\n\tv_Binormal = cross(v_Normal, v_Tangent) * a_Tangent0.w;\n  \n\tv_Texcoord0 = a_Texcoord0;\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t#endif\n\t\tv_Texcoord0=vec2(v_Texcoord0.x,1.0 + v_Texcoord0.y);\n  \n\tv_ViewDir = u_CameraPos - v_PositionWorld;\n  \n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1 \n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif\n}", e = '#ifdef FSHIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\n\nuniform vec4 u_AmbientColor;\nuniform vec4 u_DiffuseColor;\n\n#ifdef DIFFUSETEXTURE\n\tuniform sampler2D u_DiffuseTexture;\n#endif\n#ifdef METALLICGLOSSTEXTURE\n\tuniform sampler2D u_MetallicGlossTexture;\n#endif\n#ifdef NORMALTEXTURE\n\tuniform sampler2D u_NormalTexture;\n\tuniform float u_normalScale;\n#endif\n#ifdef PARALLAXTEXTURE\n\tuniform sampler2D u_ParallaxTexture;\n\tuniform float u_parallaxScale;\n#endif\n#ifdef OCCLUSIONTEXTURE\n\tuniform sampler2D u_OcclusionTexture;\n\tuniform float u_occlusionStrength;\n#endif\n#ifdef EMISSION\n\t#ifdef EMISSIONTEXTURE\n\t\tuniform sampler2D u_EmissionTexture;\n\t#endif\n\tuniform vec4 u_EmissionColor;\n#endif\n\nuniform float u_AlphaTestValue;\nuniform float u_metallic;\nuniform float u_smoothness;\nuniform float u_smoothnessScale;\n\n#include "PBRStandardLighting.glsl"\n#include "ShadowHelper.glsl"\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nuniform DirectionLight u_DirectionLight;\n\nvoid main_castShadow()\n{\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\n\nvoid main_normal()\n{\t\n\tvec3 viewDir = normalize(v_ViewDir);\n\t\n\tvec2 uv0 = ParallaxOffset(viewDir);\n\t\n\tvec2 mg;\n\t#ifdef DIFFUSETEXTURE\n\t\tvec4 diffuseTextureColor = texture2D(u_DiffuseTexture, uv0);\n\t\tvec4 diffuseColor = diffuseTextureColor * u_DiffuseColor;\n\t\tmg = MetallicGloss(diffuseTextureColor.a, uv0);\n\t#else\n\t\tvec4 diffuseColor = u_DiffuseColor;\n\t\tmg = MetallicGloss(1.0, uv0);\n\t#endif\n\t\n\t#ifdef ALPHATEST\n\t\tif(diffuseColor.a < u_AlphaTestValue)\n\t\t\tdiscard;\n\t#endif\n\t\n\tgl_FragColor = diffuseColor;\n\t\n\tvec3 normal = UnpackScaleNormal(uv0);\n  \n\tvec3 gi = (u_AmbientColor * Occlusion(uv0)).rgb;\n  \n\tvec4 color = PBRStandardDiectionLight(diffuseColor.rgb, mg.r, mg.g, normal, viewDir, u_DirectionLight, gi);\n\t\n\tcolor.a = diffuseColor.a;\n\t\n\t#ifdef EMISSION\n\t\tvec4 emissionColor = u_EmissionColor;\n\t\t#ifdef EMISSIONTEXTURE\n\t\t\temissionColor *=  texture2D(u_EmissionTexture, uv0);\n\t\t#endif\n\t\tcolor.rgb += emissionColor.rgb;\n\t#endif\n\t\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t\t#endif\n\t\tgl_FragColor = vec4(color.rgb * shadowValue, color.a);\n\t#else\n\t\tgl_FragColor = color;\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\t\t\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif  \n}\n\n', a = ui.add(l, t, e, i, n), zi.SHADERDEFINE_DIFFUSETEXTURE = a.registerMaterialDefine("DIFFUSETEXTURE"), zi.SHADERDEFINE_METALLICGLOSSTEXTURE = a.registerMaterialDefine("METALLICGLOSSTEXTURE"), zi.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = a.registerMaterialDefine("SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA"), zi.SHADERDEFINE_NORMALTEXTURE = a.registerMaterialDefine("NORMALTEXTURE"), zi.SHADERDEFINE_PARALLAXTEXTURE = a.registerMaterialDefine("PARALLAXTEXTURE"), zi.SHADERDEFINE_OCCLUSIONTEXTURE = a.registerMaterialDefine("OCCLUSIONTEXTURE"), zi.SHADERDEFINE_EMISSION = a.registerMaterialDefine("EMISSION"), zi.SHADERDEFINE_EMISSIONTEXTURE = a.registerMaterialDefine("EMISSIONTEXTURE"), zi.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), i = {
            a_Position: 0,
            a_Normal: 3,
            a_Tangent0: 5,
            a_Texcoord0: 2,
            a_BoneWeights: 7,
            a_BoneIndices: 6
          }, n = {
            u_Bones: [0, 0],
            u_MvpMatrix: [1, 2],
            u_WorldMat: [0, 2],
            u_CameraPos: [0, 3],
            u_AlphaTestValue: [0, 1],
            u_DiffuseColor: [7, 1],
            u_SpecularColor: [8, 1],
            u_EmissionColor: [9, 1],
            u_DiffuseTexture: [1, 1],
            u_NormalTexture: [3, 1],
            u_ParallaxTexture: [4, 1],
            u_SpecularTexture: [2, 1],
            u_OcclusionTexture: [5, 1],
            u_EmissionTexture: [6, 1],
            u_smoothness: [10, 1],
            u_smoothnessScale: [11, 1],
            u_occlusionStrength: [13, 1],
            u_normalScale: [14, 1],
            u_parallaxScale: [15, 1],
            u_TilingOffset: [17, 1],
            "u_DirectionLight.Direction": [3, 4],
            "u_DirectionLight.Color": [4, 4],
            u_AmbientColor: [21, 4],
            u_shadowMap1: [18, 4],
            u_shadowMap2: [19, 4],
            u_shadowMap3: [20, 4],
            u_shadowPSSMDistance: [15, 4],
            u_lightShadowVP: [16, 4],
            u_shadowPCFoffset: [17, 4]
          };
          var u = Fi.nameKey.add("PBRSpecular");
          t = "attribute vec4 a_Position;\nattribute vec3 a_Normal;\nattribute vec4 a_Tangent0;\nattribute vec2 a_Texcoord0;\n\nuniform mat4 u_MvpMatrix;\nuniform mat4 u_WorldMat;\nuniform vec3 u_CameraPos;\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\nvarying vec3 v_PositionWorld;\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n\t  varying vec4 v_lightMVPPos;\n\t  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef BONE\n\tconst int c_MaxBoneCount = 24;\n\tattribute vec4 a_BoneIndices;\n\tattribute vec4 a_BoneWeights;\n\tuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\nvoid main_castShadow()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\t \n\t//TODO没考虑UV动画呢\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tv_Texcoord0 = a_Texcoord0;\n\t#endif\n\t\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n\tmat3 worldMat;\n\t#ifdef BONE\n\t\tmat4 skinTransform = mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t\tv_PositionWorld = (u_WorldMat * position).xyz;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t\tworldMat = mat3(u_WorldMat);\n\t\tv_PositionWorld = (u_WorldMat * a_Position).xyz;\n\t#endif\n\t\n\tv_Normal = worldMat * a_Normal;\n\tv_Tangent = worldMat * a_Tangent0.xyz;\n\tv_Binormal = cross(v_Normal, v_Tangent) * a_Tangent0.w;\n  \n\tv_Texcoord0 = a_Texcoord0;\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t#endif\n\t\tv_Texcoord0=vec2(v_Texcoord0.x,1.0 + v_Texcoord0.y);\n  \n\tv_ViewDir = u_CameraPos - v_PositionWorld;\n  \n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1 \n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif\n}", e = '#ifdef FSHIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\n\nuniform vec4 u_AmbientColor;\nuniform vec4 u_DiffuseColor;\nuniform vec4 u_SpecularColor;\n\n#ifdef DIFFUSETEXTURE\n\tuniform sampler2D u_DiffuseTexture;\n#endif\n#ifdef SPECULARTEXTURE\n\tuniform sampler2D u_SpecularTexture;\n#endif\n#ifdef NORMALTEXTURE\n\tuniform sampler2D u_NormalTexture;\n\tuniform float u_normalScale;\n#endif\n#ifdef PARALLAXTEXTURE\n\tuniform sampler2D u_ParallaxTexture;\n\tuniform float u_parallaxScale;\n#endif\n#ifdef OCCLUSIONTEXTURE\n\tuniform sampler2D u_OcclusionTexture;\n\tuniform float u_occlusionStrength;\n#endif\n#ifdef EMISSION\n\t#ifdef EMISSIONTEXTURE\n\t\tuniform sampler2D u_EmissionTexture;\n\t#endif\n\tuniform vec4 u_EmissionColor;\n#endif\n\nuniform float u_AlphaTestValue;\nuniform float u_metallic;\nuniform float u_smoothness;\nuniform float u_smoothnessScale;\n\n#include "PBRSpecularLighting.glsl"\n#include "ShadowHelper.glsl"\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nuniform DirectionLight u_DirectionLight;\n\nvoid main_castShadow()\n{\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\n\nvoid main_normal()\n{\t\n\tvec3 viewDir = normalize(v_ViewDir);\n\t\n\tvec2 uv0 = ParallaxOffset(viewDir);\n\t\n\tvec4 sg;\n\t#ifdef DIFFUSETEXTURE\n\t\tvec4 diffuseTextureColor = texture2D(u_DiffuseTexture, uv0);\n\t\tvec4 diffuseColor = diffuseTextureColor * u_DiffuseColor;\n\t\tsg = SpecularGloss(diffuseTextureColor.a, uv0);\n\t#else\n\t\tvec4 diffuseColor = u_DiffuseColor;\n\t\tsg = SpecularGloss(1.0, uv0);\n\t#endif\n\t\n\t#ifdef ALPHATEST\n\t\tif(diffuseColor.a < u_AlphaTestValue)\n\t\t\tdiscard;\n\t#endif\n  \n\tvec3 normal = UnpackScaleNormal(uv0);\n\t\n\tvec3 gi = (u_AmbientColor * Occlusion(uv0)).rgb;\n\t\n\t//float a = (sg.r+sg.g+sg.b) / 3.0;\n  \n\tvec4 color = PBRSpecularDiectionLight(diffuseColor.rgb, sg.rgb, sg.a, normal,viewDir, u_DirectionLight, gi);\n\t\n\tcolor.a = diffuseColor.a;\n\t\n\t#ifdef EMISSION\n\t\tvec4 emissionColor = u_EmissionColor;\n\t\t#ifdef EMISSIONTEXTURE\n\t\t\temissionColor *=  texture2D(u_EmissionTexture, uv0);\n\t\t#endif\n\t\tcolor.rgb += emissionColor.rgb;\n\t#endif\n\t\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t\t#endif\n\t\tgl_FragColor = vec4(color.rgb * shadowValue, color.a);\n\t#else\n\t\tgl_FragColor = color;\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\t\t\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif  \n}\n\n', a = ui.add(u, t, e, i, n), Hi.SHADERDEFINE_DIFFUSETEXTURE = a.registerMaterialDefine("DIFFUSETEXTURE"), Hi.SHADERDEFINE_SPECULARTEXTURE = a.registerMaterialDefine("SPECULARTEXTURE"), Hi.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = a.registerMaterialDefine("SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA"), Hi.SHADERDEFINE_NORMALTEXTURE = a.registerMaterialDefine("NORMALTEXTURE"), Hi.SHADERDEFINE_PARALLAXTEXTURE = a.registerMaterialDefine("PARALLAXTEXTURE"), Hi.SHADERDEFINE_OCCLUSIONTEXTURE = a.registerMaterialDefine("OCCLUSIONTEXTURE"), Hi.SHADERDEFINE_EMISSION = a.registerMaterialDefine("EMISSION"), Hi.SHADERDEFINE_EMISSIONTEXTURE = a.registerMaterialDefine("EMISSIONTEXTURE"), Hi.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), i = {
            a_position: 0,
            a_normal: 3,
            uv: 2
          }, n = {
            irrad_mat_red: [10, 3],
            irrad_mat_green: [11, 3],
            irrad_mat_blue: [12, 3],
            u_hdrexposure: [13, 3],
            texBaseColor: [1, 1],
            texNormal: [2, 1],
            texSky: [11, 1],
            texUnderWater: [3, 1],
            texPrefilterdEnv: [8, 3],
            texPrefilterDiff: [7, 3],
            texWaterDisp: [4, 1],
            texWaveDetail: [9, 1],
            texDeepColor: [10, 1],
            texWaterInfo: [16, 1],
            texFoam: [17, 1],
            GEOWAVE_UV_SCALE: [18, 1],
            modelMatrix: [0, 2],
            mvp: [1, 2],
            cameraPosition: [0, 3],
            u_curTm: [8, 1],
            u_scrsize: [15, 1],
            u_WaveInfoD: [13, 1],
            u_WaveInfo: [12, 1],
            u_WaveMainDir: [14, 1],
            u_DeepScale: [20, 1],
            u_SeaColor: [19, 1],
            u_View: [1, 3],
            u_Project: [2, 3],
            u_FogStart: [1, 4],
            u_FogRange: [2, 4],
            u_FogColor: [0, 4],
            "u_DirectionLight.Direction": [3, 4],
            "u_DirectionLight.Diffuse": [4, 4],
            "u_PointLight.Position": [5, 4],
            "u_PointLight.Range": [6, 4],
            "u_PointLight.Attenuation": [7, 4],
            "u_PointLight.Diffuse": [8, 4],
            "u_SpotLight.Position": [9, 4],
            "u_SpotLight.Direction": [10, 4],
            "u_SpotLight.Range": [12, 4],
            "u_SpotLight.Spot": [11, 4],
            "u_SpotLight.Attenuation": [13, 4],
            "u_SpotLight.Diffuse": [14, 4]
          };
          var c = Fi.nameKey.add("Water");
          t = '\nuniform mat4 modelMatrix;\n//uniform mat4 modelViewMatrix;\n//uniform mat4 projectionMatrix;\nuniform mat4 u_View;\nuniform mat4 u_Project;\nuniform mat4 mvp;\n//uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\nuniform float u_curTm;\n\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 uv;\n//uniform sampler2D texWaterDisp;\n#ifdef USE_VERTEX_DEEPINFO\n#else\nuniform sampler2D texWaterInfo;\nvarying vec4 vWaterInfo;\nuniform float u_DeepScale;//texWaterInfo.r*vDeepScale\n#endif\nuniform float u_WaveMainDir;\t//主波方向\nuniform float GEOWAVE_UV_SCALE ;//= 100.0;\n\n\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\nvarying vec3 vWorldTan;\nvarying vec3 vWorldBin;\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\nvarying vec3 vLightDir;\nvarying vec3 vViewDir;\nvarying vec3 vDisp;\nvarying float fDeep;\nvarying mat2 matUVTrans;\nvarying float fFoam;\n\nconst float PI = 3.14159265358979323846264;\n\n#include "WaveFunction.glsl"\n\nvec2 getPosFromUV(vec2 uv){\n\treturn uv*50.;\n}\n\nvoid main() {\n\tvec3 pos = a_position;\n    vUv = uv;\n\t\n\t//vDisp = texture2D(texWaterDisp,uv).rgb;\n\t//vec3 disp = vDisp;\n\t\n\t//TODO 这里有个潜规则。\n\tfloat tt = pos.y; pos.y=pos.z; pos.z=-tt;\n\t\n\t#ifdef USE_VERTEX_DEEPINFO\n\tfDeep = -pos.y;\n\tpos.y=0.0;\n\t#else\n\tvWaterInfo = texture2D(texWaterInfo,uv);\n\tfDeep = vWaterInfo.r*u_DeepScale;\n\t#endif\n\t\n\t\n\t//计算波形\n\tmat4 modelMat = modelMatrix;\n\tvec3 opos, T,B,N;\n\tfloat foams=0.;\n\tvec2 uvpos = uv*GEOWAVE_UV_SCALE+vec2(modelMat[3][0],0.);//TODO 如果有旋转缩放怎么办\n\tcalcGerstnerWave(u_curTm, pos,fDeep, uvpos,opos,B,T,N,foams);\n\tfFoam = foams;\n\tgl_Position = mvp*vec4(opos,1.);\n\tvWorldPos = modelMat*vec4(opos,1.);\n\n\tvWorldNorm = normalize((modelMatrix*vec4(N,0.0)).xyz);\n\tvWorldTan = normalize((modelMatrix*vec4(T,0.0)).xyz);\n\tvWorldBin = normalize((modelMatrix*vec4(B,0.0)).xyz);\n    vViewDir = vWorldPos.xyz-cameraPosition; //这个不能取normalize，否则会引入非线性\n\t\n\tfloat s = sin(u_WaveMainDir);\n\tfloat c = cos(u_WaveMainDir);\n\tmatUVTrans = mat2(c,-s,s,c);\n}\n', e = "//#version 300 es\n\nprecision highp float;\nprecision lowp int;\n\nconst float PI = 3.14159265358979323846264;\nconst float _2PI = 6.2831853071796;\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\nvarying vec3 vWorldTan;\nvarying vec3 vWorldBin;\nvarying vec3 vViewDir;//入射。pos-cam\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\nvarying float fDeep;\nvarying mat2 matUVTrans;\n#ifdef USE_VERTEX_DEEPINFO\n#else\nvarying vec4 vWaterInfo;\n#endif\nmat3 matTBNOff;//\n\n//\nuniform sampler2D texBaseColor;\nuniform sampler2D texNormal;\n#ifdef CUBE_ENV\nuniform samplerCube texSky;\n#else\nuniform sampler2D texSky;\n#endif\nuniform sampler2D texUnderWater;\nuniform sampler2D texWaveDetail;\n//uniform sampler2D texDeepColor;\nuniform sampler2D texFoam;\nvarying float fFoam;\nuniform float u_curTm;\nuniform vec2 u_scrsize;\nuniform vec3 u_SeaColor;//\n\nconst int NumTexWaves=4;\nconst float Amp_over_L = 0.01;\n//const vec3 SEA_COLOR1 = vec3(0.0292,0.672,0.7467);//大洋\n//const vec3 SEA_COLOR2 = vec3(0,0.927,0.43);//近海\n\nconst float _maxu8 = 255.0;\nconst float _maxu16 = 65535.0;\nconst float _shift8 = 256.0;    //平移的话是*256而不是255\nvec2 _RGBAToU16(const in vec4 rgba){\n    return vec2((rgba.r*_maxu8+rgba.g*_maxu8*_shift8)/_maxu16, (rgba.b*_maxu8+rgba.a*_maxu8*_shift8)/_maxu16);\n}\nvec3 _RGBEToRGB( const in vec4 rgba ){\n    float f = pow(2.0, rgba.w * 255.0 - (128.0 + 8.0));\n    return rgba.rgb * (255.0 * f);\n}\n\nfloat saturate(float v){\n    return min(max(v,0.),1.);\n}\n\n/*\n\t各种 ToneMap\n*/\n//Reinhard\nvec3 ReinhardToneMapping(vec3 color, float adapted_lum) {\n    const float MIDDLE_GREY = 1.;\n    color *= MIDDLE_GREY / adapted_lum;\n    return color / (1.0 + color);\n}\n\n//CE2\nvec3 CEToneMapping(vec3 color, float adapted_lum){\n    return 1. - exp(-adapted_lum * color);\n}\n\n//UC2\nvec3 F1(vec3 x){\n\tconst float A = 0.22;\n\tconst float B = 0.30;\n\tconst float C = 0.10;\n\tconst float D = 0.20;\n\tconst float E = 0.01;\n\tconst float F = 0.30;\n \n\treturn ((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - E / F;\n}\n\nvec3 Uncharted2ToneMapping(vec3 color, float adapted_lum){\n\tconst vec3 WHITE = vec3(11.2);\n\treturn F1(1.6 * adapted_lum * color) / F1(WHITE);\n}\n\n//ACES\nvec3 ACESToneMapping(vec3 color, float adapted_lum){\n\tconst float A = 2.51;\n\tconst float B = 0.03;\n\tconst float C = 2.43;\n\tconst float D = 0.59;\n\tconst float E = 0.14;\n\n\tcolor *= adapted_lum;\n\treturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n\n/*\n* 对一个全景图进行采样。假设x轴指向中心。\n*/\nvec4 texPanorama(sampler2D tex, const in vec3 dir){\n\tfloat envu = atan(dir.z,dir.x)/_2PI+0.5; \t\n\tfloat envv = acos(dir.y)/PI;//(1.0-dir.y)/2.0;\n\treturn texture2D(tex,vec2(envu,envv));\n}\n\n/*\n\t与位于0点的测试棒的相交测试交点\n\t这个是瞎写的，只是为了测试\n*/\nbool hitClydiner(vec3 pos, vec3 dir, out vec3 hitpos, out vec3 hitnormal){\n\tconst float r = 0.5;\n\tfloat a = dir.x*dir.x+dir.z*dir.z;\n\tfloat b = 2.*dir.x*pos.x+2.*dir.z*pos.z;\n\tfloat c = pos.x*pos.x+pos.z*pos.z-r*r;\n\tfloat d = b*b-4.*a*c;\n\tif(d>=0.0){\n\t\tfloat t = (-b+sqrt(d))/2./a;\n\t\tt =min(t, (-b-sqrt(d))/2./a);\n\t\thitpos = pos+dir*t;\n\t\treturn true;\n\t}\n\t/*\n\tvec3 v1 = normalize(cross(dir,vec3(0.,1.,0.)));//公垂线\n\tfloat dist = dot(pos,v1);//最短距离\n\tif(abs(dist)<r){\n\t\treturn true;\n\t}\n\t*/\n\treturn false;\n}\n\n///* 根据散射公式来计算某个方向的颜色 *///\n//\nfloat phase_function(float costheta, float g, float g2){\n\treturn 1.5*( (1.0-g2) / (2.0+g2) ) * (1.0+costheta*costheta) / pow(1.0+g2-2.0*g*costheta, 1.5);\t\n}\n\nconst float _density = .2;\nconst vec3 _vLightDir=vec3(0.,-1.,0.);//必须是规格化的\nconst int _SAMPLENUM = 20;\nconst float _K1 = 1.0;\nconst float _g = -0.93;\n//\nvec3 calcScatter(vec3 start, vec3 dir, vec3 end){\n\tfloat len = length(end-start);\n\tfloat costheta = dot(dir,_vLightDir);\n\tfloat g2 = _g*_g;\n\tfloat K = _K1*len*_density*phase_function(costheta,_g,g2);\n\t//用分段的方式来积分\n\tfloat dlen = len/float(_SAMPLENUM);//距离平分\n\tfloat ddeep = (start.y-end.y)/float(_SAMPLENUM);//深度平分\n\tfloat sum=0.;\n\tfor( int i=0; i<_SAMPLENUM; i++){\n\t\tfloat fi = float(i);\n\t\tfloat v1 = exp(-_density*(dlen+ddeep)*fi);//TODO 应该可以用分析法计算出来\n\t\tsum += v1;\n\t}\n\treturn vec3(K*sum);\n}\n///* 根据散射公式来计算某个方向的亮度  END *///\n\nconst float cDeep = -2.;\t//假设水的深度\nvec3 getShuiDiColor(vec3 pos, vec3 dir, vec3 normal){\n\t//一个无限大的水底，黑白格纹理。纹理长度为1米\n\tfloat t = ( cDeep-pos.y )/dir.y;\n\tif(t<0.) return vec3(1.,0.,0.);//TEST\n\tbool bhit = false;\n\tvec3 hitpos;\n\tvec3 hitcolor;\n\tvec3 hn;\n\tif(hitClydiner(pos,dir,hitpos,hn) && hitpos.y>cDeep && hitpos.y<pos.y){\n\t\tbhit=true;\n\t\thitcolor = vec3(.8,.8,.8);\n\n\t}else\n\t{\n\t\thitpos = pos+dir*t;\n\t\tvec3 hp = floor(hitpos);\n\t\tfloat a = mod((hp.x+hp.z),2.);\n\t\thitcolor = (a<.9)?vec3(0.,0.,0.):vec3(1.,1.,1.);\n\t\t//hitcolor = texture2D(texUnderWater,hitpos.xz/10.).rgb;\n\t}\n\t\n\tfloat l = length(hitpos-pos);\n\t//return texture2D(texDeepColor,vec2(min(max(l/400.,0.),1.),0.5)).rgb;\n\t//return SEA_COLOR1*calcScatter(pos,dir,hitpos);\n\tfloat left = pow(0.8,l);//假设透过率为80%，则到达水底的时候的光强。\n\treturn mix(hitcolor,u_SeaColor,1.-left);\n}\n\n/*\n\tview已经normalize了\n*/\nvec3 getRefractColor(vec3 view,vec3 normal){\n\tvec3 T = refract(-view, normal, 0.7);\n\treturn getShuiDiColor(vWorldPos.xyz,T,normal); \n}\n\nvec4 calcWaterC(vec3 view, vec3 normal, float von, vec3 R, float rough){\n\t/*\n\t只有浪顶的法线向下，也就是波形形成了交叠的时候，才会这样，所以要通过参数控制避免出现这种情况，而不是在这里保护。\n\tif(dot(R,vec3(0.,1.,0.))<0.){\n\t\tR = -R;\n\t}\n\t*/\n\t//vec3 refr = getRefractColor(-view,normal);\n#ifdef USE_REFR_TEX\t\n\tvec3 refr = texture2D(texUnderWater, gl_FragCoord.xy/u_scrsize+normal.xz/8.).rgb;\n#else\n\tvec3 refr = u_SeaColor;\n#endif\n\tfloat F0=0.02;\n\t//菲涅尔，越大反射越强\n\tfloat f =  F0+(1.0-F0)*exp2((-5.55473*von-6.98316)*von);\n\t//float f = F0+(1.0-F0)*pow(1.-von,5.);\n\t//能看到水底的程度。反射剩余的*水中的衰减\n\t//float a = (1.-f)*(1.-deepk);\n#ifdef CUBE_ENV\n\tvec4 reflc = textureCube(texSky,R);\n#else\n\tvec4 reflc = texPanorama(texSky, R);\n#endif\n#ifdef HDR_ENV\n\tvec3 refl = _RGBEToRGB(reflc)*f;\n#else\n\tvec3 refl = reflc.rgb*f;\n#endif\n\t//return vec4(refl*(1.-rough),1.);\n\t\n\t//vec3 refl = reflc.rgb*f;\n\tvec3 final = mix(refr, u_SeaColor, min(fDeep/10.,1.))+refl*(max(0.,1.-rough));\n#ifdef HDR_ENV\n\tfinal = ACESToneMapping(final,1.);//TODO 这个要uniform传入\n#endif\n\treturn vec4(final,f);\n}\n\nvoid main() {\n    vec3 normal =  normalize(vWorldNorm);\n\t//如果uv=1为100米，希望每个细节纹理表示20米的小波形，则uv缩放是 100/20。细节纹理内部也要用这个值，即pos=uv*20\n\tvec2 ruv = matUVTrans*vUv;\n\tvec3 detailNorm = texture2D(texWaveDetail,fract(ruv*5.)).rgb*2.-vec3(1.);//TODO uv怎么算\n\tfloat texNormScale = 2.*PI*float(NumTexWaves)*Amp_over_L*2.5;\n\tdetailNorm *= vec3(texNormScale,1.,texNormScale);\n\t//旋转\n\t//细节纹理来自rendertarget，因此需要颠倒z\n\t\n\tmatTBNOff = mat3(matUVTrans[0][0],0.,matUVTrans[1][0],\n\t0.,1.,0.,\n\tmatUVTrans[0][1],0.,matUVTrans[1][1]\n\t);\n\t\n\t/*\n\tmatTBNOff = mat3(0.,0.,1.,\n\t0.,1.,0.,\n\t-1.,0.,0.\n\t);\n\t*/\n\n    mat3 tsn = mat3( vWorldBin, normal, vWorldTan);\t\n    //normal = normalize(tsn * matTBNOff * detailNorm);\n\tnormal = normalize(tsn * detailNorm); //这个应该更正确。因为本身方向就是根据uv算的，如果是静态图片才需要转换。\n\t//vec4 normtex = texture2D( texNormal, vUv );\n    vec3 view   = -normalize(vViewDir);//view 是指向camera的\n    float NoV = saturate(dot( view, normal ));\n    //vec3 R = 2. * NoV * normal - view;\n\t\n#ifdef USE_FOAM\t\n\tvec4 foamc = (texture2D(texFoam,vUv*50.)+texture2D(texFoam,vUv*20.))/2.;\n\tfloat nearcoast = 1.-min(fDeep/10.,1.);// 1.-vWaterInfo.r;\n\tfloat foams = (nearcoast/4.+fFoam)*2.*nearcoast;\n#else\n\tfloat foams =0.;\n#endif\n\t\n\tvec3 R = reflect(-view,normal);\n\tvec4 wc = calcWaterC(view, normal,NoV,R, foams);\n\n\tgl_FragColor.rgb = wc.rgb;//normalize(detailNorm).rrr;//((normal)+vec3(0.0))/1.;//normalize(normal).rgb;//texture2D(texWaveDetail,vUv).rgb;// fracColor * texture2D(texUnderWater, vUv*20.0).rgb;// vec3(1.0);//pbrl.rgb;\n    gl_FragColor.a = 1.0;//wc.a;\n#ifdef USE_FOAM\n\tgl_FragColor.rgb = mix(gl_FragColor.rgb,vec3(1.),foamc.a*foams);\n\tgl_FragColor.a = foamc.r;\n#endif\n\t//if(mod(vUv.x*100.,1.0)<0.02 || mod(vUv.y*100.,1.0)<0.02) gl_FragColor.rgb=vec3(0.5,.5,.5);\n\t//gl_FragColor.rgb = detailNorm;\n}\n", a = ui.add(c, t, e, i, n), Xi.SHADERDEFINE_CUBE_ENV = a.registerMaterialDefine("CUBE_ENV"), Xi.SHADERDEFINE_HDR_ENV = a.registerMaterialDefine("HDR_ENV"), Xi.SHADERDEFINE_SHOW_NORMAL = a.registerMaterialDefine("SHOW_NORMAL"), Xi.SHADERDEFINE_USEVERTEXHEIGHT = a.registerMaterialDefine("USE_VERTEX_DEEPINFO"), Xi.SHADERDEFINE_USE_FOAM = a.registerMaterialDefine("USE_FOAM"), Xi.SHADERDEFINE_USE_REFRACT_TEX = a.registerMaterialDefine("USE_REFR_TEX"), i = {
            a_CornerTextureCoordinate: 17,
            a_MeshPosition: 0,
            a_MeshColor: 1,
            a_MeshTextureCoordinate: 2,
            a_ShapePositionStartLifeTime: 30,
            a_DirectionTime: 32,
            a_StartColor: 19,
            a_EndColor: 23,
            a_StartSize: 20,
            a_StartRotation0: 22,
            a_StartSpeed: 31,
            a_Random0: 34,
            a_Random1: 35,
            a_SimulationWorldPostion: 36,
            a_SimulationWorldRotation: 37
          }, n = {
            u_Tintcolor: [2, 1],
            u_TilingOffset: [3, 1],
            u_texture: [1, 1],
            u_WorldPosition: [0, 2],
            u_WorldRotation: [1, 2],
            u_PositionScale: [4, 2],
            u_SizeScale: [5, 2],
            u_ScalingMode: [6, 2],
            u_Gravity: [7, 2],
            u_ThreeDStartRotation: [8, 2],
            u_StretchedBillboardLengthScale: [9, 2],
            u_StretchedBillboardSpeedScale: [10, 2],
            u_SimulationSpace: [11, 2],
            u_CurrentTime: [12, 2],
            u_ColorOverLifeGradientAlphas: [22, 2],
            u_ColorOverLifeGradientColors: [23, 2],
            u_MaxColorOverLifeGradientAlphas: [24, 2],
            u_MaxColorOverLifeGradientColors: [25, 2],
            u_VOLVelocityConst: [13, 2],
            u_VOLVelocityGradientX: [14, 2],
            u_VOLVelocityGradientY: [15, 2],
            u_VOLVelocityGradientZ: [16, 2],
            u_VOLVelocityConstMax: [17, 2],
            u_VOLVelocityGradientMaxX: [18, 2],
            u_VOLVelocityGradientMaxY: [19, 2],
            u_VOLVelocityGradientMaxZ: [20, 2],
            u_VOLSpaceType: [21, 2],
            u_SOLSizeGradient: [26, 2],
            u_SOLSizeGradientX: [27, 2],
            u_SOLSizeGradientY: [28, 2],
            u_SOLSizeGradientZ: [29, 2],
            u_SOLSizeGradientMax: [30, 2],
            u_SOLSizeGradientMaxX: [31, 2],
            u_SOLSizeGradientMaxY: [32, 2],
            u_SOLSizeGradientMaxZ: [33, 2],
            u_ROLAngularVelocityConst: [34, 2],
            u_ROLAngularVelocityConstSeprarate: [35, 2],
            u_ROLAngularVelocityGradient: [36, 2],
            u_ROLAngularVelocityGradientX: [37, 2],
            u_ROLAngularVelocityGradientY: [38, 2],
            u_ROLAngularVelocityGradientZ: [39, 2],
            u_ROLAngularVelocityGradientW: [40, 2],
            u_ROLAngularVelocityConstMax: [41, 2],
            u_ROLAngularVelocityConstMaxSeprarate: [42, 2],
            u_ROLAngularVelocityGradientMax: [43, 2],
            u_ROLAngularVelocityGradientMaxX: [44, 2],
            u_ROLAngularVelocityGradientMaxY: [45, 2],
            u_ROLAngularVelocityGradientMaxZ: [46, 2],
            u_ROLAngularVelocityGradientMaxW: [47, 2],
            u_TSACycles: [48, 2],
            u_TSASubUVLength: [49, 2],
            u_TSAGradientUVs: [50, 2],
            u_TSAMaxGradientUVs: [51, 2],
            u_CameraPosition: [0, 3],
            u_CameraDirection: [5, 3],
            u_CameraUp: [6, 3],
            u_View: [1, 3],
            u_Projection: [2, 3],
            u_FogStart: [1, 4],
            u_FogRange: [2, 4],
            u_FogColor: [0, 4]
          };
          var _ = Fi.nameKey.add("PARTICLESHURIKEN");
          t = "#ifdef HIGHPRECISION\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n\n#if defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\n\tattribute vec4 a_CornerTextureCoordinate;\n#endif\n#ifdef RENDERMODE_MESH\n\tattribute vec3 a_MeshPosition;\n\tattribute vec4 a_MeshColor;\n\tattribute vec2 a_MeshTextureCoordinate;\n\tvarying vec4 v_MeshColor;\n#endif\n\nattribute vec4 a_ShapePositionStartLifeTime;\nattribute vec4 a_DirectionTime;\nattribute vec4 a_StartColor;\nattribute vec3 a_StartSize;\nattribute vec3 a_StartRotation0;\nattribute float a_StartSpeed;\n#if defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n  attribute vec4 a_Random0;\n#endif\n#if defined(TEXTURESHEETANIMATIONRANDOMCURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n  attribute vec4 a_Random1;\n#endif\nattribute vec3 a_SimulationWorldPostion;\nattribute vec4 a_SimulationWorldRotation;\n\nvarying float v_Discard;\nvarying vec4 v_Color;\n#ifdef DIFFUSEMAP\n\tvarying vec2 v_TextureCoordinate;\n#endif\n\nuniform float u_CurrentTime;\nuniform vec3 u_Gravity;\n\nuniform vec3 u_WorldPosition;\nuniform vec4 u_WorldRotation;\nuniform bool u_ThreeDStartRotation;\nuniform int u_ScalingMode;\nuniform vec3 u_PositionScale;\nuniform vec3 u_SizeScale;\nuniform mat4 u_View;\nuniform mat4 u_Projection;\n\n#ifdef STRETCHEDBILLBOARD\n\tuniform vec3 u_CameraPosition;\n#endif\nuniform vec3 u_CameraDirection;//TODO:只有几种广告牌模式需要用\nuniform vec3 u_CameraUp;\n\nuniform  float u_StretchedBillboardLengthScale;\nuniform  float u_StretchedBillboardSpeedScale;\nuniform int u_SimulationSpace;\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n  uniform  int  u_VOLSpaceType;\n#endif\n#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)\n  uniform  vec3 u_VOLVelocityConst;\n#endif\n#if defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n  uniform  vec2 u_VOLVelocityGradientX[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientY[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientZ[4];//x为key,y为速度\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n  uniform  vec3 u_VOLVelocityConstMax;\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n  uniform  vec2 u_VOLVelocityGradientMaxX[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientMaxY[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientMaxZ[4];//x为key,y为速度\n#endif\n\n#ifdef COLOROVERLIFETIME\n  uniform  vec4 u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\n  uniform  vec2 u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\n#endif\n#ifdef RANDOMCOLOROVERLIFETIME\n  uniform  vec4 u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\n  uniform  vec2 u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\n  uniform  vec4 u_MaxColorOverLifeGradientColors[4];//x为key,yzw为Color\n  uniform  vec2 u_MaxColorOverLifeGradientAlphas[4];//x为key,y为Alpha\n#endif\n\n\n#if defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMERANDOMCURVES)\n  uniform  vec2 u_SOLSizeGradient[4];//x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVES\n  uniform  vec2 u_SOLSizeGradientMax[4];//x为key,y为尺寸\n#endif\n#if defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\n  uniform  vec2 u_SOLSizeGradientX[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientY[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientZ[4];//x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n  uniform  vec2 u_SOLSizeGradientMaxX[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientMaxY[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientMaxZ[4];//x为key,y为尺寸\n#endif\n\n\n#ifdef ROTATIONOVERLIFETIME\n  #if defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\n    uniform  float u_ROLAngularVelocityConst;\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    uniform  float u_ROLAngularVelocityConstMax;\n  #endif\n  #if defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n    uniform  vec2 u_ROLAngularVelocityGradient[4];//x为key,y为旋转\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    uniform  vec2 u_ROLAngularVelocityGradientMax[4];//x为key,y为旋转\n  #endif\n#endif\n#ifdef ROTATIONOVERLIFETIMESEPERATE\n  #if defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\n    uniform  vec3 u_ROLAngularVelocityConstSeprarate;\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    uniform  vec3 u_ROLAngularVelocityConstMaxSeprarate;\n  #endif\n  #if defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n    uniform  vec2 u_ROLAngularVelocityGradientX[4];\n    uniform  vec2 u_ROLAngularVelocityGradientY[4];\n    uniform  vec2 u_ROLAngularVelocityGradientZ[4];\n\tuniform  vec2 u_ROLAngularVelocityGradientW[4];\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    uniform  vec2 u_ROLAngularVelocityGradientMaxX[4];\n    uniform  vec2 u_ROLAngularVelocityGradientMaxY[4];\n    uniform  vec2 u_ROLAngularVelocityGradientMaxZ[4];\n\tuniform  vec2 u_ROLAngularVelocityGradientMaxW[4];\n  #endif\n#endif\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\n  uniform  float u_TSACycles;\n  uniform  vec2 u_TSASubUVLength;\n  uniform  vec2 u_TSAGradientUVs[4];//x为key,y为frame\n#endif\n#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n  uniform  vec2 u_TSAMaxGradientUVs[4];//x为key,y为frame\n#endif\n\n#ifdef FOG\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvec3 rotationByEuler(in vec3 vector,in vec3 rot)\n{\n\tfloat halfRoll = rot.z * 0.5;\n    float halfPitch = rot.x * 0.5;\n\tfloat halfYaw = rot.y * 0.5;\n\n\tfloat sinRoll = sin(halfRoll);\n\tfloat cosRoll = cos(halfRoll);\n\tfloat sinPitch = sin(halfPitch);\n\tfloat cosPitch = cos(halfPitch);\n\tfloat sinYaw = sin(halfYaw);\n\tfloat cosYaw = cos(halfYaw);\n\n\tfloat quaX = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\n\tfloat quaY = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\n\tfloat quaZ = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\n\tfloat quaW = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\n\t\n\t//vec4 q=vec4(quaX,quaY,quaZ,quaW);\n\t//vec3 temp = cross(q.xyz, vector) + q.w * vector;\n\t//return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\t\n\tfloat x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n\tfloat xx = quaX * x;\n    float xy = quaX * y;\n\tfloat xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n                ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n                ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n\t\n}\n\n//假定axis已经归一化\nvec3 rotationByAxis(in vec3 vector,in vec3 axis, in float angle)\n{\n\tfloat halfAngle = angle * 0.5;\n\tfloat sin = sin(halfAngle);\n\t\n\tfloat quaX = axis.x * sin;\n\tfloat quaY = axis.y * sin;\n\tfloat quaZ = axis.z * sin;\n\tfloat quaW = cos(halfAngle);\n\t\n\t//vec4 q=vec4(quaX,quaY,quaZ,quaW);\n\t//vec3 temp = cross(q.xyz, vector) + q.w * vector;\n\t//return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\t\n\tfloat x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n\tfloat xx = quaX * x;\n    float xy = quaX * y;\n\tfloat xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n                ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n                ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n\t\n}\n\nvec3 rotationByQuaternions(in vec3 v,in vec4 q) \n{\n\treturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\n \n#if defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\nfloat getCurValueFromGradientFloat(in vec2 gradientNumbers[4],in float normalizedAge)\n{\n\tfloat curValue;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientNumber=gradientNumbers[i];\n\t\tfloat key=gradientNumber.x;\n\t\tif(key>=normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientNumber=gradientNumbers[i-1];\n\t\t\tfloat lastKey=lastGradientNumber.x;\n\t\t\tfloat age=(normalizedAge-lastKey)/(key-lastKey);\n\t\t\tcurValue=mix(lastGradientNumber.y,gradientNumber.y,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn curValue;\n}\n#endif\n\n#if defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\nfloat getTotalValueFromGradientFloat(in vec2 gradientNumbers[4],in float normalizedAge)\n{\n\tfloat totalValue=0.0;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientNumber=gradientNumbers[i];\n\t\tfloat key=gradientNumber.x;\n\t\tvec2 lastGradientNumber=gradientNumbers[i-1];\n\t\tfloat lastValue=lastGradientNumber.y;\n\t\t\n\t\tif(key>=normalizedAge){\n\t\t\tfloat lastKey=lastGradientNumber.x;\n\t\t\tfloat age=(normalizedAge-lastKey)/(key-lastKey);\n\t\t\ttotalValue+=(lastValue+mix(lastValue,gradientNumber.y,age))/2.0*a_ShapePositionStartLifeTime.w*(normalizedAge-lastKey);\n\t\t\tbreak;\n\t\t}\n\t\telse{\n\t\t\ttotalValue+=(lastValue+gradientNumber.y)/2.0*a_ShapePositionStartLifeTime.w*(key-lastGradientNumber.x);\n\t\t}\n\t}\n\treturn totalValue;\n}\n#endif\n\n#if defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)\nvec4 getColorFromGradient(in vec2 gradientAlphas[4],in vec4 gradientColors[4],in float normalizedAge)\n{\n\tvec4 overTimeColor;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientAlpha=gradientAlphas[i];\n\t\tfloat alphaKey=gradientAlpha.x;\n\t\tif(alphaKey>=normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientAlpha=gradientAlphas[i-1];\n\t\t\tfloat lastAlphaKey=lastGradientAlpha.x;\n\t\t\tfloat age=(normalizedAge-lastAlphaKey)/(alphaKey-lastAlphaKey);\n\t\t\toverTimeColor.a=mix(lastGradientAlpha.y,gradientAlpha.y,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec4 gradientColor=gradientColors[i];\n\t\tfloat colorKey=gradientColor.x;\n\t\tif(colorKey>=normalizedAge)\n\t\t{\n\t\t\tvec4 lastGradientColor=gradientColors[i-1];\n\t\t\tfloat lastColorKey=lastGradientColor.x;\n\t\t\tfloat age=(normalizedAge-lastColorKey)/(colorKey-lastColorKey);\n\t\t\toverTimeColor.rgb=mix(gradientColors[i-1].yzw,gradientColor.yzw,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn overTimeColor;\n}\n#endif\n\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\nfloat getFrameFromGradient(in vec2 gradientFrames[4],in float normalizedAge)\n{\n\tfloat overTimeFrame;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientFrame=gradientFrames[i];\n\t\tfloat key=gradientFrame.x;\n\t\tif(key>=normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientFrame=gradientFrames[i-1];\n\t\t\tfloat lastKey=lastGradientFrame.x;\n\t\t\tfloat age=(normalizedAge-lastKey)/(key-lastKey);\n\t\t\toverTimeFrame=mix(lastGradientFrame.y,gradientFrame.y,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn floor(overTimeFrame);\n}\n#endif\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nvec3 computeParticleLifeVelocity(in float normalizedAge)\n{\n  vec3 outLifeVelocity;\n  #ifdef VELOCITYOVERLIFETIMECONSTANT\n\t outLifeVelocity=u_VOLVelocityConst; \n  #endif\n  #ifdef VELOCITYOVERLIFETIMECURVE\n     outLifeVelocity= vec3(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\n  #endif\n  #ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n\t outLifeVelocity=mix(u_VOLVelocityConst,u_VOLVelocityConstMax,vec3(a_Random1.y,a_Random1.z,a_Random1.w)); \n  #endif\n  #ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n     outLifeVelocity=vec3(mix(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y),\n\t                 mix(getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z),\n\t\t\t\t\t mix(getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\n  #endif\n\t\t\t\t\t\n  return outLifeVelocity;\n} \n#endif\n\nvec3 computeParticlePosition(in vec3 startVelocity, in vec3 lifeVelocity,in float age,in float normalizedAge,vec3 gravityVelocity,vec4 worldRotation)\n{\n   vec3 startPosition;\n   vec3 lifePosition;\n   #if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t#ifdef VELOCITYOVERLIFETIMECONSTANT\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=lifeVelocity*age;\n\t#endif\n\t#ifdef VELOCITYOVERLIFETIMECURVE\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=vec3(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\n\t#endif\n\t#ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=lifeVelocity*age;\n\t#endif\n\t#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=vec3(mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y)\n\t      ,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z)\n\t      ,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\n\t#endif\n\t\n\tvec3 finalPosition;\n\tif(u_VOLSpaceType==0){\n\t  if(u_ScalingMode!=2)\n\t   finalPosition =rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition),worldRotation);\n\t  else\n\t   finalPosition =rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition,worldRotation);\n\t}\n\telse{\n\t  if(u_ScalingMode!=2)\n\t    finalPosition = rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation)+lifePosition;\n\t  else\n\t    finalPosition = rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation)+lifePosition;\n\t}\n  #else\n\t startPosition=startVelocity*age;\n\t vec3 finalPosition;\n\t if(u_ScalingMode!=2)\n\t   finalPosition = rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation);\n\t else\n\t   finalPosition = rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation);\n  #endif\n  \n  if(u_SimulationSpace==0)\n    finalPosition=finalPosition+a_SimulationWorldPostion;\n  else if(u_SimulationSpace==1) \n    finalPosition=finalPosition+u_WorldPosition;\n  \n  finalPosition+=0.5*gravityVelocity*age;\n \n  return  finalPosition;\n}\n\n\nvec4 computeParticleColor(in vec4 color,in float normalizedAge)\n{\n\t#ifdef COLOROVERLIFETIME\n\t  color*=getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge);\n\t#endif\n\t\n\t#ifdef RANDOMCOLOROVERLIFETIME\n\t  color*=mix(getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge),getColorFromGradient(u_MaxColorOverLifeGradientAlphas,u_MaxColorOverLifeGradientColors,normalizedAge),a_Random0.y);\n\t#endif\n\n    return color;\n}\n\nvec2 computeParticleSizeBillbard(in vec2 size,in float normalizedAge)\n{\n\t#ifdef SIZEOVERLIFETIMECURVE\n\t\tsize*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVES\n\t    size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z); \n\t#endif\n\t#ifdef SIZEOVERLIFETIMECURVESEPERATE\n\t\tsize*=vec2(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge));\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n\t    size*=vec2(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\n\t    ,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z));\n\t#endif\n\treturn size;\n}\n\n#ifdef RENDERMODE_MESH\nvec3 computeParticleSizeMesh(in vec3 size,in float normalizedAge)\n{\n\t#ifdef SIZEOVERLIFETIMECURVE\n\t\tsize*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVES\n\t    size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z); \n\t#endif\n\t#ifdef SIZEOVERLIFETIMECURVESEPERATE\n\t\tsize*=vec3(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge));\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n\t    size*=vec3(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\n\t    ,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z)\n\t\t,mix(getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxZ,normalizedAge),a_Random0.z));\n\t#endif\n\treturn size;\n}\n#endif\n\nfloat computeParticleRotationFloat(in float rotation,in float age,in float normalizedAge)\n{ \n\t#ifdef ROTATIONOVERLIFETIME\n\t\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot=u_ROLAngularVelocityConst*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\n\t\t#endif\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot=u_ROLAngularVelocityConstSeprarate.z*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot=mix(u_ROLAngularVelocityConstSeprarate.z,u_ROLAngularVelocityConstMaxSeprarate.z,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\n\t\t#endif\n\t#endif\n\treturn rotation;\n}\n\n\n#if defined(RENDERMODE_MESH)&&(defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE))\nvec3 computeParticleRotationVec3(in vec3 rotation,in float age,in float normalizedAge)\n{ \n\t#ifdef ROTATIONOVERLIFETIME\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot=u_ROLAngularVelocityConst*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\n\t\t#endif\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tvec3 ageRot=u_ROLAngularVelocityConstSeprarate*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=vec3(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge));\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tvec3 ageRot=mix(u_ROLAngularVelocityConstSeprarate,u_ROLAngularVelocityConstMaxSeprarate,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=vec3(mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxX,normalizedAge),a_Random0.w)\n\t        ,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxY,normalizedAge),a_Random0.w)\n\t        ,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\n\t\t#endif\n\t#endif\n\treturn rotation;\n}\n#endif\n\nvec2 computeParticleUV(in vec2 uv,in float normalizedAge)\n{ \n\t#ifdef TEXTURESHEETANIMATIONCURVE\n\t\tfloat cycleNormalizedAge=normalizedAge*u_TSACycles;\n\t\tfloat frame=getFrameFromGradient(u_TSAGradientUVs,cycleNormalizedAge-floor(cycleNormalizedAge));\n\t\tfloat totalULength=frame*u_TSASubUVLength.x;\n\t\tfloat floorTotalULength=floor(totalULength);\n\t    uv.x+=totalULength-floorTotalULength;\n\t\tuv.y+=floorTotalULength*u_TSASubUVLength.y;\n    #endif\n\t#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n\t\tfloat cycleNormalizedAge=normalizedAge*u_TSACycles;\n\t\tfloat uvNormalizedAge=cycleNormalizedAge-floor(cycleNormalizedAge);\n\t    float frame=floor(mix(getFrameFromGradient(u_TSAGradientUVs,uvNormalizedAge),getFrameFromGradient(u_TSAMaxGradientUVs,uvNormalizedAge),a_Random1.x));\n\t\tfloat totalULength=frame*u_TSASubUVLength.x;\n\t\tfloat floorTotalULength=floor(totalULength);\n\t    uv.x+=totalULength-floorTotalULength;\n\t\tuv.y+=floorTotalULength*u_TSASubUVLength.y;\n    #endif\n\treturn uv;\n}\n\nvoid main()\n{\n\tfloat age = u_CurrentTime - a_DirectionTime.w;\n\tfloat normalizedAge = age/a_ShapePositionStartLifeTime.w;\n\tvec3 lifeVelocity;\n\tif(normalizedAge<1.0){ \n\tvec3 startVelocity=a_DirectionTime.xyz*a_StartSpeed;\n\t#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t\tlifeVelocity= computeParticleLifeVelocity(normalizedAge);//计算粒子生命周期速度\n\t#endif \n\tvec3 gravityVelocity=u_Gravity*age;\n\t\n\tvec4 worldRotation;\n\tif(u_SimulationSpace==0)\n\t\tworldRotation=a_SimulationWorldRotation;\n\telse\n\t\tworldRotation=u_WorldRotation;\n\t\n\tvec3 center=computeParticlePosition(startVelocity, lifeVelocity, age, normalizedAge,gravityVelocity,worldRotation);//计算粒子位置\n   \n   \n   #ifdef SPHERHBILLBOARD\n\t\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n        vec3 cameraUpVector =normalize(u_CameraUp);//TODO:是否外面归一化\n        vec3 sideVector = normalize(cross(u_CameraDirection,cameraUpVector));\n        vec3 upVector = normalize(cross(sideVector,u_CameraDirection));\n\t    corner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n\t\t#if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tvec3 rotation=vec3(a_StartRotation0.xy,computeParticleRotationFloat(a_StartRotation0.z,age,normalizedAge));\n\t\t\t\tcenter += u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,rotation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfloat rot = computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n\t\t\t\tfloat c = cos(rot);\n\t\t\t\tfloat s = sin(rot);\n\t\t\t\tmat2 rotation= mat2(c, -s, s, c);\n\t\t\t\tcorner=rotation*corner;\n\t\t\t\tcenter += u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n\t\t\t}\n\t\t#else\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tcenter += u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,a_StartRotation0);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfloat c = cos(a_StartRotation0.x);\n\t\t\t\tfloat s = sin(a_StartRotation0.x);\n\t\t\t\tmat2 rotation= mat2(c, -s, s, c);\n\t\t\t\tcorner=rotation*corner;\n\t\t\t\tcenter += u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n\t\t\t}\n\t\t#endif\n   #endif\n   \n   #ifdef STRETCHEDBILLBOARD\n\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n\tvec3 velocity;\n\t#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t    if(u_VOLSpaceType==0)\n\t\t  velocity=rotationByQuaternions(u_SizeScale*(startVelocity+lifeVelocity),worldRotation)+gravityVelocity;\n\t    else\n\t\t  velocity=rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+lifeVelocity+gravityVelocity;\n    #else\n\t    velocity= rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+gravityVelocity;\n    #endif\t\n\t\tvec3 cameraUpVector = normalize(velocity);\n\t\tvec3 direction = normalize(center-u_CameraPosition);\n        vec3 sideVector = normalize(cross(direction,normalize(velocity)));\n\t\t\n\t\tsideVector=u_SizeScale.xzy*sideVector;\n\t\tcameraUpVector=length(vec3(u_SizeScale.x,0.0,0.0))*cameraUpVector;\n\t\t\n\t    vec2 size=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n\t\t\n\t    const mat2 rotaionZHalfPI=mat2(0.0, -1.0, 1.0, 0.0);\n\t    corner=rotaionZHalfPI*corner;\n\t    corner.y=corner.y-abs(corner.y);\n\t\t\n\t    float speed=length(velocity);//TODO:\n\t    center +=sign(u_SizeScale.x)*(sign(u_StretchedBillboardLengthScale)*size.x*corner.x*sideVector+(speed*u_StretchedBillboardSpeedScale+size.y*u_StretchedBillboardLengthScale)*corner.y*cameraUpVector);\n   #endif\n   \n   #ifdef HORIZONTALBILLBOARD\n\t\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n        const vec3 cameraUpVector=vec3(0.0,0.0,1.0);\n\t    const vec3 sideVector = vec3(-1.0,0.0,0.0);\n\t\t\n\t\tfloat rot = computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n        float c = cos(rot);\n        float s = sin(rot);\n        mat2 rotation= mat2(c, -s, s, c);\n\t    corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\n\t\tcorner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n        center +=u_SizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n   #endif\n   \n   #ifdef VERTICALBILLBOARD\n\t\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n        const vec3 cameraUpVector =vec3(0.0,1.0,0.0);\n        vec3 sideVector = normalize(cross(u_CameraDirection,cameraUpVector));\n\t\t\n\t\tfloat rot = computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n        float c = cos(rot);\n        float s = sin(rot);\n        mat2 rotation= mat2(c, -s, s, c);\n\t    corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\n\t\tcorner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n        center +=u_SizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n   #endif\n   \n   #ifdef RENDERMODE_MESH\n\t    vec3 size=computeParticleSizeMesh(a_StartSize,normalizedAge);\n\t\t#if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tvec3 rotation=vec3(a_StartRotation0.xy,-computeParticleRotationFloat(a_StartRotation0.z, age,normalizedAge));\n\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,rotation),worldRotation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t#ifdef ROTATIONOVERLIFETIME\n\t\t\t\t\tfloat angle=computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n\t\t\t\t\tif(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\n\t\t\t\t\t\tcenter+= (rotationByQuaternions(rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),angle),worldRotation));//已验证\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t#ifdef SHAPE\n\t\t\t\t\t\t\tcenter+= u_SizeScale.xzy*(rotationByQuaternions(rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),angle),worldRotation));\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\t\t\tcenter+=rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle);//已验证\n\t\t\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\t\t\tcenter+=rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle),worldRotation);//已验证\n\t\t\t\t\t\t#endif\n\t\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t\t\t\t//TODO:是否应合并if(u_ThreeDStartRotation)分支代码,待测试\n\t\t\t\t\tvec3 angle=computeParticleRotationVec3(vec3(0.0,0.0,a_StartRotation0.z), age,normalizedAge);\n\t\t\t\t\tcenter+= (rotationByQuaternions(rotationByEuler(u_SizeScale*a_MeshPosition*size,vec3(angle.x,angle.y,angle.z)),worldRotation));//已验证\n\t\t\t\t#endif\t\n\t\t\t}\n\t\t#else\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,a_StartRotation0),worldRotation);//已验证\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\n\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\tcenter+= rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x);\n\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\tcenter+= (rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x),worldRotation));//已验证\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t#ifdef SHAPE\n\t\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\t\tcenter+= u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x);\n\t\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x),worldRotation);\t\n\t\t\t\t\t#else\n\t\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\t\tcenter+= rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x);\n\t\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x),worldRotation);//已验证\n\t\t\t\t\t#endif\n\t\t\t\t}\n\t\t\t}\n\t\t#endif\n\t\tv_MeshColor=a_MeshColor;\n   #endif\n   \n    gl_Position=u_Projection*u_View*vec4(center,1.0);\n    v_Color = computeParticleColor(a_StartColor, normalizedAge);\n\t#ifdef DIFFUSEMAP\n\t\t#if defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\n\t\t\tv_TextureCoordinate =computeParticleUV(a_CornerTextureCoordinate.zw, normalizedAge);\n\t\t#endif\n\t\t#ifdef RENDERMODE_MESH\n\t\t\tv_TextureCoordinate =computeParticleUV(a_MeshTextureCoordinate, normalizedAge);\n\t\t#endif\n\t\t\n\t\t#ifdef TILINGOFFSET\n\t\t\tv_TextureCoordinate=vec2(v_TextureCoordinate.x,1.0-v_TextureCoordinate.y)*u_TilingOffset.xy+vec2(u_TilingOffset.z,-u_TilingOffset.w);//需要特殊处理\n\t\t\tv_TextureCoordinate=vec2(v_TextureCoordinate.x,1.0-v_TextureCoordinate.y);//需要特殊处理\n\t\t#endif\n\t#endif\n    v_Discard=0.0;\n\t  \n\t#ifdef FOG\n\t\tv_PositionWorld=center;\n\t#endif\n   }\n   else\n\t{\n\t\tv_Discard=1.0;\n\t}\n}\n\n", e = "#ifdef HIGHPRECISION\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n\nvarying float v_Discard;\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\nuniform sampler2D u_texture;\nuniform vec4 u_Tintcolor;\n\n#ifdef RENDERMODE_MESH\n\tvarying vec4 v_MeshColor;\n#endif\n\n#ifdef FOG\n\tvarying vec3 v_PositionWorld;\n\tuniform vec3 u_CameraPosition;\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\t#ifdef ADDTIVEFOG\n\t#else\n\t\tuniform vec3 u_FogColor;\n\t#endif\n#endif\n\n\nvoid main()\n{\t\n\t#ifdef RENDERMODE_MESH\n\t\tgl_FragColor=v_MeshColor;\n\t#else\n\t\tgl_FragColor=vec4(1.0);\t\n\t#endif\n\t\t\n\t#ifdef DIFFUSEMAP\n\t\tif(v_Discard!=0.0)\n\t\t\tdiscard;\n\t\t#ifdef TINTCOLOR\n\t\t\tgl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*u_Tintcolor*2.0*v_Color;\n\t\t#else\n\t\t\tgl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*v_Color;\n\t\t#endif\n\t#else\n\t\t#ifdef TINTCOLOR\n\t\t\tgl_FragColor*=u_Tintcolor*2.0*v_Color;\n\t\t#else\n\t\t\tgl_FragColor*=v_Color;\n\t\t#endif\n\t#endif\n\t\n\t#ifdef FOG\n\t\tvec3 toEye=u_CameraPosition-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t\t\n\t\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\t\t#ifdef ADDTIVEFOG\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\n\t\t#else\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n\t\t#endif\n\t#endif\n}", a = ui.add(_, t, e, i, n), Qi.SHADERDEFINE_DIFFUSEMAP = a.registerMaterialDefine("DIFFUSEMAP"), Qi.SHADERDEFINE_TINTCOLOR = a.registerMaterialDefine("TINTCOLOR"), Qi.SHADERDEFINE_ADDTIVEFOG = a.registerMaterialDefine("ADDTIVEFOG"), Qi.SHADERDEFINE_TILINGOFFSET = a.registerMaterialDefine("TILINGOFFSET"), vn.SHADERDEFINE_RENDERMODE_BILLBOARD = a.registerSpriteDefine("SPHERHBILLBOARD"), vn.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = a.registerSpriteDefine("STRETCHEDBILLBOARD"), vn.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = a.registerSpriteDefine("HORIZONTALBILLBOARD"), vn.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = a.registerSpriteDefine("VERTICALBILLBOARD"), vn.SHADERDEFINE_COLOROVERLIFETIME = a.registerSpriteDefine("COLOROVERLIFETIME"), vn.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = a.registerSpriteDefine("RANDOMCOLOROVERLIFETIME"), vn.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = a.registerSpriteDefine("VELOCITYOVERLIFETIMECONSTANT"), vn.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = a.registerSpriteDefine("VELOCITYOVERLIFETIMECURVE"), vn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = a.registerSpriteDefine("VELOCITYOVERLIFETIMERANDOMCONSTANT"), vn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = a.registerSpriteDefine("VELOCITYOVERLIFETIMERANDOMCURVE"), vn.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = a.registerSpriteDefine("TEXTURESHEETANIMATIONCURVE"), vn.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = a.registerSpriteDefine("TEXTURESHEETANIMATIONRANDOMCURVE"), vn.SHADERDEFINE_ROTATIONOVERLIFETIME = a.registerSpriteDefine("ROTATIONOVERLIFETIME"), vn.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = a.registerSpriteDefine("ROTATIONOVERLIFETIMESEPERATE"), vn.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = a.registerSpriteDefine("ROTATIONOVERLIFETIMECONSTANT"), vn.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = a.registerSpriteDefine("ROTATIONOVERLIFETIMECURVE"), vn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = a.registerSpriteDefine("ROTATIONOVERLIFETIMERANDOMCONSTANTS"), vn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = a.registerSpriteDefine("ROTATIONOVERLIFETIMERANDOMCURVES"), vn.SHADERDEFINE_SIZEOVERLIFETIMECURVE = a.registerSpriteDefine("SIZEOVERLIFETIMECURVE"), vn.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = a.registerSpriteDefine("SIZEOVERLIFETIMECURVESEPERATE"), vn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = a.registerSpriteDefine("SIZEOVERLIFETIMERANDOMCURVES"), vn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = a.registerSpriteDefine("SIZEOVERLIFETIMERANDOMCURVESSEPERATE"), vn.SHADERDEFINE_RENDERMODE_MESH = a.registerSpriteDefine("RENDERMODE_MESH"), vn.SHADERDEFINE_SHAPE = a.registerSpriteDefine("SHAPE"), i = {
            a_Position: 0,
            a_Texcoord0: 2,
            a_Time: 33
          }, n = {
            u_Texture: [1, 1],
            u_Albedo: [2, 1],
            u_Color: [3, 1],
            u_CurrentTime: [2, 2],
            u_Duration: [3, 2],
            u_MvpMatrix: [1, 2]
          };
          var d = Fi.nameKey.add("GLITTER");
          t = "attribute vec4 a_Position;\nattribute vec2 a_Texcoord0;\nattribute float a_Time;\n\nuniform mat4 u_MvpMatrix;\nuniform  float u_CurrentTime;\nuniform  vec4 u_Color;\nuniform float u_Duration;\n\nvarying vec2 v_Texcoord;\nvarying vec4 v_Color;\n\n\nvoid main()\n{\n  gl_Position = u_MvpMatrix * a_Position;\n  \n  float age = u_CurrentTime-a_Time;\n  float normalizedAge = clamp(age / u_Duration,0.0,1.0);\n   \n  v_Texcoord=a_Texcoord0;\n  \n  v_Color=u_Color;\n  v_Color.a*=1.0-normalizedAge;\n}\n", e = "#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nuniform vec4 u_Albedo;\nuniform sampler2D u_Texture;\n\nvarying vec2 v_Texcoord;\nvarying vec4 v_Color;\n\n\nvoid main()\n{\t\n  gl_FragColor=texture2D(u_Texture, v_Texcoord)*v_Color;\n  gl_FragColor=gl_FragColor*u_Albedo;\n}\n\n", a = ui.add(d, t, e, i, n), i = {
            a_Position: 0
          }, n = {
            u_Intensity: [1, 1],
            u_AlphaBlending: [2, 1],
            u_CubeTexture: [3, 1],
            u_MvpMatrix: [4, 3]
          };
          var f = Fi.nameKey.add("SkyBox");
          t = "attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\nvarying vec3 v_Texcoord;\n\n\nvoid main()\n{\n  gl_Position = (u_MvpMatrix*a_Position).xyww;\n  v_Texcoord=a_Position.xyz;\n}\n", e = "#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nuniform float u_Intensity;\nuniform float u_AlphaBlending;\nuniform samplerCube u_CubeTexture;\n\nvarying vec3 v_Texcoord;\n\n\nvoid main()\n{\t\n  gl_FragColor=vec4(textureCube(u_CubeTexture, v_Texcoord).rgb*u_Intensity,u_AlphaBlending);\n}\n\n", ui.add(f, t, e, i, n), i = {
            a_Position: 0,
            a_Texcoord0: 2
          }, n = {
            u_Intensity: [1, 1],
            u_AlphaBlending: [2, 1],
            u_texture: [3, 1],
            u_MvpMatrix: [4, 3]
          };
          var p = Fi.nameKey.add("SkyDome");
          t = "attribute vec4 a_Position;\nattribute vec2 a_Texcoord0;\nuniform mat4 u_MvpMatrix;\nvarying vec2 v_Texcoord;\n\n\nvoid main()\n{\n  gl_Position = (u_MvpMatrix*a_Position).xyww;\n  v_Texcoord = a_Texcoord0;\n}\n", e = "#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nuniform float u_Intensity;\nuniform float u_AlphaBlending;\nuniform sampler2D u_texture;\n\nvarying vec2 v_Texcoord;\n\n\nvoid main()\n{\t\n  gl_FragColor=vec4(texture2D(u_texture, v_Texcoord).rgb*u_Intensity,u_AlphaBlending);\n}\n\n", ui.add(p, t, e, i, n), i = {
            a_Position: 0,
            a_Normal: 3,
            a_Texcoord0: 2,
            a_Texcoord1: 15
          }, n = {
            u_MvpMatrix: [1, 2],
            u_WorldMat: [0, 2],
            u_LightmapScaleOffset: [2, 2],
            u_LightMap: [3, 2],
            u_SplatAlphaTexture: [0, 1],
            u_NormalTexture: [1, 1],
            u_DiffuseTexture1: [2, 1],
            u_DiffuseTexture2: [3, 1],
            u_DiffuseTexture3: [4, 1],
            u_DiffuseTexture4: [5, 1],
            u_DiffuseScale1: [6, 1],
            u_DiffuseScale2: [7, 1],
            u_DiffuseScale3: [8, 1],
            u_DiffuseScale4: [9, 1],
            u_MaterialDiffuse: [11, 1],
            u_MaterialAmbient: [10, 1],
            u_MaterialSpecular: [12, 1],
            u_CameraPos: [0, 3],
            u_FogStart: [1, 4],
            u_FogRange: [2, 4],
            u_FogColor: [0, 4],
            "u_DirectionLight.Direction": [3, 4],
            "u_DirectionLight.Diffuse": [4, 4],
            "u_PointLight.Position": [5, 4],
            "u_PointLight.Range": [6, 4],
            "u_PointLight.Attenuation": [7, 4],
            "u_PointLight.Diffuse": [8, 4],
            "u_SpotLight.Position": [9, 4],
            "u_SpotLight.Direction": [10, 4],
            "u_SpotLight.Range": [12, 4],
            "u_SpotLight.Spot": [11, 4],
            "u_SpotLight.Attenuation": [13, 4],
            "u_SpotLight.Diffuse": [14, 4],
            u_AmbientColor: [21, 4],
            u_shadowMap1: [18, 4],
            u_shadowMap2: [19, 4],
            u_shadowMap3: [20, 4],
            u_shadowPSSMDistance: [15, 4],
            u_lightShadowVP: [16, 4],
            u_shadowPCFoffset: [17, 4]
          };
          var m = Fi.nameKey.add("Terrain");
          t = "attribute vec4 a_Position;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\n\tattribute vec3 a_Normal;\n\tvarying vec3 v_Normal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\tuniform mat4 u_WorldMat;\n\tvarying vec3 v_PositionWorld;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef LIGHTMAP\n\tuniform vec4 u_LightmapScaleOffset;\n\tvarying vec2 v_LightMapUV;\n#endif\n\nattribute vec2 a_Texcoord0;\nattribute vec2 a_Texcoord1;\nvarying vec2 v_Texcoord0;\nvarying vec2 v_Texcoord1;\nuniform mat4 u_MvpMatrix;\n\nvoid main()\n{\n\tgl_Position = u_MvpMatrix * a_Position;\n\tv_Texcoord0=a_Texcoord0;\n\tv_Texcoord1=a_Texcoord1;\n\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tv_Normal=a_Normal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n#endif\n\n#ifdef LIGHTMAP\n\t//这个地方使用a_Normal 并不是真的代表normal，其实凑巧法线图的uv正好是符合 light_Map的UV\n\tv_LightMapUV=vec2(a_Normal.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,(a_Normal.y-1.0)*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n#endif\n\n#ifdef RECEIVESHADOW\n\tv_posViewZ = gl_Position.w;\n\t#ifdef SHADOWMAP_PSSM1\n\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t#endif\n#endif\n\n}", e = '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#include "LightHelper.glsl";\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tuniform vec3 u_MaterialDiffuse;\n\tuniform vec4 u_MaterialSpecular;\n\tuniform vec3 u_CameraPos;\n\tvarying vec3 v_Normal;\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\n\tuniform vec3 u_MaterialAmbient;\n#endif\n\n#ifdef FOG\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\tuniform vec3 u_FogColor;\n#endif\n\n\n#ifdef DIRECTIONLIGHT\n\tuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\n\tuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\n\tuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\nvarying float v_posViewZ;\n\n\nuniform sampler2D u_SplatAlphaTexture;\nuniform sampler2D u_NormalTexture;\nuniform sampler2D u_DiffuseTexture1;\nuniform sampler2D u_DiffuseTexture2;\nuniform sampler2D u_DiffuseTexture3;\nuniform sampler2D u_DiffuseTexture4;\nuniform vec2 u_DiffuseScale1;\nuniform vec2 u_DiffuseScale2;\nuniform vec2 u_DiffuseScale3;\nuniform vec2 u_DiffuseScale4;\nvarying vec2 v_Texcoord0;\nvarying vec2 v_Texcoord1;\n\n#ifdef LIGHTMAP\n\tuniform sampler2D u_LightMap;\n\tvarying vec2 v_LightMapUV;\n#endif\n\nvoid main()\n{\n#ifdef DETAIL_NUM1\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz;\n#endif\n#ifdef DETAIL_NUM2\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord1/u_DiffuseScale2);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz * (1.0-splatAlpha.r) + color2.xyz * splatAlpha.r;\n#endif\n#ifdef DETAIL_NUM3\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord1/u_DiffuseScale2);\n\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord1/u_DiffuseScale3);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz * (1.0-(splatAlpha.r+splatAlpha.g)) + color2.xyz * splatAlpha.r + color3.xyz * splatAlpha.g;\n#endif\n#ifdef DETAIL_NUM4\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord1/u_DiffuseScale2);\n\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord1/u_DiffuseScale3);\n\tvec4 color4 = texture2D(u_DiffuseTexture4, v_Texcoord1/u_DiffuseScale4);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz * (1.0-(splatAlpha.r+splatAlpha.g+splatAlpha.b))+ color2.xyz * splatAlpha.r + color3.xyz * splatAlpha.g + color4.xyz * splatAlpha.b;\n#endif\n\tgl_FragColor.w = splatAlpha.a;\n\t\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n    vec3 normal = texture2D(u_NormalTexture,v_Normal.xy).xyz;\n\tnormal = normal*2.0 - vec3(1.0);\n\tvec3 diffuse = vec3(0.0);\n\tvec3 ambient = vec3(0.0);\n\tvec3 specular= vec3(0.0);\n\tvec3 dif, amb, spe;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\n\tvec3 toEye;\n\t#ifdef FOG\n\t\ttoEye=u_CameraPos-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t#else\n\t\ttoEye=normalize(u_CameraPos-v_PositionWorld);\n\t#endif\n#endif\n\n#ifdef DIRECTIONLIGHT\n\tcomputeDirectionLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_DirectionLight,u_AmbientColor,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n \n#ifdef POINTLIGHT\n\tcomputePointLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_PointLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef SPOTLIGHT\n\tComputeSpotLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_SpotLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef RECEIVESHADOW\n\tfloat shadowValue = 1.0;\n\t#ifdef SHADOWMAP_PSSM3\n\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif\n\t#ifdef SHADOWMAP_PSSM2\n\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif \n\t#ifdef SHADOWMAP_PSSM1\n\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t#endif\n#endif\n\n#ifdef LIGHTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t#else\n\t\t#if defined(RECEIVESHADOW)\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue);\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t\t#endif\n\t#endif\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t#ifdef RECEIVESHADOW\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse*shadowValue) + specular * shadowValue,gl_FragColor.a);\n\t#else\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse) + specular, gl_FragColor.a);\n\t#endif\n#endif\n\n#ifdef FOG\n\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n#endif\n}\n\n';
          var g = ui.add(m, t, e, i, n);
          ji.SHADERDEFINE_DETAIL_NUM1 = g.registerMaterialDefine("DETAIL_NUM1"), ji.SHADERDEFINE_DETAIL_NUM2 = g.registerMaterialDefine("DETAIL_NUM2"), ji.SHADERDEFINE_DETAIL_NUM4 = g.registerMaterialDefine("DETAIL_NUM4"), ji.SHADERDEFINE_DETAIL_NUM3 = g.registerMaterialDefine("DETAIL_NUM3"), i = {
            a_Position: 0,
            a_Normal: 3,
            a_Texcoord0: 2
          }, n = {
            u_MvpMatrix: [1, 2],
            u_WorldMat: [0, 2],
            u_CameraPos: [0, 3],
            u_LightmapScaleOffset: [2, 2],
            u_LightMap: [3, 2],
            u_SplatAlphaTexture: [0, 1],
            u_DiffuseTexture1: [1, 1],
            u_DiffuseTexture2: [2, 1],
            u_DiffuseTexture3: [3, 1],
            u_DiffuseTexture4: [4, 1],
            u_DiffuseTexture5: [5, 1],
            u_DiffuseScaleOffset1: [6, 1],
            u_DiffuseScaleOffset2: [7, 1],
            u_DiffuseScaleOffset3: [8, 1],
            u_DiffuseScaleOffset4: [9, 1],
            u_DiffuseScaleOffset5: [10, 1],
            u_MaterialAlbedo: [14, 1],
            u_MaterialDiffuse: [12, 1],
            u_MaterialAmbient: [11, 1],
            u_MaterialSpecular: [13, 1],
            u_FogStart: [1, 4],
            u_FogRange: [2, 4],
            u_FogColor: [0, 4],
            "u_DirectionLight.Direction": [3, 4],
            "u_DirectionLight.Diffuse": [4, 4],
            "u_PointLight.Position": [5, 4],
            "u_PointLight.Range": [6, 4],
            "u_PointLight.Attenuation": [7, 4],
            "u_PointLight.Diffuse": [8, 4],
            "u_SpotLight.Position": [9, 4],
            "u_SpotLight.Direction": [10, 4],
            "u_SpotLight.Range": [12, 4],
            "u_SpotLight.Spot": [11, 4],
            "u_SpotLight.Attenuation": [13, 4],
            "u_SpotLight.Diffuse": [14, 4],
            u_AmbientColor: [21, 4],
            u_shadowMap1: [18, 4],
            u_shadowMap2: [19, 4],
            u_shadowMap3: [20, 4],
            u_shadowPSSMDistance: [15, 4],
            u_lightShadowVP: [16, 4],
            u_shadowPCFoffset: [17, 4]
          };
          var v = Fi.nameKey.add("ExtendTerrain");
          t = "attribute vec4 a_Position;\nattribute vec2 a_Texcoord0;\n\nuniform mat4 u_MvpMatrix;\n\nvarying vec2 v_Texcoord0;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\n\tattribute vec3 a_Normal;\n\tvarying vec3 v_Normal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\tuniform mat4 u_WorldMat;\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#ifdef LIGHTMAP\n\tvarying vec2 v_LightMapUV;\n\tuniform vec4 u_LightmapScaleOffset;\n#endif\n\n#ifdef RECEIVESHADOW\n\tvarying float v_posViewZ;\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n#endif\n\nvoid main()\n{\n\tgl_Position = u_MvpMatrix * a_Position;\n  \n\tv_Texcoord0 = a_Texcoord0;\n  \n\t#ifdef LIGHTMAP\n\t\tv_LightMapUV = vec2(a_Texcoord0.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,(a_Texcoord0.y-1.0)*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n\t#endif\n  \n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tv_Normal = a_Normal;\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\t\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n\t#endif\n\n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}", e = '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#include "LightHelper.glsl";\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\n\tuniform vec3 u_MaterialDiffuse;\n\tuniform vec4 u_MaterialSpecular;\n\tuniform vec3 u_CameraPos;\n\tvarying vec3 v_Normal;\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#ifdef FOG\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\tuniform vec3 u_FogColor;\n#endif\n\n\n#ifdef DIRECTIONLIGHT\n\tuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\n\tuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\n\tuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\nvarying float v_posViewZ;\n\n\nuniform sampler2D u_SplatAlphaTexture;\n\nuniform sampler2D u_DiffuseTexture1;\nuniform sampler2D u_DiffuseTexture2;\nuniform sampler2D u_DiffuseTexture3;\nuniform sampler2D u_DiffuseTexture4;\nuniform sampler2D u_DiffuseTexture5;\n\nuniform vec4 u_DiffuseScaleOffset1;\nuniform vec4 u_DiffuseScaleOffset2;\nuniform vec4 u_DiffuseScaleOffset3;\nuniform vec4 u_DiffuseScaleOffset4;\nuniform vec4 u_DiffuseScaleOffset5;\n\nvarying vec2 v_Texcoord0;\n\nuniform vec3 u_MaterialAmbient;\nuniform vec4 u_MaterialAlbedo;\n\n#ifdef LIGHTMAP\n\tuniform sampler2D u_LightMap;\n\tvarying vec2 v_LightMapUV;\n#endif\n\nvoid main()\n{\n\t#ifdef ExtendTerrain_DETAIL_NUM1\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r;\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM2\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r + color2.xyz * (1.0 - splatAlpha.r);\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM3\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord0 * u_DiffuseScaleOffset3.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r  + color2.xyz * splatAlpha.g + color3.xyz * (1.0 - splatAlpha.r - splatAlpha.g);\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM4\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord0 * u_DiffuseScaleOffset3.xy);\n\t\tvec4 color4 = texture2D(u_DiffuseTexture4, v_Texcoord0 * u_DiffuseScaleOffset4.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r  + color2.xyz * splatAlpha.g + color3.xyz * splatAlpha.b + color4.xyz * (1.0 - splatAlpha.r - splatAlpha.g - splatAlpha.b);\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM5\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord0 * u_DiffuseScaleOffset3.xy);\n\t\tvec4 color4 = texture2D(u_DiffuseTexture4, v_Texcoord0 * u_DiffuseScaleOffset4.xy);\n\t\tvec4 color5 = texture2D(u_DiffuseTexture5, v_Texcoord0 * u_DiffuseScaleOffset5.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r  + color2.xyz * splatAlpha.g + color3.xyz * splatAlpha.b + color4.xyz * splatAlpha.a + color5.xyz * (1.0 - splatAlpha.r - splatAlpha.g - splatAlpha.b - splatAlpha.a);\n\t#endif\n\t\tgl_FragColor.w = splatAlpha.a;\n\t\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n    vec3 normal = v_Normal;\n\tvec3 diffuse = vec3(0.0);\n\tvec3 ambient = vec3(0.0);\n\tvec3 specular= vec3(0.0);\n\tvec3 dif, amb, spe;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\n\tvec3 toEye;\n\t#ifdef FOG\n\t\ttoEye=u_CameraPos-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t#else\n\t\ttoEye=normalize(u_CameraPos-v_PositionWorld);\n\t#endif\n#endif\n\n#ifdef DIRECTIONLIGHT\n\tcomputeDirectionLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_DirectionLight,u_AmbientColor,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n \n#ifdef POINTLIGHT\n\tcomputePointLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_PointLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef SPOTLIGHT\n\tComputeSpotLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_SpotLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef RECEIVESHADOW\n\tfloat shadowValue = 1.0;\n\t#ifdef SHADOWMAP_PSSM3\n\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif\n\t#ifdef SHADOWMAP_PSSM2\n\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif \n\t#ifdef SHADOWMAP_PSSM1\n\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t#endif\n#endif\n\n#ifdef LIGHTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t#else\n\t\t#if defined(RECEIVESHADOW)\t\t\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue);\n\t\t\t//vec3 tColor= u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue + mix(vec3(0.15,0.15,0.15),vec3(0.0),shadowValue);\n\t\t\t//gl_FragColor.rgb*=tColor;\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t\t#endif\n\t#endif\n#endif\n\ngl_FragColor=gl_FragColor*u_MaterialAlbedo;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t#ifdef RECEIVESHADOW\n\t\tgl_FragColor = vec4( gl_FragColor.rgb*(ambient + diffuse*shadowValue) + specular * shadowValue,gl_FragColor.a);\n\t#else\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse) + specular, gl_FragColor.a);\n\t#endif\n#endif\n\n#ifdef FOG\n\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n#endif\n}\n\n\n\n\n\n';
          var y = ui.add(v, t, e, i, n);
          y.addSpriteDefines(_n.shaderDefines), y.addMaterialDefines(Ui.shaderDefines), i = {
            a_Position: 0,
            a_OffsetVector: 41,
            a_Texcoord0X: 38,
            a_Texcoord0Y: 40,
            a_BirthTime: 33
          }, n = {
            u_MvpMatrix: [1, 2],
            u_VMatrix: [1, 3],
            u_PMatrix: [2, 3],
            u_TilingOffset: [3, 1],
            u_MainTexture: [1, 1],
            u_MainColor: [2, 1],
            u_CurTime: [3, 2],
            u_LifeTime: [4, 2],
            u_WidthCurve: [5, 2],
            u_WidthCurveKeyLength: [6, 2],
            u_GradientColorkey: [7, 2],
            u_GradientAlphakey: [8, 2]
          };
          var x = Fi.nameKey.add("Trail");
          t = "attribute vec3 a_Position;\nattribute vec3 a_OffsetVector;\nattribute vec4 a_Color;\nattribute float a_Texcoord0X;\nattribute float a_Texcoord0Y;\nattribute float a_BirthTime;\n\nuniform mat4 u_VMatrix;\nuniform mat4 u_PMatrix;\n\nuniform vec4 u_TilingOffset;\n\nuniform float u_CurTime;\nuniform float u_LifeTime;\nuniform vec4 u_WidthCurve[10];\nuniform int u_WidthCurveKeyLength;\n\nuniform vec4 u_GradientColorkey[10];\nuniform vec2 u_GradientAlphakey[10];\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nfloat hermiteInterpolate(float t, float outTangent, float inTangent, float duration, float value1, float value2)\n{\n\tfloat t2 = t * t;\n\tfloat t3 = t2 * t;\n\tfloat a = 2.0 * t3 - 3.0 * t2 + 1.0;\n\tfloat b = t3 - 2.0 * t2 + t;\n\tfloat c = t3 - t2;\n\tfloat d = -2.0 * t3 + 3.0 * t2;\n\treturn a * value1 + b * outTangent * duration + c * inTangent * duration + d * value2;\n}\n\nfloat getCurWidth(in float normalizeTime)\n{\n\tif(normalizeTime == 0.0){\n\t\treturn u_WidthCurve[0].w;\n\t}\n\telse if(normalizeTime >= 1.0){\n\t\treturn u_WidthCurve[u_WidthCurveKeyLength - 1].w;\n\t}\n\telse{\n\t\tfor(int i = 0; i < 10; i ++ )\n\t\t{\n\t\t\tif(normalizeTime == u_WidthCurve[i].x)\n\t\t\t{\n\t\t\t\treturn u_WidthCurve[i].w;\n\t\t\t}\n\t\t\t\n\t\t\tvec4 lastFrame = u_WidthCurve[i];\n\t\t\tvec4 nextFrame = u_WidthCurve[i + 1];\n\t\t\tif(normalizeTime > lastFrame.x && normalizeTime < nextFrame.x)\n\t\t\t{\n\t\t\t\tfloat duration = nextFrame.x - lastFrame.x;\n\t\t\t\tfloat t = (normalizeTime - lastFrame.x) / duration;\n\t\t\t\tfloat outTangent = lastFrame.z;\n\t\t\t\tfloat inTangent = nextFrame.y;\n\t\t\t\tfloat value1 = lastFrame.w;\n\t\t\t\tfloat value2 = nextFrame.w;\n\t\t\t\treturn hermiteInterpolate(t, outTangent, inTangent, duration, value1, value2);\n\t\t\t}\n\t\t}\t\n\t}\n}\t\n\nvec4 getColorFromGradientByBlend(in vec4 gradientColors[10], in vec2 gradientAlphas[10], in float normalizeTime)\n{\n\tvec4 color;\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec4 gradientColor = gradientColors[i];\n\t\tfloat colorKey = gradientColor.w;\n\t\tif(colorKey >= normalizeTime)\n\t\t{\n\t\t\tvec4 lastGradientColor = gradientColors[i-1];\n\t\t\tfloat lastColorKey = lastGradientColor.w;\n\t\t\tfloat age = (normalizeTime - lastColorKey) / (colorKey - lastColorKey);\n\t\t\tcolor.rgb = mix(gradientColors[i-1].xyz, gradientColor.xyz, age);\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec2 gradientAlpha = gradientAlphas[i];\n\t\tfloat alphaKey = gradientAlpha.y;\n\t\tif(alphaKey >= normalizeTime)\n\t\t{\n\t\t\tvec2 lastGradientAlpha = gradientAlphas[i-1];\n\t\t\tfloat lastAlphaKey = lastGradientAlpha.y;\n\t\t\tfloat age = (normalizeTime - lastAlphaKey) / (alphaKey - lastAlphaKey);\n\t\t\tcolor.a = mix(lastGradientAlpha.x, gradientAlpha.x, age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn color;\n}\n\nvec4 getColorFromGradientByFixed(in vec4 gradientColors[10], in vec2 gradientAlphas[10], in float normalizeTime)\n{\n\tvec4 color;\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec4 gradientColor = gradientColors[i];\n\t\tif(gradientColor.w >= normalizeTime)\n\t\t{\n\t\t\tcolor.rgb = gradientColor.xyz;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec2 gradientAlpha = gradientAlphas[i];\n\t\tif(gradientAlpha.y >= normalizeTime)\n\t\t{\n\t\t\tcolor.a = gradientAlpha.x;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn color;\n}\n\nvoid main()\n{\n\tfloat normalizeTime = (u_CurTime - a_BirthTime) / u_LifeTime;\n\t\n\tgl_Position = u_PMatrix * u_VMatrix * vec4(a_Position + a_OffsetVector * getCurWidth(normalizeTime),1.0);\n\t\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0 = (vec2(a_Texcoord0X, a_Texcoord0Y) * u_TilingOffset.xy) + u_TilingOffset.zw;\n\t#else\n\t\tv_Texcoord0 = vec2(a_Texcoord0X, a_Texcoord0Y);\n\t#endif\n\t\n\t#ifdef GRADIENTMODE_BLEND\n\t\tv_Color = getColorFromGradientByBlend(u_GradientColorkey, u_GradientAlphakey, normalizeTime);\n\t#else\n\t\tv_Color = getColorFromGradientByFixed(u_GradientColorkey, u_GradientAlphakey, normalizeTime);\n\t#endif\n}\n\n\n\n", e = "#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nuniform sampler2D u_MainTexture;\nuniform vec4 u_MainColor;\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nvoid main()\n{\t\n\tvec4 color = 2.0 * u_MainColor * v_Color;\n\t#ifdef DIFFUSETEXTURE\n\t\tvec4 mainTextureColor = texture2D(u_MainTexture, v_Texcoord0);\n\t\tcolor *= mainTextureColor;\n\t#endif\n\tgl_FragColor = color;\n}\n\n";
          var T = ui.add(x, t, e, i, n);
          Ki.SHADERDEFINE_DIFFUSETEXTURE = T.registerMaterialDefine("DIFFUSETEXTURE"), Ki.SHADERDEFINE_TILINGOFFSET = T.registerSpriteDefine("TILINGOFFSET"), xn.SHADERDEFINE_GRADIENTMODE_BLEND = T.registerSpriteDefine("GRADIENTMODE_BLEND");
        }, t;
      }(),
      ke = function () {
        function t() {
          this._data = null, this._data = [];
        }
        r(t, "laya.d3.shader.ValusArray");
        var e = t.prototype;
        return e.setValue = function (t, e) {
          this._data[t] = e;
        }, a(0, e, "data", function () {
          return this._data;
        }), t;
      }(),
      Ge = function () {
        function t() {
          this._currentPSSM = -1, this._numberOfPSSM = 3, this._maxDistance = 200, this._ratioOfDistance = 1 / this._numberOfPSSM, this._statesDirty = !0, this._lightCulling = null, this._renderTarget = null, this._lightVPMatrix = null, this._lightCameras = null, this._shadowQuenes = null, this._shadowMapTextureSize = 1024, this._scene = null, this._PCFType = 0, this._shaderValueLightVP = null, this._shaderValueVPs = null, this._spiltDistance = new Array(4), this._globalParallelLightDir = new Le(0, -1, 0), this._boundingSphere = new Array(4), this._boundingBox = new Array(4), this._frustumPos = new Array(16), this._uniformDistance = new Array(4), this._logDistance = new Array(4), this._dimension = new Array(4), this._tempLookAt3 = new Le(), this._tempLookAt4 = new Oe(), this._tempValue = new Oe(), this._tempPos = new Le(), this._tempLightUp = new Le(), this._tempMin = new Oe(), this._tempMax = new Oe(), this._tempMatrix44 = new Ce(), this._splitFrustumCulling = new Te(Ce.DEFAULT), this._tempScaleMatrix44 = new Ce(), this._shadowPCFOffset = new Pe(1 / 1024, 1 / 1024), this._shaderValueDistance = new Oe();
          var t = 0;
          for (t = 0; t < this._spiltDistance.length; t++) this._spiltDistance[t] = 0;
          for (t = 0; t < this._dimension.length; t++) this._dimension[t] = new Pe();
          for (t = 0; t < this._frustumPos.length; t++) this._frustumPos[t] = new Le();
          for (t = 0; t < this._boundingBox.length; t++) this._boundingBox[t] = new xe(new Le(), new Le());
          for (t = 0; t < this._boundingSphere.length; t++) this._boundingSphere[t] = new Se(new Le(), 0);
          Ce.createScaling(new Le(.5, .5, 1), this._tempScaleMatrix44), this._tempScaleMatrix44.elements[12] = .5, this._tempScaleMatrix44.elements[13] = .5;
        }
        r(t, "laya.d3.shadowMap.ParallelSplitShadowMap");
        var e = t.prototype;
        return e.setInfo = function (t, e, i, n, r, a) {
          r > 3 && (this._numberOfPSSM = 3), this._scene = t, this._maxDistance = e, this.PSSMNum = r, this._globalParallelLightDir = i, this._ratioOfDistance = 1 / this._numberOfPSSM;
          for (var s = 0; s < this._spiltDistance.length; s++) this._spiltDistance[s] = 0;
          this._shadowMapTextureSize = n, this._shadowPCFOffset.x = 1 / this._shadowMapTextureSize, this._shadowPCFOffset.y = 1 / this._shadowMapTextureSize, this.setPCFType(a), this._statesDirty = !0;
        }, e.setPCFType = function (t) {
          switch (this._PCFType = t, this._PCFType) {
            case 0:
              this._scene.addShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF_NO), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF1), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF2), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF3);
              break;
            case 1:
              this._scene.addShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF1), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF_NO), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF2), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF3);
              break;
            case 2:
              this._scene.addShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF2), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF_NO), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF1), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF3);
              break;
            case 3:
              this._scene.addShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF3), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF_NO), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF1), this._scene.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PCF2);
          }
        }, e.getPCFType = function () {
          return this._PCFType;
        }, e.setFarDistance = function (t) {
          this._maxDistance != t && (this._maxDistance = t, this._statesDirty = !0);
        }, e.getFarDistance = function () {
          return this._maxDistance;
        }, e._setGlobalParallelLightDir = function (t) {
          this._globalParallelLightDir = t;
        }, e.getGlobalParallelLightDir = function () {
          return this._globalParallelLightDir;
        }, e.getCurrentPSSM = function () {
          return this._currentPSSM;
        }, e.getLightCamera = function (t) {
          return this._lightCameras[t];
        }, e._beginSampler = function (t, e) {
          if (t < 0 || t > this._numberOfPSSM) throw new Error("ParallelSplitShadowMap: beginSample invalid index");
          this._currentPSSM = t, this._update(e);
        }, e.endSampler = function (t) {
          this._currentPSSM = -1;
        }, e._calcAllLightCameraInfo = function (t) {
          if (1 === this._numberOfPSSM) this._beginSampler(0, t), this.endSampler(t);
          else
            for (var e = 0, i = this._numberOfPSSM + 1; e < i; e++) this._beginSampler(e, t), this.endSampler(t);
        }, e._recalculate = function (t, e, i) {
          this._calcSplitDistance(t), this._calcBoundingBox(e, i), this._rebuildRenderInfo();
        }, e._update = function (t) {
          var e = t.nearPlane,
            i = t.fieldOfView,
            n = t.aspectRatio;
          (this._statesDirty || this.lastNearPlane !== e || this.lastFieldOfView !== i || this.lastAspectRatio !== n) && (this._recalculate(e, i, n), this._uploadShaderValue(), this._statesDirty = !1, this.lastNearPlane = e, this.lastFieldOfView = i, this.lastAspectRatio = n), this._calcLightViewProject(t);
        }, e._uploadShaderValue = function () {
          var t = this._scene;
          switch (this._numberOfPSSM) {
            case 1:
              t.addShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM1), t.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM2), t.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM3);
              break;
            case 2:
              t.addShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM2), t.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM1), t.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM3);
              break;
            case 3:
              t.addShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM3), t.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM1), t.removeShaderDefine(laya.d3.shadowMap.ParallelSplitShadowMap.SHADERDEFINE_SHADOW_PSSM2);
          }
          var e = t._shaderValues;
          switch (e.setValue(15, this._shaderValueDistance.elements), e.setValue(16, this._shaderValueLightVP), e.setValue(17, this._shadowPCFOffset.elements), this._numberOfPSSM) {
            case 3:
              e.setValue(18, this.getRenderTarget(1)), e.setValue(19, this.getRenderTarget(2)), e.setValue(20, this.getRenderTarget(3));
              break;
            case 2:
              e.setValue(18, this.getRenderTarget(1)), e.setValue(19, this.getRenderTarget(2));
              break;
            case 1:
              e.setValue(18, this.getRenderTarget(1));
          }
        }, e._calcSplitDistance = function (t) {
          var e = this._maxDistance,
            i = 1 / this._numberOfPSSM,
            n = 0;
          for (n = 0; n <= this._numberOfPSSM; n++) this._uniformDistance[n] = t + (e - t) * n * i;
          var r = e / t;
          for (n = 0; n <= this._numberOfPSSM; n++) {
            var a = Math.pow(r, n * i);
            this._logDistance[n] = t * a;
          }
          for (n = 0; n <= this._numberOfPSSM; n++) this._spiltDistance[n] = this._uniformDistance[n] * this._ratioOfDistance + this._logDistance[n] * (1 - this._ratioOfDistance);
          this._shaderValueDistance.x = this._spiltDistance[1], this._shaderValueDistance.y = this._spiltDistance[2], this._shaderValueDistance.z = this._spiltDistance[3], this._shaderValueDistance.w = this._spiltDistance[4];
        }, e._calcBoundingBox = function (t, e) {
          var i = 3.1415926 * t / 180,
            n = Math.tan(i / 2),
            r = NaN,
            a = NaN,
            s = NaN,
            o = 0;
          for (o = 0; o <= this._numberOfPSSM; o++) {
            a = (r = (s = this._spiltDistance[o]) * n) * e;
            var h = this._frustumPos[4 * o + 0].elements;
            h[0] = -a, h[1] = -r, h[2] = -s, (h = this._frustumPos[4 * o + 1].elements)[0] = a, h[1] = -r, h[2] = -s, (h = this._frustumPos[4 * o + 2].elements)[0] = -a, h[1] = r, h[2] = -s, (h = this._frustumPos[4 * o + 3].elements)[0] = a, h[1] = r, h[2] = -s, (h = this._dimension[o].elements)[0] = a, h[1] = r;
          }
          var l, u, c, _;
          for (o = 1; o <= this._numberOfPSSM; o++) l = this._dimension[o].elements, (u = this._boundingBox[o].min.elements)[0] = -l[0], u[1] = -l[1], u[2] = -this._spiltDistance[o], (c = this._boundingBox[o].max.elements)[0] = l[0], c[1] = l[1], c[2] = -this._spiltDistance[o - 1], (_ = this._boundingSphere[o].center.elements)[0] = .5 * (u[0] + c[0]), _[1] = .5 * (u[1] + c[1]), _[2] = .5 * (u[2] + c[2]), this._boundingSphere[o].radius = .5 * Math.sqrt(Math.pow(c[0] - u[0], 2) + Math.pow(c[1] - u[1], 2) + Math.pow(c[2] - u[2], 2));
          u = this._boundingBox[0].min.elements, l = this._dimension[this._numberOfPSSM].elements, u[0] = -l[0], u[1] = -l[1], u[2] = -this._spiltDistance[this._numberOfPSSM], (c = this._boundingBox[0].max.elements)[0] = l[0], c[1] = l[1], c[2] = -this._spiltDistance[0], (_ = this._boundingSphere[0].center.elements)[0] = .5 * (u[0] + c[0]), _[1] = .5 * (u[1] + c[1]), _[2] = .5 * (u[2] + c[2]), this._boundingSphere[0].radius = .5 * Math.sqrt(Math.pow(c[0] - u[0], 2) + Math.pow(c[1] - u[1], 2) + Math.pow(c[2] - u[2], 2));
        }, e.calcSplitFrustum = function (t) {
          this._currentPSSM > 0 ? Ce.createPerspective(3.1416 * t.fieldOfView / 180, t.aspectRatio, this._spiltDistance[this._currentPSSM - 1], this._spiltDistance[this._currentPSSM], this._tempMatrix44) : Ce.createPerspective(3.1416 * t.fieldOfView / 180, t.aspectRatio, this._spiltDistance[0], this._spiltDistance[this._numberOfPSSM], this._tempMatrix44), Ce.multiply(this._tempMatrix44, t.viewMatrix, this._tempMatrix44), this._splitFrustumCulling.matrix = this._tempMatrix44;
        }, e._rebuildRenderInfo = function () {
          var t = this._numberOfPSSM + 1,
            e = 0;
          if (null == this._renderTarget)
            for (this._renderTarget = s(t), this._renderTarget[0] = null, e = 1; e < t; e++) this._renderTarget[e] = new an(this._shadowMapTextureSize, this._shadowMapTextureSize, 6408, 5121, 33189, !1, !1, 9728, 9728);
          else if (this._renderTarget.length != t)
            for (this.disposeAllRenderTarget(), this._renderTarget.length = t, this._renderTarget[0] = null, e = 1; e < t; e++) this._renderTarget[e] = new an(this._shadowMapTextureSize, this._shadowMapTextureSize, 6408, 5121, 33189, !1, !1, 9728, 9728);
          else
            for (e = 1; e < t; e++) null != this._renderTarget[e] && this._renderTarget[e].width == this._shadowMapTextureSize && this._renderTarget[e].height == this._shadowMapTextureSize || (null != this._renderTarget[e] && this._renderTarget[e].destroy(), this._renderTarget[e] = new an(this._shadowMapTextureSize, this._shadowMapTextureSize, 6408, 5121, 33189, !1, !1, 9728, 9728));
          if (null == this._lightCulling || this._lightCulling.length != t)
            for (this._lightCulling ? this._lightCulling.length = t : this._lightCulling = s(t), e = 0; e < this._lightCulling.length; e++) this._lightCulling[e] = new Te(Ce.DEFAULT);
          if (null == this._lightVPMatrix || this._lightVPMatrix.length != t)
            for (this._lightVPMatrix ? this._lightVPMatrix.length = t : this._lightVPMatrix = s(t), e = 0; e < this._lightVPMatrix.length; e++) this._lightVPMatrix[e] = new Ce();
          if (null == this._lightCameras || this._lightCameras.length != t)
            for (this._lightCameras ? this._lightCameras.length = t : this._lightCameras = s(t), e = 0; e < this._lightCameras.length; e++) this._lightCameras[e] = new pn(), this._lightCameras[e].name = "lightCamera" + e;
          if (null == this._shadowQuenes || this._shadowQuenes.length != this._numberOfPSSM)
            for (this._shadowQuenes ? this._shadowQuenes.length = this._numberOfPSSM : this._shadowQuenes = s(this._numberOfPSSM), e = 0; e < this._shadowQuenes.length; e++) this._shadowQuenes[e] = new ct(this._scene);
          if (null == this._shaderValueVPs || this._shaderValueVPs.length != t)
            for (this._shaderValueVPs ? this._shaderValueVPs.length = t : this._shaderValueVPs = s(t), this._shaderValueLightVP = new Float32Array(16 * t), e = 0; e < t; e++) this._shaderValueVPs[e] = new Float32Array(this._shaderValueLightVP.buffer, 64 * e);
        }, e._calcLightViewProject = function (e) {
          var i = this._boundingSphere[this._currentPSSM],
            n = e.transform.worldMatrix;
          i.radius;
          i.center.cloneTo(this._tempLookAt3), Le.transformV3ToV4(this._tempLookAt3, n, this._tempLookAt4);
          var r = this._tempLookAt3.elements,
            a = this._tempLookAt4.elements;
          r[0] = a[0], r[1] = a[1], r[2] = a[2];
          var s = this._tempLightUp.elements,
            o = e.forward.elements;
          s[0] = o[0], s[1] = 1, s[2] = o[2], Le.normalize(this._tempLightUp, this._tempLightUp), Le.scale(this._globalParallelLightDir, 4 * i.radius, this._tempPos), Le.subtract(this._tempLookAt3, this._tempPos, this._tempPos);
          var h = this._lightCameras[this._currentPSSM];
          h.transform.position = this._tempPos, h.transform.lookAt(this._tempLookAt3, this._tempLightUp, !1);
          var l = this._tempMax.elements,
            u = this._tempMin.elements;
          l[0] = l[1] = l[2] = -1e5, l[3] = 1, u[0] = u[1] = u[2] = 1e5, u[3] = 1, Ce.multiply(h.viewMatrix, n, this._tempMatrix44);
          var c = this._tempValue.elements,
            _ = [];
          _.length = 8, this._boundingBox[this._currentPSSM].getCorners(_);
          for (var d = 0; d < 8; d++) {
            var f = _[d].elements;
            c[0] = f[0], c[1] = f[1], c[2] = f[2], c[3] = 1, Oe.transformByM4x4(this._tempValue, this._tempMatrix44, this._tempValue), u[0] = c[0] < u[0] ? c[0] : u[0], u[1] = c[1] < u[1] ? c[1] : u[1], u[2] = c[2] < u[2] ? c[2] : u[2], l[0] = c[0] > l[0] ? c[0] : l[0], l[1] = c[1] > l[1] ? c[1] : l[1], l[2] = c[2] > l[2] ? c[2] : l[2];
          }
          Oe.add(this._tempMax, this._tempMin, this._tempValue), c[0] *= .5, c[1] *= .5, c[2] *= .5, c[3] = 1, Oe.transformByM4x4(this._tempValue, h.transform.worldMatrix, this._tempValue);
          var p = Math.abs(-this._tempMax.z),
            m = p > this._maxDistance ? p : this._maxDistance;
          Le.scale(this._globalParallelLightDir, m, this._tempPos);
          var g = this._tempPos.elements;
          g[0] = c[0] - g[0], g[1] = c[1] - g[1], g[2] = c[2] - g[2], h.transform.position = this._tempPos, h.transform.lookAt(this._tempLookAt3, this._tempLightUp, !1), Ce.createOrthoOffCenterRH(u[0], l[0], u[1], l[1], 1, m + .5 * (l[2] - u[2]), h.projectionMatrix), h.projectionViewMatrix.cloneTo(this._lightVPMatrix[this._currentPSSM]), this._lightCulling[this._currentPSSM].matrix = this._lightVPMatrix[this._currentPSSM], t.multiplyMatrixOutFloat32Array(this._tempScaleMatrix44, this._lightVPMatrix[this._currentPSSM], this._shaderValueVPs[this._currentPSSM]);
        }, e.getLightFrustumCulling = function (t) {
          return this._lightCulling[t];
        }, e.getSplitFrustumCulling = function () {
          return this._splitFrustumCulling;
        }, e.getSplitDistance = function (t) {
          return this._spiltDistance[t];
        }, e.setShadowMapTextureSize = function (t) {
          t !== this._shadowMapTextureSize && (this._shadowMapTextureSize = t, this._shadowPCFOffset.x = 1 / this._shadowMapTextureSize, this._shadowPCFOffset.y = 1 / this._shadowMapTextureSize, this._statesDirty = !0);
        }, e.getShadowMapTextureSize = function () {
          return this._shadowMapTextureSize;
        }, e.beginRenderTarget = function (t) {
          this._renderTarget[t].start();
        }, e.endRenderTarget = function (t) {
          this._renderTarget[t].end();
        }, e.getRenderTarget = function (t) {
          return this._renderTarget[t];
        }, e.disposeAllRenderTarget = function () {
          for (var t = 0, e = this._numberOfPSSM + 1; t < e; t++) this._renderTarget[t] && (this._renderTarget[t].destroy(), this._renderTarget[t] = null);
        }, a(0, e, "PSSMNum", function () {
          return this._numberOfPSSM;
        }, function (t) {
          t = (t = t > 0 ? t : 1) <= 3 ? t : 3, this._numberOfPSSM != t && (this._numberOfPSSM = t, this._ratioOfDistance = 1 / this._numberOfPSSM, this._statesDirty = !0);
        }), t.multiplyMatrixOutFloat32Array = function (t, e, i) {
          var n, r, a, s, o, h, l;
          for (r = t.elements, a = e.elements, n = 0; n < 4; n++) s = r[n], o = r[n + 4], h = r[n + 8], l = r[n + 12], i[n] = s * a[0] + o * a[1] + h * a[2] + l * a[3], i[n + 4] = s * a[4] + o * a[5] + h * a[6] + l * a[7], i[n + 8] = s * a[8] + o * a[9] + h * a[10] + l * a[11], i[n + 12] = s * a[12] + o * a[13] + h * a[14] + l * a[15];
        }, t.SHADERDEFINE_RECEIVE_SHADOW = 1, t.SHADERDEFINE_CAST_SHADOW = 512, t.SHADERDEFINE_SHADOW_PSSM1 = 1024, t.SHADERDEFINE_SHADOW_PSSM2 = 2048, t.SHADERDEFINE_SHADOW_PSSM3 = 4096, t.SHADERDEFINE_SHADOW_PCF_NO = 8192, t.SHADERDEFINE_SHADOW_PCF1 = 16384, t.SHADERDEFINE_SHADOW_PCF2 = 32768, t.SHADERDEFINE_SHADOW_PCF3 = 65536, t.MAX_PSSM_COUNT = 3, t;
      }(),
      He = function () {
        function t() {
          this._boundingSphere = null, this._boundingBox = null, this._sizeOfY = null, this._currentLODLevel = 0, this._lastDistanceToEye = NaN, this._originalBoundingSphere = null, this._originalBoundingBox = null, this._originalBoundingBoxCorners = null, this._bUseStrip = !1, this._gridSize = NaN, this._beginGridX = 0, this._beginGridZ = 0, this._LODError = null, t.__init__(), this._currentLODLevel = 0;
        }
        r(t, "laya.d3.terrain.TerrainLeaf");
        var e = t.prototype;
        return e.calcVertextNorml = function (e, i, n, r, a, s) {
          var o = 0,
            h = 0;
          h = -1 * t.getHeightFromTerrainHeightData(e - 1, i - 1, n, r, a), h += -1 * t.getHeightFromTerrainHeightData(e - 1, i, n, r, a), h += -1 * t.getHeightFromTerrainHeightData(e - 1, i + 1, n, r, a), h += 1 * t.getHeightFromTerrainHeightData(e + 1, i - 1, n, r, a), h += 1 * t.getHeightFromTerrainHeightData(e + 1, i, n, r, a), h += 1 * t.getHeightFromTerrainHeightData(e + 1, i + 1, n, r, a), o = -1 * t.getHeightFromTerrainHeightData(e - 1, i - 1, n, r, a), o += -1 * t.getHeightFromTerrainHeightData(e, i - 1, n, r, a), o += -1 * t.getHeightFromTerrainHeightData(e + 1, i - 1, n, r, a), o += 1 * t.getHeightFromTerrainHeightData(e - 1, i + 1, n, r, a), o += 1 * t.getHeightFromTerrainHeightData(e, i + 1, n, r, a), o += 1 * t.getHeightFromTerrainHeightData(e + 1, i + 1, n, r, a), s.x = -h, s.y = 6, s.z = -o, Le.normalize(s, s);
        }, e.calcVertextNormlUV = function (t, e, i, n, r) {
          r.x = t / i, r.y = e / n, r.z = e / n;
        }, e.calcVertextBuffer = function (e, i, n, r, a, s, o, h, l, u, c, _) {
          if (1 == _ && !t.__ADAPT_MATRIX__) {
            t.__ADAPT_MATRIX__ = new Ce();
            var d = new Ce();
            Ce.createRotationY(Math.PI, t.__ADAPT_MATRIX__), Ce.createTranslate(new Le(0, 0, (c - 1) * a), d), Ce.multiply(d, t.__ADAPT_MATRIX__, t.__ADAPT_MATRIX__), t.__ADAPT_MATRIX_INV__ = new Ce(), t.__ADAPT_MATRIX__.invert(t.__ADAPT_MATRIX_INV__);
          }
          this._gridSize = a, this._beginGridX = e * t.CHUNK_GRID_NUM + n, this._beginGridZ = i * t.CHUNK_GRID_NUM + r;
          for (var f = o * h, p = 2147483647, m = -2147483648, g = new Le(), v = 0, y = t.LEAF_GRID_NUM + 1; v < y; v++)
            for (var x = 0, T = t.LEAF_GRID_NUM + 1; x < T; x++) t.__VECTOR3__.x = (this._beginGridX + x) * this._gridSize, t.__VECTOR3__.z = (this._beginGridZ + v) * this._gridSize, t.__VECTOR3__.y = l[(this._beginGridZ + v) * u + (this._beginGridX + x)], p = t.__VECTOR3__.y < p ? t.__VECTOR3__.y : p, m = t.__VECTOR3__.y > m ? t.__VECTOR3__.y : m, t.__ADAPT_MATRIX__ && Le.transformV3ToV3(t.__VECTOR3__, t.__ADAPT_MATRIX__, t.__VECTOR3__), s[f] = t.__VECTOR3__.x, s[++f] = t.__VECTOR3__.y, s[++f] = t.__VECTOR3__.z, f++, this.calcVertextNormlUV(this._beginGridX + x, this._beginGridZ + v, u, c, g), s[f] = g.x, s[++f] = g.y, s[++f] = g.z, s[++f] = (n + x) / t.CHUNK_GRID_NUM, s[++f] = (r + v) / t.CHUNK_GRID_NUM, s[++f] = this._beginGridX + x, s[++f] = this._beginGridZ + v, f++;
          this._sizeOfY = new Pe(p - 1, m + 1), this.calcLODErrors(l, u, c), this.calcOriginalBoudingBoxAndSphere();
        }, e.calcSkirtVertextBuffer = function (e, i, n, r, a, s, o, h, l, u, c) {
          this._gridSize = a, this._beginGridX = e * t.CHUNK_GRID_NUM + n, this._beginGridZ = i * t.CHUNK_GRID_NUM + r;
          var _ = o * h,
            d = 0,
            f = 0,
            p = t.LEAF_GRID_NUM + 1,
            m = new Le(),
            g = 0,
            v = 0;
          for (d = 0; d < 2; d++)
            for (f = 0; f < p; f++) t.__VECTOR3__.x = (this._beginGridX + f) * this._gridSize, t.__VECTOR3__.y = 1 == d ? l[this._beginGridZ * u + (this._beginGridX + f)] : -this._gridSize, t.__VECTOR3__.z = (this._beginGridZ + 0) * this._gridSize, t.__ADAPT_MATRIX__ && Le.transformV3ToV3(t.__VECTOR3__, t.__ADAPT_MATRIX__, t.__VECTOR3__), s[_] = t.__VECTOR3__.x, s[++_] = t.__VECTOR3__.y, s[++_] = t.__VECTOR3__.z, _++, g = 0 == d ? this._beginGridZ - 1 : this._beginGridZ, this.calcVertextNormlUV(this._beginGridX + f, g, u, c, m), s[_] = m.x, s[++_] = m.y, s[++_] = m.z, s[++_] = (n + f) / t.CHUNK_GRID_NUM, s[++_] = (r + 0) / t.CHUNK_GRID_NUM, s[++_] = this._beginGridX + f, s[++_] = g, _++;
          for (d = 0; d < 2; d++)
            for (f = 0; f < p; f++) t.__VECTOR3__.x = (this._beginGridX + f) * this._gridSize, t.__VECTOR3__.y = 0 == d ? l[(this._beginGridZ + t.LEAF_GRID_NUM) * u + (this._beginGridX + f)] : -this._gridSize, t.__VECTOR3__.z = (this._beginGridZ + t.LEAF_GRID_NUM) * this._gridSize, t.__ADAPT_MATRIX__ && Le.transformV3ToV3(t.__VECTOR3__, t.__ADAPT_MATRIX__, t.__VECTOR3__), s[_] = t.__VECTOR3__.x, s[++_] = t.__VECTOR3__.y, s[++_] = t.__VECTOR3__.z, _++, g = 0 == d ? this._beginGridZ + t.LEAF_GRID_NUM : this._beginGridZ + t.LEAF_GRID_NUM + 1, this.calcVertextNormlUV(this._beginGridX + f, g, u, c, m), s[_] = m.x, s[++_] = m.y, s[++_] = m.z, s[++_] = (n + f) / t.CHUNK_GRID_NUM, s[++_] = (r + t.LEAF_GRID_NUM) / t.CHUNK_GRID_NUM, s[++_] = this._beginGridX + f, s[++_] = g, _++;
          for (d = 0; d < 2; d++)
            for (f = 0; f < p; f++) t.__VECTOR3__.x = (this._beginGridX + 0) * this._gridSize, t.__VECTOR3__.y = 0 == d ? l[(this._beginGridZ + f) * u + (this._beginGridX + 0)] : -this._gridSize, t.__VECTOR3__.z = (this._beginGridZ + f) * this._gridSize, t.__ADAPT_MATRIX__ && Le.transformV3ToV3(t.__VECTOR3__, t.__ADAPT_MATRIX__, t.__VECTOR3__), s[_] = t.__VECTOR3__.x, s[++_] = t.__VECTOR3__.y, s[++_] = t.__VECTOR3__.z, _++, v = 0 == d ? this._beginGridX : this._beginGridX - 1, this.calcVertextNormlUV(v, this._beginGridZ + f, u, c, m), s[_] = m.x, s[++_] = m.y, s[++_] = m.z, s[++_] = (n + 0) / t.CHUNK_GRID_NUM, s[++_] = (r + f) / t.CHUNK_GRID_NUM, s[++_] = v, s[++_] = this._beginGridZ + f, _++;
          for (d = 0; d < 2; d++)
            for (f = 0; f < p; f++) t.__VECTOR3__.x = (this._beginGridX + t.LEAF_GRID_NUM) * this._gridSize, t.__VECTOR3__.y = 1 == d ? l[(this._beginGridZ + f) * u + (this._beginGridX + t.LEAF_GRID_NUM)] : -this._gridSize, t.__VECTOR3__.z = (this._beginGridZ + f) * this._gridSize, t.__ADAPT_MATRIX__ && Le.transformV3ToV3(t.__VECTOR3__, t.__ADAPT_MATRIX__, t.__VECTOR3__), s[_] = t.__VECTOR3__.x, s[++_] = t.__VECTOR3__.y, s[++_] = t.__VECTOR3__.z, _++, v = 0 == d ? this._beginGridX + t.LEAF_GRID_NUM + 1 : this._beginGridX + t.LEAF_GRID_NUM, this.calcVertextNormlUV(v, this._beginGridZ + f, u, c, m), s[_] = m.x, s[++_] = m.y, s[++_] = m.z, s[++_] = (n + t.LEAF_GRID_NUM) / t.CHUNK_GRID_NUM, s[++_] = (r + f) / t.CHUNK_GRID_NUM, s[++_] = v, s[++_] = this._beginGridZ + f, _++;
        }, e.calcOriginalBoudingBoxAndSphere = function () {
          var e = new Le(this._beginGridX * this._gridSize, this._sizeOfY.x, this._beginGridZ * this._gridSize),
            i = new Le((this._beginGridX + t.LEAF_GRID_NUM) * this._gridSize, this._sizeOfY.y, (this._beginGridZ + t.LEAF_GRID_NUM) * this._gridSize);
          t.__ADAPT_MATRIX__ && (Le.transformV3ToV3(e, t.__ADAPT_MATRIX__, e), Le.transformV3ToV3(i, t.__ADAPT_MATRIX__, i)), this._originalBoundingBox = new xe(e, i);
          var n = new Le();
          Le.subtract(i, e, n), Le.scale(n, .5, n);
          var r = new Le();
          Le.add(e, n, r), this._originalBoundingSphere = new Se(r, Le.scalarLength(n)), this._originalBoundingBoxCorners = s(8, null), this._originalBoundingBox.getCorners(this._originalBoundingBoxCorners), this._boundingBox = new xe(new Le(-.5, -.5, -.5), new Le(.5, .5, .5)), this._boundingSphere = new Se(new Le(0, 0, 0), 1);
        }, e.calcLeafBoudingBox = function (t) {
          for (var e = 0; e < 8; e++) Le.transformCoordinate(this._originalBoundingBoxCorners[e], t, ei._tempBoundBoxCorners[e]);
          xe.createfromPoints(ei._tempBoundBoxCorners, this._boundingBox);
        }, e.calcLeafBoudingSphere = function (t, e) {
          Le.transformCoordinate(this._originalBoundingSphere.center, t, this._boundingSphere.center), this._boundingSphere.radius = this._originalBoundingSphere.radius * e;
        }, e.calcLODErrors = function (e, i, n) {
          this._LODError = new Float32Array(t._maxLODLevel + 1);
          for (var r = 1, a = 0, s = t._maxLODLevel + 1; a < s; a++) {
            for (var o = 0, h = 0, l = t.LEAF_GRID_NUM; h < l; h += r)
              for (var u = 0, c = t.LEAF_GRID_NUM; u < c; u += r)
                for (var _ = e[(this._beginGridZ + h) * i + (this._beginGridX + u)], d = e[(this._beginGridZ + h) * i + (this._beginGridX + u) + r], f = e[(this._beginGridZ + h + r) * i + (this._beginGridX + u)], p = e[(this._beginGridZ + h + r) * i + (this._beginGridX + u) + r], m = 0; m < r; m++)
                  for (var g = m / r, v = 0; v < r; v++) {
                    var y = v / r,
                      x = e[(this._beginGridZ + h + m) * i + (this._beginGridX + u) + v],
                      T = y + g <= 1 ? _ + (d - _) * y + (f - _) * g : p + (f - p) * (1 - y) + (d - p) * (1 - g),
                      S = Math.abs(T - x);
                    o = Math.max(o, S);
                  }
            r *= 2, this._LODError[a] = o;
          }
        }, e.determineLod = function (e, i, n, r) {
          var a = Le.distance(e, this._boundingSphere.center),
            s = t._maxLODLevel;
          if (!r) {
            if (this._lastDistanceToEye == a) return this._currentLODLevel;
            this._lastDistanceToEye > a && (s = this._currentLODLevel);
          }
          for (var o = s; o >= 1; o--)
            if (fn.LOD_DISTANCE_FACTOR * this._LODError[o] / a * i < n) {
              this._currentLODLevel = o;
              break;
            }
          return this._lastDistanceToEye = a, this._currentLODLevel;
        }, t.__init__ = function () {
          if (!t._bInit) {
            var e = t.CHUNK_GRID_NUM / t.LEAF_GRID_NUM * (t.CHUNK_GRID_NUM / t.LEAF_GRID_NUM);
            t._planeLODIndex = s(e);
            var i = 0,
              n = 0,
              r = 0,
              a = 0,
              o = 0,
              h = 0,
              l = null,
              u = null;
            for (i = 0; i < e; i++) t._planeLODIndex[i] = new Array(t._maxLODLevel + 1);
            for (i = 0, a = t._maxLODLevel + 1; i < a; i++) t._planeLODIndex[0][i] = t.calcPlaneLODIndex(i);
            for (i = 1; i < e; i++)
              for (h = i * t.LEAF_PLANE_VERTEXT_COUNT, n = 0, o = t._maxLODLevel + 1; n < o; n++) {
                for (l = t._planeLODIndex[0][n], u = new Uint16Array(l.length), r = 0; r < l.length; r++) u[r] = l[r] + h;
                t._planeLODIndex[i][n] = u;
              }
            for (t._skirtLODIndex = s(e), i = 0; i < e; i++) t._skirtLODIndex[i] = new Array(t._maxLODLevel + 1);
            for (i = 0, a = t._maxLODLevel + 1; i < a; i++) t._skirtLODIndex[0][i] = t.calcSkirtLODIndex(i);
            for (i = 1; i < e; i++)
              for (h = i * t.LEAF_SKIRT_VERTEXT_COUNT, n = 0, o = t._maxLODLevel + 1; n < o; n++) {
                for (l = t._skirtLODIndex[0][n], u = new Uint16Array(l.length), r = 0; r < l.length; r++) u[r] = l[r] + h;
                t._skirtLODIndex[i][n] = u;
              }
            t._bInit = !0;
          }
        }, t.getPlaneLODIndex = function (e, i) {
          return t._planeLODIndex[e][i];
        }, t.getSkirtLODIndex = function (e, i) {
          return t._skirtLODIndex[e][i];
        }, t.calcPlaneLODIndex = function (e) {
          e > t._maxLODLevel && (e = t._maxLODLevel);
          var i = t.LEAF_GRID_NUM + 1,
            n = 0,
            r = null,
            a = laya.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / Math.pow(2, e);
          r = new Uint16Array(a * a * 6);
          for (var s = laya.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / a, o = 0; o < t.LEAF_GRID_NUM; o += s)
            for (var h = 0; h < t.LEAF_GRID_NUM; h += s) r[n] = (o + s) * i + h, r[++n] = o * i + h, r[++n] = o * i + h + s, r[++n] = o * i + h + s, r[++n] = (o + s) * i + h + s, r[++n] = (o + s) * i + h, n++;
          return r;
        }, t.calcSkirtLODIndex = function (e) {
          e > t._maxLODLevel && (e = t._maxLODLevel);
          var i = t.CHUNK_GRID_NUM / t.LEAF_GRID_NUM * (t.CHUNK_GRID_NUM / t.LEAF_GRID_NUM) * t.LEAF_PLANE_VERTEXT_COUNT,
            n = t.LEAF_GRID_NUM + 1,
            r = 0,
            a = null,
            s = laya.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / Math.pow(2, e);
          a = new Uint16Array(4 * s * 6);
          for (var o = laya.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / s, h = 0; h < 4; h++) {
            for (var l = 0; l < t.LEAF_GRID_NUM; l += o) a[r] = i + n + l, a[++r] = i + l, a[++r] = i + l + o, a[++r] = i + l + o, a[++r] = i + n + l + o, a[++r] = i + n + l, r++;
            i += 2 * n;
          }
          return a;
        }, t.getHeightFromTerrainHeightData = function (t, e, i, n, r) {
          return t = t < 0 ? 0 : t, t = t >= n ? n - 1 : t, e = e < 0 ? 0 : e, e = e >= r ? r - 1 : e, i[e * n + t];
        }, t.CHUNK_GRID_NUM = 64, t.LEAF_GRID_NUM = 32, t.__ADAPT_MATRIX__ = null, t.__ADAPT_MATRIX_INV__ = null, t._planeLODIndex = null, t._skirtLODIndex = null, t._bInit = !1, n(t, ["LEAF_PLANE_VERTEXT_COUNT", function () {
          return this.LEAF_PLANE_VERTEXT_COUNT = (t.LEAF_GRID_NUM + 1) * (t.LEAF_GRID_NUM + 1);
        }, "LEAF_SKIRT_VERTEXT_COUNT", function () {
          return this.LEAF_SKIRT_VERTEXT_COUNT = 2 * (t.LEAF_GRID_NUM + 1) * 4;
        }, "LEAF_VERTEXT_COUNT", function () {
          return this.LEAF_VERTEXT_COUNT = t.LEAF_PLANE_VERTEXT_COUNT + t.LEAF_SKIRT_VERTEXT_COUNT;
        }, "LEAF_PLANE_MAX_INDEX_COUNT", function () {
          return this.LEAF_PLANE_MAX_INDEX_COUNT = t.LEAF_GRID_NUM * t.LEAF_GRID_NUM * 6;
        }, "LEAF_SKIRT_MAX_INDEX_COUNT", function () {
          return this.LEAF_SKIRT_MAX_INDEX_COUNT = 4 * t.LEAF_GRID_NUM * 6;
        }, "LEAF_MAX_INDEX_COUNT", function () {
          return this.LEAF_MAX_INDEX_COUNT = t.LEAF_PLANE_MAX_INDEX_COUNT + t.LEAF_SKIRT_MAX_INDEX_COUNT;
        }, "__VECTOR3__", function () {
          return this.__VECTOR3__ = new Le();
        }, "_maxLODLevel", function () {
          return this._maxLODLevel = Math.log2(t.LEAF_GRID_NUM);
        }]), t;
      }(),
      ze = function () {
        function t() {
          this.alphaMap = null, this.detailID = null, this.normalMap = null;
        }
        return r(t, "laya.d3.terrain.unit.ChunkInfo"), t;
      }(),
      We = function () {
        function t() {
          this.diffuseTexture = null, this.normalTexture = null, this.scale = null, this.offset = null;
        }
        return r(t, "laya.d3.terrain.unit.DetailTextureInfo"), t;
      }(),
      je = function () {
        function t() {
          this.ambientColor = null, this.diffuseColor = null, this.specularColor = null;
        }
        return r(t, "laya.d3.terrain.unit.MaterialInfo"), t;
      }(),
      Xe = function () {
        function t() {}
        return r(t, "laya.d3.utils.Physics"), t.__init__ = function () {
          t._layerCollsionMatrix.length = 31;
          for (var e = 0; e < 31; e++) {
            var i = [],
              n = 31 - e;
            i.length = n;
            for (var r = 0; r < n; r++) i[r] = r === n - 1;
            t._layerCollsionMatrix[e] = i;
          }
        }, t.setLayerCollision = function (e, i, n) {
          t._layerCollsionMatrix[e.number][30 - i.number] = n;
        }, t.getLayerCollision = function (e, i) {
          return t._layerCollsionMatrix[e.number][30 - i.number];
        }, t.setColliderCollision = function (t, e, i) {
          i ? (delete t._ignoreCollisonMap[e.id], delete e._ignoreCollisonMap[t.id]) : (t._ignoreCollisonMap[e.id] = e, e._ignoreCollisonMap[t.id] = t);
        }, t.getIColliderCollision = function (t, e) {
          return !!t._ignoreCollisonMap[e.id];
        }, t.rayCast = function (e, i, n, r) {
          void 0 === n && (n = 1.79e308), void 0 === r && (r = 0), t._outHitAllInfo.length = 0;
          for (var a = z.getLayerByNumber(r)._colliders, s = 0, o = a.length; s < o; s++) {
            var h = a[s];
            if (h.enable && (h.raycast(e, t._outHitInfo, n), -1 !== t._outHitInfo.distance && t._outHitInfo.distance <= n)) {
              var l = new qe();
              t._outHitInfo.cloneTo(l), t._outHitAllInfo.push(l);
            }
          }
          if (0 == t._outHitAllInfo.length) return i.sprite3D = null, void(i.distance = -1);
          for (var u = Number.MAX_VALUE, c = 0, _ = 0; _ < t._outHitAllInfo.length; _++) t._outHitAllInfo[_].distance < u && (u = t._outHitAllInfo[_].distance, c = _);
          t._outHitAllInfo[c].cloneTo(i);
        }, t.rayCastAll = function (e, i, n, r) {
          void 0 === n && (n = 1.79e308), void 0 === r && (r = 0), i.length = 0;
          for (var a = z.getLayerByNumber(r)._colliders, s = 0, o = a.length; s < o; s++) {
            var h = a[s];
            if (h.enable && (t._outHitInfo.distance = -1, t._outHitInfo.sprite3D = null, h.raycast(e, t._outHitInfo, n), -1 !== t._outHitInfo.distance && t._outHitInfo.distance <= n)) {
              var l = new qe();
              t._outHitInfo.cloneTo(l), i.push(l);
            }
          }
        }, t._outHitAllInfo = [], t._layerCollsionMatrix = [], n(t, ["_outHitInfo", function () {
          return this._outHitInfo = new qe();
        }, "collisionManager", function () {
          return this.collisionManager = new ni();
        }, "gravity", function () {
          return this.gravity = new Le(0, -9.81, 0);
        }]), t;
      }(),
      Ye = function () {
        function t() {}
        return r(t, "laya.d3.utils.Picker"), t.calculateCursorRay = function (e, i, n, r, a, s) {
          var o = e.elements[0],
            h = e.elements[1],
            l = t._tempVector30,
            u = l.elements;
          u[0] = o, u[1] = h, u[2] = i.minDepth;
          var c = t._tempVector31,
            _ = c.elements;
          _[0] = o, _[1] = h, _[2] = i.maxDepth;
          var d = s.origin,
            f = t._tempVector32;
          i.unprojectFromWVP(l, n, r, a, d), i.unprojectFromWVP(c, n, r, a, f);
          var p = s.direction.elements;
          p[0] = f.x - d.x, p[1] = f.y - d.y, p[2] = f.z - d.z, Le.normalize(s.direction, s.direction);
        }, t.rayIntersectsPositionsAndIndices = function (e, i, n, r, a) {
          for (var s = n.vertexStride / 4, o = n.getVertexElementByUsage(0).offset / 4, h = Number.MAX_VALUE, l = -1, u = -1, c = -1, _ = 0; _ < r.length; _ += 3) {
            var d = t._tempVector35,
              f = d.elements,
              p = r[_] * s,
              m = p + o;
            f[0] = i[m], f[1] = i[m + 1], f[2] = i[m + 2];
            var g = t._tempVector36,
              v = g.elements,
              y = r[_ + 1] * s,
              x = y + o;
            v[0] = i[x], v[1] = i[x + 1], v[2] = i[x + 2];
            var T = t._tempVector37,
              S = T.elements,
              w = r[_ + 2] * s,
              E = w + o;
            S[0] = i[E], S[1] = i[E + 1], S[2] = i[E + 2];
            var b = laya.d3.utils.Picker.rayIntersectsTriangle(e, d, g, T);
            !isNaN(b) && b < h && (h = b, l = p, u = y, c = w);
          }
          if (h !== Number.MAX_VALUE) {
            a.distance = h, Le.scale(e.direction, h, a.position), Le.add(e.origin, a.position, a.position);
            var C = a.trianglePositions,
              M = C[0],
              I = C[1],
              D = C[2],
              A = M.elements,
              R = I.elements,
              P = D.elements,
              L = l + o;
            A[0] = i[L], A[1] = i[L + 1], A[2] = i[L + 2];
            var O = u + o;
            R[0] = i[O], R[1] = i[O + 1], R[2] = i[O + 2];
            var N = c + o;
            P[0] = i[N], P[1] = i[N + 1], P[2] = i[N + 2];
            var V = n.getVertexElementByUsage(3);
            if (V) {
              var F = V.offset / 4,
                B = a.triangleNormals,
                U = B[0],
                k = B[1],
                G = B[2],
                H = U.elements,
                z = k.elements,
                W = G.elements,
                j = l + F;
              H[0] = i[j], H[1] = i[j + 1], H[2] = i[j + 2];
              var X = u + F;
              z[0] = i[X], z[1] = i[X + 1], z[2] = i[X + 2];
              var Y = c + F;
              W[0] = i[Y], W[1] = i[Y + 1], W[2] = i[Y + 2];
            }
            return !0;
          }
          return a.position.toDefault(), a.distance = Number.MAX_VALUE, a.trianglePositions[0].toDefault(), a.trianglePositions[1].toDefault(), a.trianglePositions[2].toDefault(), a.triangleNormals[0].toDefault(), a.triangleNormals[1].toDefault(), a.triangleNormals[2].toDefault(), !1;
        }, t.rayIntersectsTriangle = function (e, i, n, r) {
          var a = t._tempVector30,
            s = t._tempVector31;
          Le.subtract(n, i, a), Le.subtract(r, i, s);
          var o = t._tempVector32;
          Le.cross(e.direction, s, o);
          var h;
          if ((h = Le.dot(a, o)) > -Number.MIN_VALUE && h < Number.MIN_VALUE) return Number.NaN;
          var l = 1 / h,
            u = t._tempVector33;
          Le.subtract(e.origin, i, u);
          var c;
          if (c = Le.dot(u, o), (c *= l) < 0 || c > 1) return Number.NaN;
          var _ = t._tempVector34;
          Le.cross(u, a, _);
          var d;
          if (d = Le.dot(e.direction, _), (d *= l) < 0 || c + d > 1) return Number.NaN;
          var f;
          return f = Le.dot(s, _), (f *= l) < 0 ? Number.NaN : f;
        }, n(t, ["_tempVector30", function () {
          return this._tempVector30 = new Le();
        }, "_tempVector31", function () {
          return this._tempVector31 = new Le();
        }, "_tempVector32", function () {
          return this._tempVector32 = new Le();
        }, "_tempVector33", function () {
          return this._tempVector33 = new Le();
        }, "_tempVector34", function () {
          return this._tempVector34 = new Le();
        }, "_tempVector35", function () {
          return this._tempVector35 = new Le();
        }, "_tempVector36", function () {
          return this._tempVector36 = new Le();
        }, "_tempVector37", function () {
          return this._tempVector37 = new Le();
        }]), t;
      }(),
      qe = function () {
        function t() {
          this.distance = NaN, this.trianglePositions = null, this.triangleNormals = null, this.position = null, this.sprite3D = null, this.distance = -1, this.trianglePositions = [new Le(), new Le(), new Le()], this.trianglePositions.length = 3, this.triangleNormals = [new Le(), new Le(), new Le()], this.triangleNormals.length = 3, this.position = new Le();
        }
        r(t, "laya.d3.utils.RaycastHit");
        return t.prototype.cloneTo = function (t) {
          t.distance = this.distance, this.trianglePositions[0].cloneTo(t.trianglePositions[0]), this.trianglePositions[1].cloneTo(t.trianglePositions[1]), this.trianglePositions[2].cloneTo(t.trianglePositions[2]), this.triangleNormals[0].cloneTo(t.triangleNormals[0]), this.triangleNormals[1].cloneTo(t.triangleNormals[1]), this.triangleNormals[2].cloneTo(t.triangleNormals[2]), this.position.cloneTo(t.position), t.sprite3D = this.sprite3D;
        }, t;
      }(),
      Qe = function () {
        function t(t, e) {
          this._width = 0, this._height = 0, this._width = t, this._height = e;
        }
        r(t, "laya.d3.utils.Size");
        var e = t.prototype;
        return a(0, e, "width", function () {
          return -1 === this._width ? _t.clientWidth : this._width;
        }), a(0, e, "height", function () {
          return -1 === this._height ? _t.clientHeight : this._height;
        }), a(1, t, "fullScreen", function () {
          return new t(-1, -1);
        }), t;
      }(),
      Ke = function () {
        function t() {}
        return r(t, "laya.d3.utils.Utils3D"), t._rotationTransformScaleSkinAnimation = function (e, i, n, r, a, s, o, h, l, u, c, _) {
          var d = t._tempArray16_0,
            f = t._tempArray16_1,
            p = t._tempArray16_2,
            m = r + r,
            g = a + a,
            v = s + s,
            y = r * m,
            x = a * m,
            T = a * g,
            S = s * m,
            w = s * g,
            E = s * v,
            b = o * m,
            C = o * g,
            M = o * v;
          d[15] = 1, d[0] = 1 - T - E, d[1] = x + M, d[2] = S - C, d[4] = x - M, d[5] = 1 - y - E, d[6] = w + b, d[8] = S + C, d[9] = w - b, d[10] = 1 - y - T, f[15] = 1, f[0] = h, f[5] = l, f[10] = u;
          var I, D, A, R, P;
          for (I = 0; I < 4; I++) D = d[I], A = d[I + 4], R = d[I + 8], P = d[I + 12], p[I] = D, p[I + 4] = A, p[I + 8] = R, p[I + 12] = D * e + A * i + R * n + P;
          for (I = 0; I < 4; I++) D = p[I], A = p[I + 4], R = p[I + 8], P = p[I + 12], c[I + _] = D * f[0] + A * f[1] + R * f[2] + P * f[3], c[I + _ + 4] = D * f[4] + A * f[5] + R * f[6] + P * f[7], c[I + _ + 8] = D * f[8] + A * f[9] + R * f[10] + P * f[11], c[I + _ + 12] = D * f[12] + A * f[13] + R * f[14] + P * f[15];
        }, t._createNodeByJson = function (e, i, n, r) {
          if (!n) switch (i.type) {
            case "Sprite3D":
              n = new Vi();
              break;
            case "MeshSprite3D":
              n = new gn();
              break;
            case "SkinnedMeshSprite3D":
              n = new yn();
              break;
            case "ShuriKenParticle3D":
              n = new vn();
              break;
            case "TrailSprite3D":
              n = new xn();
              break;
            case "Terrain":
              n = new fn();
              break;
            case "Camera":
              n = new pn();
              break;
            case "DirectionLight":
              n = new mn();
              break;
            default:
              throw new Error("Utils3D:unidentified class type in (.lh) file.");
          }
          var a = i.props;
          if (a)
            for (var s in a) n[s] = a[s];
          var o = i.customProps;
          o && (n instanceof laya.d3.core.Sprite3D ? (n._parseBaseCustomProps(o), n._parseCustomProps(e, r, o, i), n._parseCustomComponent(e, r, i.components)) : n._parseCustomProps(e, r, o, i));
          var h = i.child;
          if (h)
            for (var l = 0, u = h.length; l < u; l++) {
              var c = t._createNodeByJson(e, h[l], null, r);
              n.addChild(c);
            }
          return n;
        }, t._computeBoneAndAnimationDatasByBindPoseMatrxix = function (t, e, i, n, r, a) {
          var s, o, h = 0,
            l = 0,
            u = t.length;
          for (s = 0; s < u; h += t[s].keyframeWidth, l += 16, s++) laya.d3.utils.Utils3D._rotationTransformScaleSkinAnimation(e[h + 0], e[h + 1], e[h + 2], e[h + 3], e[h + 4], e[h + 5], e[h + 6], e[h + 7], e[h + 8], e[h + 9], n, l), 0 != s && (o = 16 * t[s].parentIndex, laya.d3.utils.Utils3D.mulMatrixByArray(n, o, n, l, n, l));
          var c = i.length;
          for (s = 0; s < c; s++) laya.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(n, 16 * a[s], i[s], r, 16 * s);
        }, t._computeAnimationDatasByArrayAndMatrixFast = function (t, e, i, n) {
          for (var r = 0, a = t.length; r < a; r++) laya.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(e, 16 * n[r], t[r], i, 16 * r);
        }, t._computeBoneAndAnimationDatasByBindPoseMatrxixOld = function (t, e, i, n, r) {
          var a, s, o = 0,
            h = 0,
            l = t.length;
          for (a = 0; a < l; o += t[a].keyframeWidth, h += 16, a++) laya.d3.utils.Utils3D._rotationTransformScaleSkinAnimation(e[o + 7], e[o + 8], e[o + 9], e[o + 3], e[o + 4], e[o + 5], e[o + 6], e[o + 0], e[o + 1], e[o + 2], n, h), 0 != a && (s = 16 * t[a].parentIndex, laya.d3.utils.Utils3D.mulMatrixByArray(n, s, n, h, n, h));
          var u = i.length;
          for (a = 0; a < u; a++) {
            var c = 16 * a;
            laya.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(n, c, i[a], r, c);
          }
        }, t._computeAnimationDatasByArrayAndMatrixFastOld = function (t, e, i) {
          for (var n = t.length, r = 0; r < n; r++) {
            var a = 16 * r;
            laya.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(e, a, t[r], i, a);
          }
        }, t._computeRootAnimationData = function (t, e, i) {
          for (var n = 0, r = 0, a = 0, s = t.length; n < s; r += t[n].keyframeWidth, a += 16, n++) laya.d3.utils.Utils3D.createAffineTransformationArray(e[r + 0], e[r + 1], e[r + 2], e[r + 3], e[r + 4], e[r + 5], e[r + 6], e[r + 7], e[r + 8], e[r + 9], i, a);
        }, t.transformVector3ArrayByQuat = function (t, e, i, n, r) {
          var a = i.elements,
            s = t[e],
            o = t[e + 1],
            h = t[e + 2],
            l = a[0],
            u = a[1],
            c = a[2],
            _ = a[3],
            d = _ * s + u * h - c * o,
            f = _ * o + c * s - l * h,
            p = _ * h + l * o - u * s,
            m = -l * s - u * o - c * h;
          n[r] = d * _ + m * -l + f * -c - p * -u, n[r + 1] = f * _ + m * -u + p * -l - d * -c, n[r + 2] = p * _ + m * -c + d * -u - f * -l;
        }, t.mulMatrixByArray = function (e, i, n, r, a, s) {
          var o, h, l, u, c;
          if (a === n) {
            for (n = t._tempArray16_3, o = 0; o < 16; ++o) n[o] = a[s + o];
            r = 0;
          }
          for (o = 0; o < 4; o++) h = e[i + o], l = e[i + o + 4], u = e[i + o + 8], c = e[i + o + 12], a[s + o] = h * n[r + 0] + l * n[r + 1] + u * n[r + 2] + c * n[r + 3], a[s + o + 4] = h * n[r + 4] + l * n[r + 5] + u * n[r + 6] + c * n[r + 7], a[s + o + 8] = h * n[r + 8] + l * n[r + 9] + u * n[r + 10] + c * n[r + 11], a[s + o + 12] = h * n[r + 12] + l * n[r + 13] + u * n[r + 14] + c * n[r + 15];
        }, t.mulMatrixByArrayFast = function (t, e, i, n, r, a) {
          var s, o, h, l, u;
          for (s = 0; s < 4; s++) o = t[e + s], h = t[e + s + 4], l = t[e + s + 8], u = t[e + s + 12], r[a + s] = o * i[n + 0] + h * i[n + 1] + l * i[n + 2] + u * i[n + 3], r[a + s + 4] = o * i[n + 4] + h * i[n + 5] + l * i[n + 6] + u * i[n + 7], r[a + s + 8] = o * i[n + 8] + h * i[n + 9] + l * i[n + 10] + u * i[n + 11], r[a + s + 12] = o * i[n + 12] + h * i[n + 13] + l * i[n + 14] + u * i[n + 15];
        }, t.mulMatrixByArrayAndMatrixFast = function (t, e, i, n, r) {
          var a, s, o, h, l, u = i.elements,
            c = u[0],
            _ = u[1],
            d = u[2],
            f = u[3],
            p = u[4],
            m = u[5],
            g = u[6],
            v = u[7],
            y = u[8],
            x = u[9],
            T = u[10],
            S = u[11],
            w = u[12],
            E = u[13],
            b = u[14],
            C = u[15],
            M = e,
            I = e + 4,
            D = e + 8,
            A = e + 12,
            R = r,
            P = r + 4,
            L = r + 8,
            O = r + 12;
          for (a = 0; a < 4; a++) s = t[M + a], o = t[I + a], h = t[D + a], l = t[A + a], n[R + a] = s * c + o * _ + h * d + l * f, n[P + a] = s * p + o * m + h * g + l * v, n[L + a] = s * y + o * x + h * T + l * S, n[O + a] = s * w + o * E + h * b + l * C;
        }, t.createAffineTransformationArray = function (t, e, i, n, r, a, s, o, h, l, u, c) {
          var _ = n + n,
            d = r + r,
            f = a + a,
            p = n * _,
            m = n * d,
            g = n * f,
            v = r * d,
            y = r * f,
            x = a * f,
            T = s * _,
            S = s * d,
            w = s * f;
          u[c + 0] = (1 - (v + x)) * o, u[c + 1] = (m + w) * o, u[c + 2] = (g - S) * o, u[c + 3] = 0, u[c + 4] = (m - w) * h, u[c + 5] = (1 - (p + x)) * h, u[c + 6] = (y + T) * h, u[c + 7] = 0, u[c + 8] = (g + S) * l, u[c + 9] = (y - T) * l, u[c + 10] = (1 - (p + v)) * l, u[c + 11] = 0, u[c + 12] = t, u[c + 13] = e, u[c + 14] = i, u[c + 15] = 1;
        }, t.transformVector3ArrayToVector3ArrayCoordinate = function (e, i, n, r, a) {
          var s = t._tempArray4_0,
            o = e[i + 0],
            h = e[i + 1],
            l = e[i + 2],
            u = n.elements;
          s[0] = o * u[0] + h * u[4] + l * u[8] + u[12], s[1] = o * u[1] + h * u[5] + l * u[9] + u[13], s[2] = o * u[2] + h * u[6] + l * u[10] + u[14], s[3] = 1 / (o * u[3] + h * u[7] + l * u[11] + u[15]), r[a + 0] = s[0] * s[3], r[a + 1] = s[1] * s[3], r[a + 2] = s[2] * s[3];
        }, t.transformLightingMapTexcoordByUV0Array = function (t, e, i, n, r) {
          var a = i.elements;
          n[r + 0] = t[e + 0] * a[0] + a[2], n[r + 1] = (t[e + 1] - 1) * a[1] + a[3];
        }, t.transformLightingMapTexcoordByUV1Array = function (t, e, i, n, r) {
          var a = i.elements;
          n[r + 0] = t[e + 0] * a[0] + a[2], n[r + 1] = 1 + t[e + 1] * a[1] + a[3];
        }, t.getURLVerion = function (t) {
          var e = t.indexOf("?");
          return e >= 0 ? t.substr(e) : null;
        }, t._quaternionCreateFromYawPitchRollArray = function (t, e, i, n) {
          var r = .5 * i,
            a = .5 * e,
            s = .5 * t,
            o = Math.sin(r),
            h = Math.cos(r),
            l = Math.sin(a),
            u = Math.cos(a),
            c = Math.sin(s),
            _ = Math.cos(s);
          n[0] = _ * l * h + c * u * o, n[1] = c * u * h - _ * l * o, n[2] = _ * u * o - c * l * h, n[3] = _ * u * h + c * l * o;
        }, t._createAffineTransformationArray = function (t, e, i, n) {
          var r = e[0],
            a = e[1],
            s = e[2],
            o = e[3],
            h = r + r,
            l = a + a,
            u = s + s,
            c = r * h,
            _ = r * l,
            d = r * u,
            f = a * l,
            p = a * u,
            m = s * u,
            g = o * h,
            v = o * l,
            y = o * u,
            x = i[0],
            T = i[1],
            S = i[2];
          n[0] = (1 - (f + m)) * x, n[1] = (_ + y) * x, n[2] = (d - v) * x, n[3] = 0, n[4] = (_ - y) * T, n[5] = (1 - (c + m)) * T, n[6] = (p + g) * T, n[7] = 0, n[8] = (d + v) * S, n[9] = (p - g) * S, n[10] = (1 - (c + f)) * S, n[11] = 0, n[12] = t[0], n[13] = t[1], n[14] = t[2], n[15] = 1;
        }, t._mulMatrixArray = function (t, e, i, n) {
          var r, a, s, o, h, l = e.elements,
            u = l[0],
            c = l[1],
            _ = l[2],
            d = l[3],
            f = l[4],
            p = l[5],
            m = l[6],
            g = l[7],
            v = l[8],
            y = l[9],
            x = l[10],
            T = l[11],
            S = l[12],
            w = l[13],
            E = l[14],
            b = l[15],
            C = n,
            M = n + 4,
            I = n + 8,
            D = n + 12;
          for (r = 0; r < 4; r++) a = t[r], s = t[r + 4], o = t[r + 8], h = t[r + 12], i[C + r] = a * u + s * c + o * _ + h * d, i[M + r] = a * f + s * p + o * m + h * g, i[I + r] = a * v + s * y + o * x + h * T, i[D + r] = a * S + s * w + o * E + h * b;
        }, t.getYawPitchRoll = function (e, i) {
          t.transformQuat(Le.ForwardRH, e, De.TEMPVector31), t.transformQuat(Le.Up, e, De.TEMPVector32);
          var n = De.TEMPVector32.elements;
          t.angleTo(Le.ZERO, De.TEMPVector31, De.TEMPVector33);
          var r = De.TEMPVector33.elements;
          r[0] == Math.PI / 2 ? (r[1] = t.arcTanAngle(n[2], n[0]), r[2] = 0) : r[0] == -Math.PI / 2 ? (r[1] = t.arcTanAngle(-n[2], -n[0]), r[2] = 0) : (Ce.createRotationY(-r[1], De.TEMPMatrix0), Ce.createRotationX(-r[0], De.TEMPMatrix1), Le.transformCoordinate(De.TEMPVector32, De.TEMPMatrix0, De.TEMPVector32), Le.transformCoordinate(De.TEMPVector32, De.TEMPMatrix1, De.TEMPVector32), r[2] = t.arcTanAngle(n[1], -n[0])), r[1] <= -Math.PI && (r[1] = Math.PI), r[2] <= -Math.PI && (r[2] = Math.PI), r[1] >= Math.PI && r[2] >= Math.PI && (r[1] = 0, r[2] = 0, r[0] = Math.PI - r[0]), i[0] = r[1], i[1] = r[0], i[2] = r[2];
        }, t.arcTanAngle = function (t, e) {
          return 0 == t ? 1 == e ? Math.PI / 2 : -Math.PI / 2 : t > 0 ? Math.atan(e / t) : t < 0 ? e > 0 ? Math.atan(e / t) + Math.PI : Math.atan(e / t) - Math.PI : 0;
        }, t.angleTo = function (e, i, n) {
          Le.subtract(i, e, De.TEMPVector30), Le.normalize(De.TEMPVector30, De.TEMPVector30), n.elements[0] = Math.asin(De.TEMPVector30.y), n.elements[1] = t.arcTanAngle(-De.TEMPVector30.z, -De.TEMPVector30.x);
        }, t.transformQuat = function (t, e, i) {
          var n = i.elements,
            r = t.elements,
            a = e,
            s = r[0],
            o = r[1],
            h = r[2],
            l = a[0],
            u = a[1],
            c = a[2],
            _ = a[3],
            d = _ * s + u * h - c * o,
            f = _ * o + c * s - l * h,
            p = _ * h + l * o - u * s,
            m = -l * s - u * o - c * h;
          n[0] = d * _ + m * -l + f * -c - p * -u, n[1] = f * _ + m * -u + p * -l - d * -c, n[2] = p * _ + m * -c + d * -u - f * -l;
        }, t.quaterionNormalize = function (t, e) {
          var i = t[0],
            n = t[1],
            r = t[2],
            a = t[3],
            s = i * i + n * n + r * r + a * a;
          s > 0 && (s = 1 / Math.sqrt(s), e[0] = i * s, e[1] = n * s, e[2] = r * s, e[3] = a * s);
        }, t.matrix4x4MultiplyFFF = function (t, e, i) {
          var n, r, a, s, o;
          if (i === e)
            for (e = new Float32Array(16), n = 0; n < 16; ++n) e[n] = i[n];
          for (n = 0; n < 4; n++) r = t[n], a = t[n + 4], s = t[n + 8], o = t[n + 12], i[n] = r * e[0] + a * e[1] + s * e[2] + o * e[3], i[n + 4] = r * e[4] + a * e[5] + s * e[6] + o * e[7], i[n + 8] = r * e[8] + a * e[9] + s * e[10] + o * e[11], i[n + 12] = r * e[12] + a * e[13] + s * e[14] + o * e[15];
        }, t.matrix4x4MultiplyMFM = function (e, i, n) {
          t.matrix4x4MultiplyFFF(e.elements, i, n.elements);
        }, n(t, ["_typeToFunO", function () {
          return this._typeToFunO = {
            INT16: "writeInt16",
            SHORT: "writeInt16",
            UINT16: "writeUint16",
            UINT32: "writeUint32",
            FLOAT32: "writeFloat32",
            INT: "writeInt32",
            UINT: "writeUint32",
            BYTE: "writeByte",
            STRING: "writeUTFString"
          };
        }, "_tempVector3_0", function () {
          return this._tempVector3_0 = new Le();
        }, "_tempVector3_1", function () {
          return this._tempVector3_1 = new Le();
        }, "_tempVector3_2", function () {
          return this._tempVector3_2 = new Le();
        }, "_tempVector3_3", function () {
          return this._tempVector3_3 = new Le();
        }, "_tempVector3_4", function () {
          return this._tempVector3_4 = new Le();
        }, "_tempVector3_5", function () {
          return this._tempVector3_5 = new Le();
        }, "_tempVector3_6", function () {
          return this._tempVector3_6 = new Le();
        }, "_tempArray4_0", function () {
          return this._tempArray4_0 = new Float32Array(4);
        }, "_tempArray16_0", function () {
          return this._tempArray16_0 = new Float32Array(16);
        }, "_tempArray16_1", function () {
          return this._tempArray16_1 = new Float32Array(16);
        }, "_tempArray16_2", function () {
          return this._tempArray16_2 = new Float32Array(16);
        }, "_tempArray16_3", function () {
          return this._tempArray16_3 = new Float32Array(16);
        }]), t;
      }(),
      Ze = function () {
        function t() {}
        return r(t, "Laya3D"), t._cancelLoadByUrl = function (e) {
          i.loader.cancelLoadByUrl(e), t._innerFirstLevelLoaderManager.cancelLoadByUrl(e), t._innerSecondLevelLoaderManager.cancelLoadByUrl(e), t._innerThirdLevelLoaderManager.cancelLoadByUrl(e), t._innerFourthLevelLoaderManager.cancelLoadByUrl(e);
        }, t._changeWebGLSize = function (t, e) {
          L.onStageResize(t, e), _t.clientWidth = t, _t.clientHeight = e;
        }, t.__init__ = function () {
          var e = x.createMap;
          e.lh = [Vi, "SPRITE3DHIERARCHY"], e.ls = [Ni, "SPRITE3DHIERARCHY"], e.lm = [rn, "MESH"], e.lmat = [Wi, "MATERIAL"], e.lpbr = [Gi, "MATERIAL"], e.ltc = [ln, "TEXTURECUBE"], e.jpg = [hn, "nativeimage"], e.jpeg = [hn, "nativeimage"], e.png = [hn, "nativeimage"], e.pkm = [hn, "arraybuffer"], e.lsani = [h, "arraybuffer"], e.lrani = [h, "arraybuffer"], e.raw = [en, "arraybuffer"], e.mipmaps = [en, "arraybuffer"], e.thdata = [yi, "arraybuffer"], e.lt = [xi, "TERRAIN"], e.lani = [fi, "arraybuffer"], e.lav = [pi, "json"], e.ani = [h, "arraybuffer"], y.parserMap.SPRITE3DHIERARCHY = t._loadHierarchy, y.parserMap.MESH = t._loadMesh, y.parserMap.MATERIAL = t._loadMaterial, y.parserMap.TEXTURECUBE = t._loadTextureCube, y.parserMap.TERRAIN = t._loadTerrain, t._innerFirstLevelLoaderManager.on("error", null, t._eventLoadManagerError), t._innerSecondLevelLoaderManager.on("error", null, t._eventLoadManagerError), t._innerThirdLevelLoaderManager.on("error", null, t._eventLoadManagerError), t._innerFourthLevelLoaderManager.on("error", null, t._eventLoadManagerError);
        }, t.READ_BLOCK = function () {
          return t._readData.pos += 4, !0;
        }, t.READ_DATA = function () {
          return t._DATA.offset = t._readData.getUint32(), t._DATA.size = t._readData.getUint32(), !0;
        }, t.READ_STRINGS = function () {
          var e = [],
            i = {
              offset: 0,
              size: 0
            };
          i.offset = t._readData.getUint16(), i.size = t._readData.getUint16();
          t._readData.pos;
          t._readData.pos = i.offset + t._DATA.offset;
          for (var n = 0; n < i.size; n++) {
            var r = t._readData.readUTFString(); - 1 === r.lastIndexOf(".lmat") && -1 === r.lastIndexOf(".lpbr") || e.push(r);
          }
          return e;
        }, t.formatRelativePath = function (t, e) {
          var i;
          if ("." === e.charAt(0)) {
            for (var n = (t + e).split("/"), r = 0, a = n.length; r < a; r++)
              if (".." == n[r]) {
                var s = r - 1;
                s > 0 && ".." !== n[s] && (n.splice(s, 2), r -= 2);
              }
            i = n.join("/");
          } else i = t + e;
          return null != R.customFormat && (i = R.customFormat(i, null)), i;
        }, t._eventLoadManagerError = function (t) {
          i.loader.event("error", t);
        }, t._addHierarchyInnerUrls = function (e, i, n, r, a, s) {
          var o = t.formatRelativePath(r, a);
          n && (o += n), e.push({
            url: o,
            clas: s
          }), i[a] = o;
        }, t._getSprite3DHierarchyInnerUrls = function (e, i, n, r, a, s, o) {
          var h, l = 0,
            u = 0;
          switch (e.type) {
            case "Scene":
              var c = e.customProps.lightmaps;
              for (l = 0, u = c.length; l < u; l++) {
                var d = c[l].replace(".exr", ".png");
                t._addHierarchyInnerUrls(r, a, s, o, d, hn);
              }
              break;
            case "MeshSprite3D":
            case "TrailSprite3D":
            case "LineSprite3D":
            case "SkinnedMeshSprite3D":
              var f;
              if (e.instanceParams)(f = e.instanceParams.loadPath) && t._addHierarchyInnerUrls(i, a, s, o, f, rn);
              else {
                (f = (h = e.customProps).meshPath) && t._addHierarchyInnerUrls(i, a, s, o, f, rn);
                var p = h.materials;
                if (p)
                  for (l = 0, u = p.length; l < u; l++) {
                    var m = p[l],
                      g = m.type.split("."),
                      v = _.window;
                    if (g.forEach(function (t) {
                        v = v[t];
                      }), "function" != typeof v) throw "_getSprite3DHierarchyInnerUrls 错误: " + m.type + " 不是类";
                    t._addHierarchyInnerUrls(n, a, s, o, m.path, v);
                  }
              }
              break;
            case "ShuriKenParticle3D":
              var y = (h = e.customProps).meshPath;
              y && t._addHierarchyInnerUrls(i, a, s, o, y, rn);
              var x = h.material;
              if (x) g = x.type.split("."), v = _.window, g.forEach(function (t) {
                v = v[t];
              }), t._addHierarchyInnerUrls(n, a, s, o, x.path, v);
              else {
                var T = h.materialPath;
                if (T) t._addHierarchyInnerUrls(n, a, s, o, T, Qi);
                else {
                  var S = h.texturePath;
                  S && t._addHierarchyInnerUrls(r, a, s, o, S, hn);
                }
              }
              break;
            case "Terrain":
              t._addHierarchyInnerUrls(r, a, s, o, e.customProps.dataPath, xi);
          }
          var w = e.components;
          for (var E in w) {
            var b = w[E];
            switch (E) {
              case "Animator":
                var C = b.avatarPath;
                if (C) t._addHierarchyInnerUrls(r, a, s, o, C, pi);
                else {
                  var M = b.avatar;
                  M && t._addHierarchyInnerUrls(r, a, s, o, M.path, pi);
                }
                var I = b.clipPaths;
                for (l = 0, u = I.length; l < u; l++) t._addHierarchyInnerUrls(r, a, s, o, I[l], fi);
            }
          }
          var D = e.child;
          for (l = 0, u = D.length; l < u; l++) t._getSprite3DHierarchyInnerUrls(D[l], i, n, r, a, s, o);
        }, t._loadHierarchy = function (e) {
          e.on("loaded", null, t._onHierarchylhLoaded, [e, e._class._getGroup()]), e.load(e.url, "json", !1, null, !0);
        }, t._onHierarchylhLoaded = function (e, i, n) {
          if (e._class.destroyed) e.endLoad();
          else {
            var r = e.url,
              a = Ke.getURLVerion(r),
              s = R.getPath(r),
              o = [],
              h = [],
              l = [],
              u = {};
            t._getSprite3DHierarchyInnerUrls(n, o, h, l, u, a, s);
            var c = o.length + h.length + l.length,
              _ = c + 1,
              d = 1 / _;
            if (t._onProcessChange(e, 0, d, 1), l.length > 0) {
              var f = c / _,
                p = v.create(null, t._onProcessChange, [e, d, f], !1);
              t._innerFourthLevelLoaderManager.create(l, v.create(null, t._onHierarchyInnerForthLevResouLoaded, [e, i, p, n, u, o, h, d + f * l.length, f]), p, null, null, 1, !0, i);
            } else t._onHierarchyInnerForthLevResouLoaded(e, i, null, n, u, o, h, d, f);
          }
        }, t._onHierarchyInnerForthLevResouLoaded = function (e, i, n, r, a, s, o, h, l) {
          if (e._class.destroyed) e.endLoad();
          else if (n && n.recover(), o.length > 0) {
            var u = v.create(null, t._onProcessChange, [e, h, l], !1);
            t._innerSecondLevelLoaderManager.create(o, v.create(null, t._onHierarchyInnerSecondLevResouLoaded, [e, i, u, r, a, s, h + l * o.length, l]), n, null, null, 1, !0, i);
          } else t._onHierarchyInnerSecondLevResouLoaded(e, i, null, r, a, s, h, l);
        }, t._onHierarchyInnerSecondLevResouLoaded = function (e, i, n, r, a, s, o, h) {
          if (e._class.destroyed) e.endLoad();
          else if (n && n.recover(), s.length > 0) {
            var l = v.create(null, t._onProcessChange, [e, o, h], !1);
            t._innerFirstLevelLoaderManager.create(s, v.create(null, t._onHierarchyInnerFirstLevResouLoaded, [e, l, r, a]), n, null, null, 1, !0, i);
          } else t._onHierarchyInnerFirstLevResouLoaded(e, null, r, a);
        }, t._onHierarchyInnerFirstLevResouLoaded = function (t, e, i, n) {
          e && e.recover(), t.endLoad([i, n]);
        }, t._loadTerrain = function (e) {
          e.on("loaded", null, t._onTerrainLtLoaded, [e, e._class._getGroup()]), e.load(e.url, "json", !1, null, !0);
        }, t._onTerrainLtLoaded = function (e, i, n) {
          if (e._class.destroyed) e.endLoad();
          else {
            var r, a, s = e.url,
              o = Ke.getURLVerion(s),
              h = R.getPath(s),
              l = [],
              u = {},
              c = 0,
              _ = 0,
              d = n.heightData;
            r = d.url, a = t.formatRelativePath(h, r), o && (a += o), u[r] = a, r = a;
            var f = n.detailTexture;
            for (c = 0, _ = f.length; c < _; c++) l.push({
              url: f[c].diffuse
            });
            var p = n.normalMap;
            for (c = 0, _ = p.length; c < _; c++) l.push({
              url: p[c]
            });
            var m = n.alphaMap;
            for (c = 0, _ = m.length; c < _; c++) l.push({
              url: m[c],
              params: [!1, !1, 6408, !0]
            });
            for (c = 0, _ = l.length; c < _; c++) {
              var g = l[c].url;
              a = t.formatRelativePath(h, g), o && (a += o), l[c].url = a, u[g] = a;
            }
            var y = l.length,
              x = y + 2,
              T = 1 / x;
            t._onProcessChange(e, 0, T, 1);
            var S = {
                heightMapLoaded: !1,
                texturesLoaded: !1
              },
              w = v.create(null, t._onProcessChange, [e, T, T], !1);
            t._innerFourthLevelLoaderManager.create(r, v.create(null, t._onTerrainHeightMapLoaded, [e, w, n, u, S]), w, null, [d.numX, d.numZ, d.bitType, d.value], 1, !0, i);
            var E = v.create(null, t._onProcessChange, [e, 2 * T, y / x], !1);
            t._innerFourthLevelLoaderManager.create(l, v.create(null, t._onTerrainTexturesLoaded, [e, E, n, u, S]), E, null, null, 1, !0, i);
          }
        }, t._onTerrainHeightMapLoaded = function (t, e, i, n, r) {
          r.heightMapLoaded = !0, r.texturesLoaded && (t.endLoad([i, n]), e.recover());
        }, t._onTerrainTexturesLoaded = function (t, e, i, n, r) {
          r.texturesLoaded = !0, r.heightMapLoaded && (t.endLoad([i, n]), e.recover());
        }, t._loadMesh = function (e) {
          e.on("loaded", null, t._onMeshLmLoaded, [e, e._class._getGroup()]), e.load(e.url, "arraybuffer", !1, null, !0);
        }, t._onMeshLmLoaded = function (e, i, n) {
          if (e._class.destroyed) e.endLoad();
          else {
            var r, a, s = e.url,
              o = Ke.getURLVerion(s),
              h = R.getPath(s),
              l = {},
              u = 0,
              c = 0,
              _ = 0;
            (t._readData = new f(n)).pos = 0;
            switch (t._readData.readUTFString()) {
              case "LAYAMODEL:02":
              case "LAYAMODEL:03":
              case "LAYAMODEL:0301":
                var d = t._readData.getUint32();
                t._readData.pos = t._readData.pos + 4, _ = t._readData.getUint16(), t._readData.pos = t._readData.pos + 8 * _;
                var p = t._readData.getUint32();
                for (_ = t._readData.getUint16(), t._readData.pos = d + p, r = [], u = 0; u < _; u++) {
                  var m = t._readData.readUTFString(); - 1 !== m.lastIndexOf(".lmat") && r.push(m);
                }
                break;
              default:
                for (t.READ_BLOCK(), u = 0; u < 2; u++) {
                  var g = t._readData.getUint16(),
                    y = t._strings[g],
                    x = t["READ_" + y];
                  if (null == x) throw new Error("model file err,no this function:" + g + " " + y);
                  1 === u ? r = x.call() : x.call();
                }
            }
            for (u = 0, c = r.length; u < c; u++) {
              var T = r[u];
              a = t.formatRelativePath(h, T), o && (a += o), r[u] = a, l[T] = a;
            }
            if (r.length > 0) {
              t._onProcessChange(e, 0, .5, 1);
              var S = v.create(null, t._onProcessChange, [e, .5, .5], !1);
              t._innerSecondLevelLoaderManager.create(r, v.create(null, t._onMeshMateialLoaded, [e, S, n, l]), S, null, null, 1, !0, i);
            } else e.endLoad([n, l]);
          }
        }, t._onMeshMateialLoaded = function (t, e, i, n) {
          t.endLoad([i, n]), e.recover();
        }, t._getMaterialTexturePath = function (e, i, n) {
          var r = e.length - 4;
          return e.indexOf(".dds") != r && e.indexOf(".tga") != r && e.indexOf(".exr") != r && e.indexOf(".DDS") != r && e.indexOf(".TGA") != r && e.indexOf(".EXR") != r || (e = e.substr(0, r) + ".png"), e = t.formatRelativePath(n, e), i && (e += i), e;
        }, t._loadMaterial = function (e) {
          e.on("loaded", null, t._onMaterilLmatLoaded, [e, e._class._getGroup()]), e.load(e.url, "json", !1, null, !0);
        }, t._onMaterilLmatLoaded = function (e, i, n) {
          if (e._class.destroyed) e.endLoad();
          else {
            var r, a = e.url,
              s = Ke.getURLVerion(a),
              o = R.getPath(a),
              h = [],
              l = {},
              u = n.customProps,
              c = n.version;
            if (c) switch (c) {
              case "LAYAMATERIAL:01":
              case "LAYAMATERIAL:02":
                for (var _ = n.props.textures, d = 0, f = _.length; d < f; d++) {
                  var p = _[d],
                    m = p.path;
                  if (m) {
                    var g = m.length - 4;
                    m.indexOf(".exr") != g && m.indexOf(".EXR") != g || (m = m.substr(0, g) + ".png"), r = t.formatRelativePath(o, m), s && (r += s), h.push({
                      url: r,
                      params: p.params
                    }), l[m] = r;
                  }
                }
                break;
              default:
                throw new Error("Laya3D:unkonwn version.");
            } else {
              var y = u.diffuseTexture.texture2D;
              if (y && (r = t._getMaterialTexturePath(y, s, o), h.push(r), l[y] = r), u.normalTexture) {
                var x = u.normalTexture.texture2D;
                x && (r = t._getMaterialTexturePath(x, s, o), h.push(r), l[x] = r);
              }
              if (u.specularTexture) {
                var T = u.specularTexture.texture2D;
                T && (r = t._getMaterialTexturePath(T, s, o), h.push(r), l[T] = r);
              }
              if (u.emissiveTexture) {
                var S = u.emissiveTexture.texture2D;
                S && (r = t._getMaterialTexturePath(S, s, o), h.push(r), l[S] = r);
              }
              if (u.ambientTexture) {
                var w = u.ambientTexture.texture2D;
                w && (r = t._getMaterialTexturePath(w, s, o), h.push(r), l[w] = r);
              }
              if (u.reflectTexture) {
                var E = u.reflectTexture.texture2D;
                E && (r = t._getMaterialTexturePath(E, s, o), h.push(r), l[E] = r);
              }
            }
            var b = h.length,
              C = b + 1,
              M = 1 / C;
            if (t._onProcessChange(e, 0, M, 1), b > 0) {
              var I = v.create(null, t._onProcessChange, [e, M, b / C], !1);
              t._innerFourthLevelLoaderManager.create(h, v.create(null, t._onMateialTexturesLoaded, [e, I, n, l]), I, hn, null, 1, !0, i);
            } else t._onMateialTexturesLoaded(e, null, n, null);
          }
        }, t._onMateialTexturesLoaded = function (t, e, i, n) {
          t.endLoad([i, n]), e && e.recover();
        }, t._loadTextureCube = function (e) {
          e.on("loaded", null, t._onTextureCubeLtcLoaded, [e]), e.load(e.url, "json", !1, null, !0);
        }, t._onTextureCubeLtcLoaded = function (e, i) {
          if (e._class.destroyed) e.endLoad();
          else {
            var n = R.getPath(e.url),
              r = [t.formatRelativePath(n, i.px), t.formatRelativePath(n, i.nx), t.formatRelativePath(n, i.py), t.formatRelativePath(n, i.ny), t.formatRelativePath(n, i.pz), t.formatRelativePath(n, i.nz)];
            t._onProcessChange(e, 0, 1 / 7, 1);
            var a = v.create(null, t._onProcessChange, [e, 1 / 7, 6 / 7], !1);
            t._innerFourthLevelLoaderManager.load(r, v.create(null, t._onTextureCubeImagesLoaded, [e, r, a]), a, "nativeimage");
          }
        }, t._onTextureCubeImagesLoaded = function (t, e, i) {
          var n = [];
          n.length = 6;
          for (var r = 0; r < 6; r++) {
            var a = e[r];
            n[r] = y.getRes(a), y.clearRes(a);
          }
          t.endLoad(n), i.recover();
        }, t._onProcessChange = function (t, e, i, n) {
          (n = e + n * i) < 1 && t.event("progress", n);
        }, t.init = function (e, n, r, a, s, o) {
          void 0 === r && (r = !1), void 0 === a && (a = !1), void 0 === s && (s = !0), void 0 === o && (o = !0), C.update3DLoop = function () {
            ni._triggerCollision();
          }, C.cancelLoadByUrl = function (e) {
            t._cancelLoadByUrl(e);
          }, m.isAntialias = r, m.isAlpha = a, m.premultipliedAlpha = s, m.isStencil = o, L.enable() ? (C.changeWebGLSize = t._changeWebGLSize, w.is3DMode = !0, i.init(e, n), z.__init__(), Xe.__init__(), Ui.__init__(), Ue.__init__(), gn.__init__(), B.__init__(), t.__init__(), u.maxTextureCount = 2, (t.debugMode || dt.debugMode) && (t._debugPhasorSprite = new lt())) : alert("Laya3D init error,must support webGL!");
        }, t.HIERARCHY = "SPRITE3DHIERARCHY", t.MESH = "MESH", t.MATERIAL = "MATERIAL", t.PBRMATERIAL = "PBRMTL", t.TEXTURECUBE = "TEXTURECUBE", t.TERRAIN = "TERRAIN", t._readData = null, t._debugPhasorSprite = null, t.debugMode = !1, n(t, ["_DATA", function () {
          return this._DATA = {
            offset: 0,
            size: 0
          };
        }, "_strings", function () {
          return this._strings = ["BLOCK", "DATA", "STRINGS"];
        }, "_innerFirstLevelLoaderManager", function () {
          return this._innerFirstLevelLoaderManager = new x();
        }, "_innerSecondLevelLoaderManager", function () {
          return this._innerSecondLevelLoaderManager = new x();
        }, "_innerThirdLevelLoaderManager", function () {
          return this._innerThirdLevelLoaderManager = new x();
        }, "_innerFourthLevelLoaderManager", function () {
          return this._innerFourthLevelLoaderManager = new x();
        }]), t;
      }(),
      $e = function (t) {
        function e(t) {
          e.__super.call(this), this._owner = t, this._childs = [], this._localMatrix = new Float32Array(16), this._localQuaternionUpdate = !1, this._locaEulerlUpdate = !1, this._localUpdate = !1, this._worldUpdate = !0;
        }
        r(e, "laya.d3.animation.AnimationTransform3D", g);
        var i = e.prototype;
        return i._getlocalMatrix = function () {
          return this._localUpdate && (Ke._createAffineTransformationArray(this._localPosition, this._localRotation, this._localScale, this._localMatrix), this._localUpdate = !1), this._localMatrix;
        }, i._onWorldTransform = function () {
          if (!this._worldUpdate) {
            this._worldUpdate = !0;
            for (var t = 0, e = this._childs.length; t < e; t++) this._childs[t]._onWorldTransform();
          }
        }, i._setWorldMatrixAndUpdate = function (t) {
          if (this._worldMatrix = t, null == this._parent) throw new Error("don't need to set worldMatrix to root Node.");
          if (null == this._parent._parent)
            for (var e = this._getlocalMatrix(), i = 0; i < 16; ++i) this._worldMatrix[i] = e[i];
          else Ke.matrix4x4MultiplyFFF(this._parent.getWorldMatrix(), this._getlocalMatrix(), this._worldMatrix);
          this._worldUpdate = !1;
        }, i._setWorldMatrixNoUpdate = function (t) {
          this._worldMatrix = t;
        }, i._setWorldMatrixIgnoreUpdate = function (t) {
          this._worldMatrix = t, this._worldUpdate = !1;
        }, i.getLocalPosition = function () {
          return this._localPosition;
        }, i.setLocalPosition = function (t) {
          if (this._parent) this._localPosition = t, this._localUpdate = !0, this._onWorldTransform();
          else {
            var e = this._entity.owner._transform,
              i = this._entity.localPosition,
              n = i.elements;
            n[0] = t[0], n[1] = t[1], n[2] = t[2], e.localPosition = i;
          }
        }, i.getLocalRotation = function () {
          if (this._localQuaternionUpdate) {
            var t = this._localRotationEuler;
            Ke._quaternionCreateFromYawPitchRollArray(t[1] / e._angleToRandin, t[0] / e._angleToRandin, t[2] / e._angleToRandin, this._localRotation), this._localQuaternionUpdate = !1;
          }
          return this._localRotation;
        }, i.setLocalRotation = function (t) {
          if (this._parent) this._localRotation = t, Ke.quaterionNormalize(this._localRotation, this._localRotation), this._locaEulerlUpdate = !0, this._localQuaternionUpdate = !1, this._localUpdate = !0, this._onWorldTransform();
          else {
            var e = this._entity.owner._transform,
              i = this._entity.localRotation,
              n = i.elements;
            n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], e.localRotation = i;
          }
        }, i.getLocalScale = function () {
          return this._localScale;
        }, i.setLocalScale = function (t) {
          if (this._parent) this._localScale = t, this._localUpdate = !0, this._onWorldTransform();
          else {
            var e = this._entity.owner._transform,
              i = this._entity.localScale,
              n = i.elements;
            n[0] = t[0], n[1] = t[1], n[2] = t[2], e.localScale = i;
          }
        }, i.getLocalRotationEuler = function () {
          if (this._locaEulerlUpdate) {
            Ke.getYawPitchRoll(this._localRotation, e._tempVector3);
            var t = e._tempVector3,
              i = this._localRotationEuler;
            i[0] = t[1] * e._angleToRandin, i[1] = t[0] * e._angleToRandin, i[2] = t[2] * e._angleToRandin, this._locaEulerlUpdate = !1;
          }
          return this._localRotationEuler;
        }, i.setLocalRotationEuler = function (t) {
          if (this._parent) Ke._quaternionCreateFromYawPitchRollArray(t[1] / e._angleToRandin, t[0] / e._angleToRandin, t[2] / e._angleToRandin, this._localRotation), this._localRotationEuler = t, this._locaEulerlUpdate = !1, this._localQuaternionUpdate = !1, this._localUpdate = !0, this._onWorldTransform();
          else {
            var i = this._entity.owner._transform,
              n = this._entity.localRotationEuler,
              r = n.elements;
            r[0] = t[0], r[1] = t[1], r[2] = t[2], i.localRotationEuler = n;
          }
        }, i.getWorldMatrix = function () {
          if (this._worldUpdate) {
            if (null != this._parent._parent) Ke.matrix4x4MultiplyFFF(this._parent.getWorldMatrix(), this._getlocalMatrix(), this._worldMatrix);
            else
              for (var t = this._getlocalMatrix(), e = 0; e < 16; ++e) this._worldMatrix[e] = t[e];
            this._worldUpdate = !1;
          }
          return this._worldMatrix;
        }, i.setParent = function (t) {
          if (this._parent !== t) {
            if (this._parent) {
              var e = this._parent._childs,
                i = e.indexOf(this);
              e.splice(i, 1);
            }
            t && (t._childs.push(this), t && this._onWorldTransform()), this._parent = t;
          }
        }, n(e, ["_tempVector3", function () {
          return this._tempVector3 = new Float32Array(3);
        }, "_angleToRandin", function () {
          return this._angleToRandin = 180 / Math.PI;
        }]), e;
      }(),
      Je = function (t) {
        function e() {
          this._destroyed = !1, this._id = 0, this._enable = !1, this._owner = null, this.started = !1, e.__super.call(this), this._destroyed = !1, this._id = e._uniqueIDCounter, e._uniqueIDCounter++;
        }
        r(e, "laya.d3.component.Component3D", g);
        var n = e.prototype;
        return i.imps(n, {
          "laya.d3.core.render.IUpdate": !0,
          "laya.resource.IDestroy": !0
        }), n._initialize = function (t) {
          this._owner = t, this._enable = !0, this.started = !1, this._load(t);
        }, n._destroy = function () {
          this._unload(this._owner), this._owner = null, this._destroyed = !0;
        }, n._load = function (t) {}, n._start = function (t) {}, n._update = function (t) {}, n._lateUpdate = function (t) {}, n._preRenderUpdate = function (t) {}, n._postRenderUpdate = function (t) {}, n._unload = function (t) {
          this.offAll();
        }, n._cloneTo = function (t) {}, a(0, n, "id", function () {
          return this._id;
        }), a(0, n, "destroyed", function () {
          return this._destroyed;
        }), a(0, n, "owner", function () {
          return this._owner;
        }), a(0, n, "enable", function () {
          return this._enable;
        }, function (t) {
          this._enable !== t && (this._enable = t, this.event("enablechanged", this._enable));
        }), a(0, n, "isSingleton", function () {
          return e._isSingleton;
        }), e._isSingleton = !0, e._uniqueIDCounter = 1, e;
      }(),
      ti = function (t) {
        function e() {
          this._destroyed = !1, e.__super.call(this), this._destroyed = !1;
        }
        r(e, "laya.d3.core.GeometryFilter", g);
        var n = e.prototype;
        return i.imps(n, {
          "laya.resource.IDestroy": !0
        }), n._destroy = function () {
          this.offAll(), this._destroyed = !0;
        }, a(0, n, "_isAsyncLoaded", function () {
          return !0;
        }), a(0, n, "_originalBoundingBoxCorners", function () {
          throw new Error("BaseRender: must override it.");
        }), a(0, n, "_originalBoundingSphere", function () {
          throw new Error("BaseRender: must override it.");
        }), a(0, n, "_originalBoundingBox", function () {
          throw new Error("BaseRender: must override it.");
        }), a(0, n, "destroyed", function () {
          return this._destroyed;
        }), e;
      }(),
      ei = function (t) {
        function e(t) {
          e.__super.call(this), this._id = ++e._uniqueIDCounter, this._indexInSceneFrustumCullingObjects = -1, this._boundingBox = new xe(new Le(), new Le()), this._boundingBoxCenter = new Le(), this._boundingSphere = new Se(new Le(), 0), this._boundingSphereNeedChange = !0, this._boundingBoxNeedChange = !0, this._boundingBoxCenterNeedChange = !0, this._octreeNodeNeedChange = !0, this._materials = [], this._renderElements = [], this._isPartOfStaticBatch = !1, this._destroyed = !1, this._owner = t, this._enable = !0, this._materialsInstance = [], this.lightmapIndex = -1, this.castShadow = !1, this.receiveShadow = !1, this.sortingFudge = 0, this._owner.transform.on("worldmatrixneedchanged", this, this._onWorldMatNeedChange);
        }
        r(e, "laya.d3.core.render.BaseRender", g);
        var s = e.prototype;
        return i.imps(s, {
          "laya.resource.IDestroy": !0
        }), s._changeMaterialReference = function (t, e) {
          t && t._removeReference(), e._addReference();
        }, s._getInstanceMaterial = function (t, e) {
          var i = new t.constructor();
          return t.cloneTo(i), i.name = i.name + "(Instance)", this._materialsInstance[e] = !0, this._changeMaterialReference(this._materials[e], i), this._materials[e] = i, i;
        }, s._setShaderValuelightMap = function (t) {
          this._setShaderValueTexture(3, t);
        }, s._onWorldMatNeedChange = function () {
          this._boundingSphereNeedChange = !0, this._boundingBoxNeedChange = !0, this._boundingBoxCenterNeedChange = !0, this._octreeNodeNeedChange = !0;
        }, s._renderRenderableBoundBox = function () {
          var t = Ze._debugPhasorSprite,
            i = this.boundingBox,
            n = e._tempBoundBoxCorners;
          i.getCorners(n), t.line(n[0], e._greenColor, n[1], e._greenColor), t.line(n[2], e._greenColor, n[3], e._greenColor), t.line(n[4], e._greenColor, n[5], e._greenColor), t.line(n[6], e._greenColor, n[7], e._greenColor), t.line(n[0], e._greenColor, n[3], e._greenColor), t.line(n[1], e._greenColor, n[2], e._greenColor), t.line(n[2], e._greenColor, n[6], e._greenColor), t.line(n[3], e._greenColor, n[7], e._greenColor), t.line(n[0], e._greenColor, n[4], e._greenColor), t.line(n[1], e._greenColor, n[5], e._greenColor), t.line(n[4], e._greenColor, n[7], e._greenColor), t.line(n[5], e._greenColor, n[6], e._greenColor);
        }, s._calculateBoundingSphere = function () {
          throw "BaseRender: must override it.";
        }, s._calculateBoundingBox = function () {
          throw "BaseRender: must override it.";
        }, s._setShaderValueTexture = function (t, e) {
          this._owner._shaderValues.setValue(t, e);
        }, s._setShaderValueMatrix4x4 = function (t, e) {
          this._owner._shaderValues.setValue(t, e ? e.elements : null);
        }, s._setShaderValueColor = function (t, e) {
          this._owner._shaderValues.setValue(t, e ? e.elements : null);
        }, s._setShaderValueBuffer = function (t, e) {
          this._owner._shaderValues.setValue(t, e);
        }, s._setShaderValueInt = function (t, e) {
          this._owner._shaderValues.setValue(t, e);
        }, s._setShaderValueBool = function (t, e) {
          this._owner._shaderValues.setValue(t, e);
        }, s._setShaderValueNumber = function (t, e) {
          this._owner._shaderValues.setValue(t, e);
        }, s._setShaderValueVector2 = function (t, e) {
          this._owner._shaderValues.setValue(t, e ? e.elements : null);
        }, s._addShaderDefine = function (t) {
          this._owner._shaderDefineValue |= t;
        }, s._removeShaderDefine = function (t) {
          this._owner._shaderDefineValue &= ~t;
        }, s._renderUpdate = function (t) {
          return !0;
        }, s._applyLightMapParams = function () {
          if (this._lightmapIndex >= 0) {
            var t = this._owner.scene;
            if (t) {
              var e = t.getlightmaps()[this._lightmapIndex];
              e ? (this._addShaderDefine(_n.SAHDERDEFINE_LIGHTMAP), e.loaded ? this._setShaderValuelightMap(e) : e.once("loaded", this, this._setShaderValuelightMap)) : this._removeShaderDefine(_n.SAHDERDEFINE_LIGHTMAP);
            } else this._removeShaderDefine(_n.SAHDERDEFINE_LIGHTMAP);
          } else this._removeShaderDefine(_n.SAHDERDEFINE_LIGHTMAP);
        }, s._updateOctreeNode = function () {
          var t = this._treeNode;
          t && this._octreeNodeNeedChange && (t.updateObject(this), this._octreeNodeNeedChange = !1);
        }, s._destroy = function () {
          this.offAll();
          var t = 0,
            e = 0;
          for (t = 0, e = this._renderElements.length; t < e; t++) this._renderElements[t]._destroy();
          for (t = 0, e = this._materials.length; t < e; t++) this._materials[t]._removeReference();
          this._renderElements = null, this._owner = null, this._materials = null, this._boundingBox = null, this._boundingBoxCenter = null, this._boundingSphere = null, this._lightmapScaleOffset = null, this._destroyed = !0;
        }, a(0, s, "boundingSphere", function () {
          return this._boundingSphereNeedChange && (this._calculateBoundingSphere(), this._boundingSphereNeedChange = !1), this._boundingSphere;
        }), a(0, s, "id", function () {
          return this._id;
        }), a(0, s, "material", function () {
          var t = this._materials[0];
          if (t && !this._materialsInstance[0]) {
            var e = this._getInstanceMaterial(t, 0);
            this.event("materialchanged", [this, 0, e]);
          }
          return this._materials[0];
        }, function (t) {
          this.sharedMaterial = t;
        }), a(0, s, "sharedMaterial", function () {
          return this._materials[0];
        }, function (t) {
          var e = this._materials[0];
          e !== t && (this._materials[0] = t, this._materialsInstance[0] = !1, this._changeMaterialReference(e, t), this.event("materialchanged", [this, 0, t]));
        }), a(0, s, "lightmapIndex", function () {
          return this._lightmapIndex;
        }, function (t) {
          this._lightmapIndex = t, this._applyLightMapParams();
        }), a(0, s, "lightmapScaleOffset", function () {
          return this._lightmapScaleOffset;
        }, function (t) {
          this._lightmapScaleOffset = t, this._setShaderValueColor(2, t), this._addShaderDefine(_n.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV);
        }), a(0, s, "enable", function () {
          return this._enable;
        }, function (t) {
          this._enable = t, this.event("enablechanged", [this, t]);
        }), a(0, s, "materials", function () {
          for (var t = 0, e = this._materials.length; t < e; t++)
            if (!this._materialsInstance[t]) {
              var i = this._getInstanceMaterial(this._materials[t], t);
              this.event("materialchanged", [this, t, i]);
            }
          return this._materials.slice();
        }, function (t) {
          this.sharedMaterials = t;
        }), a(0, s, "sharedMaterials", function () {
          return this._materials.slice();
        }, function (t) {
          if (!t) throw new Error("MeshRender: shadredMaterials value can't be null.");
          var e = t.length;
          this._materialsInstance.length = e;
          for (var i = 0; i < e; i++) {
            var n = this._materials[i];
            n !== t[i] && (this._materialsInstance[i] = !1, this._changeMaterialReference(n, t[i]), this.event("materialchanged", [this, i, t[i]]));
          }
          this._materials = t;
        }), a(0, s, "boundingBox", function () {
          return this._boundingBoxNeedChange && (this._calculateBoundingBox(), this._boundingBoxNeedChange = !1), this._boundingBox;
        }), a(0, s, "boundingBoxCenter", function () {
          if (this._boundingBoxCenterNeedChange) {
            var t = this.boundingBox;
            Le.add(t.min, t.max, this._boundingBoxCenter), Le.scale(this._boundingBoxCenter, .5, this._boundingBoxCenter), this._boundingBoxCenterNeedChange = !1;
          }
          return this._boundingBoxCenter;
        }), a(0, s, "receiveShadow", function () {
          return this._receiveShadow;
        }, function (t) {
          this._receiveShadow !== t && (this._receiveShadow = t, t ? this._addShaderDefine(Ge.SHADERDEFINE_RECEIVE_SHADOW) : this._removeShaderDefine(Ge.SHADERDEFINE_RECEIVE_SHADOW));
        }), a(0, s, "destroyed", function () {
          return this._destroyed;
        }), e._uniqueIDCounter = 0, n(e, ["_tempBoundBoxCorners", function () {
          return this._tempBoundBoxCorners = [new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le()];
        }, "_greenColor", function () {
          return this._greenColor = new Oe(0, 1, 0, 1);
        }]), e;
      }(),
      ii = function (t) {
        function e(t) {
          this._owner = null, this._localQuaternionUpdate = !1, this._locaEulerlUpdate = !1, this._localUpdate = !1, this._worldUpdate = !0, this._positionUpdate = !0, this._rotationUpdate = !0, this._scaleUpdate = !0, this._parent = null, this._childs = null, this._dummy = null, this.pivot = null, e.__super.call(this), this._localPosition = new Le(), this._localRotation = new De(0, 0, 0, 1), this._localScale = new Le(1, 1, 1), this._localRotationEuler = new Le(), this._localMatrix = new Ce(), this._position = new Le(), this._rotation = new De(0, 0, 0, 1), this._scale = new Le(1, 1, 1), this._worldMatrix = new Ce(), this._forward = new Le(), this._up = new Le(), this._right = new Le(), this._owner = t, this._childs = [];
        }
        r(e, "laya.d3.core.Transform3D", g);
        var i = e.prototype;
        return i._updateLocalMatrix = function () {
          if (!this.pivot || 0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z) Ce.createAffineTransformation(this._localPosition, this.localRotation, this._localScale, this._localMatrix);
          else {
            var t = e._tempVector30;
            Le.multiply(this.pivot, this._localScale, t);
            var i = e._tempVector31;
            Le.subtract(t, this.pivot, i);
            var n = e._tempVector32,
              r = this.localRotation;
            Le.transformQuat(t, r, n), Le.subtract(n, t, n);
            var a = e._tempVector33;
            Le.subtract(this._localPosition, i, a), Le.subtract(a, n, a), Ce.createAffineTransformation(a, r, this._localScale, this._localMatrix);
          }
        }, i._onWorldPositionRotationTransform = function () {
          if (!this._worldUpdate || !this._positionUpdate || !this._rotationUpdate) {
            this._worldUpdate = this._positionUpdate = this._rotationUpdate = !0, this.event("worldmatrixneedchanged");
            for (var t = 0, e = this._childs.length; t < e; t++) this._childs[t]._onWorldPositionRotationTransform();
          }
        }, i._onWorldPositionScaleTransform = function () {
          if (!this._worldUpdate || !this._positionUpdate || !this._scaleUpdate) {
            this._worldUpdate = this._positionUpdate = this._scaleUpdate = !0, this.event("worldmatrixneedchanged");
            for (var t = 0, e = this._childs.length; t < e; t++) this._childs[t]._onWorldPositionScaleTransform();
          }
        }, i._onWorldPositionTransform = function () {
          if (!this._worldUpdate || !this._positionUpdate) {
            this._worldUpdate = this._positionUpdate = !0, this.event("worldmatrixneedchanged");
            for (var t = 0, e = this._childs.length; t < e; t++) this._childs[t]._onWorldPositionTransform();
          }
        }, i._onWorldRotationTransform = function () {
          if (!this._worldUpdate || !this._rotationUpdate) {
            this._worldUpdate = this._rotationUpdate = !0, this.event("worldmatrixneedchanged");
            for (var t = 0, e = this._childs.length; t < e; t++) this._childs[t]._onWorldPositionRotationTransform();
          }
        }, i._onWorldScaleTransform = function () {
          if (!this._worldUpdate || !this._scaleUpdate) {
            this._worldUpdate = this._scaleUpdate = !0, this.event("worldmatrixneedchanged");
            for (var t = 0, e = this._childs.length; t < e; t++) this._childs[t]._onWorldPositionScaleTransform();
          }
        }, i._onWorldTransform = function () {
          if (!(this._worldUpdate && this._positionUpdate && this._rotationUpdate && this._scaleUpdate)) {
            this._worldUpdate = this._positionUpdate = this._rotationUpdate = this._scaleUpdate = !0, this.event("worldmatrixneedchanged");
            for (var t = 0, e = this._childs.length; t < e; t++) this._childs[t]._onWorldTransform();
          }
        }, i.translate = function (t, i) {
          void 0 === i && (i = !0), i ? (Ce.createFromQuaternion(this.localRotation, e._tempMatrix0), Le.transformCoordinate(t, e._tempMatrix0, e._tempVector30), Le.add(this.localPosition, e._tempVector30, this._localPosition), this.localPosition = this._localPosition) : (Le.add(this.position, t, this._position), this.position = this._position);
        }, i.rotate = function (t, i, n) {
          void 0 === i && (i = !0), void 0 === n && (n = !0);
          var r;
          n ? r = t : (Le.scale(t, Math.PI / 180, e._tempVector30), r = e._tempVector30), De.createFromYawPitchRoll(r.y, r.x, r.z, e._tempQuaternion0), i ? (De.multiply(this._localRotation, e._tempQuaternion0, this._localRotation), this.localRotation = this._localRotation) : (De.multiply(e._tempQuaternion0, this.rotation, this._rotation), this.rotation = this._rotation);
        }, i.lookAt = function (t, e, i) {
          void 0 === i && (i = !1);
          var n, r = t.elements;
          if (i) {
            if (n = this._localPosition.elements, Math.abs(n[0] - r[0]) < Ee.zeroTolerance && Math.abs(n[1] - r[1]) < Ee.zeroTolerance && Math.abs(n[2] - r[2]) < Ee.zeroTolerance) return;
            De.lookAt(this._localPosition, t, e, this._localRotation), this._localRotation.invert(this._localRotation), this.localRotation = this._localRotation;
          } else {
            var a = this.position;
            if (n = a.elements, Math.abs(n[0] - r[0]) < Ee.zeroTolerance && Math.abs(n[1] - r[1]) < Ee.zeroTolerance && Math.abs(n[2] - r[2]) < Ee.zeroTolerance) return;
            De.lookAt(a, t, e, this._rotation), this._rotation.invert(this._rotation), this.rotation = this._rotation;
          }
        }, a(0, i, "_isFrontFaceInvert", function () {
          var t = this.scale,
            e = t.x < 0;
          return t.y < 0 && (e = !e), t.z < 0 && (e = !e), e;
        }), a(0, i, "owner", function () {
          return this._owner;
        }), a(0, i, "localRotation", function () {
          if (this._localQuaternionUpdate) {
            var t = this._localRotationEuler.elements;
            De.createFromYawPitchRoll(t[1] / e._angleToRandin, t[0] / e._angleToRandin, t[2] / e._angleToRandin, this._localRotation);
          }
          return this._localRotation;
        }, function (t) {
          this._localRotation = t, this._localRotation.normalize(this._localRotation), this._locaEulerlUpdate = !0, this._localQuaternionUpdate = !1, this._localUpdate = !0, !this.pivot || 0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z ? this._onWorldRotationTransform() : this._onWorldPositionRotationTransform();
        }), a(0, i, "worldMatrix", function () {
          return this._worldUpdate && (null != this._parent ? Ce.multiply(this._parent.worldMatrix, this.localMatrix, this._worldMatrix) : this.localMatrix.cloneTo(this._worldMatrix), this._worldUpdate = !1), this._worldMatrix;
        }, function (t) {
          null === this._parent ? t.cloneTo(this._localMatrix) : (this._parent.worldMatrix.invert(this._localMatrix), Ce.multiply(this._localMatrix, t, this._localMatrix)), this.localMatrix = this._localMatrix, this._worldMatrix = t, this._worldUpdate = !1;
        }), a(0, i, "worldNeedUpdate", function () {
          return this._worldUpdate;
        }), a(0, i, "localMatrix", function () {
          return this._localUpdate && (this._updateLocalMatrix(), this._localUpdate = !1), this._localMatrix;
        }, function (t) {
          this._localMatrix = t, this._localMatrix.decomposeTransRotScale(this._localPosition, this._localRotation, this._localScale), this._localUpdate = !1, this._onWorldTransform();
        }), a(0, i, "dummy", function () {
          return this._dummy;
        }, function (t) {
          this._dummy !== t && (this._dummy && (this._dummy._entity = null), t && (t._entity = this), this._dummy = t);
        }), a(0, i, "localPosition", function () {
          return this._localPosition;
        }, function (t) {
          this._localPosition = t, this._localUpdate = !0, this._onWorldPositionTransform();
        }), a(0, i, "position", function () {
          if (this._positionUpdate) {
            if (null != this._parent) {
              var t = this._parent.position;
              Le.multiply(this._localPosition, this._parent.scale, e._tempVector30), Le.transformQuat(e._tempVector30, this._parent.rotation, e._tempVector30), Le.add(t, e._tempVector30, this._position);
            } else this._localPosition.cloneTo(this._position);
            this._positionUpdate = !1;
          }
          return this._position;
        }, function (t) {
          if (null != this._parent) {
            Le.subtract(t, this._parent.position, this._localPosition);
            var i = this._parent.scale.elements,
              n = i[0],
              r = i[1],
              a = i[2];
            if (1 !== n || 1 !== r || 1 !== a) {
              var s = e._tempVector30,
                o = s.elements;
              o[0] = 1 / n, o[1] = 1 / r, o[2] = 1 / a, Le.multiply(this._localPosition, s, this._localPosition);
            }
            this._parent.rotation.invert(e._tempQuaternion0), Le.transformQuat(this._localPosition, e._tempQuaternion0, this._localPosition);
          } else t.cloneTo(this._localPosition);
          this.localPosition = this._localPosition, this._position = t, this._positionUpdate = !1;
        }), a(0, i, "localScale", function () {
          return this._localScale;
        }, function (t) {
          this._localScale = t, this._localUpdate = !0, !this.pivot || 0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z ? this._onWorldScaleTransform() : this._onWorldPositionScaleTransform();
        }), a(0, i, "localRotationEuler", function () {
          if (this._locaEulerlUpdate) {
            this._localRotation.getYawPitchRoll(e._tempVector30);
            var t = e._tempVector30.elements,
              i = this._localRotationEuler.elements;
            i[0] = t[1] * e._angleToRandin, i[1] = t[0] * e._angleToRandin, i[2] = t[2] * e._angleToRandin;
          }
          return this._localRotationEuler;
        }, function (t) {
          this._localRotationEuler = t, this._locaEulerlUpdate = !1, this._localQuaternionUpdate = !0, this._localUpdate = !0, !this.pivot || 0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z ? this._onWorldRotationTransform() : this._onWorldPositionRotationTransform();
        }), a(0, i, "rotation", function () {
          return this._rotationUpdate && (null != this._parent ? De.multiply(this._parent.rotation, this.localRotation, this._rotation) : this.localRotation.cloneTo(this._rotation), this._rotationUpdate = !1), this._rotation;
        }, function (t) {
          null != this._parent ? (this._parent.rotation.invert(e._tempQuaternion0), De.multiply(t, e._tempQuaternion0, this._localRotation)) : t.cloneTo(this._localRotation), this.localRotation = this._localRotation, this._rotation = t, this._rotationUpdate = !1;
        }), a(0, i, "scale", function () {
          return this._scaleUpdate ? (null !== this._parent ? Le.multiply(this._parent.scale, this._localScale, this._scale) : this._localScale.cloneTo(this._scale), this._scaleUpdate = !1, this._scale) : this._scale;
        }, function (t) {
          if (null !== this._parent) {
            var i = this._parent.scale.elements,
              n = e._tempVector30.elements;
            n[0] = 1 / i[0], n[1] = 1 / i[1], n[2] = 1 / i[2], Le.multiply(t, e._tempVector30, this._localScale);
          } else t.cloneTo(this._localScale);
          this.localScale = this._localScale, this._scale = t, this._scaleUpdate = !1;
        }), a(0, i, "rotationEuler", null, function (t) {
          De.createFromYawPitchRoll(t.y, t.x, t.z, this._rotation), this.rotation = this._rotation;
        }), a(0, i, "forward", function () {
          var t = this.worldMatrix.elements;
          return this._forward.elements[0] = -t[8], this._forward.elements[1] = -t[9], this._forward.elements[2] = -t[10], this._forward;
        }), a(0, i, "up", function () {
          var t = this.worldMatrix.elements;
          return this._up.elements[0] = t[4], this._up.elements[1] = t[5], this._up.elements[2] = t[6], this._up;
        }), a(0, i, "right", function () {
          var t = this.worldMatrix.elements;
          return this._right.elements[0] = t[0], this._right.elements[1] = t[1], this._right.elements[2] = t[2], this._right;
        }), a(0, i, "parent", function () {
          return this._parent;
        }, function (t) {
          if (this._parent !== t) {
            if (this._parent) {
              var e = this._parent._childs,
                i = e.indexOf(this);
              e.splice(i, 1);
            }
            t && (t._childs.push(this), t && this._onWorldTransform()), this._parent = t;
          }
        }), n(e, ["_tempVector30", function () {
          return this._tempVector30 = new Le();
        }, "_tempVector31", function () {
          return this._tempVector31 = new Le();
        }, "_tempVector32", function () {
          return this._tempVector32 = new Le();
        }, "_tempVector33", function () {
          return this._tempVector33 = new Le();
        }, "_tempQuaternion0", function () {
          return this._tempQuaternion0 = new De();
        }, "_tempMatrix0", function () {
          return this._tempMatrix0 = new Ce();
        }, "_angleToRandin", function () {
          return this._angleToRandin = 180 / Math.PI;
        }]), e;
      }(),
      ni = (function (t) {
        function e() {
          this._rotation = 0, this._matNeedUpdte = !1, e.__super.call(this), this._matrix = new Ce(), this._offset = new Pe(), this._tiling = new Pe(1, 1);
        }
        r(e, "laya.d3.core.TransformUV", g);
        var s = e.prototype;
        i.imps(s, {
          "laya.d3.core.IClone": !0
        }), s._updateMatrix = function () {
          e._tempOffsetV3.elements[0] = this._offset.x, e._tempOffsetV3.elements[1] = this._offset.y, De.createFromYawPitchRoll(0, 0, this._rotation, e._tempRotationQua), e._tempTitlingV3.elements[0] = this._tiling.x, e._tempTitlingV3.elements[1] = this._tiling.y, Ce.createAffineTransformation(e._tempOffsetV3, e._tempRotationQua, e._tempTitlingV3, this._matrix);
        }, s.cloneTo = function (t) {
          t._matrix = this._matrix.clone(), t._offset = this._offset.clone(), t._rotation = this._rotation, t._tiling = this._tiling.clone();
        }, s.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, s, "matrix", function () {
          return this._matNeedUpdte && (this._updateMatrix(), this._matNeedUpdte = !1), this._matrix;
        }), a(0, s, "tiling", function () {
          return this._tiling;
        }, function (t) {
          this._tiling = t, this._matNeedUpdte = !0;
        }), a(0, s, "offset", function () {
          return this._offset;
        }, function (t) {
          this._offset = t, this._matNeedUpdte = !0;
        }), a(0, s, "rotation", function () {
          return this._rotation;
        }, function (t) {
          this._rotation = t, this._matNeedUpdte = !0;
        }), n(e, ["_tempOffsetV3", function () {
          return this._tempOffsetV3 = new Le(0, 0, 0);
        }, "_tempRotationQua", function () {
          return this._tempRotationQua = new De();
        }, "_tempTitlingV3", function () {
          return this._tempTitlingV3 = new Le(1, 1, 1);
        }]);
      }(), function (t) {
        function e() {
          e.__super.call(this);
        }
        return r(e, "laya.d3.utils.CollisionManager", g), e._onTrigger = function (t, e, i, n, r) {
          var a = 0,
            s = 0,
            o = t.id,
            h = e.id;
          if (!t._ignoreCollisonMap[h]) {
            var l = Xe.collisionManager,
              u = t._runtimeCollisonTestMap[h];
            if (null != u)
              if (u)
                if (t._collisonTo(e))
                  if (t._runtimeCollisonMap[h]) {
                    for (a = 0, s = i.length; a < s; a++) i[a].onTriggerStay(e);
                    for (a = 0, s = n.length; a < s; a++) n[a].onTriggerStay(t);
                    l.event("triggerstay", [t, e]);
                  } else {
                    for (t._runtimeCollisonMap[h] = e, t._runtimeCollisonTestMap[h] = !1, e._runtimeCollisonMap[o] = t, r && (e._runtimeCollisonTestMap[o] = !1), a = 0, s = i.length; a < s; a++) i[a].onTriggerEnter(e);
                    for (a = 0, s = n.length; a < s; a++) n[a].onTriggerEnter(t);
                    l.event("triggerenter", [t, e]);
                  }
            else {
              var c = t._runtimeCollisonMap;
              if (c[h]) {
                for (delete c[h], delete t._runtimeCollisonTestMap[h], delete e._runtimeCollisonMap[o], r && delete e._runtimeCollisonTestMap[o], a = 0, s = i.length; a < s; a++) i[a].onTriggerExit(e);
                for (a = 0, s = n.length; a < s; a++) n[a].onTriggerExit(t);
                l.event("triggerexit", [t, e]);
              }
            } else {
              for (a = 0, s = i.length; a < s; a++) i[a].onTriggerStay(e);
              for (a = 0, s = n.length; a < s; a++) n[a].onTriggerStay(t);
              l.event("triggerstay", [t, e]);
            } else if (t._collisonTo(e)) {
              for (t._runtimeCollisonMap[h] = e, t._runtimeCollisonTestMap[h] = !1, e._runtimeCollisonMap[o] = t, r && (e._runtimeCollisonTestMap[o] = !1), a = 0, s = i.length; a < s; a++) i[a].onTriggerEnter(e);
              for (a = 0, s = n.length; a < s; a++) n[a].onTriggerEnter(t);
              l.event("triggerenter", [t, e]);
            }
          }
        }, e._triggerCollision = function () {
          for (var t = z._collsionTestList, i = t.length, n = Xe._layerCollsionMatrix, r = 0; r < i; r++)
            for (var a = t[r], s = z.getLayerByNumber(a), o = s._colliders, h = s._nonRigidbodyOffset, l = i - 1; l >= r; l--) {
              var u = t[l];
              if (n[a][30 - u]) {
                var c, _, d, f = 0,
                  p = 0,
                  m = 0,
                  g = 0,
                  v = z.getLayerByNumber(u),
                  y = v._colliders,
                  x = v._nonRigidbodyOffset;
                if (s !== v) {
                  for (f = 0; f < h; f++)
                    if ((c = o[f]).enable) {
                      for (d = c.owner._scripts, m = 0, g = x; m < g; m++)(_ = y[m]).enable && e._onTrigger(c, _, d, _.owner._scripts, !0);
                      for (m = x, g = y.length; m < g; m++)(_ = y[m]).enable && e._onTrigger(c, _, d, _.owner._scripts, !1);
                    }
                  for (f = h, p = o.length; f < p; f++)
                    if ((c = o[f]).enable)
                      for (d = c.owner._scripts, m = 0, g = v._nonRigidbodyOffset; m < g; m++)(_ = y[m]).enable && e._onTrigger(_, c, d, _.owner._scripts, !1);
                } else
                  for (f = 0; f < h; f++)
                    if ((c = o[f]).enable) {
                      for (d = c.owner._scripts, m = f + 1, g = h; m < g; m++)(_ = y[m]).enable && e._onTrigger(c, _, d, _.owner._scripts, !0);
                      for (m = h, g = o.length; m < g; m++)(_ = y[m]).enable && e._onTrigger(c, _, d, _.owner._scripts, !1);
                    }
              }
            }
        }, e;
      }()),
      ri = (function (t) {
        function e() {
          e.__super.call(this);
        }
        r(e, "laya.d3.core.glitter.SplineCurvePosition", t);
        var i = e.prototype;
        i._CalcVelocity = function (t, e, i) {
          Le.subtract(t, e, i), Le.scale(i, .5, i);
        }, i.Init = function (e, i, n, r) {
          this._CalcVelocity(i, e, this._tempVector30), this._CalcVelocity(r, n, this._tempVector31), t.prototype.Init.call(this, i, this._tempVector30, r, this._tempVector31);
        };
      }(G), function (t) {
        function e() {
          this.x = NaN, this.y = NaN, this.z = NaN, e.__super.call(this), this.x = 1, this.y = 1, this.z = 1, this.randomDirection = !1;
        }
        r(e, "laya.d3.core.particleShuriKen.module.shape.BoxShape", t);
        var i = e.prototype;
        return i._getShapeBoundBox = function (t) {
          var e = t.min.elements;
          e[0] = .5 * -this.x, e[1] = .5 * -this.y, e[2] = .5 * -this.z;
          var i = t.max.elements;
          i[0] = .5 * this.x, i[1] = .5 * this.y, i[2] = .5 * this.z;
        }, i._getSpeedBoundBox = function (t) {
          var e = t.min.elements;
          e[0] = 0, e[1] = 0, e[2] = 0;
          var i = t.max.elements;
          i[0] = 0, i[1] = 1, i[2] = 0;
        }, i.generatePositionAndDirection = function (t, e, i, n) {
          var r = t.elements,
            a = e.elements;
          i ? (i.seed = n[16], nt._randomPointInsideHalfUnitBox(t, i), n[16] = i.seed) : nt._randomPointInsideHalfUnitBox(t), r[0] = this.x * r[0], r[1] = this.y * r[1], r[2] = this.z * r[2], this.randomDirection ? i ? (i.seed = n[17], nt._randomPointUnitSphere(e, i), n[17] = i.seed) : nt._randomPointUnitSphere(e) : (a[0] = 0, a[1] = 0, a[2] = 1);
        }, i.cloneTo = function (e) {
          t.prototype.cloneTo.call(this, e);
          var i = e;
          i.x = this.x, i.y = this.y, i.z = this.z, i.randomDirection = this.randomDirection;
        }, e;
      }(it)),
      ai = function (t) {
        function e() {
          this.radius = NaN, this.arc = NaN, this.emitFromEdge = !1, e.__super.call(this), this.radius = 1, this.arc = 2 * Math.PI, this.emitFromEdge = !1, this.randomDirection = !1;
        }
        r(e, "laya.d3.core.particleShuriKen.module.shape.CircleShape", t);
        var i = e.prototype;
        return i._getShapeBoundBox = function (t) {
          var e = t.min.elements;
          e[0] = e[2] = -this.radius, e[1] = 0;
          var i = t.max.elements;
          i[0] = i[2] = this.radius, i[1] = 0;
        }, i._getSpeedBoundBox = function (t) {
          var e = t.min.elements;
          e[0] = e[1] = -1, e[2] = 0;
          var i = t.max.elements;
          i[0] = i[1] = 1, i[2] = 0;
        }, i.generatePositionAndDirection = function (t, i, n, r) {
          var a = t.elements,
            s = e._tempPositionPoint.elements;
          n ? (n.seed = r[16], this.emitFromEdge ? nt._randomPointUnitArcCircle(this.arc, e._tempPositionPoint, n) : nt._randomPointInsideUnitArcCircle(this.arc, e._tempPositionPoint, n), r[16] = n.seed) : this.emitFromEdge ? nt._randomPointUnitArcCircle(this.arc, e._tempPositionPoint) : nt._randomPointInsideUnitArcCircle(this.arc, e._tempPositionPoint), a[0] = -s[0], a[1] = s[1], a[2] = 0, Le.scale(t, this.radius, t), this.randomDirection ? n ? (n.seed = r[17], nt._randomPointUnitSphere(i, n), r[17] = n.seed) : nt._randomPointUnitSphere(i) : t.cloneTo(i);
        }, i.cloneTo = function (e) {
          t.prototype.cloneTo.call(this, e);
          var i = e;
          i.radius = this.radius, i.arc = this.arc, i.emitFromEdge = this.emitFromEdge, i.randomDirection = this.randomDirection;
        }, n(e, ["_tempPositionPoint", function () {
          return this._tempPositionPoint = new Pe();
        }]), e;
      }(it),
      si = function (t) {
        function e() {
          this.angle = NaN, this.radius = NaN, this.length = NaN, this.emitType = 0, e.__super.call(this), this.angle = 25 / 180 * Math.PI, this.radius = 1, this.length = 5, this.emitType = 0, this.randomDirection = !1;
        }
        r(e, "laya.d3.core.particleShuriKen.module.shape.ConeShape", t);
        var i = e.prototype;
        return i._getShapeBoundBox = function (t) {
          var e = this.radius + this.length * Math.sin(this.angle),
            i = this.length * Math.cos(this.angle),
            n = t.min.elements;
          n[0] = n[1] = -e, n[2] = 0;
          var r = t.max.elements;
          r[0] = r[1] = e, r[2] = i;
        }, i._getSpeedBoundBox = function (t) {
          var e = Math.sin(this.angle),
            i = t.min.elements;
          i[0] = i[1] = -e, i[2] = 0;
          var n = t.max.elements;
          n[0] = i[1] = e, n[2] = 1;
        }, i.generatePositionAndDirection = function (t, i, n, r) {
          var a, s = t.elements,
            o = i.elements,
            h = e._tempPositionPoint.elements,
            l = NaN,
            u = NaN,
            c = Math.cos(this.angle),
            _ = Math.sin(this.angle);
          switch (this.emitType) {
            case 0:
              n ? (n.seed = r[16], nt._randomPointInsideUnitCircle(e._tempPositionPoint, n), r[16] = n.seed) : nt._randomPointInsideUnitCircle(e._tempPositionPoint), l = h[0], u = h[1], s[0] = l * this.radius, s[1] = u * this.radius, s[2] = 0, this.randomDirection ? (n ? (n.seed = r[17], nt._randomPointInsideUnitCircle(e._tempDirectionPoint, n), r[17] = n.seed) : nt._randomPointInsideUnitCircle(e._tempDirectionPoint), a = e._tempDirectionPoint.elements, o[0] = a[0] * _, o[1] = a[1] * _) : (o[0] = l * _, o[1] = u * _), o[2] = c;
              break;
            case 1:
              n ? (n.seed = r[16], nt._randomPointUnitCircle(e._tempPositionPoint, n), r[16] = n.seed) : nt._randomPointUnitCircle(e._tempPositionPoint), l = h[0], u = h[1], s[0] = l * this.radius, s[1] = u * this.radius, s[2] = 0, this.randomDirection ? (n ? (n.seed = r[17], nt._randomPointInsideUnitCircle(e._tempDirectionPoint, n), r[17] = n.seed) : nt._randomPointInsideUnitCircle(e._tempDirectionPoint), a = e._tempDirectionPoint.elements, o[0] = a[0] * _, o[1] = a[1] * _) : (o[0] = l * _, o[1] = u * _), o[2] = c;
              break;
            case 2:
              n ? (n.seed = r[16], nt._randomPointInsideUnitCircle(e._tempPositionPoint, n)) : nt._randomPointInsideUnitCircle(e._tempPositionPoint), l = h[0], u = h[1], s[0] = l * this.radius, s[1] = u * this.radius, s[2] = 0, o[0] = l * _, o[1] = u * _, o[2] = c, Le.normalize(i, i), n ? (Le.scale(i, this.length * n.getFloat(), i), r[16] = n.seed) : Le.scale(i, this.length * Math.random(), i), Le.add(t, i, t), this.randomDirection && (n ? (n.seed = r[17], nt._randomPointUnitSphere(i, n), r[17] = n.seed) : nt._randomPointUnitSphere(i));
              break;
            case 3:
              n ? (n.seed = r[16], nt._randomPointUnitCircle(e._tempPositionPoint, n)) : nt._randomPointUnitCircle(e._tempPositionPoint), l = h[0], u = h[1], s[0] = l * this.radius, s[1] = u * this.radius, s[2] = 0, o[0] = l * _, o[1] = u * _, o[2] = c, Le.normalize(i, i), n ? (Le.scale(i, this.length * n.getFloat(), i), r[16] = n.seed) : Le.scale(i, this.length * Math.random(), i), Le.add(t, i, t), this.randomDirection && (n ? (n.seed = r[17], nt._randomPointUnitSphere(i, n), r[17] = n.seed) : nt._randomPointUnitSphere(i));
              break;
            default:
              throw new Error("ConeShape:emitType is invalid.");
          }
        }, i.cloneTo = function (e) {
          t.prototype.cloneTo.call(this, e);
          var i = e;
          i.angle = this.angle, i.radius = this.radius, i.length = this.length, i.emitType = this.emitType, i.randomDirection = this.randomDirection;
        }, n(e, ["_tempPositionPoint", function () {
          return this._tempPositionPoint = new Pe();
        }, "_tempDirectionPoint", function () {
          return this._tempDirectionPoint = new Pe();
        }]), e;
      }(it),
      oi = function (t) {
        function e() {
          this.radius = NaN, this.emitFromShell = !1, e.__super.call(this), this.radius = 1, this.emitFromShell = !1, this.randomDirection = !1;
        }
        r(e, "laya.d3.core.particleShuriKen.module.shape.HemisphereShape", t);
        var i = e.prototype;
        return i._getShapeBoundBox = function (t) {
          var e = t.min.elements;
          e[0] = e[1] = e[2] = -this.radius;
          var i = t.max.elements;
          i[0] = i[1] = this.radius, i[2] = 0;
        }, i._getSpeedBoundBox = function (t) {
          var e = t.min.elements;
          e[0] = e[1] = -1, e[2] = 0;
          var i = t.max.elements;
          i[0] = i[1] = i[2] = 1;
        }, i.generatePositionAndDirection = function (t, e, i, n) {
          var r = t.elements;
          i ? (i.seed = n[16], this.emitFromShell ? nt._randomPointUnitSphere(t, i) : nt._randomPointInsideUnitSphere(t, i), n[16] = i.seed) : this.emitFromShell ? nt._randomPointUnitSphere(t) : nt._randomPointInsideUnitSphere(t), Le.scale(t, this.radius, t);
          var a = r[2];
          a < 0 && (r[2] = -1 * a), this.randomDirection ? i ? (i.seed = n[17], nt._randomPointUnitSphere(e, i), n[17] = i.seed) : nt._randomPointUnitSphere(e) : t.cloneTo(e);
        }, i.cloneTo = function (e) {
          t.prototype.cloneTo.call(this, e);
          var i = e;
          i.radius = this.radius, i.emitFromShell = this.emitFromShell, i.randomDirection = this.randomDirection;
        }, e;
      }(it),
      hi = function (t) {
        function e() {
          this.radius = NaN, this.emitFromShell = !1, e.__super.call(this), this.radius = 1, this.emitFromShell = !1, this.randomDirection = !1;
        }
        r(e, "laya.d3.core.particleShuriKen.module.shape.SphereShape", t);
        var i = e.prototype;
        return i._getShapeBoundBox = function (t) {
          var e = t.min.elements;
          e[0] = e[1] = e[2] = -this.radius;
          var i = t.max.elements;
          i[0] = i[1] = i[2] = this.radius;
        }, i._getSpeedBoundBox = function (t) {
          var e = t.min.elements;
          e[0] = e[1] = e[2] = -1;
          var i = t.max.elements;
          i[0] = i[1] = i[2] = 1;
        }, i.generatePositionAndDirection = function (t, e, i, n) {
          i ? (i.seed = n[16], this.emitFromShell ? nt._randomPointUnitSphere(t, i) : nt._randomPointInsideUnitSphere(t, i), n[16] = i.seed) : this.emitFromShell ? nt._randomPointUnitSphere(t) : nt._randomPointInsideUnitSphere(t), Le.scale(t, this.radius, t), this.randomDirection ? i ? (i.seed = n[17], nt._randomPointUnitSphere(e, i), n[17] = i.seed) : nt._randomPointUnitSphere(e) : t.cloneTo(e);
        }, i.cloneTo = function (e) {
          t.prototype.cloneTo.call(this, e);
          var i = e;
          i.radius = this.radius, i.emitFromShell = this.emitFromShell, i.randomDirection = this.randomDirection;
        }, e;
      }(it),
      li = function (t) {
        function e() {
          this._batchIndexStart = 0, this._batchIndexEnd = 0, this._skinAnimationDatas = null, e.__super.call(this);
        }
        return r(e, "laya.d3.core.render.SubMeshRenderElement", ut), e;
      }(),
      ui = function (t) {
        function e(t, i, n, r, a, s) {
          this._name = NaN, this._attributeMap = null, this._renderElementUniformMap = null, this._materialUniformMap = null, this._spriteUniformMap = null, this._cameraUniformMap = null, this._sceneUniformMap = null, this.sharders = null, this._spriteDefineCounter = 3, this._spriteInt2name = [], this._spriteName2Int = {}, this._materialDefineCounter = 1, this._materialInt2name = [], this._materialName2Int = {}, this._conchShader = null, this._name = t, this._renderElementUniformMap = {}, this._materialUniformMap = {}, this._spriteUniformMap = {}, this._cameraUniformMap = {}, this._sceneUniformMap = {}, this.sharders = [], this._spriteInt2name[Ge.SHADERDEFINE_RECEIVE_SHADOW] = "RECEIVESHADOW", this._spriteInt2name[_n.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV] = "SCALEOFFSETLIGHTINGMAPUV", this._spriteInt2name[_n.SAHDERDEFINE_LIGHTMAP] = "LIGHTMAP", this._spriteInt2name[yn.SHADERDEFINE_BONE] = "BONE", this._materialInt2name[mi.SHADERDEFINE_ALPHATEST] = "ALPHATEST";
          e.__super.call(this, t, i, n, null, {}), this._attributeMap = r;
          var o;
          for (o in a) {
            var h = a[o];
            switch (h[1]) {
              case 0:
                this._renderElementUniformMap[o] = h[0];
                break;
              case 1:
                this._materialUniformMap[o] = h[0];
                break;
              case 2:
                this._spriteUniformMap[o] = h[0];
                break;
              case 3:
                this._cameraUniformMap[o] = h[0];
                break;
              case 4:
                this._sceneUniformMap[o] = h[0];
                break;
              default:
                throw new Error("ShaderCompile3D: period is unkonw.");
            }
          }
        }
        r(e, "laya.d3.shader.ShaderCompile3D", M);
        var i = e.prototype;
        return i._definesToNameDic = function (t, e) {
          for (var i = {}, n = 1, r = 0; r < 32 && !((n = 1 << r) > t); r++)
            if (t & n) {
              var a = e[n];
              a && (i[a] = "");
            }
          return i;
        }, i.withCompile = function (t, i, n) {
          var r, a, s;
          if (a = this.sharders[t])
            if (s = a[i]) {
              if (r = s[n]) return r;
            } else s = a[i] = [];
          else s = (a = this.sharders[t] = [])[i] = [];
          var o, h = this._definesToNameDic(t, e._globalInt2name),
            l = this._definesToNameDic(i, this._spriteInt2name),
            u = this._definesToNameDic(n, this._materialInt2name);
          if (laya.d3.shader.ShaderCompile3D.debugMode) {
            var c = "";
            for (o in h) c += o + " ";
            var _ = "";
            for (o in l) _ += o + " ";
            var d = "";
            for (o in u) d += o + " ";
            console.log("ShaderCompile3DDebugMode---(Name:" + Fi.nameKey.getName(this._name) + " PublicDefine:" + t + " SpriteDefine:" + i + " MaterialDefine:" + n + " PublicDefineGroup:" + c + " SpriteDefineGroup:" + _ + "MaterialDefineGroup: " + d + ")---ShaderCompile3DDebugMode");
          }
          var f = {},
            p = "";
          if (h)
            for (o in h) p += "#define " + o + "\n", f[o] = !0;
          if (l)
            for (o in l) p += "#define " + o + "\n", f[o] = !0;
          if (u)
            for (o in u) p += "#define " + o + "\n", f[o] = !0;
          var m = this._VS.toscript(f, []),
            g = this._PS.toscript(f, []);
          return r = Fi.create(p + m.join("\n"), p + g.join("\n"), this._attributeMap, this._sceneUniformMap, this._cameraUniformMap, this._spriteUniformMap, this._materialUniformMap, this._renderElementUniformMap), s[n] = r, r;
        }, i.precompileShaderWithShaderDefine = function (t, e, i) {
          this.withCompile(t, e, i);
        }, i.addMaterialDefines = function (t) {
          var e = t.defines;
          for (var i in e) {
            var n = e[i],
              r = parseInt(i);
            this._materialInt2name[r] = n, this._materialName2Int[n] = r;
          }
        }, i.addSpriteDefines = function (t) {
          var e = t.defines;
          for (var i in e) {
            var n = e[i],
              r = parseInt(i);
            this._spriteInt2name[r] = n, this._spriteName2Int[n] = r;
          }
        }, i.getMaterialDefineByName = function (t) {
          return this._materialName2Int[t];
        }, i.registerMaterialDefine = function (t) {
          var e = Math.pow(2, this._materialDefineCounter++);
          return this._materialInt2name[e] = t, this._materialName2Int[t] = e, e;
        }, i.registerSpriteDefine = function (t) {
          var e = Math.pow(2, this._spriteDefineCounter++);
          return this._spriteInt2name[e] = t, this._spriteName2Int[t] = e, e;
        }, e._globalRegDefine = function (t, i) {
          e._globalInt2name[i] = t;
        }, e.add = function (t, i, n, r, a) {
          return laya.d3.shader.ShaderCompile3D._preCompileShader[t] = new e(t, i, n, r, a, M.includes);
        }, e.get = function (t) {
          return laya.d3.shader.ShaderCompile3D._preCompileShader[Fi.nameKey.getID(t)];
        }, e._preCompileShader = {}, e._globalInt2name = [], e.debugMode = !1, e.SHADERDEFINE_HIGHPRECISION = 1, e.SHADERDEFINE_FOG = 4, e.SHADERDEFINE_DIRECTIONLIGHT = 8, e.SHADERDEFINE_POINTLIGHT = 16, e.SHADERDEFINE_SPOTLIGHT = 32, e.SHADERDEFINE_UV0 = 64, e.SHADERDEFINE_COLOR = 128, e.SHADERDEFINE_UV1 = 256, e.SAHDERDEFINE_DEPTHFOG = 131072, e;
      }(),
      ci = function (t) {
        function e() {
          e.__super.call(this);
        }
        r(e, "laya.d3.graphics.MeshSprite3DStaticBatchManager", Et);
        var i = e.prototype;
        return i._getStaticBatch = function (t, e, i, n) {
          var r, a;
          return a = t ? t.id.toString() + i.id.toString() + e.id.toString() + n.toString() : i.id.toString() + e.id.toString() + n.toString(), this._staticBatches[a] ? r = this._staticBatches[a] : this._staticBatches[a] = r = new _i(a, this, t, e, i), r;
        }, i._initStaticBatchs = function (t) {
          this._initBatchRenderElements.sort(e._sortPrepareStaticBatch);
          for (var i, n, r, a = !1, s = 0, o = 0, h = this._initBatchRenderElements.length; o < h; o++) {
            var l = this._initBatchRenderElements[o],
              u = l.renderObj._getVertexBuffer(0);
            l._sprite3D;
            if (n === u.vertexDeclaration && i === l._material) {
              var c;
              if (a) r._addCombineBatchRenderObjTest(l) ? (c = l._staticBatch) !== r && (c && c._deleteCombineBatchRenderObj(l), r._addCombineBatchRenderObj(l)) : (a = !1, s++);
              else {
                var _ = this._initBatchRenderElements[o - 1],
                  d = _.renderObj,
                  f = l.renderObj;
                d._getVertexBuffer().vertexCount + f._getVertexBuffer().vertexCount > 65535 ? a = !1 : (r = this._getStaticBatch(t, n, i, s), (c = _._staticBatch) !== r && (c && c._deleteCombineBatchRenderObj(_), r._addCombineBatchRenderObj(_)), (c = l._staticBatch) !== r && (c && c._deleteCombineBatchRenderObj(l), r._addCombineBatchRenderObj(l)), a = !0);
              }
            } else a = !1, s = 0;
            i = l._material, n = u.vertexDeclaration;
          }
        }, e._sortPrepareStaticBatch = function (t, e) {
          var i = t._render,
            n = e._render,
            r = i.lightmapIndex - n.lightmapIndex;
          if (0 === r) {
            var a = i.receiveShadow - n.receiveShadow;
            if (0 === a) {
              var s = t._mainSortID - e._mainSortID;
              return 0 === s ? t.renderObj.triangleCount - e.renderObj.triangleCount : s;
            }
            return a;
          }
          return r;
        }, e;
      }(),
      _i = function (t) {
        function e(t, i, n, r, a) {
          this._batchOwnerIndices = null, this._batchOwners = null, this._needFinishCombine = !1, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0, this._vertexDeclaration = null, this._vertexBuffer = null, this._indexBuffer = null, e.__super.call(this, t, i, n), this._batchOwnerIndices = [], this._batchOwners = [], this._needFinishCombine = !1, this._currentCombineVertexCount = 0, this._currentCombineIndexCount = 0, this._vertexDeclaration = r, this._material = a;
        }
        r(e, "laya.d3.graphics.SubMeshStaticBatch", bt);
        var i = e.prototype;
        return i._compareBatchRenderElement = function (t, e) {
          return t._batchIndexStart > e._batchIndexStart;
        }, i._addCombineBatchRenderObjTest = function (t) {
          var e = t.renderObj._vertexCount;
          return !((e > 0 ? this._currentCombineVertexCount + e : this._currentCombineVertexCount + t.renderObj._getVertexBuffer().vertexCount) > 65535);
        }, i._addCombineBatchRenderObj = function (t) {
          var e = t.renderObj,
            i = e._vertexCount;
          this._initBatchRenderElements.push(t), t._staticBatch = this, i > 0 ? (this._currentCombineIndexCount += e._indexCount, this._currentCombineVertexCount += i) : (this._currentCombineIndexCount = this._currentCombineIndexCount + e._getIndexBuffer().indexCount, this._currentCombineVertexCount = this._currentCombineVertexCount + e._getVertexBuffer().vertexCount), this._needFinishCombine = !0;
        }, i._deleteCombineBatchRenderObj = function (t) {
          var e = t.renderObj,
            i = this._initBatchRenderElements.indexOf(t);
          if (-1 !== i) {
            this._initBatchRenderElements.splice(i, 1), t._staticBatch = null;
            var n = e._vertexCount;
            n > 0 ? (this._currentCombineIndexCount = this._currentCombineIndexCount - e._indexCount, this._currentCombineVertexCount = this._currentCombineVertexCount - n) : (this._currentCombineIndexCount = this._currentCombineIndexCount - e._getIndexBuffer().indexCount, this._currentCombineVertexCount = this._currentCombineVertexCount - e._getVertexBuffer().vertexCount), this._needFinishCombine = !0;
          }
        }, i._finishInit = function () {
          if (this._needFinishCombine) {
            var t = 0,
              e = 0;
            this._initBatchRenderElements[0]._sprite3D._render.lightmapIndex >= 0 ? this._vertexDeclaration = this._getVertexDecLightMap(this._vertexDeclaration) : this._material instanceof laya.d3.core.material.StandardMaterial && this._material.ambientTexture && (this._vertexDeclaration = this._getVertexDecLightMap(this._vertexDeclaration));
            var i = new Float32Array(this._vertexDeclaration.vertexStride / 4 * this._currentCombineVertexCount),
              n = new Uint16Array(this._currentCombineIndexCount);
            this._vertexBuffer && (this._vertexBuffer.destroy(), this._indexBuffer.destroy()), this._vertexBuffer = qi.create(this._vertexDeclaration, this._currentCombineVertexCount, 35044), this._indexBuffer = Yi.create("ushort", this._currentCombineIndexCount, 35044);
            for (var r = 0, a = this._initBatchRenderElements.length; r < a; r++) {
              var s = this._initBatchRenderElements[r],
                o = s.renderObj,
                h = o._getStaticBatchBakedVertexs(this._rootOwner ? this._rootOwner._transform : null, s._sprite3D),
                l = o.getIndices(),
                u = s._sprite3D.transform._isFrontFaceInvert,
                c = t / (this._vertexDeclaration.vertexStride / 4) - o._vertexStart,
                _ = e,
                d = _ + l.length;
              s._batchIndexStart = _, s._batchIndexEnd = d, n.set(l, e);
              var f = 0;
              if (u)
                for (f = _; f < d; f += 3) {
                  n[f] = c + n[f];
                  var p = n[f + 1],
                    m = n[f + 2];
                  n[f + 1] = c + m, n[f + 2] = c + p;
                } else
                  for (f = _; f < d; f += 3) n[f] = c + n[f], n[f + 1] = c + n[f + 1], n[f + 2] = c + n[f + 2];
              e += l.length, i.set(h, t), t += h.length;
            }
            this._vertexBuffer.setData(i), this._indexBuffer.setData(n), this._needFinishCombine = !1;
          }
        }, i._getCombineRenderElementFromPool = function () {
          return this._combineRenderElementPool[this._combineRenderElementPoolIndex++] || (this._combineRenderElementPool[this._combineRenderElementPoolIndex - 1] = new li());
        }, i._getRenderElement = function (t, e, i) {
          for (var n, r, a = this._batchRenderElements.length, s = !0, o = 0; o < a; o++) {
            var h, l = (r = this._batchRenderElements[o])._sprite3D._render;
            0 !== o && (s = (h = (n = this._batchRenderElements[o - 1])._sprite3D._render).lightmapIndex !== l.lightmapIndex || h.receiveShadow !== l.receiveShadow || n._batchIndexEnd !== r._batchIndexStart);
            var u;
            if (s) {
              (u = this._getCombineRenderElementFromPool()).renderObj = this, u._material = this._material, u._batchIndexStart = r._batchIndexStart, u._batchIndexEnd = r._batchIndexEnd;
              var c = l.lightmapIndex,
                _ = c + 1,
                d = this._batchOwnerIndices[_];
              d || (d = this._batchOwnerIndices[_] = []);
              var f, p = d[r._render.receiveShadow ? 1 : 0];
              void 0 === p ? (d[l.receiveShadow ? 1 : 0] = this._batchOwners.length, (f = new gn(null, "StaticBatchMeshSprite3D"))._scene = e, f._transform = this._rootOwner ? this._rootOwner._transform : null, f._render.lightmapIndex = c, f._render.receiveShadow = r._render.receiveShadow, this._batchOwners.push(f)) : f = this._batchOwners[p], f._render._renderUpdate(i), u._sprite3D = f, t.push(u);
            } else u._batchIndexEnd = r._batchIndexEnd;
          }
        }, i._beforeRender = function (t) {
          return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0;
        }, i._render = function (t) {
          var e = t.renderElement,
            i = e._batchIndexStart,
            n = e._batchIndexEnd - i;
          L.mainContext.drawElements(4, n, 5123, 2 * i), D.drawCall++, D.trianglesFaces += n / 3;
        }, i.dispose = function () {
          this._batchOwnerIndices = null, this._batchOwners = null, this._vertexDeclaration = null, this._vertexBuffer.destroy(), this._indexBuffer.destroy();
        }, i._getVertexBuffer = function (t) {
          return void 0 === t && (t = 0), this._vertexBuffer;
        }, e;
      }(),
      di = (function (t) {
        function e() {
          e.__super.call(this), e._nameNumber++, this.loadShaderParams(), this.createResource(), this.alphaBlending = 1, this.colorIntensity = 1;
        }
        r(e, "laya.d3.resource.models.SkyBox", t);
        var i = e.prototype;
        i._getShader = function (t) {
          var e = t.scene._shaderDefineValue;
          return this._shader = this._shaderCompile.withCompile(e, 0, 0), this._shader;
        }, i.createResource = function () {
          this._numberVertices = 36, this._numberIndices = 36;
          var t = new Uint16Array(this._numberIndices),
            i = e._vertexDeclaration.vertexStride / 4,
            n = new Float32Array(this._numberVertices * i),
            r = new Le(-.5, .5, .5),
            a = new Le(-.5, -.5, .5),
            s = new Le(.5, .5, .5),
            o = new Le(.5, -.5, .5),
            h = new Le(-.5, .5, -.5),
            l = new Le(.5, .5, -.5),
            u = new Le(-.5, -.5, -.5),
            c = new Le(.5, -.5, -.5),
            _ = 0;
          _ = this._addVertex(n, _, r), _ = this._addVertex(n, _, a), _ = this._addVertex(n, _, s), _ = this._addVertex(n, _, a), _ = this._addVertex(n, _, o), _ = this._addVertex(n, _, s), _ = this._addVertex(n, _, h), _ = this._addVertex(n, _, l), _ = this._addVertex(n, _, u), _ = this._addVertex(n, _, u), _ = this._addVertex(n, _, l), _ = this._addVertex(n, _, c), _ = this._addVertex(n, _, r), _ = this._addVertex(n, _, l), _ = this._addVertex(n, _, h), _ = this._addVertex(n, _, r), _ = this._addVertex(n, _, s), _ = this._addVertex(n, _, l), _ = this._addVertex(n, _, a), _ = this._addVertex(n, _, u), _ = this._addVertex(n, _, c), _ = this._addVertex(n, _, a), _ = this._addVertex(n, _, c), _ = this._addVertex(n, _, o), _ = this._addVertex(n, _, r), _ = this._addVertex(n, _, u), _ = this._addVertex(n, _, a), _ = this._addVertex(n, _, h), _ = this._addVertex(n, _, u), _ = this._addVertex(n, _, r), _ = this._addVertex(n, _, s), _ = this._addVertex(n, _, o), _ = this._addVertex(n, _, c), _ = this._addVertex(n, _, l), _ = this._addVertex(n, _, s), _ = this._addVertex(n, _, c);
          for (var d = 0; d < 36; d++) t[d] = d;
          this._vertexBuffer = new qi(e._vertexDeclaration, this._numberVertices, 35044, !0), this._indexBuffer = new Yi("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(n), this._indexBuffer.setData(t);
        }, i._addVertex = function (t, e, i) {
          var n = i.elements;
          return t[e + 0] = n[0], t[e + 1] = n[1], t[e + 2] = n[2], e + 3;
        }, i.loadShaderParams = function () {
          this._sharderNameID = Fi.nameKey.getID("SkyBox"), this._shaderCompile = ui._preCompileShader[this._sharderNameID];
        }, i._render = function (t) {
          this._textureCube && this._textureCube.loaded && (this._vertexBuffer._bind(), this._indexBuffer._bind(), this._shader = this._getShader(t), this._shader.bind(), t.camera.transform.worldMatrix.cloneTo(e._tempMatrix4x40), e._tempMatrix4x40.transpose(), Ce.multiply(t._projectionMatrix, e._tempMatrix4x40, e._tempMatrix4x41), t.camera._shaderValues.setValue(4, e._tempMatrix4x41.elements), this._shader.uploadCameraUniforms(t.camera._shaderValues.data), this._shaderValue.setValue(1, this._colorIntensity), this._shaderValue.setValue(2, this._alphaBlending), this._shaderValue.setValue(3, this.textureCube), this._shader.uploadAttributes(e._vertexDeclaration.shaderValues.data, null), this._shader.uploadMaterialUniforms(this._shaderValue.data), L.mainContext.drawElements(4, 36, 5123, 0), D.trianglesFaces += 12, D.drawCall++);
        }, i.destroy = function () {
          t.prototype.destroy.call(this), this._textureCube && (this._textureCube._removeReference(), this._textureCube = null);
        }, a(0, i, "textureCube", function () {
          return this._textureCube;
        }, function (t) {
          this._textureCube !== t && (this._textureCube && this._textureCube._removeReference(), this._textureCube = t, t && t._addReference());
        }), e._nameNumber = 1, n(e, ["_tempMatrix4x40", function () {
          return this._tempMatrix4x40 = new Ce();
        }, "_tempMatrix4x41", function () {
          return this._tempMatrix4x41 = new Ce();
        }, "_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(12, [new Mt(0, "vector3", 0)]);
        }]);
      }(Ve), function (t) {
        function e() {
          this._stacks = 16, this._slices = 16, this._radius = 1, e.__super.call(this), e._nameNumber++, this.loadShaderParams(), this.recreateResource(), this.alphaBlending = 1, this.colorIntensity = 1;
        }
        r(e, "laya.d3.resource.models.SkyDome", t);
        var s = e.prototype;
        s._getShader = function (t) {
          var e = t.scene._shaderDefineValue;
          return this._shader = this._shaderCompile.withCompile(e, 0, 0), this._shader;
        }, s.recreateResource = function () {
          this._numberVertices = (this._stacks + 1) * (this._slices + 1), this._numberIndices = 3 * this._stacks * (this._slices + 1) * 2;
          for (var t = new Uint16Array(this._numberIndices), i = e._vertexDeclaration.vertexStride / 4, n = new Float32Array(this._numberVertices * i), r = Math.PI / this._stacks, a = 2 * Math.PI / this._slices, s = 0, o = 0, h = 0, l = 0; l < this._stacks + 1; l++)
            for (var u = Math.sin(l * r), c = Math.cos(l * r), _ = 0; _ < this._slices + 1; _++) {
              var d = u * Math.sin(_ * a),
                f = u * Math.cos(_ * a);
              n[o + 0] = d * this._radius, n[o + 1] = c * this._radius, n[o + 2] = f * this._radius, n[o + 3] = -_ / this._slices + .75, n[o + 4] = l / this._stacks, o += i, l != this._stacks - 1 && (t[h++] = s + 1, t[h++] = s, t[h++] = s + (this._slices + 1), t[h++] = s + (this._slices + 1), t[h++] = s, t[h++] = s + this._slices, s++);
            }
          this._vertexBuffer = new qi(e._vertexDeclaration, this._numberVertices, 35044), this._indexBuffer = new Yi("ushort", this._numberIndices, 35044), this._vertexBuffer.setData(n), this._indexBuffer.setData(t);
        }, s.loadShaderParams = function () {
          this._sharderNameID = Fi.nameKey.getID("SkyDome"), this._shaderCompile = ui._preCompileShader[this._sharderNameID];
        }, s._render = function (t) {
          this._texture && this._texture.loaded && (this._vertexBuffer._bind(), this._indexBuffer._bind(), this._shader = this._getShader(t), this._shader.bind(), t.camera.transform.worldMatrix.cloneTo(e._tempMatrix4x40), e._tempMatrix4x40.transpose(), Ce.multiply(t._projectionMatrix, e._tempMatrix4x40, e._tempMatrix4x41), t.camera._shaderValues.setValue(4, e._tempMatrix4x41.elements), this._shader.uploadCameraUniforms(t.camera._shaderValues.data), this._shaderValue.setValue(1, this._colorIntensity), this._shaderValue.setValue(2, this._alphaBlending), this._shaderValue.setValue(3, this.texture), this._shader.uploadAttributes(e._vertexDeclaration.shaderValues.data, null), this._shader.uploadMaterialUniforms(this._shaderValue.data), L.mainContext.drawElements(4, this._indexBuffer.indexCount, 5123, 0), D.trianglesFaces += this._numberIndices / 3, D.drawCall++);
        }, s.onEnvDescLoaded = function (t) {
          var e = "",
            n = Math.max(t.lastIndexOf("/"), t.lastIndexOf("\\"));
          n > 0 && (e = t.substr(0, n + 1));
          var r = i.loader.getRes(t);
          void 0 != r.ev && this.__ownerCamera ? this.__ownerCamera._shaderValues.setValue(13, Math.pow(2, r.ev)) : this.__ownerCamera._shaderValues.setValue(13, Math.pow(2, 0)), this.texture = hn.load(e + r.skytex), this.environmentSpecular = en.load(e + r.prefiltedEnv);
          var a = new Float32Array(r.IrradianceMat);
          this.envDiffuseSHRed = a.slice(0, 16), this.envDiffuseSHGreen = a.slice(16, 32), this.envDiffuseSHBlue = a.slice(32, 48);
        }, s.loadEnvInfo = function (t) {
          i.loader.load(t, v.create(this, this.onEnvDescLoaded, [t]));
        }, s.destroy = function () {
          t.prototype.destroy.call(this), this._texture && (this._texture._removeReference(), this._texture = null);
        }, a(0, s, "texture", function () {
          return this._texture;
        }, function (t) {
          this._texture !== t && (this._texture && this._texture._removeReference(), this._texture = t, t && t._addReference());
        }), e._nameNumber = 1, n(e, ["_tempMatrix4x40", function () {
          return this._tempMatrix4x40 = new Ce();
        }, "_tempMatrix4x41", function () {
          return this._tempMatrix4x41 = new Ce();
        }, "_vertexDeclaration", function () {
          return this._vertexDeclaration = new Ct(20, [new Mt(0, "vector3", 0), new Mt(12, "vector2", 2)]);
        }]);
      }(Ve), function (t) {
        function e() {
          this._componentsMap = null, this._typeComponentsIndices = null, this._components = null, this._scripts = null, e.__super.call(this), this._componentsMap = [], this._typeComponentsIndices = [], this._components = [], this._scripts = [];
        }
        r(e, "laya.d3.core.ComponentNode", S);
        var i = e.prototype;
        return i.addComponent = function (t) {
          var e, i = this._componentsMap.indexOf(t);
          if (-1 === i) e = [], this._componentsMap.push(t), this._typeComponentsIndices.push(e);
          else if (e = this._typeComponentsIndices[i], this._components[e[0]].isSingleton) throw new Error("无法单实例创建" + t + "组件，" + t + "组件已存在！");
          var n = p.getInstance(t);
          return e.push(this._components.length), this._components.push(n), n instanceof laya.d3.component.Script && this._scripts.push(n), n._initialize(this), n;
        }, i._removeComponent = function (t, e) {
          var i = this._typeComponentsIndices[t],
            n = i[e],
            r = this._components[n];
          this._components.splice(n, 1), r instanceof laya.d3.component.Script && this._scripts.splice(this._scripts.indexOf(r), 1), i.splice(e, 1), 0 === i.length && (this._typeComponentsIndices.splice(t, 1), this._componentsMap.splice(t, 1));
          for (var a = 0, s = this._componentsMap.length; a < s; a++)
            for (var o = (i = this._typeComponentsIndices[a]).length - 1; o >= 0; o--) {
              var h = i[o];
              if (!(h > n)) break;
              i[o] = --h;
            }
          r._destroy();
        }, i.getComponentByType = function (t, e) {
          void 0 === e && (e = 0);
          var i = this._componentsMap.indexOf(t);
          return -1 === i ? null : this._components[this._typeComponentsIndices[i][e]];
        }, i.getComponentsByType = function (t, e) {
          var i = this._componentsMap.indexOf(t);
          if (-1 !== i) {
            var n = this._typeComponentsIndices[i],
              r = n.length;
            e.length = r;
            for (var a = 0; a < r; a++) e[a] = this._components[n[a]];
          } else e.length = 0;
        }, i.getComponentByIndex = function (t) {
          return this._components[t];
        }, i.removeComponentByType = function (t, e) {
          void 0 === e && (e = 0);
          var i = this._componentsMap.indexOf(t); - 1 !== i && this._removeComponent(i, e);
        }, i.removeComponentsByType = function (t) {
          var e = this._componentsMap.indexOf(t);
          if (-1 !== e)
            for (var i = this._typeComponentsIndices[e], n = 0, r = i.length; n < r; i.length < r ? r-- : n++) this._removeComponent(e, n);
        }, i.removeAllComponent = function () {
          for (var t = 0, e = this._componentsMap.length; t < e; this._componentsMap.length < e ? e-- : t++) this.removeComponentsByType(this._componentsMap[t]);
        }, i._updateComponents = function (t) {
          for (var e = 0, i = this._components.length; e < i; e++) {
            var n = this._components[e];
            !n.started && (n._start(t), n.started = !0), n.enable && n._update(t);
          }
        }, i._lateUpdateComponents = function (t) {
          for (var e = 0; e < this._components.length; e++) {
            var i = this._components[e];
            !i.started && (i._start(t), i.started = !0), i.enable && i._lateUpdate(t);
          }
        }, i._preRenderUpdateComponents = function (t) {
          for (var e = 0; e < this._components.length; e++) {
            var i = this._components[e];
            !i.started && (i._start(t), i.started = !0), i.enable && i._preRenderUpdate(t);
          }
        }, i._postRenderUpdateComponents = function (t) {
          for (var e = 0; e < this._components.length; e++) {
            var i = this._components[e];
            !i.started && (i._start(t), i.started = !0), i.enable && i._postRenderUpdate(t);
          }
        }, e;
      }()),
      fi = function (t) {
        function e() {
          this._realTimeCurrentFrameIndexes = null, this._realTimeCurrentTimes = null, this._fullKeyframeIndicesCache = null, this._animationDatasCache = null, this._avatarDatasCache = null, this._skinnedDatasCache = null, this._version = null, this._nodes = null, this._nodesMap = null, this._cachePropertyMap = null, this._nodeToCachePropertyMap = null, this._unCachePropertyMap = null, this._duration = NaN, this._frameRate = 0, this._animationEvents = null, this._publicClipDatas = null, this.islooping = !1, e.__super.call(this), this._fullKeyframeIndicesCache = {}, this._animationDatasCache = [], this._avatarDatasCache = [], this._skinnedDatasCache = [], this._animationEvents = [];
        }
        r(e, "laya.d3.animation.AnimationClip", b);
        var n = e.prototype;
        return n.duration = function () {
          return this._duration;
        }, n._hermiteInterpolate = function (t, e, i, n) {
          for (var r = t.data, a = t.outTangent, s = t.next, o = s.data, h = s.inTangent, l = !1, u = NaN, c = NaN, _ = NaN, d = NaN, f = 0, p = n.length; f < p; f++) {
            var m = a[f],
              g = h[f];
            if (Number.isFinite(m) && Number.isFinite(g)) {
              if (!l) {
                var v = e * e,
                  y = v * e;
                u = 2 * y - 3 * v + 1, c = y - 2 * v + e, _ = y - v, d = -2 * y + 3 * v, l = !0;
              }
              n[f] = u * r[f] + c * m * i + _ * g * i + d * o[f];
            } else n[f] = r[f];
          }
        }, n._getFullKeyframeIndicesWithCache = function (t) {
          return this._fullKeyframeIndicesCache[t];
        }, n._cacheFullKeyframeIndices = function (t, e) {
          this._fullKeyframeIndicesCache[t] = e;
        }, n._getAnimationDataWithCache = function (t, e) {
          var i = this._animationDatasCache[t];
          return i ? i[e] : null;
        }, n._cacheAnimationData = function (t, e, i) {
          (this._animationDatasCache[t] || (this._animationDatasCache[t] = []))[e] = i;
        }, n._getAvatarDataWithCache = function (t, e, i) {
          var n = this._avatarDatasCache[t.id];
          if (n) {
            var r = n[e];
            return r ? r[i] : null;
          }
          return null;
        }, n._cacheAvatarData = function (t, e, i, n) {
          var r = this._avatarDatasCache[t.id] || (this._avatarDatasCache[t.id] = []);
          (r[e] || (r[e] = []))[i] = n;
        }, n._evaluateAnimationlDatasCacheMode = function (t, e, i, n, r) {
          for (var a = 0, s = 0, o = 0, h = r ? r.length : this._nodes.length; o < h; o++) {
            var l = r ? r[o] : o,
              u = this._nodes[l],
              c = u._cacheProperty;
            if (t[l]) {
              var _, d = e[l],
                f = d[i.currentFrameIndex],
                p = 0;
              if (-1 !== f) {
                var m = u.keyFrames[f];
                if (m.next) {
                  r && !c ? (_ = n[l]) || (_ = n[l] = new Float32Array(u.keyFrameWidth)) : (_ = new Float32Array(u.keyFrameWidth), n[o] = _);
                  var g = NaN,
                    v = m.duration;
                  g = 0 !== v ? (i.currentFrameTime - m.startTime) / v : 0, this._hermiteInterpolate(m, g, v, _);
                } else {
                  if (r && !c)(_ = n[l]) || (_ = n[l] = new Float32Array(u.keyFrameWidth));
                  else {
                    if (-1 !== (p = i._lastFrameIndex) && d[p] === f) continue;
                    _ = new Float32Array(u.keyFrameWidth), n[o] = _;
                  }
                  var y = m.data;
                  for (a = 0, s = _.length; a < s; a++) _[a] = y[a];
                }
              } else {
                if (r && !c)(_ = n[l]) || (_ = n[l] = new Float32Array(u.keyFrameWidth));
                else {
                  if (-1 !== (p = i._lastFrameIndex) && d[p] === f) continue;
                  _ = new Float32Array(u.keyFrameWidth), n[o] = _;
                }
                var x = u.keyFrames[0].data;
                for (a = 0, s = _.length; a < s; a++) _[a] = x[a];
              }
            }
          }
        }, n._evaluateAnimationlDatasRealTime = function (t, e, i, n) {
          var r = 0,
            a = 0,
            s = this._nodes;
          if (!this._realTimeCurrentFrameIndexes) {
            for (this._realTimeCurrentFrameIndexes = new Int32Array(s.length), r = 0, a = s.length; r < a; r++) this._realTimeCurrentFrameIndexes[r] = -1;
            this._realTimeCurrentTimes = new Float32Array(s.length);
          }
          for (r = 0, a = n ? n.length : this._nodes.length; r < a; r++) {
            var o = n ? n[r] : r,
              h = s[o];
            e < this._realTimeCurrentTimes[o] && (this._realTimeCurrentFrameIndexes[o] = -1), this._realTimeCurrentTimes[o] = e;
            for (var l = this._realTimeCurrentFrameIndexes[o] + 1, u = h.keyFrames, c = u.length; l < c;) {
              if (u[l].startTime > e) {
                this._realTimeCurrentFrameIndexes[o] = l - 1;
                break;
              }
              l++;
            }
            l === c && (this._realTimeCurrentFrameIndexes[o] = c - 1);
            var _ = 0,
              d = 0,
              f = i[o];
            f || (f = i[o] = new Float32Array(h.keyFrameWidth));
            var p = u[this._realTimeCurrentFrameIndexes[o]];
            if (p) {
              if (p.next) {
                var m = p.duration,
                  g = NaN;
                g = 0 !== m ? (e - p.startTime) / m : 0, this._hermiteInterpolate(p, g, m, f);
              } else {
                var v = p.data;
                for (_ = 0, d = f.length; _ < d; _++) f[_] = v[_];
              }
            } else {
              var y = h.keyFrames[0].data;
              for (_ = 0, d = f.length; _ < d; _++) f[_] = y[_];
            }
            var x = t[o];
            x && (n ? B._propertySetFuncs[h.propertyNameID](x, null, f) : B._propertySetFuncs[h.propertyNameID](null, x, f));
          }
        }, n._binarySearchEventIndex = function (t) {
          for (var e = 0, i = this._animationEvents.length - 1, n = 0; e <= i;) {
            n = Math.floor((e + i) / 2);
            var r = this._animationEvents[n].time;
            if (r == t) return n;
            r > t ? i = n - 1 : e = n + 1;
          }
          return e;
        }, n.addEvent = function (t) {
          var e = this._binarySearchEventIndex(t.time);
          this._animationEvents.splice(e, 0, t);
        }, n.onAsynLoaded = function (t, e, i) {
          var n = new f(e);
          switch (this._version = n.readUTFString(), this._version) {
            case "LAYAANIMATION:01":
              N.parse(this, n);
              break;
            case "LAYAANIMATION:02":
              V.parse(this, n);
          }
          this.completeCreate(), this._endLoaded();
        }, n.disposeResource = function () {
          this._realTimeCurrentFrameIndexes = null, this._realTimeCurrentTimes = null, this._fullKeyframeIndicesCache = null, this._animationDatasCache = null, this._avatarDatasCache = null, this._skinnedDatasCache = null, this._version = null, this._nodes = null, this._nodesMap = null, this._cachePropertyMap = null, this._nodeToCachePropertyMap = null, this._unCachePropertyMap = null, this._publicClipDatas = null;
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e;
      }(),
      pi = function (t) {
        function e() {
          e.__super.call(this);
        }
        r(e, "laya.d3.core.Avatar", b);
        var n = e.prototype;
        return i.imps(n, {
          "laya.d3.core.IClone": !0
        }), n._initCloneToAnimator = function (t, e) {
          e._avatarNodeMap[t.name] = t, e._avatarNodes.push(t);
          for (var i = 0, n = t.getChildCount(); i < n; i++) this._initCloneToAnimator(t.getChildByIndex(i), e);
        }, n._parseNode = function (t, e) {
          var i = t.props.name;
          if (e.name = i, e._parent) {
            var n = t.customProps,
              r = e.transform;
            r._localRotationEuler = new Float32Array(3), r.setLocalPosition(new Float32Array(n.translate)), r.setLocalRotation(new Float32Array(n.rotation)), r.setLocalScale(new Float32Array(n.scale)), r._setWorldMatrixAndUpdate(new Float32Array(16));
          }
          for (var a = t.child, s = 0, o = a.length; s < o; s++) {
            var h = a[s],
              l = new B();
            e.addChild(l), this._parseNode(h, l);
          }
        }, n.onAsynLoaded = function (t, e, i) {
          if (this._rootNode = new B(), e.version) {
            this._version = e.version;
            var n = e.rootNode;
            n && this._parseNode(n, this._rootNode);
          } else this._parseNode(e, this._rootNode);
          this._endLoaded();
        }, n._cloneDatasToAnimator = function (t) {
          var e = this._rootNode.clone();
          e.transform._setWorldMatrixIgnoreUpdate(null);
          t._avatarNodeMap = {}, t._avatarNodes = [], this._initCloneToAnimator(e, t);
        }, n.cloneTo = function (t) {
          var e = t,
            i = this._rootNode.clone();
          e._rootNode = i;
        }, n.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e;
      }(),
      mi = function (t) {
        function e() {
          e.__super.call(this), this._shaderDefineValue = 0, this._disablePublicShaderDefine = 0, this._shaderValues = new ke(), this._values = [], this.renderQueue = 2e3, this._alphaTest = !1, this.cull = 2, this.blend = 0, this.srcBlend = 1, this.dstBlend = 0, this.srcBlendRGB = 1, this.dstBlendRGB = 0, this.srcBlendAlpha = 1, this.dstBlendAlpha = 0, this.blendConstColor = new Oe(1, 1, 1, 1), this.blendEquation = 0, this.blendEquationRGB = 0, this.blendEquationAlpha = 0, this.depthTest = 513, this.depthWrite = !0;
        }
        r(e, "laya.d3.core.material.BaseMaterial", t);
        var s = e.prototype;
        return i.imps(s, {
          "laya.d3.core.IClone": !0
        }), s._addShaderDefine = function (t) {
          this._shaderDefineValue |= t;
        }, s._removeShaderDefine = function (t) {
          this._shaderDefineValue &= ~t;
        }, s._addDisablePublicShaderDefine = function (t) {
          this._disablePublicShaderDefine |= t;
        }, s._removeDisablePublicShaderDefine = function (t) {
          this._disablePublicShaderDefine &= ~t;
        }, s._setBuffer = function (t, e) {
          this._shaderValues.setValue(t, e), this._values[t] = e;
        }, s._getBuffer = function (t) {
          return this._values[t];
        }, s._setMatrix4x4 = function (t, e) {
          this._shaderValues.setValue(t, e ? e.elements : null), this._values[t] = e;
        }, s._getMatrix4x4 = function (t) {
          return this._values[t];
        }, s._setInt = function (t, e) {
          this._shaderValues.setValue(t, e), this._values[t] = e;
        }, s._getInt = function (t) {
          return this._values[t];
        }, s._setNumber = function (t, e) {
          this._shaderValues.setValue(t, e), this._values[t] = e;
        }, s._getNumber = function (t) {
          return this._values[t];
        }, s._setBool = function (t, e) {
          this._shaderValues.setValue(t, e), this._values[t] = e;
        }, s._getBool = function (t) {
          return this._values[t];
        }, s._setVector2 = function (t, e) {
          this._shaderValues.setValue(t, e ? e.elements : null), this._values[t] = e;
        }, s._getVector2 = function (t) {
          return this._values[t];
        }, s._setColor = function (t, e) {
          this._shaderValues.setValue(t, e ? e.elements : null), this._values[t] = e;
        }, s._getColor = function (t) {
          return this._values[t];
        }, s._setTexture = function (t, e) {
          var i = this._values[t];
          this._values[t] = e, this._shaderValues.setValue(t, e), this.referenceCount > 0 && (i && i._removeReference(), e && e._addReference());
        }, s._getTexture = function (t) {
          return this._values[t];
        }, s._upload = function () {
          this._shader.uploadMaterialUniforms(this._shaderValues.data);
        }, s._getShader = function (t, e, i) {
          var n = (t | e) & ~this._disablePublicShaderDefine;
          return this._shader = this._shaderCompile.withCompile(n, i, this._shaderDefineValue), this._shader;
        }, s._setRenderStateBlendDepth = function () {
          var t = L.mainContext;
          switch (O.setDepthMask(t, this.depthWrite), 0 === this.depthTest ? O.setDepthTest(t, !1) : (O.setDepthTest(t, !0), O.setDepthFunc(t, this.depthTest)), this.blend) {
            case 0:
              O.setBlend(t, !1);
              break;
            case 1:
              O.setBlend(t, !0), O.setBlendFunc(t, this.srcBlend, this.dstBlend);
              break;
            case 2:
              O.setBlend(t, !0);
          }
        }, s._setRenderStateFrontFace = function (t, e) {
          var i = L.mainContext,
            n = 0;
          switch (this.cull) {
            case 0:
              O.setCullFace(i, !1);
              break;
            case 1:
              O.setCullFace(i, !0), n = t ? e && e._isFrontFaceInvert ? 2305 : 2304 : e && e._isFrontFaceInvert ? 2304 : 2305, O.setFrontFace(i, n);
              break;
            case 2:
              O.setCullFace(i, !0), n = t ? e && e._isFrontFaceInvert ? 2304 : 2305 : e && e._isFrontFaceInvert ? 2305 : 2304, O.setFrontFace(i, n);
          }
        }, s.onAsynLoaded = function (t, e, i) {
          var n = e[0],
            r = e[1];
          switch (n.version) {
            case "LAYAMATERIAL:01":
              var a = 0,
                s = 0,
                o = n.props;
              for (var h in o) switch (h) {
                case "vectors":
                  var l = o[h];
                  for (a = 0, s = l.length; a < s; a++) {
                    var u = l[a],
                      c = u.value;
                    switch (c.length) {
                      case 2:
                        this[u.name] = new Pe(c[0], c[1]);
                        break;
                      case 3:
                        this[u.name] = new Le(c[0], c[1], c[2]);
                        break;
                      case 4:
                        this[u.name] = new Oe(c[0], c[1], c[2], c[3]);
                        break;
                      default:
                        throw new Error("BaseMaterial:unkonwn color length.");
                    }
                  }
                  break;
                case "textures":
                  var _ = o[h];
                  for (a = 0, s = _.length; a < s; a++) {
                    var d = _[a],
                      f = d.path;
                    f && (this[d.name] = y.getRes(r[f]));
                  }
                  break;
                case "defines":
                  var p = o[h];
                  for (a = 0, s = p.length; a < s; a++) {
                    var m = this._shaderCompile.getMaterialDefineByName(p[a]);
                    this._addShaderDefine(m);
                  }
                  break;
                case "cull":
                case "blend":
                case "srcBlend":
                case "dstBlend":
                case "depthWrite":
                  this[h] = o[h];
                  break;
                case "renderQueue":
                  switch (o[h]) {
                    case 1:
                      this.renderQueue = 2e3;
                      break;
                    case 2:
                      this.renderQueue = 3e3;
                  }
                  break;
                default:
                  this[h] = o[h];
              }
              break;
            case "LAYAMATERIAL:02":
              o = n.props;
              for (h in o) switch (h) {
                case "vectors":
                  for (a = 0, s = (l = o[h]).length; a < s; a++) switch (u = l[a], (c = u.value).length) {
                    case 2:
                      this[u.name] = new Pe(c[0], c[1]);
                      break;
                    case 3:
                      this[u.name] = new Le(c[0], c[1], c[2]);
                      break;
                    case 4:
                      this[u.name] = new Oe(c[0], c[1], c[2], c[3]);
                      break;
                    default:
                      throw new Error("BaseMaterial:unkonwn color length.");
                  }
                  break;
                case "textures":
                  for (a = 0, s = (_ = o[h]).length; a < s; a++)(f = (d = _[a]).path) && (this[d.name] = y.getRes(r[f]));
                  break;
                case "defines":
                  for (a = 0, s = (p = o[h]).length; a < s; a++) m = this._shaderCompile.getMaterialDefineByName(p[a]), this._addShaderDefine(m);
                  break;
                default:
                  this[h] = o[h];
              }
              break;
            default:
              throw new Error("BaseMaterial:unkonwn version.");
          }
          this._endLoaded();
        }, s._addReference = function () {
          t.prototype._addReference.call(this);
          for (var e = 0, i = this._values.length; e < i; e++) {
            var n = this._values[e];
            n && n instanceof laya.d3.resource.BaseTexture && n._addReference();
          }
        }, s._removeReference = function () {
          t.prototype._removeReference.call(this);
          for (var e = 0, i = this._values.length; e < i; e++) {
            var n = this._values[e];
            n && n instanceof laya.d3.resource.BaseTexture && n._removeReference();
          }
        }, s.disposeResource = function () {
          this.blendConstColor = null, this._shader = null, this._shaderValues = null;
          for (var t = 0, e = this._values.length; t < e; t++) {
            var i = this._values[t];
            i && i instanceof laya.d3.resource.BaseTexture && i._removeReference();
          }
          this._values = null;
        }, s.setShaderName = function (t) {
          var e = Fi.nameKey.getID(t);
          if (-1 === e) throw new Error("BaseMaterial: unknown shader name.");
          this._shaderCompile = ui._preCompileShader[e];
        }, s.cloneTo = function (t) {
          var e = t;
          e.name = this.name, e.cull = this.cull, e.blend = this.blend, e.srcBlend = this.srcBlend, e.dstBlend = this.dstBlend, e.srcBlendRGB = this.srcBlendRGB, e.dstBlendRGB = this.dstBlendRGB, e.srcBlendAlpha = this.srcBlendAlpha, e.dstBlendAlpha = this.dstBlendAlpha, this.blendConstColor.cloneTo(e.blendConstColor), e.blendEquation = this.blendEquation, e.blendEquationRGB = this.blendEquationRGB, e.blendEquationAlpha = this.blendEquationAlpha, e.depthTest = this.depthTest, e.depthWrite = this.depthWrite, e.renderQueue = this.renderQueue, e._shader = this._shader, e._disablePublicShaderDefine = this._disablePublicShaderDefine, e._shaderDefineValue = this._shaderDefineValue;
          var i = 0,
            n = 0,
            r = e._shaderValues;
          e._shaderValues.data.length = this._shaderValues.data.length;
          var a = this._values.length,
            s = e._values;
          for (s.length = a, i = 0, n = a; i < n; i++) {
            var o = this._values[i];
            if (o)
              if ("number" == typeof o) s[i] = o, r.data[i] = o;
              else if ("number" == typeof o && Math.floor(o) == o) s[i] = o, r.data[i] = o;
            else if ("boolean" == typeof o) s[i] = o, r.data[i] = o;
            else if (o instanceof laya.d3.math.Vector2) {
              var h = s[i] || (s[i] = new Pe());
              o.cloneTo(h), r.data[i] = h.elements;
            } else if (o instanceof laya.d3.math.Vector3) {
              var l = s[i] || (s[i] = new Le());
              o.cloneTo(l), r.data[i] = l.elements;
            } else if (o instanceof laya.d3.math.Vector4) {
              var u = s[i] || (s[i] = new Oe());
              o.cloneTo(u), r.data[i] = u.elements;
            } else if (o instanceof laya.d3.math.Matrix4x4) {
              var c = s[i] || (s[i] = new Ce());
              o.cloneTo(c), r.data[i] = c.elements;
            } else o instanceof laya.d3.resource.BaseTexture && (s[i] = o, r.data[i] = o);
          }
        }, s.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, a(0, s, "alphaTestValue", function () {
          return this._getNumber(0);
        }, function (t) {
          this._setNumber(0, t);
        }), a(0, s, "alphaTest", function () {
          return this._alphaTest;
        }, function (t) {
          this._alphaTest = t, t ? this._addShaderDefine(laya.d3.core.material.BaseMaterial.SHADERDEFINE_ALPHATEST) : this._removeShaderDefine(laya.d3.core.material.BaseMaterial.SHADERDEFINE_ALPHATEST);
        }), e.__init__ = function () {
          e.SHADERDEFINE_ALPHATEST = e.shaderDefines.registerDefine("ALPHATEST");
        }, e.RENDERQUEUE_OPAQUE = 2e3, e.RENDERQUEUE_ALPHATEST = 2450, e.RENDERQUEUE_TRANSPARENT = 3e3, e.CULL_NONE = 0, e.CULL_FRONT = 1, e.CULL_BACK = 2, e.BLEND_DISABLE = 0, e.BLEND_ENABLE_ALL = 1, e.BLEND_ENABLE_SEPERATE = 2, e.BLENDPARAM_ZERO = 0, e.BLENDPARAM_ONE = 1, e.BLENDPARAM_SRC_COLOR = 768, e.BLENDPARAM_ONE_MINUS_SRC_COLOR = 769, e.BLENDPARAM_DST_COLOR = 774, e.BLENDPARAM_ONE_MINUS_DST_COLOR = 775, e.BLENDPARAM_SRC_ALPHA = 770, e.BLENDPARAM_ONE_MINUS_SRC_ALPHA = 771, e.BLENDPARAM_DST_ALPHA = 772, e.BLENDPARAM_ONE_MINUS_DST_ALPHA = 773, e.BLENDPARAM_SRC_ALPHA_SATURATE = 776, e.BLENDEQUATION_ADD = 0, e.BLENDEQUATION_SUBTRACT = 1, e.BLENDEQUATION_REVERSE_SUBTRACT = 2, e.DEPTHTEST_OFF = 0, e.DEPTHTEST_NEVER = 512, e.DEPTHTEST_LESS = 513, e.DEPTHTEST_EQUAL = 514, e.DEPTHTEST_LEQUAL = 515, e.DEPTHTEST_GREATER = 516, e.DEPTHTEST_NOTEQUAL = 517, e.DEPTHTEST_GEQUAL = 518, e.DEPTHTEST_ALWAYS = 519, e.SHADERDEFINE_ALPHATEST = 1, e.ALPHATESTVALUE = 0, n(e, ["shaderDefines", function () {
          return this.shaderDefines = new Be();
        }]), e;
      }(b),
      gi = function (t) {
        function e() {
          this._type = 0, this._width = 0, this._height = 0, this._size = null, this._repeat = !1, this._mipmap = !1, this._minFifter = 0, this._magFifter = 0, this._format = 0, this._source = null, this._conchTexture = null, this._wrapModeU = 0, this._wrapModeV = 0, e.__super.call(this), this._repeat = !0, this.mipmap = !0, this.minFifter = -1, this.magFifter = -1;
        }
        r(e, "laya.d3.resource.BaseTexture", b);
        var i = e.prototype;
        return a(0, i, "width", function () {
          return this._width;
        }), a(0, i, "repeat", function () {
          return this._repeat;
        }, function (t) {
          if (this._repeat !== t && (this._repeat = t, this._source)) {
            var e = L.mainContext;
            O.bindTexture(e, this._type, this._source);
            l.isPOT(this._width, this._height) && this._repeat ? (e.texParameteri(this._type, 10242, 10497), e.texParameteri(this._type, 10243, 10497)) : (e.texParameteri(this._type, 10242, 33071), e.texParameteri(this._type, 10243, 33071));
          }
        }), a(0, i, "height", function () {
          return this._height;
        }), a(0, i, "magFifter", function () {
          return this._magFifter;
        }, function (t) {
          this._magFifter = t, t != this._magFifter && this._conchTexture && this._conchTexture.setMaxFifter(t);
        }), a(0, i, "wrapModeV", function () {
          return this._wrapModeV;
        }), a(0, i, "size", function () {
          return this._size;
        }), a(0, i, "wrapModeU", function () {
          return this._wrapModeU;
        }), a(0, i, "mipmap", function () {
          return this._mipmap;
        }, function (t) {
          this._mipmap = t, this._mipmap != t && this._conchTexture && this._conchTexture.setMipMap(t);
        }), a(0, i, "minFifter", function () {
          return this._minFifter;
        }, function (t) {
          this._minFifter = t, this._minFifter != t && this._conchTexture && this._conchTexture.setMinFifter(t);
        }), a(0, i, "format", function () {
          return this._format;
        }), a(0, i, "source", function () {
          return this.activeResource(), this._source;
        }), a(0, i, "defaulteTexture", function () {
          return sn.grayTexture;
        }), e.WARPMODE_REPEAT = 0, e.WARPMODE_CLAMP = 1, e;
      }(),
      vi = function (t) {
        function e() {
          this._subMeshCount = 0, this._boundingBox = null, this._boundingSphere = null, this._boundingBoxCorners = null, this._positions = null, e.__super.call(this), this._boundingBoxCorners = s(8, null);
        }
        r(e, "laya.d3.resource.models.BaseMesh", b);
        var i = e.prototype;
        return i._getPositions = function () {
          throw new Error("未Override,请重载该属性！");
        }, i._generateBoundingObject = function () {
          this._boundingSphere = new Se(new Le(), 0), Se.createfromPoints(this._positions, this._boundingSphere), this._boundingBox = new xe(new Le(), new Le()), xe.createfromPoints(this._positions, this._boundingBox), this._boundingBox.getCorners(this._boundingBoxCorners);
        }, i.getRenderElementsCount = function () {
          throw new Error("未Override,请重载该属性！");
        }, i.getRenderElement = function (t) {
          throw new Error("未Override,请重载该属性！");
        }, a(0, i, "subMeshCount", function () {
          return this._subMeshCount;
        }), a(0, i, "boundingBox", function () {
          return this._boundingBox;
        }), a(0, i, "boundingBoxCorners", function () {
          return this._boundingBoxCorners;
        }), a(0, i, "boundingSphere", function () {
          return this._boundingSphere;
        }), e;
      }(),
      yi = function (t) {
        function e() {
          this._terrainHeightData = null, this._width = 0, this._height = 0, this._bitType = 0, this._value = NaN, e.__super.call(this);
        }
        r(e, "laya.d3.terrain.TerrainHeightData", b);
        return e.prototype.onAsynLoaded = function (t, e, i) {
          this._width = i[0], this._height = i[1], this._bitType = i[2], this._value = i[3];
          var n, r = NaN;
          8 == this._bitType ? (n = new Uint8Array(e), r = 1 / 255) : 16 == this._bitType && (n = new Int16Array(e), r = 1 / 32766), this._terrainHeightData = new Float32Array(this._height * this._width);
          for (var a = 0, s = this._height * this._width; a < s; a++) this._terrainHeightData[a] = n[a] * r * this._value / 2;
          this._endLoaded();
        }, e.load = function (t, n, r, a, s) {
          return i.loader.create(t, null, null, e, [n, r, a, s], 1, !1);
        }, e;
      }(),
      xi = function (t) {
        function e() {
          this._version = NaN, this._cameraCoordinateInverse = !1, this._gridSize = NaN, this._chunkNumX = 0, this._chunkNumZ = 0, this._heightDataX = 0, this._heightDataZ = 0, this._heightDataBitType = 0, this._heightDataValue = NaN, this._heightDataUrl = null, this._detailTextureInfos = null, this._chunkInfos = null, this._heightData = null, this._materialInfo = null, this._alphaMaps = null, this._normalMaps = null, e.__super.call(this);
        }
        r(e, "laya.d3.terrain.TerrainRes", b);
        var n = e.prototype;
        return n.parseData = function (t) {
          var e = t[0],
            i = t[1];
          if (this._version = e.version, 1 == this._version) {
            this._cameraCoordinateInverse = e.cameraCoordinateInverse, this._gridSize = e.gridSize, this._chunkNumX = e.chunkNumX, this._chunkNumZ = e.chunkNumZ;
            var n = e.heightData;
            if (this._heightDataX = n.numX, this._heightDataZ = n.numZ, this._heightDataBitType = n.bitType, this._heightDataValue = n.value, this._heightDataUrl = i[n.url], this._materialInfo = new je(), e.material) {
              var r = e.material.ambient,
                a = e.material.diffuse,
                o = e.material.specular;
              this._materialInfo.ambientColor = new Le(r[0], r[1], r[2]), this._materialInfo.diffuseColor = new Le(a[0], a[1], a[2]), this._materialInfo.specularColor = new Oe(o[0], o[1], o[2], o[3]);
            }
            var h = e.detailTexture;
            this._detailTextureInfos = s(h.length);
            for (var l = 0; l < h.length; l++) {
              var u = h[l],
                c = new We();
              c.diffuseTexture = i[u.diffuse], c.normalTexture = u.normal ? i[u.normal] : null, u.scale ? c.scale = new Pe(u.scale[0], u.scale[1]) : c.scale = new Pe(1, 1), u.offset ? c.offset = new Pe(u.offset[0], u.offset[1]) : c.offset = new Pe(0, 0), this._detailTextureInfos[l] = c;
            }
            var _ = e.alphaMap;
            for (this._alphaMaps = s(_.length), l = 0; l < this._alphaMaps.length; l++) this._alphaMaps[l] = e.alphaMap[l];
            var d = e.normalMap;
            for (this._normalMaps = s(d.length), l = 0; l < this._normalMaps.length; l++) this._normalMaps[l] = e.normalMap[l];
            var f = e.chunkInfo;
            if (this._chunkNumX * this._chunkNumZ != f.length) return alert("terrain data error"), !1;
            for (this._chunkInfos = s(f.length), l = 0; l < f.length; l++) {
              var p = f[l],
                m = new ze(),
                g = p.alphaMap.length,
                v = p.detailID.length;
              if (g != v) return alert("terrain chunk data error"), !1;
              m.alphaMap = s(g), m.detailID = s(v), m.normalMap = i[this._normalMaps[p.normalMap]];
              for (var x = 0; x < g; x++) {
                m.alphaMap[x] = i[this._alphaMaps[p.alphaMap[x]]];
                var T = p.detailID[x],
                  S = T.length;
                m.detailID[x] = new Uint8Array(S);
                for (var w = 0; w < S; w++) m.detailID[x][w] = T[w];
              }
              this._chunkInfos[l] = m;
            }
            this._heightData = y.getRes(this._heightDataUrl), this.onLoadTerrainComplete(this._heightData);
          }
          return !0;
        }, n.onLoadTerrainComplete = function (t) {
          this._endLoaded();
        }, n.onAsynLoaded = function (t, e, i) {
          this.parseData(e);
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e, null, 1, !1);
        }, e;
      }(),
      Ti = function (t) {
        function e() {
          this._player = null, this._templet = null, e.__super.call(this), this._player = new o();
        }
        r(e, "laya.d3.component.animation.KeyframeAnimations", t);
        var n = e.prototype;
        return n._updateAnimtionPlayer = function () {
          this._player._update(i.timer.delta);
        }, n._addUpdatePlayerToTimer = function () {
          i.timer.frameLoop(1, this, this._updateAnimtionPlayer);
        }, n._removeUpdatePlayerToTimer = function () {
          i.timer.clear(this, this._updateAnimtionPlayer);
        }, n._onOwnerActiveHierarchyChanged = function (t) {
          this._owner.displayedInStage && (t ? this._addUpdatePlayerToTimer() : this._removeUpdatePlayerToTimer());
        }, n._load = function (t) {
          t.activeInHierarchy && this._addUpdatePlayerToTimer(), t.on("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged);
        }, n._unload = function (e) {
          t.prototype._unload.call(this, e), e.activeInHierarchy && this._removeUpdatePlayerToTimer(), e.off("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged), this._player._destroy(), this._player = null, this._templet = null;
        }, a(0, n, "url", null, function (t) {
          console.log("Warning: discard property,please use templet property instead.");
          var e = i.loader.create(t, null, null, h);
          this._templet !== e && (0 !== this._player.state && this._player.stop(!0), this._templet = e, this._player.templet = e, this.event("animationchanged", this));
        }), a(0, n, "player", function () {
          return this._player;
        }), a(0, n, "templet", function () {
          return this._templet;
        }, function (t) {
          this._templet !== t && (0 !== this._player.state && this._player.stop(!0), this._templet = t, this._player.templet = t, this.event("animationchanged", this));
        }), a(0, n, "currentFrameIndex", function () {
          return this._player.currentKeyframeIndex;
        }), a(0, n, "currentAnimationClipIndex", function () {
          return this._player.currentAnimationClipIndex;
        }), a(0, n, "nodeCount", function () {
          return this._templet.getNodeCount(this._player.currentAnimationClipIndex);
        }), e;
      }(Je),
      Si = function (t) {
        function e() {
          e.__super.call(this), this._clipNames = [], this._clips = [], this._playStartFrames = [], this._playEndFrames = [], this._cacheNodesSpriteOwners = [], this._cacheNodesAvatarOwners = [], this._cacheNodesDefaultlValues = [], this._cacheNodesToSpriteMap = [], this._cacheSpriteToNodesMap = [], this._cacheFullFrames = [], this._publicClipsDatas = [], this._playEventIndex = -1, this._updateTransformPropertyLoopCount = -1, this._lastFrameIndex = -1, this._defaultClipIndex = -1, this._cachePlayRate = 1, this._currentPlayClip = null, this._currentFrameIndex = -1, this._currentTime = 0, this._elapsedPlaybackTime = 0, this._startUpdateLoopCount = -1, this.isCache = !0, this.cacheFrameRate = 60, this.playbackRate = 1, this.playOnWake = !0;
        }
        r(e, "laya.d3.component.Animator", t);
        var s = e.prototype;
        return i.imps(s, {
          "laya.resource.IDestroy": !0
        }), s._getAvatarOwnersByClip = function (t) {
          var e = this._clips[t]._nodes,
            i = e.length,
            n = this._cacheNodesAvatarOwners[t];
          n.length = i;
          var r = this._cacheNodesDefaultlValues[t];
          r.length = i;
          for (var a = 0; a < i; a++) {
            for (var s = this._avatarNodes[0], o = e[a], h = o.path, l = 0, u = h.length; l < u; l++) {
              var c = h[l];
              if ("" === c) break;
              if (!(s = s.getChildByName(c))) break;
            }
            if (s) {
              n[a] = s;
              var _ = B._propertyGetFuncs[o.propertyNameID](s);
              if (_) {
                var d = new Float32Array(o.keyFrameWidth);
                for (r[a] = d, l = 0, u = _.length; l < u; l++) d[l] = _[l];
              }
            }
          }
        }, s._handleSpriteOwnersByClip = function (t) {
          var e = this._clips[t]._nodes,
            i = e.length,
            n = this._cacheNodesSpriteOwners[t];
          n.length = i;
          var r = this._cacheNodesDefaultlValues[t];
          r.length = i;
          for (var a = 0; a < i; a++) {
            var s = this._owner,
              o = e[a],
              h = o.path,
              l = 0,
              u = 0;
            for (l = 0, u = h.length; l < u; l++) {
              var c = h[l];
              if ("" === c) break;
              if (!(s = s.getChildByName(c))) break;
            }
            if (s) {
              n[a] = s;
              var _ = B._propertyGetFuncs[o.propertyNameID](null, s);
              if (_) {
                var d = new Float32Array(o.keyFrameWidth);
                for (r[a] = d, l = 0, u = _.length; l < u; l++) d[l] = _[l];
              }
            }
          }
        }, s._offClipAndAvatarRelateEvent = function (t, e) {
          t.loaded ? e.loaded || e.off("loaded", this, this._getAvatarOwnersByClip) : t.off("loaded", this, this._getAvatarOwnersAndInitDatasAsync);
        }, s._getAvatarOwnersByClipAsync = function (t, e) {
          e.loaded ? this._getAvatarOwnersByClip(t) : e.once("loaded", this, this._getAvatarOwnersByClip, [t]);
        }, s._offGetSpriteOwnersByClipAsyncEvent = function (t) {
          t.loaded || t.off("loaded", this, this._getSpriteOwnersByClipAsync);
        }, s._getSpriteOwnersByClipAsync = function (t, e) {
          e.loaded ? this._handleSpriteOwnersByClip(t) : e.once("loaded", this, this._handleSpriteOwnersByClip, [t]);
        }, s._getAvatarOwnersAndInitDatasAsync = function () {
          for (var t = 0, e = this._clips.length; t < e; t++) this._getAvatarOwnersByClipAsync(t, this._clips[t]);
          for (this._avatar._cloneDatasToAnimator(this), t = 0, e = this._avatarNodes.length; t < e; t++) this._checkAnimationNode(this._avatarNodes[t], this._owner);
        }, s._offGetClipCacheFullKeyframeIndicesEvent = function (t) {
          t.loaded || t.off("loaded", this, this._computeCacheFullKeyframeIndices);
        }, s._computeCacheFullKeyframeIndices = function (t) {
          var e = this._clips[t],
            i = this._cacheFrameRateInterval * this._cachePlayRate,
            n = e._getFullKeyframeIndicesWithCache(i);
          if (n) this._cacheFullFrames[t] = n;
          else {
            n = this._cacheFullFrames[t] = [];
            var r = e._nodes,
              a = r.length;
            n.length = a;
            for (var s = Math.ceil(e._duration / i - 1e-5) + 1, o = 0; o < a; o++) {
              var h = r[o],
                l = new Int32Array(s);
              l.fill(-1);
              for (var u = h.keyFrames, c = 0, _ = u.length; c < _; c++)
                for (var d = u[c], f = d.startTime, p = f + d.duration; f <= p;) {
                  l[Math.ceil(f / i - 1e-5)] = c, f += i;
                }
              n[o] = l;
            }
            e._cacheFullKeyframeIndices(i, n);
          }
        }, s._updateAnimtionPlayer = function () {
          this._updatePlayer(i.timer.delta / 1e3);
        }, s._onOwnerActiveHierarchyChanged = function () {
          this._owner.activeInHierarchy ? (i.timer.frameLoop(1, this, this._updateAnimtionPlayer), this.playOnWake && this.clip && this.play()) : (0 !== this.playState && (this._stoped = !0), i.timer.clear(this, this._updateAnimtionPlayer));
        }, s._eventScript = function (t, e) {
          for (var i = this._currentPlayClip._animationEvents, n = i.length; this._playEventIndex < n; this._playEventIndex++) {
            var r = i[this._playEventIndex],
              a = r.time;
            if (!(t <= a && a < e)) break;
            for (var s = this._owner._scripts, o = 0, h = s.length; o < h; o++) {
              var l = s[o],
                u = l[r.eventName];
              u && u.apply(l, r.params);
            }
          }
        }, s._setPlayParams = function (t, e) {
          var i = this._currentTime;
          this._currentTime = t, this._currentFrameIndex = Math.max(Math.floor(this.currentPlayTime / e - 1e-5), 0), this._currentFrameTime = this._currentFrameIndex * e, this._eventScript(i, t);
        }, s._setPlayParamsWhenStop = function (t, e) {
          var i = this._currentTime;
          this._currentTime = t, this._currentFrameIndex = Math.max(Math.floor(t / e - 1e-5), 0), this._currentFrameTime = this._currentFrameIndex * e, this._eventScript(i, t), this._currentPlayClip = null;
        }, s._revertKeyframeNodes = function (t, e) {
          var i = this._cacheNodesDefaultlValues[e],
            n = t._nodes;
          if (this._avatar)
            for (var r = this._cacheNodesAvatarOwners[e], a = 0, s = r.length; a < s; a++) {
              var o = r[a];
              o && B._propertySetFuncs[n[a].propertyNameID](o, null, i[a]);
            } else {
              var h = this._cacheNodesSpriteOwners[e];
              for (a = 0, s = h.length; a < s; a++) {
                var l = h[a];
                l && B._propertySetFuncs[n[a].propertyNameID](null, l, i[a]);
              }
            }
        }, s._onAnimationStop = function () {
          var t, e, i, n = 0,
            r = 0;
          this._lastFrameIndex = -1;
          var a = this._currentPlayClip._nodes;
          if (this._avatar) {
            var s = this._cacheNodesAvatarOwners[this._currentPlayClipIndex];
            for (n = 0, r = s.length; n < r; n++) {
              var o = s[n];
              i = (e = (t = a[n]).keyFrames)[e.length - 1].data, o && B._propertySetFuncs[t.propertyNameID](o, null, i);
            }
          } else {
            var h = this._cacheNodesSpriteOwners[this._currentPlayClipIndex];
            for (n = 0, r = h.length; n < r; n++) {
              var l = h[n];
              i = (e = (t = a[n]).keyFrames)[e.length - 1].data, l && B._propertySetFuncs[t.propertyNameID](null, l, i);
            }
          }
        }, s._setAnimationClipPropertyToAnimationNode = function (t, e, i) {
          for (var n = 0, r = e.length; n < r; n++) {
            var a = e[n],
              s = t[a];
            if (s) {
              var o = this._currentPlayClip._nodes[a],
                h = i[a];
              h && B._propertySetFuncs[o.propertyNameID](s, null, h);
            }
          }
        }, s._setAnimationClipPropertyToSprite3D = function (t, e) {
          for (var i = 0, n = t.length; i < n; i++) {
            var r = t[i];
            if (r) {
              var a = this._currentPlayClip._nodes[i],
                s = e[i];
              s && B._propertySetFuncs[a.propertyNameID](null, r, s);
            }
          }
        }, s._handleSpriteOwnersBySprite = function (t, e, i, n) {
          var r = this._clips[t],
            a = i.join("/"),
            s = r._nodesMap[a];
          if (s)
            for (var o = this._cacheNodesSpriteOwners[t], h = r._nodes, l = this._cacheNodesDefaultlValues[t], u = 0, c = s.length; u < c; u++) {
              var _ = s[u],
                d = h.indexOf(_);
              if (e) {
                o[d] = n;
                var f = B._propertyGetFuncs[_.propertyNameID](null, n);
                if (f) {
                  var p = l[d];
                  p || (l[d] = p = new Float32Array(_.keyFrameWidth));
                  for (var m = 0, g = f.length; m < g; m++) p[m] = f[m];
                }
              } else o[d] = null;
            }
        }, s._evaluateAvatarNodesCacheMode = function (t, i, n, r, a) {
          i._evaluateAnimationlDatasCacheMode(t, this._cacheFullFrames[this._currentPlayClipIndex], this, n, a), this._setAnimationClipPropertyToAnimationNode(t, a, n);
          for (var s = 0, o = this._avatarNodes.length; s < o; s++) {
            var h = this._avatarNodes[s].transform;
            if (h._worldUpdate) {
              var l = new Float32Array(16);
              r[s] = l, h._setWorldMatrixAndUpdate(l);
            } else {
              var u = h.getWorldMatrix();
              r[s] = u || e.deafaultMatrix;
            }
          }
        }, s._evaluateAvatarNodesRealTime = function (t, i, n, r, a) {
          i._evaluateAnimationlDatasRealTime(t, this.currentPlayTime, n, a), this._setAnimationClipPropertyToAnimationNode(t, a, n);
          for (var s = 0, o = this._avatarNodes.length; s < o; s++) {
            var h = this._avatarNodes[s].transform;
            h._worldUpdate ? h._setWorldMatrixNoUpdate(r[s]) : r[s] = e.deafaultMatrix;
          }
        }, s._updateAvatarNodesToSpriteCacheMode = function (t, i) {
          for (var n = 0, r = this._cacheSpriteToNodesMap.length; n < r; n++) {
            var a = this._cacheSpriteToNodesMap[n],
              s = i[a];
            if (s !== e.deafaultMatrix) {
              var o = this._avatarNodes[a].transform._entity,
                h = o.worldMatrix;
              Ke.matrix4x4MultiplyMFM(this._owner._transform.worldMatrix, s, h), o.worldMatrix = h;
            }
          }
        }, s._updateAvatarNodesToSpriteRealTime = function () {
          for (var t = 0, i = this._cacheSpriteToNodesMap.length; t < i; t++) {
            var n = this._avatarNodes[this._cacheSpriteToNodesMap[t]],
              r = n.transform._entity,
              a = n.transform;
            if (a._worldUpdate) {
              var s = e._tempMatrix4x40;
              a._setWorldMatrixAndUpdate(s);
              var o = r.worldMatrix;
              Ke.matrix4x4MultiplyMFM(this._owner._transform.worldMatrix, s, o), r.worldMatrix = o;
            }
          }
        }, s._updatePlayer = function (t) {
          if (null != this._currentPlayClip && !this._stoped && this._currentPlayClip.loaded) {
            var e = this._cacheFrameRateInterval * this._cachePlayRate,
              i = 0;
            this._startUpdateLoopCount !== D.loopCount && (i = t * this.playbackRate, this._elapsedPlaybackTime += i);
            var n = this._currentPlayClip._frameRate,
              r = this._playStartFrames[this._currentPlayClipIndex] / n,
              a = Math.min(this._playEndFrames[this._currentPlayClipIndex] / n, this._currentPlayClip._duration) - r;
            if (!this._currentPlayClip.islooping && this._elapsedPlaybackTime >= a) return this._onAnimationStop(), this._setPlayParamsWhenStop(a, e), void this.event("stopped");
            if (i += this._currentTime, a > 0)
              if (i >= a)
                do {
                  (i -= a) < a && (this._setPlayParams(i, e), this.event("complete")), this._playEventIndex = 0, this._eventScript(0, i);
                } while (i >= a);
              else this._setPlayParams(i, e);
            else this._currentTime = this._currentFrameTime = this._currentFrameIndex = this._playEventIndex = 0, this.event("complete");
          }
        }, s._update = function (t) {
          var e = this._currentPlayClip;
          if (2 === this.playState && e && e.loaded) {
            var n = this.playbackRate * i.timer.scale,
              r = this._cachePlayRate;
            this._canCache = this.isCache && n >= r;
            var a, s = -1;
            if (this._canCache) {
              if (s = this._currentFrameIndex, this._lastFrameIndex === s) return;
              if (a = e._getAnimationDataWithCache(r, s), this._avatar) {
                var o = this._cacheNodesAvatarOwners[this._currentPlayClipIndex],
                  h = e._cachePropertyMap,
                  l = h.length;
                l > 0 && (a || ((a = []).length = l, e._cacheAnimationData(r, s, a), e._evaluateAnimationlDatasCacheMode(o, this._cacheFullFrames[this._currentPlayClipIndex], this, a, h)), this._setAnimationClipPropertyToAnimationNode(o, h, a)), this._curAvatarNodeDatas = e._getAvatarDataWithCache(this._avatar, this._cachePlayRate, s), this._curAvatarNodeDatas || (this._curAvatarNodeDatas = [], this._curAvatarNodeDatas.length = this._avatarNodes.length, e._cacheAvatarData(this._avatar, this._cachePlayRate, s, this._curAvatarNodeDatas), this._evaluateAvatarNodesCacheMode(o, e, e._publicClipDatas, this._curAvatarNodeDatas, e._unCachePropertyMap)), this._updateAvatarNodesToSpriteCacheMode(e, this._curAvatarNodeDatas);
              } else {
                var u = this._cacheNodesSpriteOwners[this._currentPlayClipIndex];
                a || ((a = []).length = this._currentPlayClip._nodes.length, e._evaluateAnimationlDatasCacheMode(u, this._cacheFullFrames[this._currentPlayClipIndex], this, a, null), e._cacheAnimationData(r, s, a)), this._setAnimationClipPropertyToSprite3D(u, a);
              }
            } else if (a = e._publicClipDatas, this._avatar) {
              if (e._evaluateAnimationlDatasRealTime(this._cacheNodesAvatarOwners[this._currentPlayClipIndex], this.currentPlayTime, a, e._cachePropertyMap), !this._publicAvatarNodeDatas) {
                this._publicAvatarNodeDatas = [];
                var c = this._avatarNodes.length;
                this._publicAvatarNodeDatas.length = c;
                for (var _ = 1; _ < c; _++) this._publicAvatarNodeDatas[_] = new Float32Array(16);
              }
              this._curAvatarNodeDatas = this._publicAvatarNodeDatas, this._evaluateAvatarNodesRealTime(this._cacheNodesAvatarOwners[this._currentPlayClipIndex], e, a, this._curAvatarNodeDatas, e._unCachePropertyMap), this._updateAvatarNodesToSpriteRealTime();
            } else e._evaluateAnimationlDatasRealTime(this._cacheNodesSpriteOwners[this._currentPlayClipIndex], this.currentPlayTime, a, null);
            this._lastFrameIndex = s;
          }
        }, s._checkAnimationNode = function (t, e) {
          t.name !== e.name || e._transform.dummy || e._isLinkSpriteToAnimationNode(this, t, !0);
          for (var i = 0, n = e._childs.length; i < n; i++) this._checkAnimationNode(t, e.getChildAt(i));
        }, s._load = function (t) {
          t.activeInHierarchy && i.timer.frameLoop(1, this, this._updateAnimtionPlayer), this._owner.on("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged);
        }, s._unload = function (e) {
          t.prototype._unload.call(this, e), e.activeInHierarchy && i.timer.clear(this, this._updateAnimtionPlayer), this._owner.off("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged), this._curAvatarNodeDatas = null;
        }, s._destroy = function () {
          t.prototype._destroy.call(this);
          for (var e = 0, i = this._clips.length; e < i; e++) this._clips[e]._removeReference();
          this._currentPlayClip = null, this._clipNames = null, this._cacheNodesSpriteOwners = null, this._cacheNodesAvatarOwners = null, this._cacheNodesDefaultlValues = null, this._clips = null, this._cacheFullFrames = null;
        }, s._cloneTo = function (t) {
          var e = t;
          e.avatar = this.avatar;
          this._clips.length;
          for (var i = 0, n = this._clips.length; i < n; i++) e.addClip(this._clips[i]);
          if (this.clip && (e.clip = this.clip), this._linkSpritesData) {
            e._linkSpritesData = {};
            for (var r in this._linkSpritesData) e._linkSpritesData[r] = this._linkSpritesData[r].slice();
          }
        }, s.addClip = function (t, e, i, n) {
          void 0 === i && (i = 0), void 0 === n && (n = 4294967295), e = e || t.name;
          var r = this._clipNames.indexOf(e);
          if (-1 !== r) {
            if (this._clips[r] !== t) throw new Error("Animation:this playName has exist with another clip.");
          } else {
            var a = this._clips.indexOf(t);
            if (i < 0 || n < 0) throw new Error("Animator:startFrame and endFrame must large than zero.");
            if (i > n) throw new Error("Animator:startFrame must less than endFrame.");
            this._clipNames.push(e), this._clips.push(t), this._playStartFrames.push(i), this._playEndFrames.push(n), this._cacheNodesSpriteOwners.push([]), this._cacheNodesAvatarOwners.push([]), this._cacheNodesDefaultlValues.push([]), this._publicClipsDatas.push([]), t._addReference(), a = this._clips.length - 1, this._avatar ? this._avatar.loaded ? this._getAvatarOwnersByClipAsync(a, t) : this._avatar.once("loaded", this, this._getAvatarOwnersByClipAsync, [a, t]) : this._getSpriteOwnersByClipAsync(a, t), t.loaded ? this._computeCacheFullKeyframeIndices(a) : t.once("loaded", this, this._computeCacheFullKeyframeIndices, [a]);
          }
        }, s.removeClip = function (t) {
          var e = this._clips.indexOf(t); - 1 !== e && (this._avatar ? this._offClipAndAvatarRelateEvent(this._avatar, t) : this._offGetSpriteOwnersByClipAsyncEvent(t), this._offGetClipCacheFullKeyframeIndicesEvent(t), this._clipNames.splice(e, 1), this._clips.splice(e, 1), this._playStartFrames.splice(e, 1), this._playEndFrames.splice(e, 1), this._cacheNodesSpriteOwners.splice(e, 1), this._cacheNodesAvatarOwners.splice(e, 1), this._cacheNodesDefaultlValues.splice(e, 1), this._publicClipsDatas.splice(e, 1), t._removeReference());
        }, s.removeClipByName = function (t) {
          var e = this._clipNames.indexOf(t);
          if (-1 !== e) {
            var i = this._clips[e];
            this._avatar ? this._offClipAndAvatarRelateEvent(this._avatar, i) : this._offGetSpriteOwnersByClipAsyncEvent(i), this._offGetClipCacheFullKeyframeIndicesEvent(i), this._clipNames.splice(e, 1), this._clips.splice(e, 1), this._playStartFrames.splice(e, 1), this._playEndFrames.splice(e, 1), this._cacheNodesSpriteOwners.splice(e, 1), this._cacheNodesAvatarOwners.splice(e, 1), this._cacheNodesDefaultlValues.splice(e, 1), this._publicClipsDatas.splice(e, 1);
          }
        }, s.getClip = function (t) {
          var e = this._clipNames.indexOf(t);
          return -1 !== e ? this._clips[e] : null;
        }, s.getClipCount = function () {
          return this._clips.length;
        }, s.play = function (t, e) {
          if (void 0 === e && (e = 1), !t && -1 == this._defaultClipIndex) throw new Error("Animator:must have  default clip value,please set clip property.");
          t ? (this._currentPlayClipIndex = this._clipNames.indexOf(t), this._currentPlayClip = this._clips[this._currentPlayClipIndex]) : (this._currentPlayClipIndex = this._defaultClipIndex, this._currentPlayClip = this._clips[this._defaultClipIndex]), this._currentTime = 0, this._currentFrameTime = 0, this._elapsedPlaybackTime = 0, this._playEventIndex = 0, this.playbackRate = e, this._stoped = !1, this._currentFrameIndex = 0, this._startUpdateLoopCount = D.loopCount, this._lastPlayAnimationClip && this._lastPlayAnimationClip !== this._currentPlayClip && this._revertKeyframeNodes(this._lastPlayAnimationClip, this._lastPlayAnimationClipIndex), this._updatePlayer(0), this._lastPlayAnimationClip = this._currentPlayClip, this._lastPlayAnimationClipIndex = this._currentPlayClipIndex;
        }, s.stop = function () {
          0 !== this.playState && (this._stoped = !0, this.event("stopped"));
        }, s._getLinkSpritePath = function (t, e) {
          e.unshift(t.name);
          var i = t._parent;
          i._hierarchyAnimator === this ? this._getLinkSpritePath(i, e) : e.shift();
        }, s.linkSprite3DToAvatarNode = function (t, e) {
          if (e._hierarchyAnimator === this) {
            if (this._avatar) {
              var i = this._avatarNodeMap[t];
              if (i) {
                this._linkSpritesData = this._linkSpritesData || {};
                var n = [];
                return this._getLinkSpritePath(e, n), this._linkSpritesData[t] = n, e._isLinkSpriteToAnimationNode(this, i, !0), !0;
              }
              return !1;
            }
            return !1;
          }
          throw "Animator:sprite3D must belong to this Animator";
        }, s.unLinkSprite3DToAvatarNode = function (t) {
          if (this._avatar) {
            var e = t.transform.dummy;
            if (e) {
              var i = this._avatarNodeMap[e._owner.name];
              return t._isLinkSpriteToAnimationNode(this, i, !1), !0;
            }
            return !1;
          }
          return !1;
        }, a(0, s, "playState", function () {
          return null == this._currentPlayClip ? 0 : this._stoped ? 0 : 2;
        }), a(0, s, "avatar", function () {
          return this._avatar;
        }, function (t) {
          if (this._avatar !== t) {
            var e = this._avatar;
            this._avatar = t;
            for (var i = this._clips.length, n = 0; n < i; n++) this._offClipAndAvatarRelateEvent(e, this._clips[n]);
            t && (t.loaded ? this._getAvatarOwnersAndInitDatasAsync() : t.once("loaded", this, this._getAvatarOwnersAndInitDatasAsync));
          }
        }), a(0, s, "cacheFrameRate", function () {
          return this._cacheFrameRate;
        }, function (t) {
          if (this._cacheFrameRate !== t) {
            this._cacheFrameRate = t, this._cacheFrameRateInterval = 1 / this._cacheFrameRate;
            for (var e = 0, i = this._clips.length; e < i; e++) this._clips[e].loaded && this._computeCacheFullKeyframeIndices(e);
          }
        }), a(0, s, "clip", function () {
          return this._clips[this._defaultClipIndex];
        }, function (t) {
          var e = t ? this._clips.indexOf(t) : -1;
          this._defaultClipIndex !== e && (-1 !== this._defaultClipIndex && this.removeClip(this._clips[this._defaultClipIndex]), -1 !== e && this.addClip(t, t.name), this._defaultClipIndex = e);
        }), a(0, s, "currentFrameIndex", function () {
          return this._currentFrameIndex;
        }), a(0, s, "cachePlayRate", function () {
          return this._cachePlayRate;
        }, function (t) {
          if (this._cachePlayRate !== t) {
            this._cachePlayRate = t;
            for (var e = 0, i = this._clips.length; e < i; e++) this._clips[e].loaded && this._computeCacheFullKeyframeIndices(e);
          }
        }), a(0, s, "currentFrameTime", function () {
          return this._currentFrameTime;
        }), a(0, s, "currentPlayClip", function () {
          return this._currentPlayClip;
        }), a(0, s, "currentPlayTime", function () {
          return this._currentTime + this._playStartFrames[this._currentPlayClipIndex] / this._currentPlayClip._frameRate;
        }), a(0, s, "playbackTime", null, function (t) {
          if (null != this._currentPlayClip && this._currentPlayClip && this._currentPlayClip.loaded) {
            this._startUpdateLoopCount = D.loopCount;
            var e = this._cacheFrameRateInterval * this._cachePlayRate;
            this._currentTime = t, this._currentFrameIndex = Math.floor(this.currentPlayTime / e), this._currentFrameTime = this._currentFrameIndex * e;
          }
        }), a(0, s, "paused", function () {
          return this._stoped;
        }, function (t) {
          this._stoped = t, t && this.event("paused");
        }), n(e, ["deafaultMatrix", function () {
          return this.deafaultMatrix = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
        }, "_tempMatrix4x40", function () {
          return this._tempMatrix4x40 = new Float32Array(16);
        }]), e;
      }(Je),
      wi = (function (t) {
        function e() {
          this._attachSkeleton = null, this._extenData = null, this.attachBones = null, this.matrixs = null, e.__super.call(this), this.attachBones = [], this.matrixs = [];
        }
        r(e, "laya.d3.component.AttachPoint", t);
        var i = e.prototype;
        i._load = function (e) {
          t.prototype._load.call(this, e), this._attachSkeleton = e.getComponentByType(Zi);
        }, i._update = function (t) {
          if (this._attachSkeleton && !this._attachSkeleton.destroyed && 0 !== this._attachSkeleton.player.state && this._attachSkeleton.curBonesDatas) {
            var e = this._attachSkeleton.player,
              i = this._attachSkeleton.templet;
            this.matrixs.length = this.attachBones.length;
            for (var n = this._attachSkeleton.curBonesDatas, r = this.owner.transform.worldMatrix, a = 0, s = this.attachBones.length; a < s; a++) {
              var o = 16 * i.getNodeIndexWithName(e.currentAnimationClipIndex, this.attachBones[a]),
                h = this.matrixs[a];
              h || (h = this.matrixs[a] = new Ce());
              for (var l = h.elements, u = 0; u < 16; u++) l[u] = n[o + u];
              Ce.multiply(r, h, h);
            }
            this.event("complete");
          }
        };
      }(Je), function (t) {
        function e() {
          e.__super.call(this), this._isRigidbody = !1, this._runtimeCollisonMap = {}, this._runtimeCollisonTestMap = {}, this._ignoreCollisonMap = {}, this.isTrigger = !0;
        }
        r(e, "laya.d3.component.physics.Collider", t);
        var i = e.prototype;
        return i._clearCollsionMap = function () {
          for (var t in this._runtimeCollisonMap) {
            var e = this._runtimeCollisonMap[t];
            delete e._runtimeCollisonMap[this.id], e._isRigidbody && delete e._runtimeCollisonTestMap[this.id];
            var i = e.id;
            delete this._runtimeCollisonMap[i], this._isRigidbody && delete this._runtimeCollisonTestMap[i];
          }
        }, i._unload = function (t) {
          for (var e in this._runtimeCollisonMap) {
            var i = this._runtimeCollisonMap[e];
            delete i._runtimeCollisonMap[this.id], i._isRigidbody && delete i._runtimeCollisonTestMap[this.id], delete this._ignoreCollisonMap[e]._ignoreCollisonMap[this.id];
          }
        }, i._setIsRigidbody = function (t) {
          if (this._isRigidbody !== t) {
            this._isRigidbody = t;
            var e = this._owner;
            if (e.displayedInStage) {
              var i = e.layer;
              i._removeCollider(this), i._addCollider(this);
            }
          }
        }, i._getType = function () {
          return -1;
        }, i._collisonTo = function (t) {
          return !1;
        }, i.raycast = function (t, e, i) {
          throw void 0 === i && (i = 1.79e308), new Error("Collider:Must override it.");
        }, a(0, i, "enable", t.prototype._$get_enable, function (t) {
          if (this._enable !== t) {
            this._owner.displayedInStage && (t || this._clearCollsionMap()), this._enable = t, this.event("enablechanged", this._enable);
          }
        }), a(0, i, "isSingleton", function () {
          return e._isSingleton;
        }), e._isSingleton = !1, e;
      }(Je)),
      Ei = function (t) {
        function e() {
          e.__super.call(this);
        }
        r(e, "laya.d3.component.Rigidbody", t);
        return a(0, e.prototype, "enable", t.prototype._$get_enable, function (t) {
          if (this._enable !== t) {
            for (var e = this._owner._colliders, i = 0, n = e.length; i < n; i++) {
              var r = e[i];
              r._setIsRigidbody(t);
              var a = r._runtimeCollisonMap,
                s = r._runtimeCollisonTestMap;
              if (!t)
                for (var o in a) delete s[o];
            }
            this._enable = t, this.event("enablechanged", this._enable);
          }
        }), e;
      }(Je),
      bi = (function (t) {
        function e() {
          e.__super.call(this);
        }
        r(e, "laya.d3.component.Script", Je);
        var i = e.prototype;
        i.onTriggerEnter = function (t) {}, i.onTriggerExit = function (t) {}, i.onTriggerStay = function (t) {}, a(0, i, "isSingleton", function () {
          return e._isSingleton;
        }), e._isSingleton = !1;
      }(), function (t) {
        function e(t) {
          e.__super.call(this, t);
        }
        r(e, "laya.d3.core.GlitterRender", ei);
        var i = e.prototype;
        return i._calculateBoundingBox = function () {
          var t = this._boundingBox.min.elements;
          t[0] = -Number.MAX_VALUE, t[1] = -Number.MAX_VALUE, t[2] = -Number.MAX_VALUE;
          var e = this._boundingBox.min.elements;
          e[0] = Number.MAX_VALUE, e[1] = Number.MAX_VALUE, e[2] = Number.MAX_VALUE;
        }, i._calculateBoundingSphere = function () {
          var t = this._boundingSphere.center.elements;
          t[0] = 0, t[1] = 0, t[2] = 0, this._boundingSphere.radius = Number.MAX_VALUE;
        }, i._renderUpdate = function (t) {
          this._setShaderValueMatrix4x4(0, this._owner.transform.worldMatrix);
          var e = this._owner.getProjectionViewWorldMatrix(t);
          this._setShaderValueMatrix4x4(1, e);
          var i = this._owner.templet;
          return this._setShaderValueNumber(3, i.lifeTime), this._setShaderValueNumber(2, i._currentTime), !0;
        }, e;
      }()),
      Ci = function (t) {
        function e(t) {
          this._owner = null, this._sharedMesh = null, e.__super.call(this), this._owner = t;
        }
        r(e, "laya.d3.core.MeshFilter", t);
        var i = e.prototype;
        return i._sharedMeshLoaded = function () {
          this.event("loaded");
        }, i._destroy = function () {
          t.prototype._destroy.call(this), this._owner = null, this._sharedMesh && (this._sharedMesh._removeReference(), this._sharedMesh = null);
        }, a(0, i, "sharedMesh", function () {
          return this._sharedMesh;
        }, function (t) {
          var e = this._sharedMesh;
          e && e._removeReference(), this._sharedMesh = t, t._addReference(), this.event("meshchanged", [this, e, t]), t.loaded || this._sharedMesh.once("loaded", this, this._sharedMeshLoaded);
        }), a(0, i, "_isAsyncLoaded", function () {
          return this._sharedMesh.loaded;
        }), a(0, i, "_originalBoundingBoxCorners", function () {
          return this._sharedMesh.boundingBoxCorners;
        }), a(0, i, "_originalBoundingSphere", function () {
          return this._sharedMesh.boundingSphere;
        }), a(0, i, "_originalBoundingBox", function () {
          return this._sharedMesh.boundingBox;
        }), e;
      }(ti),
      Mi = function (t) {
        function e(t) {
          e.__super.call(this, t), t.meshFilter.on("meshchanged", this, this._onMeshChanged);
        }
        r(e, "laya.d3.core.MeshRender", ei);
        var i = e.prototype;
        return i._onMeshChanged = function (t, e, i) {
          i.loaded ? this._boundingSphereNeedChange = this._boundingBoxNeedChange = this._boundingBoxCenterNeedChange = this._octreeNodeNeedChange = !0 : i.once("loaded", this, this._onMeshLoaed);
        }, i._onMeshLoaed = function (t, e) {
          this._boundingSphereNeedChange = this._boundingBoxNeedChange = this._boundingBoxCenterNeedChange = this._octreeNodeNeedChange = !0;
        }, i._calculateBoundingSphereByInitSphere = function (t) {
          var e = NaN,
            i = this._owner.transform,
            n = i.scale.elements,
            r = Math.abs(n[0]),
            a = Math.abs(n[1]),
            s = Math.abs(n[2]);
          e = r >= a && r >= s ? r : a >= s ? a : s, Le.transformCoordinate(t.center, i.worldMatrix, this._boundingSphere.center), this._boundingSphere.radius = t.radius * e;
        }, i._calculateBoundBoxByInitCorners = function (t) {
          for (var e = this._owner.transform.worldMatrix, i = 0; i < 8; i++) Le.transformCoordinate(t[i], e, ei._tempBoundBoxCorners[i]);
          xe.createfromPoints(ei._tempBoundBoxCorners, this._boundingBox);
        }, i._calculateBoundingSphere = function () {
          var t = this._owner.meshFilter.sharedMesh;
          null == t || null == t.boundingSphere ? this._boundingSphere.toDefault() : this._calculateBoundingSphereByInitSphere(t.boundingSphere);
        }, i._calculateBoundingBox = function () {
          var t = this._owner.meshFilter.sharedMesh;
          null == t || null == t.boundingBox ? this._boundingBox.toDefault() : this._calculateBoundBoxByInitCorners(t.boundingBoxCorners);
        }, i._renderUpdate = function (t) {
          var e = this._owner.transform;
          if (e) {
            this._setShaderValueMatrix4x4(0, e.worldMatrix);
            var i = this._owner.getProjectionViewWorldMatrix(t);
            this._setShaderValueMatrix4x4(1, i);
          } else this._setShaderValueMatrix4x4(0, Ce.DEFAULT), this._setShaderValueMatrix4x4(1, t);
          return Ze.debugMode && this._renderRenderableBoundBox(), !0;
        }, e;
      }(),
      Ii = function (t) {
        function e(t) {
          e.__super.call(this), this._tempRotationMatrix = new Ce(), this._uvLength = new Pe(), this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._owner = t, this._ownerRender = t.particleRender, this._boundingBoxCorners = s(8, null), this._boundingSphere = new Se(new Le(), Number.MAX_VALUE), this._boundingBox = new xe(new Le(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE), new Le(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE)), this._currentTime = 0, this._isEmitting = !1, this._isPlaying = !1, this._isPaused = !1, this._burstsIndex = 0, this._frameRateTime = 0, this._emissionTime = 0, this._totalDelayTime = 0, this._simulateUpdate = !1, this._bufferMaxParticles = 1, this.duration = 5, this.looping = !0, this.prewarm = !1, this.startDelayType = 0, this.startDelay = 0, this.startDelayMin = 0, this.startDelayMax = 0, this._startLifetimeType = 0, this._startLifetimeConstant = 5, this._startLifeTimeGradient = new $(), this._startLifetimeConstantMin = 0, this._startLifetimeConstantMax = 5, this._startLifeTimeGradientMin = new $(), this._startLifeTimeGradientMax = new $(), this._maxStartLifetime = 5, this.startSpeedType = 0, this.startSpeedConstant = 5, this.startSpeedConstantMin = 0, this.startSpeedConstantMax = 5, this.threeDStartSize = !1, this.startSizeType = 0, this.startSizeConstant = 1, this.startSizeConstantSeparate = new Le(1, 1, 1), this.startSizeConstantMin = 0, this.startSizeConstantMax = 1, this.startSizeConstantMinSeparate = new Le(0, 0, 0), this.startSizeConstantMaxSeparate = new Le(1, 1, 1), this.threeDStartRotation = !1, this.startRotationType = 0, this.startRotationConstant = 0, this.startRotationConstantSeparate = new Le(0, 0, 0), this.startRotationConstantMin = 0, this.startRotationConstantMax = 0, this.startRotationConstantMinSeparate = new Le(0, 0, 0), this.startRotationConstantMaxSeparate = new Le(0, 0, 0), this.randomizeRotationDirection = 0, this.startColorType = 0, this.startColorConstant = new Oe(1, 1, 1, 1), this.startColorConstantMin = new Oe(1, 1, 1, 1), this.startColorConstantMax = new Oe(1, 1, 1, 1), this.gravityModifier = 0, this.simulationSpace = 1, this.scaleMode = 0, this.playOnAwake = !0, this._rand = new Ae(0), this.autoRandomSeed = !0, this.randomSeed = new Uint32Array(1), this._randomSeeds = new Uint32Array(e._RANDOMOFFSET.length), this.isPerformanceMode = !0, this._emission = new X(), this._emission.enbale = !0, this._owner.on("activeinhierarchychanged", this, this._onOwnerActiveHierarchyChanged);
        }
        r(e, "laya.d3.core.particleShuriKen.ShurikenParticleSystem", t);
        var o = e.prototype;
        return i.imps(o, {
          "laya.d3.core.render.IRenderable": !0,
          "laya.d3.core.IClone": !0
        }), o._getVertexBuffer = function (t) {
          return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
        }, o._getIndexBuffer = function () {
          return this._indexBuffer;
        }, o._generateBoundingSphere = function () {
          var t = this._boundingSphere.center.elements;
          t[0] = 0, t[1] = 0, t[2] = 0, this._boundingSphere.radius = Number.MAX_VALUE;
        }, o._generateBoundingBox = function () {
          var t = this._owner.particleRender,
            i = this._boundingBox.min,
            n = this._boundingBox.max,
            r = 0,
            a = 0,
            s = NaN;
          switch (this.startLifetimeType) {
            case 0:
              s = this.startLifetimeConstant;
              break;
            case 1:
              s = -Number.MAX_VALUE;
              var o = o;
              for (r = 0, a = o.gradientCount; r < a; r++) s = Math.max(s, o.getValueByIndex(r));
              break;
            case 2:
              s = Math.max(this.startLifetimeConstantMin, this.startLifetimeConstantMax);
              break;
            case 3:
              s = -Number.MAX_VALUE;
              var h = h;
              for (r = 0, a = h.gradientCount; r < a; r++) s = Math.max(s, h.getValueByIndex(r));
              var l = l;
              for (r = 0, a = l.gradientCount; r < a; r++) s = Math.max(s, l.getValueByIndex(r));
          }
          var u = NaN,
            c = NaN;
          switch (this.startSpeedType) {
            case 0:
              u = c = this.startSpeedConstant;
              break;
            case 1:
              break;
            case 2:
              u = this.startLifetimeConstantMin, c = this.startLifetimeConstantMax;
          }
          var _, d, f, p;
          this._shape && this._shape.enable || (_ = d = Le.ZERO, f = Le.ZERO, p = Le.UnitZ);
          var m = new Le(f.x * u, f.y * u, f.z * u),
            g = new Le(p.x * c, p.y * c, p.z * c);
          if (this._velocityOverLifetime && this._velocityOverLifetime.enbale) {
            var v = this._velocityOverLifetime.velocity;
            switch (v.type) {
              case 0:
                v.constant;
                break;
              case 1:
                new Le(v.gradientX.getAverageValue(), v.gradientY.getAverageValue(), v.gradientZ.getAverageValue());
                break;
              case 2:
                v.constantMin, v.constantMax;
                break;
              case 3:
                new Le(v.gradientXMin.getAverageValue(), v.gradientYMin.getAverageValue(), v.gradientZMin.getAverageValue()), new Le(v.gradientXMax.getAverageValue(), v.gradientYMax.getAverageValue(), v.gradientZMax.getAverageValue());
            }
          }
          var y, x, T = this._owner.transform,
            S = T.position,
            w = e._tempVector39,
            E = w.elements,
            b = t.renderMode;
          switch (this.scaleMode) {
            case 0:
              var C = T.scale;
              y = C, E[0] = C.x, E[1] = C.z, E[2] = C.y, 1 === b && (x = C);
              break;
            case 1:
              var M = T.localScale;
              y = M, E[0] = M.x, E[1] = M.z, E[2] = M.y, 1 === b && (x = M);
              break;
            case 2:
              y = T.scale, E[0] = E[1] = E[2] = 1, 1 === b && (x = Le.ONE);
          }
          var I, D;
          switch (this._velocityOverLifetime && this._velocityOverLifetime.enbale || (I = new Le(m.x * s, m.y * s, m.z * s), D = new Le(g.x * s, g.y * s, g.z * s), 2 != this.scaleMode ? (Le.add(_, I, i), Le.multiply(y, i, i), Le.add(d, D, n), Le.multiply(y, n, n)) : (Le.multiply(y, _, i), Le.add(i, I, i), Le.multiply(y, d, n), Le.add(n, D, n))), this.simulationSpace) {
            case 0:
              break;
            case 1:
              Le.add(i, S, i), Le.add(n, S, n);
          }
          var A = NaN,
            R = NaN;
          switch (this.startSizeType) {
            case 0:
              if (this.threeDStartSize) {
                var P = P;
                A = Math.max(P.x, P.y), 1 === b && (R = P.y);
              } else A = this.startSizeConstant, 1 === b && (R = this.startSizeConstant);
              break;
            case 1:
              break;
            case 2:
              if (this.threeDStartSize) {
                var L = L;
                A = Math.max(L.x, L.y), 1 === b && (R = L.y);
              } else A = this.startSizeConstantMax, 1 === b && (R = this.startSizeConstantMax);
          }
          if (this._sizeOverLifetime && this._sizeOverLifetime.enbale) {
            this._sizeOverLifetime.size;
            A *= this._sizeOverLifetime.size.getMaxSizeInGradient();
          }
          var O = e._tempVector30,
            N = O.elements,
            V = NaN,
            F = NaN;
          switch (b) {
            case 0:
              V = A * e.halfKSqrtOf2, Le.scale(w, A, O), Le.subtract(i, O, i), Le.add(n, O, n);
              break;
            case 1:
              var B = e._tempVector31,
                U = e._tempVector32,
                k = e._tempVector33,
                G = e._tempVector34;
              this._velocityOverLifetime && this._velocityOverLifetime.enbale || (Le.multiply(x, g, U), Le.multiply(x, m, k));
              var H = R * t.stretchedBillboardLengthScale,
                z = Le.scalarLength(U) * t.stretchedBillboardSpeedScale + H,
                W = Le.scalarLength(k) * t.stretchedBillboardSpeedScale + H,
                j = e._tempVector35,
                X = e._tempVector36;
              Le.normalize(U, j), Le.scale(j, z, G), Le.subtract(D, G, G), Le.normalize(k, X), Le.scale(X, W, B), Le.add(I, B, B), V = A * e.halfKSqrtOf2, Le.scale(w, V, O);
              var Y = e._tempVector37,
                q = e._tempVector38;
              Le.scale(j, .5, Y), Le.scale(X, .5, q), Le.multiply(Y, w, Y), Le.multiply(q, w, q), Le.add(i, q, i), Le.min(i, G, i), Le.subtract(i, O, i), Le.subtract(n, Y, n), Le.max(n, B, n), Le.add(n, O, n);
              break;
            case 2:
              F = .5 * (A *= Math.cos(.7853981633974483)), N[0] = w.x * F, N[1] = w.z * F, Le.subtract(i, O, i), Le.add(n, O, n);
              break;
            case 3:
              F = .5 * (A *= Math.cos(.7853981633974483)), Le.scale(w, F, O), Le.subtract(i, O, i), Le.add(n, O, n);
          }
          this._boundingBox.getCorners(this._boundingBoxCorners);
        }, o._updateEmission = function () {
          if (i.stage.isVisibility && this.isAlive)
            if (this._simulateUpdate) this._simulateUpdate = !1;
            else {
              var t = this._startUpdateLoopCount === D.loopCount || this._isPaused ? 0 : i.timer.delta / 1e3;
              t = Math.min(e._maxElapsedTime, t), this._updateParticles(t);
            }
        }, o._updateParticles = function (t) {
          (4 !== this._ownerRender.renderMode || this._ownerRender.mesh) && (this._currentTime += t, this._retireActiveParticles(), this._freeRetiredParticles(), this._totalDelayTime += t, this._totalDelayTime < this._playStartDelay || this._emission.enbale && this._isEmitting && !this._isPaused && this._advanceTime(t, this._currentTime));
        }, o._updateParticlesSimulationRestart = function (t) {
          this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._burstsIndex = 0, this._frameRateTime = t, this._emissionTime = 0, this._totalDelayTime = 0, this._currentTime = t;
          var e = t;
          e < this._playStartDelay ? this._totalDelayTime = e : this._emission.enbale && this._advanceTime(t, t);
        }, o._addUpdateEmissionToTimer = function () {
          i.timer.frameLoop(1, this, this._updateEmission);
        }, o._removeUpdateEmissionToTimer = function () {
          i.timer.clear(this, this._updateEmission);
        }, o._onOwnerActiveHierarchyChanged = function (t) {
          this._owner.displayedInStage && (t ? this._addUpdateEmissionToTimer() : this._removeUpdateEmissionToTimer());
        }, o._retireActiveParticles = function () {
          for (; this._firstActiveElement != this._firstNewElement;) {
            var t = this._firstActiveElement * this._floatCountPerVertex * this._vertexStride,
              e = t + this._timeIndex;
            if (this._currentTime - this._vertices[e] + 1e-4 < this._vertices[t + this._startLifeTimeIndex]) break;
            this._vertices[e] = this._drawCounter, this._firstActiveElement++, this._firstActiveElement >= this._bufferMaxParticles && (this._firstActiveElement = 0);
          }
        }, o._freeRetiredParticles = function () {
          for (; this._firstRetiredElement != this._firstActiveElement;) {
            var t = this._drawCounter - this._vertices[this._firstRetiredElement * this._floatCountPerVertex * this._vertexStride + this._timeIndex];
            if (this.isPerformanceMode && t < 3) break;
            this._firstRetiredElement++, this._firstRetiredElement >= this._bufferMaxParticles && (this._firstRetiredElement = 0);
          }
        }, o._burst = function (t, e) {
          for (var i = 0, n = this._emission._bursts, r = n.length; this._burstsIndex < r; this._burstsIndex++) {
            var a = n[this._burstsIndex],
              s = a.time;
            if (!(t <= s && s < e)) break;
            var o = 0;
            this.autoRandomSeed ? o = T.lerp(a.minCount, a.maxCount, Math.random()) : (this._rand.seed = this._randomSeeds[0], o = T.lerp(a.minCount, a.maxCount, this._rand.getFloat()), this._randomSeeds[0] = this._rand.seed), i += o;
          }
          return i;
        }, o._advanceTime = function (t, e) {
          var i = 0,
            n = this._emissionTime;
          this._emissionTime += t;
          var r = 0;
          if (this._emissionTime > this.duration) {
            if (!this.looping) {
              for (r = Math.min(this.maxParticles - this.aliveParticleCount, r), i = 0; i < r; i++) this.emit(e);
              return this._isPlaying = !1, void this.stop();
            }
            r += this._burst(n, this._emissionTime), this._emissionTime -= this.duration, this.event("complete"), this._burstsIndex = 0, r += this._burst(0, this._emissionTime);
          } else r += this._burst(n, this._emissionTime);
          for (r = Math.min(this.maxParticles - this.aliveParticleCount, r), i = 0; i < r; i++) this.emit(e);
          var a = this.emission.emissionRate;
          if (a > 0) {
            var s = 1 / a;
            for (this._frameRateTime += s, this._frameRateTime = this._currentTime - (this._currentTime - this._frameRateTime) % this._maxStartLifetime; this._frameRateTime <= e && this.emit(this._frameRateTime);) this._frameRateTime += s;
            this._frameRateTime = Math.floor(e / s) * s;
          }
        }, o._initBufferDatas = function () {
          this._vertexBuffer && (this._vertexBuffer.destroy(), this._indexBuffer.destroy());
          var t = this._ownerRender,
            e = t.renderMode;
          if (-1 !== e && this.maxParticles > 0) {
            var i, n, r = 0,
              a = 0,
              s = 0,
              o = 0,
              h = 0,
              l = t.mesh;
            if (4 === e) {
              if (l) {
                if (l._vertexBuffers.length > 1) throw new Error("ShurikenParticleSystem: submesh Count mesh be One or all subMeshes have the same vertexDeclaration.");
                n = pe.vertexDeclaration, this._floatCountPerVertex = n.vertexStride / 4, this._startLifeTimeIndex = 12, this._timeIndex = 16, this._vertexStride = l._vertexBuffers[0].vertexCount;
                var u = this._bufferMaxParticles * this._vertexStride,
                  c = u % 65535;
                if (Math.floor(u / 65535) + 1 > 1) throw new Error("ShurikenParticleSystem:the maxParticleCount multiply mesh vertexCount is large than 65535.");
                this._vertexBuffer = qi.create(n, c, 35048), this._vertices = new Float32Array(this._floatCountPerVertex * c), this._indexStride = l._indexBuffer.indexCount;
                var _ = l._indexBuffer.getData(),
                  d = this._bufferMaxParticles * this._indexStride;
                for (this._indexBuffer = Yi.create("ushort", d, 35044), i = new Uint16Array(d), o = 0, r = 0; r < this._bufferMaxParticles; r++) {
                  var f = r * this._vertexStride;
                  for (a = 0, s = _.length; a < s; a++) i[o++] = f + _[a];
                }
                this._indexBuffer.setData(i);
              }
            } else {
              for (n = fe.vertexDeclaration, this._floatCountPerVertex = n.vertexStride / 4, this._startLifeTimeIndex = 7, this._timeIndex = 11, this._vertexStride = 4, this._vertexBuffer = qi.create(n, this._bufferMaxParticles * this._vertexStride, 35048), this._vertices = new Float32Array(this._floatCountPerVertex * this._bufferMaxParticles * this._vertexStride), r = 0; r < this._bufferMaxParticles; r++) h = r * this._floatCountPerVertex * this._vertexStride, this._vertices[h] = -.5, this._vertices[h + 1] = -.5, this._vertices[h + 2] = 0, this._vertices[h + 3] = 1, h += this._floatCountPerVertex, this._vertices[h] = .5, this._vertices[h + 1] = -.5, this._vertices[h + 2] = 1, this._vertices[h + 3] = 1, h += this._floatCountPerVertex, this._vertices[h] = .5, this._vertices[h + 1] = .5, this._vertices[h + 2] = 1, this._vertices[h + 3] = 0, h += this._floatCountPerVertex, this._vertices[h] = -.5, this._vertices[h + 1] = .5, this._vertices[h + 2] = 0, this._vertices[h + 3] = 0;
              for (this._indexStride = 6, this._indexBuffer = Yi.create("ushort", 6 * this._bufferMaxParticles, 35044), i = new Uint16Array(6 * this._bufferMaxParticles), r = 0; r < this._bufferMaxParticles; r++) {
                o = 6 * r;
                var p = r * this._vertexStride,
                  m = p + 2;
                i[o++] = p, i[o++] = m, i[o++] = p + 1, i[o++] = p, i[o++] = p + 3, i[o++] = m;
              }
              this._indexBuffer.setData(i);
            }
          }
        }, o._destroy = function () {
          t.prototype._destroy.call(this), this._owner.activeInHierarchy && this._removeUpdateEmissionToTimer(), this._vertexBuffer.destroy(), this._indexBuffer.destroy(), this._emission._destroy(), this._owner = null, this._vertices = null, this._vertexBuffer = null, this._indexBuffer = null, this._emission = null, this._shape = null, this.startLifeTimeGradient = null, this.startLifeTimeGradientMin = null, this.startLifeTimeGradientMax = null, this.startSizeConstantSeparate = null, this.startSizeConstantMinSeparate = null, this.startSizeConstantMaxSeparate = null, this.startRotationConstantSeparate = null, this.startRotationConstantMinSeparate = null, this.startRotationConstantMaxSeparate = null, this.startColorConstant = null, this.startColorConstantMin = null, this.startColorConstantMax = null, this._velocityOverLifetime = null, this._colorOverLifetime = null, this._sizeOverLifetime = null, this._rotationOverLifetime = null, this._textureSheetAnimation = null;
        }, o.emit = function (t) {
          var i = e._tempPosition,
            n = e._tempDirection;
          if (this._shape && this._shape.enable) this.autoRandomSeed ? this._shape.generatePositionAndDirection(i, n) : this._shape.generatePositionAndDirection(i, n, this._rand, this._randomSeeds);
          else {
            var r = i.elements,
              a = n.elements;
            r[0] = r[1] = r[2] = 0, a[0] = a[1] = 0, a[2] = 1;
          }
          return this.addParticle(i, n, t);
        }, o.addParticle = function (t, e, i) {
          Le.normalize(e, e);
          var n = this._firstFreeElement + 1;
          if (n >= this._bufferMaxParticles && (n = 0), n === this._firstRetiredElement) return !1;
          ht.create(this, this._ownerRender, this._owner.transform);
          if (this._currentTime - i >= ht.startLifeTime) return !0;
          var r = NaN,
            a = NaN,
            s = NaN,
            o = NaN,
            h = NaN,
            l = NaN,
            u = NaN,
            c = this._velocityOverLifetime && this._velocityOverLifetime.enbale;
          if (c) {
            var _ = this._velocityOverLifetime.velocity.type;
            2 === _ || 3 === _ ? this.autoRandomSeed ? (r = Math.random(), a = Math.random(), s = Math.random()) : (this._rand.seed = this._randomSeeds[9], r = this._rand.getFloat(), a = this._rand.getFloat(), s = this._rand.getFloat(), this._randomSeeds[9] = this._rand.seed) : c = !1;
          } else c = !1;
          var d = this._colorOverLifetime && this._colorOverLifetime.enbale;
          if (d) {
            3 === this._colorOverLifetime.color.type ? this.autoRandomSeed ? o = Math.random() : (this._rand.seed = this._randomSeeds[10], o = this._rand.getFloat(), this._randomSeeds[10] = this._rand.seed) : d = !1;
          } else d = !1;
          var f = this._sizeOverLifetime && this._sizeOverLifetime.enbale;
          if (f) {
            3 === this._sizeOverLifetime.size.type ? this.autoRandomSeed ? h = Math.random() : (this._rand.seed = this._randomSeeds[11], h = this._rand.getFloat(), this._randomSeeds[11] = this._rand.seed) : f = !1;
          } else f = !1;
          var p = this._rotationOverLifetime && this._rotationOverLifetime.enbale;
          if (p) {
            var m = this._rotationOverLifetime.angularVelocity.type;
            2 === m || 3 === m ? this.autoRandomSeed ? l = Math.random() : (this._rand.seed = this._randomSeeds[12], l = this._rand.getFloat(), this._randomSeeds[12] = this._rand.seed) : p = !1;
          } else p = !1;
          var g = this._textureSheetAnimation && this._textureSheetAnimation.enable;
          if (g) {
            3 === this._textureSheetAnimation.frame.type ? this.autoRandomSeed ? u = Math.random() : (this._rand.seed = this._randomSeeds[15], u = this._rand.getFloat(), this._randomSeeds[15] = this._rand.seed) : g = !1;
          } else g = !1;
          var v, y = this._firstFreeElement * this._floatCountPerVertex * this._vertexStride,
            x = ht.startUVInfo[0],
            T = ht.startUVInfo[1],
            S = ht.startUVInfo[2],
            w = ht.startUVInfo[3],
            E = t.elements,
            b = e.elements,
            C = 0,
            M = 0,
            I = 0,
            D = 0,
            A = 0,
            R = this._ownerRender;
          if (4 === R.renderMode) {
            var P = R.mesh._vertexBuffers[0];
            v = P.getData();
            var L = P.vertexDeclaration;
            M = L.getVertexElementByUsage(0).offset / 4;
            var O = L.getVertexElementByUsage(1);
            I = O ? O.offset / 4 : -1;
            var N = L.getVertexElementByUsage(2);
            D = N ? N.offset / 4 : -1, C = L.vertexStride / 4, A = 0;
          } else {
            this._vertices[y + 2] = S, this._vertices[y + 3] = w + T;
            var V = y + this._floatCountPerVertex;
            this._vertices[V + 2] = S + x, this._vertices[V + 3] = w + T;
            var F = V + this._floatCountPerVertex;
            this._vertices[F + 2] = S + x, this._vertices[F + 3] = w;
            var B = F + this._floatCountPerVertex;
            this._vertices[B + 2] = S, this._vertices[B + 3] = w;
          }
          for (var U = y, k = y + this._floatCountPerVertex * this._vertexStride; U < k; U += this._floatCountPerVertex) {
            var G = 0;
            if (4 === R.renderMode) {
              G = U;
              var H = C * A++,
                z = H + M;
              this._vertices[G++] = v[z++], this._vertices[G++] = v[z++], this._vertices[G++] = v[z], -1 === I ? (this._vertices[G++] = 1, this._vertices[G++] = 1, this._vertices[G++] = 1, this._vertices[G++] = 1) : (z = H + I, this._vertices[G++] = v[z++], this._vertices[G++] = v[z++], this._vertices[G++] = v[z++], this._vertices[G++] = v[z]), -1 === D ? (this._vertices[G++] = 0, this._vertices[G++] = 0) : (z = H + D, this._vertices[G++] = S + v[z++] * x, this._vertices[G++] = w + v[z] * T);
            } else G = U + 4;
            switch (this._vertices[G++] = E[0], this._vertices[G++] = E[1], this._vertices[G++] = E[2], this._vertices[G++] = ht.startLifeTime, this._vertices[G++] = b[0], this._vertices[G++] = b[1], this._vertices[G++] = b[2], this._vertices[G++] = i, this._vertices[G++] = ht.startColor[0], this._vertices[G++] = ht.startColor[1], this._vertices[G++] = ht.startColor[2], this._vertices[G++] = ht.startColor[3], this._vertices[G++] = ht.startSize[0], this._vertices[G++] = ht.startSize[1], this._vertices[G++] = ht.startSize[2], this._vertices[G++] = ht.startRotation[0], this._vertices[G++] = ht.startRotation[1], this._vertices[G++] = ht.startRotation[2], this._vertices[G++] = ht.startSpeed, d && (this._vertices[G + 1] = o), f && (this._vertices[G + 2] = h), p && (this._vertices[G + 3] = l), g && (this._vertices[G + 4] = u), c && (this._vertices[G + 5] = r, this._vertices[G + 6] = a, this._vertices[G + 7] = s), this.simulationSpace) {
              case 0:
                G += 8, this._vertices[G++] = ht.simulationWorldPostion[0], this._vertices[G++] = ht.simulationWorldPostion[1], this._vertices[G++] = ht.simulationWorldPostion[2], this._vertices[G++] = ht.simulationWorldRotation[0], this._vertices[G++] = ht.simulationWorldRotation[1], this._vertices[G++] = ht.simulationWorldRotation[2], this._vertices[G++] = ht.simulationWorldRotation[3];
                break;
              case 1:
                break;
              default:
                throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.");
            }
          }
          return this._firstFreeElement = n, !0;
        }, o.addNewParticlesToVertexBuffer = function () {
          var t = 0;
          this._firstNewElement < this._firstFreeElement ? (t = this._firstNewElement * this._vertexStride * this._floatCountPerVertex, this._vertexBuffer.setData(this._vertices, t, t, (this._firstFreeElement - this._firstNewElement) * this._vertexStride * this._floatCountPerVertex)) : (t = this._firstNewElement * this._vertexStride * this._floatCountPerVertex, this._vertexBuffer.setData(this._vertices, t, t, (this._bufferMaxParticles - this._firstNewElement) * this._vertexStride * this._floatCountPerVertex), this._firstFreeElement > 0 && this._vertexBuffer.setData(this._vertices, 0, 0, this._firstFreeElement * this._vertexStride * this._floatCountPerVertex)), this._firstNewElement = this._firstFreeElement;
        }, o._beforeRender = function (t) {
          return this._firstNewElement != this._firstFreeElement && this.addNewParticlesToVertexBuffer(), this._drawCounter++, this._firstActiveElement != this._firstFreeElement && (this._vertexBuffer._bind(), this._indexBuffer._bind(), !0);
        }, o._render = function (t) {
          var e = 0,
            i = L.mainContext;
          this._firstActiveElement < this._firstFreeElement ? (e = (this._firstFreeElement - this._firstActiveElement) * this._indexStride, i.drawElements(4, e, 5123, 2 * this._firstActiveElement * this._indexStride), D.trianglesFaces += e / 3, D.drawCall++) : (e = (this._bufferMaxParticles - this._firstActiveElement) * this._indexStride, i.drawElements(4, e, 5123, 2 * this._firstActiveElement * this._indexStride), D.trianglesFaces += e / 3, D.drawCall++, this._firstFreeElement > 0 && (e = this._firstFreeElement * this._indexStride, i.drawElements(4, e, 5123, 0), D.trianglesFaces += e / 3, D.drawCall++));
        }, o.play = function () {
          if (this._burstsIndex = 0, this._isEmitting = !0, this._isPlaying = !0, this._isPaused = !1, this._emissionTime = 0, this._totalDelayTime = 0, !this.autoRandomSeed)
            for (var t = 0, i = this._randomSeeds.length; t < i; t++) this._randomSeeds[t] = this.randomSeed[0] + e._RANDOMOFFSET[t];
          switch (this.startDelayType) {
            case 0:
              this._playStartDelay = this.startDelay;
              break;
            case 1:
              this.autoRandomSeed ? this._playStartDelay = T.lerp(this.startDelayMin, this.startDelayMax, Math.random()) : (this._rand.seed = this._randomSeeds[2], this._playStartDelay = T.lerp(this.startDelayMin, this.startDelayMax, this._rand.getFloat()), this._randomSeeds[2] = this._rand.seed);
              break;
            default:
              throw new Error("Utils3D: startDelayType is invalid.");
          }
          this._frameRateTime = this._currentTime + this._playStartDelay, this._startUpdateLoopCount = D.loopCount, this.event("played");
        }, o.pause = function () {
          this._isPaused = !0, this.event("paused");
        }, o.simulate = function (t, e) {
          void 0 === e && (e = !0), this._simulateUpdate = !0, e ? this._updateParticlesSimulationRestart(t) : (this._isPaused = !1, this._updateParticles(t)), this.pause();
        }, o.stop = function () {
          this._burstsIndex = 0, this._isEmitting = !1, this._emissionTime = 0, this.event("stopped");
        }, o.cloneTo = function (t) {
          var e = t;
          e.duration = this.duration, e.looping = this.looping, e.prewarm = this.prewarm, e.startDelayType = this.startDelayType, e.startDelay = this.startDelay, e.startDelayMin = this.startDelayMin, e.startDelayMax = this.startDelayMax, e._maxStartLifetime = this._maxStartLifetime, e.startLifetimeType = this.startLifetimeType, e.startLifetimeConstant = this.startLifetimeConstant, this.startLifeTimeGradient.cloneTo(e.startLifeTimeGradient), e.startLifetimeConstantMin = this.startLifetimeConstantMin, e.startLifetimeConstantMax = this.startLifetimeConstantMax, this.startLifeTimeGradientMin.cloneTo(e.startLifeTimeGradientMin), this.startLifeTimeGradientMax.cloneTo(e.startLifeTimeGradientMax), e.startSpeedType = this.startSpeedType, e.startSpeedConstant = this.startSpeedConstant, e.startSpeedConstantMin = this.startSpeedConstantMin, e.startSpeedConstantMax = this.startSpeedConstantMax, e.threeDStartSize = this.threeDStartSize, e.startSizeType = this.startSizeType, e.startSizeConstant = this.startSizeConstant, this.startSizeConstantSeparate.cloneTo(e.startSizeConstantSeparate), e.startSizeConstantMin = this.startSizeConstantMin, e.startSizeConstantMax = this.startSizeConstantMax, this.startSizeConstantMinSeparate.cloneTo(e.startSizeConstantMinSeparate), this.startSizeConstantMaxSeparate.cloneTo(e.startSizeConstantMaxSeparate), e.threeDStartRotation = this.threeDStartRotation, e.startRotationType = this.startRotationType, e.startRotationConstant = this.startRotationConstant, this.startRotationConstantSeparate.cloneTo(e.startRotationConstantSeparate), e.startRotationConstantMin = this.startRotationConstantMin, e.startRotationConstantMax = this.startRotationConstantMax, this.startRotationConstantMinSeparate.cloneTo(e.startRotationConstantMinSeparate), this.startRotationConstantMaxSeparate.cloneTo(e.startRotationConstantMaxSeparate), e.randomizeRotationDirection = this.randomizeRotationDirection, e.startColorType = this.startColorType, this.startColorConstant.cloneTo(e.startColorConstant), this.startColorConstantMin.cloneTo(e.startColorConstantMin), this.startColorConstantMax.cloneTo(e.startColorConstantMax), e.gravityModifier = this.gravityModifier, e.simulationSpace = this.simulationSpace, e.scaleMode = this.scaleMode, e.playOnAwake = this.playOnAwake, e.maxParticles = this.maxParticles, this._emission && (e._emission = this._emission.clone()), this.shape && (e.shape = this.shape.clone()), this.velocityOverLifetime && (e.velocityOverLifetime = this.velocityOverLifetime.clone()), this.colorOverLifetime && (e.colorOverLifetime = this.colorOverLifetime.clone()), this.sizeOverLifetime && (e.sizeOverLifetime = this.sizeOverLifetime.clone()), this.rotationOverLifetime && (e.rotationOverLifetime = this.rotationOverLifetime.clone()), this.textureSheetAnimation && (e.textureSheetAnimation = this.textureSheetAnimation.clone()), e.isPerformanceMode = this.isPerformanceMode, e._isEmitting = this._isEmitting, e._isPlaying = this._isPlaying, e._isPaused = this._isPaused, e._playStartDelay = this._playStartDelay, e._frameRateTime = this._frameRateTime, e._emissionTime = this._emissionTime, e._totalDelayTime = this._totalDelayTime, e._burstsIndex = this._burstsIndex;
        }, o.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, o._getVertexBuffers = function () {
          return null;
        }, a(0, o, "maxParticles", function () {
          return this._bufferMaxParticles - 1;
        }, function (t) {
          var e = t + 1;
          e !== this._bufferMaxParticles && (this._bufferMaxParticles = e, this._initBufferDatas());
        }), a(0, o, "isEmitting", function () {
          return this._isEmitting;
        }), a(0, o, "isAlive", function () {
          return !!(this._isPlaying || this.aliveParticleCount > 0);
        }), a(0, o, "shape", function () {
          return this._shape;
        }, function (t) {
          this._shape !== t && (t && t.enable ? this._ownerRender._addShaderDefine(vn.SHADERDEFINE_SHAPE) : this._ownerRender._removeShaderDefine(vn.SHADERDEFINE_SHAPE), this._shape = t);
        }), a(0, o, "rotationOverLifetime", function () {
          return this._rotationOverLifetime;
        }, function (t) {
          var e = this._ownerRender;
          if (t) {
            var i = t.angularVelocity;
            if (!i) return;
            var n = i.separateAxes,
              r = i.type;
            if (t.enbale) switch (n ? e._addShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE) : e._addShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIME), r) {
              case 0:
                e._addShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT);
                break;
              case 1:
                e._addShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE);
                break;
              case 2:
                e._addShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS);
                break;
              case 3:
                e._addShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);
            } else e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIME), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);
            switch (r) {
              case 0:
                n ? e._setShaderValueColor(35, i.constantSeparate) : e._setShaderValueNumber(34, i.constant);
                break;
              case 1:
                n ? (e._setShaderValueBuffer(37, i.gradientX._elements), e._setShaderValueBuffer(38, i.gradientY._elements), e._setShaderValueBuffer(39, i.gradientZ._elements), e._setShaderValueBuffer(40, i.gradientW._elements)) : e._setShaderValueBuffer(36, i.gradient._elements);
                break;
              case 2:
                n ? (e._setShaderValueColor(35, i.constantMinSeparate), e._setShaderValueColor(42, i.constantMaxSeparate)) : (e._setShaderValueNumber(34, i.constantMin), e._setShaderValueNumber(41, i.constantMax));
                break;
              case 3:
                n ? (e._setShaderValueBuffer(37, i.gradientXMin._elements), e._setShaderValueBuffer(44, i.gradientXMax._elements), e._setShaderValueBuffer(38, i.gradientYMin._elements), e._setShaderValueBuffer(45, i.gradientYMax._elements), e._setShaderValueBuffer(39, i.gradientZMin._elements), e._setShaderValueBuffer(46, i.gradientZMax._elements), e._setShaderValueBuffer(40, i.gradientWMin._elements), e._setShaderValueBuffer(47, i.gradientWMax._elements)) : (e._setShaderValueBuffer(36, i.gradientMin._elements), e._setShaderValueBuffer(43, i.gradientMax._elements));
            }
          } else e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIME), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS), e._removeShaderDefine(vn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES), e._setShaderValueColor(35, null), e._setShaderValueColor(42, null), e._setShaderValueNumber(34, void 0), e._setShaderValueNumber(41, void 0), e._setShaderValueBuffer(37, null), e._setShaderValueBuffer(44, null), e._setShaderValueBuffer(38, null), e._setShaderValueBuffer(45, null), e._setShaderValueBuffer(39, null), e._setShaderValueBuffer(46, null), e._setShaderValueBuffer(40, null), e._setShaderValueBuffer(47, null), e._setShaderValueBuffer(36, null), e._setShaderValueBuffer(43, null);
          this._rotationOverLifetime = t;
        }), a(0, o, "emission", function () {
          return this._emission;
        }), a(0, o, "emissionTime", function () {
          return this._emissionTime > this.duration ? this.duration : this._emissionTime;
        }), a(0, o, "aliveParticleCount", function () {
          return this._firstNewElement >= this._firstRetiredElement ? this._firstNewElement - this._firstRetiredElement : this._bufferMaxParticles - this._firstRetiredElement + this._firstNewElement;
        }), a(0, o, "isPlaying", function () {
          return this._isPlaying;
        }), a(0, o, "isPaused", function () {
          return this._isPaused;
        }), a(0, o, "startLifetimeType", function () {
          return this._startLifetimeType;
        }, function (t) {
          var e = 0,
            i = 0;
          switch (this.startLifetimeType) {
            case 0:
              this._maxStartLifetime = this.startLifetimeConstant;
              break;
            case 1:
              this._maxStartLifetime = -Number.MAX_VALUE;
              var n = n;
              for (e = 0, i = n.gradientCount; e < i; e++) this._maxStartLifetime = Math.max(this._maxStartLifetime, n.getValueByIndex(e));
              break;
            case 2:
              this._maxStartLifetime = Math.max(this.startLifetimeConstantMin, this.startLifetimeConstantMax);
              break;
            case 3:
              this._maxStartLifetime = -Number.MAX_VALUE;
              var r = r;
              for (e = 0, i = r.gradientCount; e < i; e++) this._maxStartLifetime = Math.max(this._maxStartLifetime, r.getValueByIndex(e));
              var a = a;
              for (e = 0, i = a.gradientCount; e < i; e++) this._maxStartLifetime = Math.max(this._maxStartLifetime, a.getValueByIndex(e));
          }
          this._startLifetimeType = t;
        }), a(0, o, "_originalBoundingSphere", function () {
          return this._boundingSphere;
        }), a(0, o, "startLifetimeConstant", function () {
          return this._startLifetimeConstant;
        }, function (t) {
          0 === this._startLifetimeType && (this._maxStartLifetime = t), this._startLifetimeConstant = t;
        }), a(0, o, "startLifetimeConstantMin", function () {
          return this._startLifetimeConstantMin;
        }, function (t) {
          2 === this._startLifetimeType && (this._maxStartLifetime = Math.max(t, this._startLifetimeConstantMax)), this._startLifetimeConstantMin = t;
        }), a(0, o, "startLifeTimeGradient", function () {
          return this._startLifeTimeGradient;
        }, function (t) {
          if (1 === this._startLifetimeType) {
            this._maxStartLifetime = -Number.MAX_VALUE;
            for (var e = 0, i = t.gradientCount; e < i; e++) this._maxStartLifetime = Math.max(this._maxStartLifetime, t.getValueByIndex(e));
          }
          this._startLifeTimeGradient = t;
        }), a(0, o, "startLifetimeConstantMax", function () {
          return this._startLifetimeConstantMax;
        }, function (t) {
          2 === this._startLifetimeType && (this._maxStartLifetime = Math.max(this._startLifetimeConstantMin, t)), this._startLifetimeConstantMax = t;
        }), a(0, o, "startLifeTimeGradientMin", function () {
          return this._startLifeTimeGradientMin;
        }, function (t) {
          if (3 === this._startLifetimeType) {
            var e = 0,
              i = 0;
            for (this._maxStartLifetime = -Number.MAX_VALUE, e = 0, i = t.gradientCount; e < i; e++) this._maxStartLifetime = Math.max(this._maxStartLifetime, t.getValueByIndex(e));
            for (e = 0, i = this._startLifeTimeGradientMax.gradientCount; e < i; e++) this._maxStartLifetime = Math.max(this._maxStartLifetime, this._startLifeTimeGradientMax.getValueByIndex(e));
          }
          this._startLifeTimeGradientMin = t;
        }), a(0, o, "startLifeTimeGradientMax", function () {
          return this._startLifeTimeGradientMax;
        }, function (t) {
          if (3 === this._startLifetimeType) {
            var e = 0,
              i = 0;
            for (this._maxStartLifetime = -Number.MAX_VALUE, e = 0, i = this._startLifeTimeGradientMin.gradientCount; e < i; e++) this._maxStartLifetime = Math.max(this._maxStartLifetime, this._startLifeTimeGradientMin.getValueByIndex(e));
            for (e = 0, i = t.gradientCount; e < i; e++) this._maxStartLifetime = Math.max(this._maxStartLifetime, t.getValueByIndex(e));
          }
          this._startLifeTimeGradientMax = t;
        }), a(0, o, "velocityOverLifetime", function () {
          return this._velocityOverLifetime;
        }, function (t) {
          var e = this._ownerRender;
          if (t) {
            var i = t.velocity,
              n = i.type;
            if (t.enbale) switch (n) {
              case 0:
                e._addShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT);
                break;
              case 1:
                e._addShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE);
                break;
              case 2:
                e._addShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT);
                break;
              case 3:
                e._addShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);
            } else e._removeShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT), e._removeShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE), e._removeShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT), e._removeShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);
            switch (n) {
              case 0:
                e._setShaderValueColor(13, i.constant);
                break;
              case 1:
                e._setShaderValueBuffer(14, i.gradientX._elements), e._setShaderValueBuffer(15, i.gradientY._elements), e._setShaderValueBuffer(16, i.gradientZ._elements);
                break;
              case 2:
                e._setShaderValueColor(13, i.constantMin), e._setShaderValueColor(17, i.constantMax);
                break;
              case 3:
                e._setShaderValueBuffer(14, i.gradientXMin._elements), e._setShaderValueBuffer(18, i.gradientXMax._elements), e._setShaderValueBuffer(15, i.gradientYMin._elements), e._setShaderValueBuffer(19, i.gradientYMax._elements), e._setShaderValueBuffer(16, i.gradientZMin._elements), e._setShaderValueBuffer(20, i.gradientZMax._elements);
            }
            e._setShaderValueInt(21, t.space);
          } else e._removeShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT), e._removeShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE), e._removeShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT), e._removeShaderDefine(vn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE), e._setShaderValueColor(13, null), e._setShaderValueBuffer(14, null), e._setShaderValueBuffer(15, null), e._setShaderValueBuffer(16, null), e._setShaderValueColor(13, null), e._setShaderValueColor(17, null), e._setShaderValueBuffer(14, null), e._setShaderValueBuffer(18, null), e._setShaderValueBuffer(15, null), e._setShaderValueBuffer(19, null), e._setShaderValueBuffer(16, null), e._setShaderValueBuffer(20, null), e._setShaderValueInt(21, void 0);
          this._velocityOverLifetime = t;
        }), a(0, o, "colorOverLifetime", function () {
          return this._colorOverLifetime;
        }, function (t) {
          var e = this._ownerRender;
          if (t) {
            var i = t.color;
            if (t.enbale) switch (i.type) {
              case 1:
                e._addShaderDefine(vn.SHADERDEFINE_COLOROVERLIFETIME);
                break;
              case 3:
                e._addShaderDefine(vn.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);
            } else e._removeShaderDefine(vn.SHADERDEFINE_COLOROVERLIFETIME), e._removeShaderDefine(vn.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);
            switch (i.type) {
              case 1:
                var n = i.gradient;
                e._setShaderValueBuffer(22, n._alphaElements), e._setShaderValueBuffer(23, n._rgbElements);
                break;
              case 3:
                var r = i.gradientMin,
                  a = i.gradientMax;
                e._setShaderValueBuffer(22, r._alphaElements), e._setShaderValueBuffer(23, r._rgbElements), e._setShaderValueBuffer(24, a._alphaElements), e._setShaderValueBuffer(25, a._rgbElements);
            }
          } else e._removeShaderDefine(vn.SHADERDEFINE_COLOROVERLIFETIME), e._removeShaderDefine(vn.SHADERDEFINE_RANDOMCOLOROVERLIFETIME), e._setShaderValueBuffer(22, n._alphaElements), e._setShaderValueBuffer(23, n._rgbElements), e._setShaderValueBuffer(22, r._alphaElements), e._setShaderValueBuffer(23, r._rgbElements), e._setShaderValueBuffer(24, a._alphaElements), e._setShaderValueBuffer(25, a._rgbElements);
          this._colorOverLifetime = t;
        }), a(0, o, "sizeOverLifetime", function () {
          return this._sizeOverLifetime;
        }, function (t) {
          var e = this._ownerRender;
          if (t) {
            var i = t.size,
              n = i.separateAxes,
              r = i.type;
            if (t.enbale) switch (r) {
              case 0:
                n ? e._addShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE) : e._addShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMECURVE);
                break;
              case 2:
                n ? e._addShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE) : e._addShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES);
            } else e._removeShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMECURVE), e._removeShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE), e._removeShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES), e._removeShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE);
            switch (r) {
              case 0:
                n ? (e._setShaderValueBuffer(27, i.gradientX._elements), e._setShaderValueBuffer(28, i.gradientY._elements), e._setShaderValueBuffer(29, i.gradientZ._elements)) : e._setShaderValueBuffer(26, i.gradient._elements);
                break;
              case 2:
                n ? (e._setShaderValueBuffer(27, i.gradientXMin._elements), e._setShaderValueBuffer(31, i.gradientXMax._elements), e._setShaderValueBuffer(28, i.gradientYMin._elements), e._setShaderValueBuffer(32, i.gradientYMax._elements), e._setShaderValueBuffer(29, i.gradientZMin._elements), e._setShaderValueBuffer(33, i.gradientZMax._elements)) : (e._setShaderValueBuffer(26, i.gradientMin._elements), e._setShaderValueBuffer(30, i.gradientMax._elements));
            }
          } else e._removeShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMECURVE), e._removeShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE), e._removeShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES), e._removeShaderDefine(vn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE), e._setShaderValueBuffer(27, null), e._setShaderValueBuffer(31, null), e._setShaderValueBuffer(28, null), e._setShaderValueBuffer(32, null), e._setShaderValueBuffer(29, null), e._setShaderValueBuffer(33, null), e._setShaderValueBuffer(26, null), e._setShaderValueBuffer(30, null);
          this._sizeOverLifetime = t;
        }), a(0, o, "textureSheetAnimation", function () {
          return this._textureSheetAnimation;
        }, function (t) {
          var e = this._ownerRender;
          if (t) {
            var i = t.frame,
              n = i.type;
            if (t.enable) switch (n) {
              case 1:
                e._addShaderDefine(vn.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE);
                break;
              case 3:
                e._addShaderDefine(vn.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);
            } else e._removeShaderDefine(vn.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE), e._removeShaderDefine(vn.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);
            if (1 === n || 3 === n) {
              e._setShaderValueInt(48, t.cycles);
              var r = t.tiles,
                a = this._uvLength.elements;
              a[0] = 1 / r.x, a[1] = 1 / r.y, e._setShaderValueVector2(49, this._uvLength);
            }
            switch (n) {
              case 1:
                e._setShaderValueBuffer(50, i.frameOverTimeData._elements);
                break;
              case 3:
                e._setShaderValueBuffer(50, i.frameOverTimeDataMin._elements), e._setShaderValueBuffer(51, i.frameOverTimeDataMax._elements);
            }
          } else e._removeShaderDefine(vn.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE), e._removeShaderDefine(vn.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE), e._setShaderValueInt(48, void 0), e._setShaderValueVector2(49, null), e._setShaderValueBuffer(50, null), e._setShaderValueBuffer(51, null);
          this._textureSheetAnimation = t;
        }), a(0, o, "_vertexBufferCount", function () {
          return 1;
        }), a(0, o, "triangleCount", function () {
          return this._indexBuffer ? this._indexBuffer.indexCount / 3 : 0;
        }), a(0, o, "_originalBoundingBox", function () {
          return this._boundingBox;
        }), a(0, o, "_originalBoundingBoxCorners", function () {
          return this._boundingBoxCorners;
        }), e.halfKSqrtOf2 = .71, n(e, ["_RANDOMOFFSET", function () {
          return this._RANDOMOFFSET = new Uint32Array([592910910, 3276756734, 322376503, 306581307, 1793934638, 3737431713, 2527743459, 2368504881, 4085612399, 3774601268, 326370691, 1494990940, 1089181156, 3159510623, 2941263940, 2786374529, 271901988, 4233252447]);
        }, "_maxElapsedTime", function () {
          return this._maxElapsedTime = 1 / 3;
        }, "_tempVector30", function () {
          return this._tempVector30 = new Le();
        }, "_tempVector31", function () {
          return this._tempVector31 = new Le();
        }, "_tempVector32", function () {
          return this._tempVector32 = new Le();
        }, "_tempVector33", function () {
          return this._tempVector33 = new Le();
        }, "_tempVector34", function () {
          return this._tempVector34 = new Le();
        }, "_tempVector35", function () {
          return this._tempVector35 = new Le();
        }, "_tempVector36", function () {
          return this._tempVector36 = new Le();
        }, "_tempVector37", function () {
          return this._tempVector37 = new Le();
        }, "_tempVector38", function () {
          return this._tempVector38 = new Le();
        }, "_tempVector39", function () {
          return this._tempVector39 = new Le();
        }, "_tempPosition", function () {
          return this._tempPosition = new Le();
        }, "_tempDirection", function () {
          return this._tempDirection = new Le();
        }]), e;
      }(ti),
      Di = function (t) {
        function e(t) {
          this._finalGravity = new Le(), this._tempRotationMatrix = new Ce(), e.__super.call(this, t), this._defaultBoundBox = new xe(new Le(), new Le()), this._renderMode = -1, this.stretchedBillboardCameraSpeedScale = 0, this.stretchedBillboardSpeedScale = 0, this.stretchedBillboardLengthScale = 1;
        }
        r(e, "laya.d3.core.particleShuriKen.ShurikenParticleRender", t);
        var n = e.prototype;
        return n._calculateBoundingBox = function () {
          var t = this._boundingBox.min.elements;
          t[0] = -Number.MAX_VALUE, t[1] = -Number.MAX_VALUE, t[2] = -Number.MAX_VALUE;
          var e = this._boundingBox.min.elements;
          e[0] = Number.MAX_VALUE, e[1] = Number.MAX_VALUE, e[2] = Number.MAX_VALUE;
        }, n._calculateBoundingSphere = function () {
          var t = this._owner.particleSystem._boundingSphere,
            e = NaN,
            i = this._owner.transform,
            n = i.scale.elements,
            r = Math.abs(n[0]),
            a = Math.abs(n[1]),
            s = Math.abs(n[2]);
          e = r >= a && r >= s ? r : a >= s ? a : s, Le.transformCoordinate(t.center, i.worldMatrix, this._boundingSphere.center), this._boundingSphere.radius = t.radius * e;
        }, n._renderUpdate = function (t) {
          var e = this._owner.particleSystem;
          if (!i.stage.isVisibility || !e.isAlive) return !1;
          var n = this._owner.transform;
          switch (e.simulationSpace) {
            case 0:
              break;
            case 1:
              this._setShaderValueColor(0, n.position), this._setShaderValueColor(1, n.rotation);
              break;
            default:
              throw new Error("ShurikenParticleMaterial: SimulationSpace value is invalid.");
          }
          switch (e.scaleMode) {
            case 0:
              var r = n.scale;
              this._setShaderValueColor(4, r), this._setShaderValueColor(5, r);
              break;
            case 1:
              var a = n.localScale;
              this._setShaderValueColor(4, a), this._setShaderValueColor(5, a);
              break;
            case 2:
              this._setShaderValueColor(4, n.scale), this._setShaderValueColor(5, Le.ONE);
          }
          var s = this._finalGravity.elements,
            o = Xe.gravity.elements,
            h = e.gravityModifier;
          return s[0] = o[0] * h, s[1] = o[1] * h, s[2] = o[2] * h, this._setShaderValueBuffer(7, s), this._setShaderValueInt(11, e.simulationSpace), this._setShaderValueBool(8, e.threeDStartRotation), this._setShaderValueInt(6, e.scaleMode), this._setShaderValueInt(9, this.stretchedBillboardLengthScale), this._setShaderValueInt(10, this.stretchedBillboardSpeedScale), this._setShaderValueNumber(12, e._currentTime), Ze.debugMode && this._renderRenderableBoundBox(), !0;
        }, n._destroy = function () {
          t.prototype._destroy.call(this), this._mesh && (this._mesh._removeReference(), this._mesh = null);
        }, a(0, n, "boundingBox", function () {
          return this._owner.particleSystem.isAlive ? (this._boundingBoxNeedChange && (this._calculateBoundingBox(), this._boundingBoxNeedChange = !1), this._boundingBox) : this._defaultBoundBox;
        }), a(0, n, "renderMode", function () {
          return this._renderMode;
        }, function (t) {
          if (this._renderMode !== t) {
            switch (this._renderMode) {
              case 0:
                this._removeShaderDefine(vn.SHADERDEFINE_RENDERMODE_BILLBOARD);
                break;
              case 1:
                this._removeShaderDefine(vn.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);
                break;
              case 2:
                this._removeShaderDefine(vn.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);
                break;
              case 3:
                this._removeShaderDefine(vn.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);
                break;
              case 4:
                this._removeShaderDefine(vn.SHADERDEFINE_RENDERMODE_MESH);
            }
            switch (this._renderMode = t, t) {
              case 0:
                this._addShaderDefine(vn.SHADERDEFINE_RENDERMODE_BILLBOARD);
                break;
              case 1:
                this._addShaderDefine(vn.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);
                break;
              case 2:
                this._addShaderDefine(vn.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);
                break;
              case 3:
                this._addShaderDefine(vn.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);
                break;
              case 4:
                this._addShaderDefine(vn.SHADERDEFINE_RENDERMODE_MESH);
                break;
              default:
                throw new Error("ShurikenParticleRender: unknown renderMode Value.");
            }
            this._owner.particleSystem._initBufferDatas();
          }
        }), a(0, n, "mesh", function () {
          return this._mesh;
        }, function (t) {
          this._mesh !== t && (this._mesh && this._mesh._removeReference(), this._mesh = t, t && t._addReference(), this._owner.particleSystem._initBufferDatas());
        }), e;
      }(ei),
      Ai = function (t) {
        function e(t) {
          this._owner = null, this._trailRenderElements = null, this._minVertexDistance = NaN, this._widthMultiplier = NaN, this._time = NaN, this._widthCurve = null, this._colorGradient = null, this._textureMode = 0, this._curtime = 0, this._curSubTrailFinishCurTime = 0, this._curSubTrailFinished = !1, this._hasLifeSubTrail = !1, this._trailTotalLength = 0, this._trailSupplementLength = 0, this._trailDeadLength = 0, this._isStart = !1, this._trailRenderElementIndex = 0, e.__super.call(this), this._curSubTrailFinishPosition = new Le(), this._curSubTrailFinishDirection = new Le(), this._owner = t, this._trailRenderElements = [], this.addRenderElement();
        }
        r(e, "laya.d3.core.trail.TrailFilter", t);
        var i = e.prototype;
        return i.getRenderElementsCount = function () {
          return this._trailRenderElements.length;
        }, i.addRenderElement = function () {
          for (var t = 0; t < this._trailRenderElements.length; t++)
            if (1 == this._trailRenderElements[t]._isDead) return this._trailRenderElements[t].reActivate(), t;
          var e = new yt(this);
          return this._trailRenderElements.push(e), this._trailRenderElements.length - 1;
        }, i.getRenderElement = function (t) {
          return this._trailRenderElements[t];
        }, i._update = function (t) {
          this._curtime += t.elapsedTime / 1e3, this._owner._render._setShaderValueNumber(3, this._curtime), this._curSubTrailFinished && (this._curSubTrailFinished = !1, this._trailRenderElementIndex = this.addRenderElement(), this.event("trailfilterchange", [this._trailRenderElementIndex, this._trailRenderElements[this._trailRenderElementIndex]]));
        }, i.reset = function () {
          for (var t = 0; t < this._trailRenderElements.length; t++) this._trailRenderElements[t].reActivate();
          this._isStart = !1, this._hasLifeSubTrail = !1, this._curSubTrailFinished = !1, this._curSubTrailFinishCurTime = 0, this._trailTotalLength = 0, this._trailSupplementLength = 0, this._trailDeadLength = 0;
        }, i._destroy = function () {
          t.prototype._destroy.call(this);
          for (var e = 0; e < this._trailRenderElements.length; e++) this._trailRenderElements[e]._destroy();
          this._trailRenderElements = null, this._widthCurve = null, this._colorGradient = null, this._curSubTrailFinishPosition = null, this._curSubTrailFinishDirection = null;
        }, a(0, i, "widthMultiplier", function () {
          return this._widthMultiplier;
        }, function (t) {
          this._widthMultiplier = t;
        }), a(0, i, "time", function () {
          return this._time;
        }, function (t) {
          this._time = t, this._owner._render._setShaderValueNumber(4, t);
        }), a(0, i, "widthCurve", function () {
          return this._widthCurve;
        }, function (t) {
          this._widthCurve = t;
          var e = new Float32Array(4 * t.length),
            i = 0,
            n = 0,
            r = 0;
          for (i = 0, n = t.length; i < n; i++) e[r++] = t[i].time, e[r++] = t[i].inTangent, e[r++] = t[i].outTangent, e[r++] = t[i].value;
          this._owner._render._setShaderValueBuffer(5, e), this._owner._render._setShaderValueInt(6, t.length);
        }), a(0, i, "minVertexDistance", function () {
          return this._minVertexDistance;
        }, function (t) {
          this._minVertexDistance = t;
        }), a(0, i, "colorGradient", function () {
          return this._colorGradient;
        }, function (t) {
          this._colorGradient = t, this._owner._render._setShaderValueBuffer(7, t._colorKeyData), this._owner._render._setShaderValueBuffer(8, t._alphaKeyData), 0 == t.mode ? this._owner._render._addShaderDefine(xn.SHADERDEFINE_GRADIENTMODE_BLEND) : this._owner._render._removeShaderDefine(xn.SHADERDEFINE_GRADIENTMODE_BLEND);
        }), a(0, i, "textureMode", function () {
          return this._textureMode;
        }, function (t) {
          this._textureMode = t;
        }), e;
      }(ti),
      Ri = function (t) {
        function e(t) {
          e.__super.call(this, t);
        }
        r(e, "laya.d3.core.trail.TrailRenderer", ei);
        var i = e.prototype;
        return i._calculateBoundingBox = function () {
          var t = this._boundingBox.min.elements;
          t[0] = -Number.MAX_VALUE, t[1] = -Number.MAX_VALUE, t[2] = -Number.MAX_VALUE;
          var e = this._boundingBox.min.elements;
          e[0] = Number.MAX_VALUE, e[1] = Number.MAX_VALUE, e[2] = Number.MAX_VALUE;
        }, i._calculateBoundingSphere = function () {
          var t = this._boundingSphere.center.elements;
          t[0] = 0, t[1] = 0, t[2] = 0, this._boundingSphere.radius = Number.MAX_VALUE;
        }, i._renderUpdate = function (t) {
          return !0;
        }, e;
      }(),
      Pi = function (t) {
        function e(t) {
          this._floatCountPerVertex = 6, this._owner = null, this._vertices = null, this._vertexBuffer = null, this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._currentTime = NaN, this._drawCounter = 0, this.scLeft = null, this.scRight = null, this._numPositionMode = 0, this._numPositionVelocityMode = 0, this._lastTime = NaN, this._needPatch = !1, this._lastPatchAddPos0 = null, this._lastPatchAddPos1 = null, this._lastPatchAddTime = NaN, this.lifeTime = NaN, this.minSegmentDistance = NaN, this.minInterpDistance = NaN, this.maxSlerpCount = 0, this._maxSegments = 0, e.__super.call(this), this._tempVector0 = new Le(), this._tempVector1 = new Le(), this._tempVector2 = new Le(), this._tempVector3 = new Le(), this._posModeLastPosition0 = new Le(), this._posModeLastPosition1 = new Le(), this._posModePosition0 = new Le(), this._posModePosition1 = new Le(), this._posVelModePosition0 = new Le(), this._posVelModeVelocity0 = new Le(), this._posVelModePosition1 = new Le(), this._posVelModeVelocity1 = new Le(), this._owner = t, this._lastTime = 0, this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._currentTime = 0, this._drawCounter = 0, this._needPatch = !1, this._lastPatchAddPos0 = new Le(), this._lastPatchAddPos1 = new Le(), this.scLeft = new G(), this.scRight = new G(), this.lifeTime = .5, this.minSegmentDistance = .1, this.minInterpDistance = .6, this.maxSlerpCount = 128, this._maxSegments = 200, this._owner.on("activeinhierarchychanged", this, this._onActiveHierarchyChanged);
        }
        r(e, "laya.d3.resource.tempelet.GlitterTemplet", t);
        var n = e.prototype;
        return i.imps(n, {
          "laya.d3.core.render.IRenderable": !0
        }), n._getVertexBuffer = function (t) {
          return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
        }, n._getIndexBuffer = function () {
          return null;
        }, n._initialize = function () {
          this._vertexBuffer = qi.create(It.vertexDeclaration, 2 * this.maxSegments, 35048), this._vertices = new Float32Array(this.maxSegments * this._floatCountPerVertex * 2);
        }, n._onActiveHierarchyChanged = function (t) {
          t || (this._numPositionMode = 0, this._numPositionVelocityMode = 0, this._firstActiveElement = 0, this._firstNewElement = 0, this._firstFreeElement = 0, this._firstRetiredElement = 0, this._currentTime = 0, this._drawCounter = 0);
        }, n._updateTextureCoordinates = function () {
          this._firstActiveElement < this._firstFreeElement ? this._updateSubTextureCoordinates(this._firstActiveElement, 2 * (this._firstFreeElement - this._firstActiveElement)) : (this._updateSubTextureCoordinates(this._firstActiveElement, 2 * (this.maxSegments - this._firstActiveElement)), this._firstFreeElement > 0 && this._updateSubTextureCoordinates(0, 2 * this._firstFreeElement));
        }, n._updateSubTextureCoordinates = function (t, e) {
          for (var i = 2 * t, n = 0; n < e; n += 2) {
            var r = i + n,
              a = r * this._floatCountPerVertex,
              s = (r + 1) * this._floatCountPerVertex;
            this._vertices[a + 3] = this._vertices[s + 3] = (this._vertices[a + 5] - this._currentTime) / this.lifeTime;
          }
        }, n._retireActiveGlitter = function () {
          for (var t = this.lifeTime, e = 2 * this._floatCountPerVertex; this._firstActiveElement != this._firstNewElement;) {
            var i = this._firstActiveElement * e + 5;
            if (this._currentTime - this._vertices[i] < t) break;
            this._vertices[i] = this._drawCounter, this._firstActiveElement++, this._firstActiveElement >= this.maxSegments && (this._firstActiveElement = 0);
          }
        }, n._freeRetiredGlitter = function () {
          for (var t = 2 * this._floatCountPerVertex; this._firstRetiredElement != this._firstActiveElement;) {
            if (this._drawCounter - this._vertices[this._firstRetiredElement * t + 5] < 3) break;
            this._firstRetiredElement++, this._firstRetiredElement >= this.maxSegments && (this._firstRetiredElement = 0);
          }
        }, n._calcVelocity = function (t, e, i) {
          Le.subtract(t, e, i), Le.scale(i, .5, i);
        }, n._addNewGlitterSegementToVertexBuffer = function () {
          var t = 0;
          this._firstActiveElement < this._firstFreeElement ? (t = 2 * this._firstActiveElement * this._floatCountPerVertex, this._vertexBuffer.setData(this._vertices, t, t, 2 * (this._firstFreeElement - this._firstActiveElement) * this._floatCountPerVertex)) : (t = 2 * this._firstActiveElement * this._floatCountPerVertex, this._vertexBuffer.setData(this._vertices, t, t, 2 * (this.maxSegments - this._firstActiveElement) * this._floatCountPerVertex), this._firstFreeElement > 0 && this._vertexBuffer.setData(this._vertices, 0, 0, 2 * this._firstFreeElement * this._floatCountPerVertex)), this._firstNewElement = this._firstFreeElement;
        }, n._addGlitter = function (t, e, i) {
          this._needPatch && (this._needPatch = !1, this._addGlitter(this._lastPatchAddPos0, this._lastPatchAddPos1, this._lastPatchAddTime));
          var n = this._firstFreeElement + 1;
          n >= this.maxSegments && (n = 0, t.cloneTo(this._lastPatchAddPos0), e.cloneTo(this._lastPatchAddPos1), this._lastPatchAddTime = i, this._needPatch = !0), n === this._firstRetiredElement && console.log("GlitterTemplet:current segement count have large than maxSegments,please adjust the  value of maxSegments or add Glitter Vertex Frequency.");
          var r = t.elements,
            a = e.elements,
            s = 0,
            o = this._firstFreeElement * this._floatCountPerVertex * 2;
          for (s = 0; s < 3; s++) this._vertices[o + s] = r[s];
          this._vertices[o + 3] = 0, this._vertices[o + 4] = 0, this._vertices[o + 5] = i;
          var h = o + this._floatCountPerVertex;
          for (s = 0; s < 3; s++) this._vertices[h + s] = a[s];
          this._vertices[h + 3] = 0, this._vertices[h + 4] = 1, this._vertices[h + 5] = i, this._firstFreeElement = n;
        }, n._update = function (t) {
          this._currentTime += t / 1e3, this._retireActiveGlitter(), this._freeRetiredGlitter(), this._firstActiveElement == this._firstFreeElement && (this._currentTime = 0), this._firstRetiredElement == this._firstActiveElement && (this._drawCounter = 0), this._updateTextureCoordinates();
        }, n._beforeRender = function (t) {
          return this._firstNewElement != this._firstFreeElement && this._addNewGlitterSegementToVertexBuffer(), this._drawCounter++, this._firstActiveElement != this._firstFreeElement && (this._vertexBuffer.bindWithIndexBuffer(null), !0);
        }, n._render = function (t) {
          var e = 0,
            i = L.mainContext;
          this._firstActiveElement < this._firstFreeElement ? (e = 2 * (this._firstFreeElement - this._firstActiveElement), i.drawArrays(5, 2 * this._firstActiveElement, e), D.trianglesFaces += e - 2, D.drawCall++) : (e = 2 * (this.maxSegments - this._firstActiveElement), i.drawArrays(5, 2 * this._firstActiveElement, e), D.trianglesFaces += e - 2, D.drawCall++, this._firstFreeElement > 0 && (e = 2 * this._firstFreeElement, i.drawArrays(5, 0, e), D.trianglesFaces += e - 2, D.drawCall++));
        }, n.addVertexPosition = function (t, e) {
          if (this._owner.activeInHierarchy)
            if (this._numPositionMode < 2) 0 === this._numPositionMode ? (t.cloneTo(this._posModeLastPosition0), e.cloneTo(this._posModeLastPosition1)) : (t.cloneTo(this._posModePosition0), e.cloneTo(this._posModePosition1)), this._numPositionMode++;
            else {
              var i = this._tempVector2;
              this._calcVelocity(t, this._posModeLastPosition0, i);
              var n = this._tempVector3;
              this._calcVelocity(e, this._posModeLastPosition1, n), this.addVertexPositionVelocity(this._posModePosition0, i, this._posModePosition1, n), this._posModePosition0.cloneTo(this._posModeLastPosition0), this._posModePosition1.cloneTo(this._posModeLastPosition1), t.cloneTo(this._posModePosition0), e.cloneTo(this._posModePosition1);
            }
        }, n.addVertexPositionVelocity = function (t, e, i, n) {
          if (this._owner.activeInHierarchy) {
            if (0 === this._numPositionVelocityMode) this._numPositionVelocityMode++;
            else {
              var r = this._tempVector0;
              Le.subtract(t, this._posVelModePosition0, r);
              var a = Le.scalarLength(r);
              Le.subtract(i, this._posVelModePosition1, r);
              var s = Le.scalarLength(r),
                o = 0,
                h = h;
              if (a < h && s < h) return;
              if (1 === (o = 1 + Math.floor(Math.max(a, s) / this.minInterpDistance))) this._addGlitter(t, i, this._currentTime);
              else {
                o = Math.min(o, this.maxSlerpCount), this.scLeft.Init(this._posVelModePosition0, this._posVelModeVelocity0, t, e), this.scRight.Init(this._posVelModePosition1, this._posVelModeVelocity1, i, n);
                for (var l = 1 / o, u = l, c = this._currentTime - this._lastTime, _ = 1; _ <= o; _++) {
                  var d = this._tempVector0;
                  this.scLeft.Slerp(u, d);
                  var f = this._tempVector1;
                  this.scRight.Slerp(u, f);
                  var p = this._lastTime + c * _ / o;
                  this._addGlitter(d, f, p), u += l;
                }
              }
            }
            this._lastTime = this._currentTime, t.cloneTo(this._posVelModePosition0), e.cloneTo(this._posVelModeVelocity0), i.cloneTo(this._posVelModePosition1), n.cloneTo(this._posVelModeVelocity1);
          }
        }, n._destroy = function () {
          t.prototype._destroy.call(this), this._tempVector0 = null, this._tempVector1 = null, this._tempVector2 = null, this._tempVector3 = null, this._owner = null, this._vertices = null, this._vertexBuffer.destroy(), this._vertexBuffer = null, this.scLeft = null, this.scRight = null, this._posModeLastPosition0 = null, this._posModeLastPosition1 = null, this._posModePosition0 = null, this._posModePosition1 = null, this._posVelModePosition0 = null, this._posVelModeVelocity0 = null, this._posVelModePosition1 = null, this._posVelModeVelocity1 = null, this._lastPatchAddPos0 = null, this._lastPatchAddPos1 = null;
        }, n._getVertexBuffers = function () {
          return null;
        }, a(0, n, "maxSegments", function () {
          return this._maxSegments - 1;
        }, function (t) {
          var e = t + 1;
          e !== this._maxSegments && (this._maxSegments = e, this._vertexBuffer && this._vertexBuffer.destroy(), this._initialize());
        }), a(0, n, "_vertexBufferCount", function () {
          return 1;
        }), a(0, n, "triangleCount", function () {
          var t = 0;
          return this._firstActiveElement < this._firstFreeElement ? t = 2 * (this._firstFreeElement - this._firstActiveElement) - 2 : (t = 2 * (this.maxSegments - this._firstActiveElement) - 2, t += 2 * this._firstFreeElement - 2), t;
        }), a(0, n, "_originalBoundingSphere", function () {
          return i.superGet(ti, this, "_originalBoundingSphere");
        }), a(0, n, "_originalBoundingBox", function () {
          return i.superGet(ti, this, "_originalBoundingBox");
        }), e;
      }(ti),
      Li = function (t) {
        function e(t, i, n, r, a, o, h, l) {
          this._owner = null, this._gridSize = NaN, this.memorySize = 0, this._numberVertices = 0, this._maxNumberIndices = 0, this._currentNumberIndices = 0, this._numberTriangle = 0, this._vertexBuffer = null, this._indexBuffer = null, this._boundingSphere = null, this._boundingBox = null, this._indexArrayBuffer = null, this._boundingBoxCorners = null, this._leafs = null, this._leafNum = 0, this._terrainHeightData = null, this._terrainHeightDataWidth = 0, this._terrainHeightDataHeight = 0, this._chunkOffsetX = 0, this._chunkOffsetZ = 0, this._cameraCoordinateInverse = !1, this._cameraPos = null, this._currentLOD = 0, this._perspectiveFactor = NaN, this._LODTolerance = 0, e.__super.call(this), this._owner = t, this._cameraPos = new Le(), this._chunkOffsetX = i, this._chunkOffsetZ = n, this._gridSize = r, this._terrainHeightData = a, this._terrainHeightDataWidth = o, this._terrainHeightDataHeight = h, this._leafNum = He.CHUNK_GRID_NUM / He.LEAF_GRID_NUM * (He.CHUNK_GRID_NUM / He.LEAF_GRID_NUM), this._leafs = s(this._leafNum), this._cameraCoordinateInverse = l;
          for (var u = 0; u < this._leafNum; u++) this._leafs[u] = new He();
          this.recreateResource();
        }
        r(e, "laya.d3.terrain.TerrainFilter", t);
        var o = e.prototype;
        return i.imps(o, {
          "laya.d3.core.render.IRenderable": !0
        }), o._destroy = function () {
          t.prototype._destroy.call(this), this._owner = null, this._vertexBuffer && this._vertexBuffer.destroy(), this._indexBuffer && this._indexBuffer.destroy();
        }, o.recreateResource = function () {
          this._currentNumberIndices = 0, this._numberTriangle = 0;
          var t = He.LEAF_VERTEXT_COUNT,
            e = He.LEAF_MAX_INDEX_COUNT;
          this._numberVertices = t * this._leafNum, this._maxNumberIndices = e * this._leafNum, this._indexArrayBuffer = new Uint16Array(this._maxNumberIndices);
          var i = _e.vertexDeclaration,
            n = i.vertexStride / 4,
            r = new Float32Array(this._numberVertices * n),
            a = He.CHUNK_GRID_NUM / He.LEAF_GRID_NUM,
            s = 0,
            o = 0,
            h = 0;
          for (s = 0; s < this._leafNum; s++) o = s % a, h = Math.floor(s / a), this._leafs[s].calcVertextBuffer(this._chunkOffsetX, this._chunkOffsetZ, o * He.LEAF_GRID_NUM, h * He.LEAF_GRID_NUM, this._gridSize, r, s * He.LEAF_PLANE_VERTEXT_COUNT, n, this._terrainHeightData, this._terrainHeightDataWidth, this._terrainHeightDataHeight, this._cameraCoordinateInverse);
          for (s = 0; s < this._leafNum; s++) o = s % a, h = Math.floor(s / a), this._leafs[s].calcSkirtVertextBuffer(this._chunkOffsetX, this._chunkOffsetZ, o * He.LEAF_GRID_NUM, h * He.LEAF_GRID_NUM, this._gridSize, r, this._leafNum * He.LEAF_PLANE_VERTEXT_COUNT + s * He.LEAF_SKIRT_VERTEXT_COUNT, n, this._terrainHeightData, this._terrainHeightDataWidth, this._terrainHeightDataHeight);
          this.assembleIndexInit(), this._vertexBuffer = new qi(i, this._numberVertices, 35044, !1), this._indexBuffer = new Yi("ushort", this._maxNumberIndices, 35044, !1), this._vertexBuffer.setData(r), this._indexBuffer.setData(this._indexArrayBuffer), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.calcOriginalBoudingBoxAndSphere();
        }, o.setLODLevel = function (t) {
          if (4 != t.length) return !0;
          var e = (t[0] + 1 << 24) + (t[1] + 1 << 16) + (t[2] + 1 << 8) + (t[3] + 1);
          return this._currentLOD != e && (this._currentLOD = e, !0);
        }, o.assembleIndexInit = function () {
          this._currentNumberIndices = 0, this._numberTriangle = 0;
          for (var t = 0, e = 0; e < this._leafNum; e++) {
            var i = He.getPlaneLODIndex(e, 0);
            this._indexArrayBuffer.set(i, t), t += i.length;
            var n = He.getSkirtLODIndex(e, 0);
            this._indexArrayBuffer.set(n, t), t += n.length, this._currentNumberIndices += i.length + n.length;
          }
          this._numberTriangle = this._currentNumberIndices / 3;
        }, o.isNeedAssemble = function (t, e) {
          var i = Math.min(t.viewport.width, t.viewport.height) / (2 * Math.tan(Math.PI * t.fieldOfView / 180));
          return this._perspectiveFactor != i ? (this._perspectiveFactor = i, 1) : this._LODTolerance != fn.LOD_TOLERANCE_VALUE ? (this._LODTolerance = fn.LOD_TOLERANCE_VALUE, 1) : 0 == Le.equals(e, this._cameraPos) ? (this._cameraPos.x = e.x, this._cameraPos.y = e.y, this._cameraPos.z = e.z, 2) : 0;
        }, o.assembleIndex = function (t, i) {
          var n = this.isNeedAssemble(t, i);
          if (n > 0) {
            for (var r = 0; r < this._leafNum; r++) e._TEMP_ARRAY_BUFFER[r] = this._leafs[r].determineLod(i, this._perspectiveFactor, fn.LOD_TOLERANCE_VALUE, 1 == n);
            if (this.setLODLevel(e._TEMP_ARRAY_BUFFER)) {
              this._currentNumberIndices = 0, this._numberTriangle = 0;
              var a = 0;
              for (r = 0; r < this._leafNum; r++) {
                var s = e._TEMP_ARRAY_BUFFER[r],
                  o = He.getPlaneLODIndex(r, s);
                this._indexArrayBuffer.set(o, a), a += o.length;
                var h = He.getSkirtLODIndex(r, s);
                this._indexArrayBuffer.set(h, a), a += h.length, this._currentNumberIndices += o.length + h.length;
              }
              return this._numberTriangle = this._currentNumberIndices / 3, !0;
            }
          }
          return !1;
        }, o.calcOriginalBoudingBoxAndSphere = function () {
          for (var t = new Pe(2147483647, -2147483647), e = 0; e < this._leafNum; e++) t.x = this._leafs[e]._sizeOfY.x < t.x ? this._leafs[e]._sizeOfY.x : t.x, t.y = this._leafs[e]._sizeOfY.y > t.y ? this._leafs[e]._sizeOfY.y : t.y;
          var i = new Le(this._chunkOffsetX * He.CHUNK_GRID_NUM * this._gridSize, t.x, this._chunkOffsetZ * He.CHUNK_GRID_NUM * this._gridSize),
            n = new Le((this._chunkOffsetX + 1) * He.CHUNK_GRID_NUM * this._gridSize, t.y, (this._chunkOffsetZ + 1) * He.CHUNK_GRID_NUM * this._gridSize);
          He.__ADAPT_MATRIX__ && (Le.transformV3ToV3(i, He.__ADAPT_MATRIX__, i), Le.transformV3ToV3(n, He.__ADAPT_MATRIX__, n)), this._boundingBox = new xe(i, n);
          var r = new Le();
          Le.subtract(n, i, r), Le.scale(r, .5, r);
          var a = new Le();
          Le.add(i, r, a), this._boundingSphere = new Se(a, Le.scalarLength(r)), this._boundingBoxCorners = s(8, null), this._boundingBox.getCorners(this._boundingBoxCorners);
        }, o.calcLeafBoudingBox = function (t) {
          for (var e = 0; e < this._leafNum; e++) this._leafs[e].calcLeafBoudingBox(t);
        }, o.calcLeafBoudingSphere = function (t, e) {
          for (var i = 0; i < this._leafNum; i++) this._leafs[i].calcLeafBoudingSphere(t, e);
        }, o._getVertexBuffer = function (t) {
          return void 0 === t && (t = 0), 0 == t ? this._vertexBuffer : null;
        }, o._getIndexBuffer = function () {
          return this._indexBuffer;
        }, o._beforeRender = function (t) {
          this._vertexBuffer._bind(), this._indexBuffer._bind();
          if (0 == t.renderElement._material.blend) {
            var e = t.camera;
            this.assembleIndex(e, e.position) && this._indexBuffer.setData(this._indexArrayBuffer);
          }
          return !0;
        }, o._getVertexBuffers = function () {
          return null;
        }, o._render = function (t) {
          L.mainContext.drawElements(fn.RENDER_LINE_MODEL ? 1 : 4, this._currentNumberIndices, 5123, 0), D.trianglesFaces += this._numberTriangle, D.drawCall++;
        }, a(0, o, "_originalBoundingSphere", function () {
          return this._boundingSphere;
        }), a(0, o, "_originalBoundingBox", function () {
          return this._boundingBox;
        }), a(0, o, "_vertexBufferCount", function () {
          return this._numberVertices;
        }), a(0, o, "triangleCount", function () {
          return this._numberTriangle;
        }), n(e, ["_TEMP_ARRAY_BUFFER", function () {
          return this._TEMP_ARRAY_BUFFER = new Uint32Array(He.CHUNK_GRID_NUM / He.LEAF_GRID_NUM * He.CHUNK_GRID_NUM / He.LEAF_GRID_NUM);
        }]), e;
      }(ti),
      Oi = function (t) {
        function e(t) {
          this._terrainSprite3DOwner = null, e.__super.call(this, t), this._terrainSprite3DOwner = t;
        }
        r(e, "laya.d3.terrain.TerrainRender", t);
        var i = e.prototype;
        return i._calculateBoundingSphere = function () {
          var t = this._terrainSprite3DOwner.terrainFilter;
          if (null == t) this._boundingSphere.toDefault();
          else {
            var e = t._originalBoundingSphere,
              i = NaN,
              n = this._terrainSprite3DOwner.transform,
              r = n.scale;
            i = r.x >= r.y && r.x >= r.z ? r.x : r.y >= r.z ? r.y : r.z, Le.transformCoordinate(e.center, n.worldMatrix, this._boundingSphere.center), this._boundingSphere.radius = e.radius * i, t.calcLeafBoudingSphere(n.worldMatrix, i);
          }
        }, i._calculateBoundingBox = function () {
          var t = this._terrainSprite3DOwner.terrainFilter;
          if (null == t) this._boundingBox.toDefault();
          else {
            for (var e = this._terrainSprite3DOwner.transform.worldMatrix, i = t._boundingBoxCorners, n = 0; n < 8; n++) Le.transformCoordinate(i[n], e, ei._tempBoundBoxCorners[n]);
            xe.createfromPoints(ei._tempBoundBoxCorners, this._boundingBox), t.calcLeafBoudingBox(e);
          }
        }, i._renderUpdate = function (t) {
          this._setShaderValueMatrix4x4(0, this._owner.transform.worldMatrix);
          var e = this._owner.getProjectionViewWorldMatrix(t);
          return this._setShaderValueMatrix4x4(1, e), !0;
        }, i._destroy = function () {
          t.prototype._destroy.call(this), this._terrainSprite3DOwner = null;
        }, e;
      }(ei),
      Ni = function (t) {
        function e() {
          this._time = 0, this._enableLightCount = 3, this._customRenderQueneIndex = 11, this.enableLight = !0, e.__super.call(this), this._renderState = new _t(), this._lights = [], this._quenes = [], this._cameraPool = [], this._renderableSprite3Ds = [], this.__loaded = !0, this._lightmaps = [], this._shaderValues = new ke(), this.parallelSplitShadowMaps = [], this._dynamicBatchManager = new St(), this._cullingRenders = [], this._cullingRendersLength = 0, this.enableFog = !1, this.fogStart = 300, this.fogRange = 1e3, this.fogColor = new Le(.7, .7, .7), this.ambientColor = new Le(.212, .227, .259), L.shaderHighPrecision && this.addShaderDefine(ui.SHADERDEFINE_HIGHPRECISION), this.on("display", this, this._display), this.on("undisplay", this, this._unDisplay), this._componentsMap = [], this._typeComponentsIndices = [], this._components = [];
        }
        r(e, "laya.d3.core.scene.Scene", t);
        var n = e.prototype;
        return i.imps(n, {
          "laya.webgl.submit.ISubmit": !0,
          "laya.resource.ICreateResource": !0
        }), n._setUrl = function (t) {
          this._url = t;
        }, n._getGroup = function () {
          return this._group;
        }, n._setGroup = function (t) {
          this._group = t;
        }, n._display = function () {
          i.stage._scenes.push(this), i.stage._scenes.sort(e._sortScenes);
          for (var t = 0, n = this._childs.length; t < n; t++) {
            var r = this._childs[t];
            r.active && r._activeHierarchy();
          }
        }, n._unDisplay = function () {
          var t = i.stage._scenes;
          t.splice(t.indexOf(this), 1);
          for (var e = 0, n = this._childs.length; e < n; e++) {
            var r = this._childs[e];
            r.active && r._inActiveHierarchy();
          }
        }, n._addChild3D = function (t) {
          t.transform._onWorldTransform(), t._setBelongScene(this), this.displayedInStage && t.active && t._activeHierarchy();
        }, n._removeChild3D = function (t) {
          t.transform.parent = null, this.displayedInStage && t.active && t._inActiveHierarchy(), t._setUnBelongScene();
        }, n.initOctree = function (t, e, i, n, r) {
          void 0 === r && (r = 6), this.treeSize = new Le(t, e, i), this.treeLevel = r, this.treeRoot = new dt(this, 0), this.treeRoot.init(n, this.treeSize);
        }, n._prepareUpdateToRenderState = function (t, e) {
          e.elapsedTime = this._lastCurrentTime ? this.timer.currTimer - this._lastCurrentTime : 0, this._lastCurrentTime = this.timer.currTimer, e.scene = this;
        }, n._prepareSceneToRender = function (t) {
          var e = this._lights.length;
          if (e > 0)
            for (var i = 0, n = 0; n < e && !(this._lights[n]._prepareToScene(t) && ++i >= this._enableLightCount); n++);
        }, n._updateChilds = function (t) {
          for (var e = 0, i = this._childs.length; e < i; ++e) this._childs[e]._update(t);
        }, n._preRenderScene = function (t, e, i) {
          var n = e._viewMatrix,
            r = e._projectionMatrix,
            a = e._projectionViewMatrix,
            s = 0,
            o = 0,
            h = e.camera;
          for (h.useOcclusionCulling ? this.treeRoot ? wt.renderObjectCullingOctree(i, this, h, n, r, a) : wt.renderObjectCulling(i, this, h, n, r, a) : wt.renderObjectCullingNoBoundFrustum(this, h, n, r, a), s = 0, o = this._quenes.length; s < o; s++) this._quenes[s] && this._quenes[s]._preRender(e);
        }, n._clear = function (t, e) {
          var i = e._viewport,
            n = e.camera,
            r = i.x,
            a = n.renderTargetSize.height - i.y - i.height,
            s = i.width,
            o = i.height;
          t.viewport(r, a, s, o);
          var h = 256,
            l = n.renderTarget;
          switch (n.clearFlag) {
            case 0:
              var u = n.clearColor;
              if (u) {
                t.enable(3089), t.scissor(r, a, s, o);
                var c = u.elements;
                t.clearColor(c[0], c[1], c[2], c[3]), h |= 16384;
              }
              if (l) switch (u || (h = 16384), l.depthStencilFormat) {
                case 33189:
                  h |= 256;
                  break;
                case 36168:
                  h |= 1024;
                  break;
                case 34041:
                  h |= 256, h |= 1024;
              }
              t.clear(h), u && t.disable(3089);
              break;
            case 1:
            case 2:
              if (l) switch (h = 16384, l.depthStencilFormat) {
                case 33189:
                  h |= 256;
                  break;
                case 36168:
                  h |= 1024;
                  break;
                case 34041:
                  h |= 256, h |= 1024;
              }
              t.clear(h);
              break;
            case 3:
              break;
            default:
              throw new Error("BaseScene:camera clearFlag invalid.");
          }
        }, n._renderScene = function (t, e) {
          var i, n = e.camera,
            r = 0,
            a = 0;
          for (r = 0; r < 2; r++)(i = this._quenes[r]) && (n.renderTarget ? i._render(e, !0) : i._render(e, !1));
          if (1 === n.clearFlag) {
            var s = n.sky;
            s && (O.setCullFace(t, !1), O.setDepthFunc(t, 515), O.setDepthMask(t, !1), s._render(e), O.setDepthFunc(t, 513), O.setDepthMask(t, !0));
          }
          for (r = 2, a = this._quenes.length; r < a; r++)(i = this._quenes[r]) && (i._sortAlpha(e.camera.transform.position), n.renderTarget ? i._render(e, !0) : i._render(e, !1));
        }, n._set3DRenderConfig = function (t) {
          t.disable(3042), O._blend = !1, t.blendFunc(770, 771), O._sFactor = 770, O._dFactor = 771, t.disable(2929), O._depthTest = !1, t.enable(2884), O._cullFace = !0, t.depthMask(1), O._depthMask = !0, t.frontFace(2304), O._frontFace = 2304;
        }, n._set2DRenderConfig = function (t) {
          O.setBlend(t, !0), O.setBlendFunc(t, 1, 771), O.setDepthTest(t, !1), O.setCullFace(t, !1), O.setDepthMask(t, !0), O.setFrontFace(t, 2305), t.viewport(0, 0, E.width, E.height);
        }, n._parseCustomProps = function (t, e, i, n) {
          var r = n.customProps.lightmaps,
            a = r.length,
            s = this._lightmaps;
          s.length = a;
          for (var o = 0; o < a; o++) s[o] = y.getRes(e[r[o].replace(".exr", ".png")]);
          this.setlightmaps(s);
          var h = n.customProps.ambientColor;
          h && (this.ambientColor = new Le(h[0], h[1], h[2]));
          var l = n.customProps.fogColor;
          l && (this.fogColor = new Le(l[0], l[1], l[2]));
        }, n._addLight = function (t) {
          this._lights.indexOf(t) < 0 && this._lights.push(t);
        }, n._removeLight = function (t) {
          var e = this._lights.indexOf(t);
          e >= 0 && this._lights.splice(e, 1);
        }, n._updateScene = function () {
          var t = this._renderState;
          this._prepareUpdateToRenderState(L.mainContext, t), this._updateComponents(t), this._updateChilds(t), this._lateUpdateComponents(t), this._time += t.elapsedTime / 1e3, this._shaderValues.setValue(22, this._time);
        }, n._updateSceneConch = function () {
          var t = this._renderState;
          this._prepareUpdateToRenderState(L.mainContext, t), this._updateComponents(t), this._lateUpdateComponents(t), this._prepareSceneToRender(t);
          for (var e = 0, i = this._cameraPool.length; e < i; e++) {
            var n = this._cameraPool[e];
            t.camera = n, n._prepareCameraToRender();
          }
        }, n._preRenderShadow = function (t, e, i, n, r) {
          this.treeRoot ? wt.renderShadowObjectCullingOctree(this, e, i, n, r) : wt.renderShadowObjectCulling(this, e, i, n, r);
          for (var a = 0, s = i.length; a < s; a++) i[a] && i[a]._preRender(t);
        }, n._renderShadowMap = function (t, e, i) {
          var n = this.parallelSplitShadowMaps[0];
          n._calcAllLightCameraInfo(i);
          var r = n.PSSMNum;
          this._preRenderShadow(e, n._lightCulling, n._shadowQuenes, n._lightVPMatrix[0], r), this.addShaderDefine(Ge.SHADERDEFINE_CAST_SHADOW);
          var a, s, o;
          if (r > 1)
            for (var h = 0; h < r; h++) a = n.getRenderTarget(h + 1), n.beginRenderTarget(h + 1), t.clearColor(1, 1, 1, 1), t.clear(16640), t.viewport(0, 0, a.width, a.height), e.camera = o = n.getLightCamera(h), o._prepareCameraToRender(), o._prepareCameraViewProject(o.viewMatrix, o.projectionMatrix), e._projectionViewMatrix = n._lightVPMatrix[h + 1], (s = n._shadowQuenes[h])._preRender(e), s._renderShadow(e, !1), n.endRenderTarget(h + 1);
          else a = n.getRenderTarget(1), n.beginRenderTarget(1), t.clearColor(1, 1, 1, 1), t.clear(16640), t.viewport(0, 0, a.width, a.height), e.camera = o = n.getLightCamera(0), o._prepareCameraToRender(), o._prepareCameraViewProject(o.viewMatrix, o.projectionMatrix), e._projectionViewMatrix = n._lightVPMatrix[0], (s = n._shadowQuenes[0])._preRender(e), s._renderShadow(e, !0), n.endRenderTarget(1);
          this.removeShaderDefine(Ge.SHADERDEFINE_CAST_SHADOW);
        }, n.addTreeNode = function (t) {
          this.treeRoot.addTreeNode(t);
        }, n.removeTreeNode = function (t) {
          this.treeSize && t._treeNode && t._treeNode.removeObject(t);
        }, n.setlightmaps = function (t) {
          this._lightmaps = t;
          for (var e = 0, i = this._renderableSprite3Ds.length; e < i; e++) this._renderableSprite3Ds[e]._render._applyLightMapParams();
        }, n.getlightmaps = function () {
          return this._lightmaps;
        }, n.addChildAt = function (t, e) {
          if (!(t instanceof laya.d3.core.Sprite3D)) throw new Error("Sprite3D:Node type must Sprite3D.");
          if (!t || this.destroyed || t === this) return t;
          if (t.zOrder && this._set$P("hasZorder", !0), e >= 0 && e <= this._childs.length) {
            if (t._parent === this) {
              var i = this.getChildIndex(t);
              this._childs.splice(i, 1), this._childs.splice(e, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, e)), this._childChanged();
            } else t.parent && t.parent.removeChild(t), this._childs === S.ARRAY_EMPTY && (this._childs = []), this._childs.splice(e, 0, t), this.conchModel && this.conchModel.addChildAt(t.conchModel, e), t.parent = this, this._addChild3D(t);
            return t;
          }
          throw new Error("appendChildAt:The index is out of bounds");
        }, n.addChild = function (t) {
          if (!(t instanceof laya.d3.core.Sprite3D)) throw new Error("Sprite3D:Node type must Sprite3D.");
          if (!t || this.destroyed || t === this) return t;
          if (t.zOrder && this._set$P("hasZorder", !0), t._parent === this) {
            var e = this.getChildIndex(t);
            e !== this._childs.length - 1 && (this._childs.splice(e, 1), this._childs.push(t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, this._childs.length - 1)), this._childChanged());
          } else t.parent && t.parent.removeChild(t), this._childs === S.ARRAY_EMPTY && (this._childs = []), this._childs.push(t), this.conchModel && this.conchModel.addChildAt(t.conchModel, this._childs.length - 1), t.parent = this, this._childChanged(), this._addChild3D(t);
          return t;
        }, n.removeChildAt = function (t) {
          var e = this.getChildAt(t);
          return e && (this._removeChild3D(e), this._childs.splice(t, 1), this.conchModel && this.conchModel.removeChild(e.conchModel), e.parent = null), e;
        }, n.removeChildren = function (t, e) {
          if (void 0 === t && (t = 0), void 0 === e && (e = 2147483647), this._childs && this._childs.length > 0) {
            var i = this._childs;
            if (0 === t && e >= a) {
              var n = i;
              this._childs = S.ARRAY_EMPTY;
            } else n = i.splice(t, e - t);
            for (var r = 0, a = n.length; r < a; r++) this._removeChild3D(n[r]), n[r].parent = null, this.conchModel && this.conchModel.removeChild(n[r].conchModel);
          }
          return this;
        }, n.addFrustumCullingObject = function (t) {
          this.treeRoot ? this.addTreeNode(t) : (this._cullingRendersLength === this._cullingRenders.length ? this._cullingRenders.push(t) : this._cullingRenders[this._cullingRendersLength] = t, t._indexInSceneFrustumCullingObjects = this._cullingRendersLength++);
        }, n.removeFrustumCullingObject = function (t) {
          if (this.treeRoot) this.removeTreeNode(t);
          else {
            this._cullingRendersLength--;
            var e = t._indexInSceneFrustumCullingObjects;
            if (e !== this._cullingRendersLength) {
              var i = this._cullingRenders[this._cullingRendersLength];
              this._cullingRenders[e] = i, i._indexInSceneFrustumCullingObjects = e, t._indexInSceneFrustumCullingObjects = -1;
            }
          }
        }, n.getRenderQueue = function (t) {
          return t < 3e3 ? this._quenes[1] || (this._quenes[1] = new ct(this)) : this._quenes[2] || (this._quenes[2] = new ct(this));
        }, n.addRenderQuene = function () {
          this._quenes[this._customRenderQueneIndex++] = new ct(this);
        }, n.addShaderDefine = function (t) {
          this._shaderDefineValue |= t;
        }, n.removeShaderDefine = function (t) {
          this._shaderDefineValue &= ~t;
        }, n.addScript = function (t) {
          return this._addComponent(t);
        }, n.getScriptByType = function (t, e) {
          return void 0 === e && (e = 0), this._getComponentByType(t, e);
        }, n.getScriptsByType = function (t, e) {
          this._getComponentsByType(t, e);
        }, n.getScriptByIndex = function (t) {
          return this._getComponentByIndex(t);
        }, n.removeScriptByType = function (t, e) {
          void 0 === e && (e = 0), this._removeComponentByType(t, e);
        }, n.removeScriptsByType = function (t) {
          this._removeComponentByType(t);
        }, n.removeAllScript = function () {
          this._removeAllComponent();
        }, n.render = function (t, e, i) {
          w._context.ctx._renderKey = 0, this._childs.length > 0 && t.addRenderObject(this);
        }, n.renderSubmit = function () {
          var t = L.mainContext,
            e = this._renderState;
          this._set3DRenderConfig(t), this._prepareSceneToRender(this._renderState);
          var i, n = 0,
            r = 0;
          if (Ze.debugMode || dt.debugMode)
            for (n = 0, r = this._cameraPool.length; n < r; n++) i = this._cameraPool[n], Ze._debugPhasorSprite.begin(1, i), i.activeInHierarchy && i._renderCamera(t, e, this), Ze._debugPhasorSprite.end();
          else
            for (n = 0, r = this._cameraPool.length; n < r; n++)(i = this._cameraPool[n]).activeInHierarchy && i._renderCamera(t, e, this);
          return this._set2DRenderConfig(t), 1;
        }, n.onAsynLoaded = function (t, e, i) {
          var n = e[0];
          if ("Scene" !== n.type) throw new Error("Scene: the .lh file root type must be Scene,please use other function to  load  this file.");
          var r = e[1];
          Ke._createNodeByJson(this, n, this, r), this.event("hierarchyloaded", [this]), this.__loaded = !0;
        }, n.destroy = function (e) {
          void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._renderState = null, this._lights = null, this._lightmaps = null, this._renderTargetTexture = null, this._shaderValues = null, this._cullingRenders = null, this._dynamicBatchManager = null, this._quenes = null, this._cameraPool = null, this._renderableSprite3Ds = null, this.treeRoot = null, this.treeSize = null, this.parallelSplitShadowMaps = null, this._typeComponentsIndices = null, this._components = null, y.clearRes(this.url), this.loaded || Ze._cancelLoadByUrl(this.url));
        }, n.getRenderType = function () {
          return 0;
        }, n.releaseRender = function () {}, n._addComponent = function (t) {
          var e, i = this._componentsMap.indexOf(t);
          if (-1 === i) e = [], this._componentsMap.push(t), this._typeComponentsIndices.push(e);
          else if (e = this._typeComponentsIndices[i], this._components[e[0]].isSingleton) throw new Error("无法单实例创建" + t + "组件，" + t + "组件已存在！");
          var n = p.getInstance(t);
          e.push(this._components.length), this._components.push(n);
          return n._initialize(this), n;
        }, n._removeComponent = function (t, e) {
          var i = this._typeComponentsIndices[t],
            n = i[e],
            r = this._components[n];
          this._components.splice(n, 1), i.splice(e, 1), 0 === i.length && (this._typeComponentsIndices.splice(t, 1), this._componentsMap.splice(t, 1));
          for (var a = 0, s = this._componentsMap.length; a < s; a++)
            for (var o = (i = this._typeComponentsIndices[a]).length - 1; o >= 0; o--) {
              var h = i[o];
              if (!(h > n)) break;
              i[o] = --h;
            }
          r._destroy();
        }, n._getComponentByType = function (t, e) {
          void 0 === e && (e = 0);
          var i = this._componentsMap.indexOf(t);
          return -1 === i ? null : this._components[this._typeComponentsIndices[i][e]];
        }, n._getComponentsByType = function (t, e) {
          var i = this._componentsMap.indexOf(t);
          if (-1 !== i) {
            var n = this._typeComponentsIndices[i],
              r = n.length;
            e.length = r;
            for (var a = 0; a < r; a++) e[a] = this._components[n[a]];
          } else e.length = 0;
        }, n._getComponentByIndex = function (t) {
          return this._components[t];
        }, n._removeComponentByType = function (t, e) {
          void 0 === e && (e = 0);
          var i = this._componentsMap.indexOf(t); - 1 !== i && this._removeComponent(i, e);
        }, n._removeComponentsByType = function (t) {
          var e = this._componentsMap.indexOf(t);
          if (-1 !== e)
            for (var i = this._typeComponentsIndices[e], n = 0, r = i.length; n < r; i.length < r ? r-- : n++) this._removeComponent(e, n);
        }, n._removeAllComponent = function () {
          for (var t = 0, e = this._componentsMap.length; t < e; this._componentsMap.length < e ? e-- : t++) this._removeComponentsByType(this._componentsMap[t]);
        }, n._updateComponents = function (t) {
          for (var e = 0, i = this._components.length; e < i; e++) {
            var n = this._components[e];
            !n.started && (n._start(t), n.started = !0), n.enable && n._update(t);
          }
        }, n._lateUpdateComponents = function (t) {
          for (var e = 0; e < this._components.length; e++) {
            var i = this._components[e];
            !i.started && (i._start(t), i.started = !0), i.enable && i._lateUpdate(t);
          }
        }, n._preRenderUpdateComponents = function (t) {
          for (var e = 0; e < this._components.length; e++) {
            var i = this._components[e];
            !i.started && (i._start(t), i.started = !0), i.enable && i._preRenderUpdate(t);
          }
        }, n._postRenderUpdateComponents = function (t) {
          for (var e = 0; e < this._components.length; e++) {
            var i = this._components[e];
            !i.started && (i._start(t), i.started = !0), i.enable && i._postRenderUpdate(t);
          }
        }, a(0, n, "_loaded", null, function (t) {
          this.__loaded = t;
        }), a(0, n, "fogColor", function () {
          return this._fogColor;
        }, function (t) {
          this._fogColor = t, this._shaderValues.setValue(0, t.elements);
        }), a(0, n, "enableFog", function () {
          return this._enableFog;
        }, function (t) {
          this._enableFog !== t && (this._enableFog = t, t ? (this.addShaderDefine(ui.SHADERDEFINE_FOG), this.removeShaderDefine(ui.SAHDERDEFINE_DEPTHFOG)) : this.removeShaderDefine(ui.SHADERDEFINE_FOG));
        }), a(0, n, "url", function () {
          return this._url;
        }), a(0, n, "loaded", function () {
          return this.__loaded;
        }), a(0, n, "enableDepthFog", function () {
          return this._enableDepthFog;
        }, function (t) {
          this._enableDepthFog != t && (this._enableDepthFog = t, t ? (this.addShaderDefine(ui.SAHDERDEFINE_DEPTHFOG), this.removeShaderDefine(ui.SHADERDEFINE_FOG)) : this.removeShaderDefine(ui.SAHDERDEFINE_DEPTHFOG));
        }), a(0, n, "fogStart", function () {
          return this._fogStart;
        }, function (t) {
          this._fogStart = t, this._shaderValues.setValue(1, t);
        }), a(0, n, "fogRange", function () {
          return this._fogRange;
        }, function (t) {
          this._fogRange = t, this._shaderValues.setValue(2, t);
        }), a(0, n, "ambientColor", function () {
          return this._ambientColor;
        }, function (t) {
          this._ambientColor = t, this._shaderValues.setValue(21, t.elements);
        }), a(0, n, "scene", function () {
          return this;
        }), a(0, n, "renderableSprite3Ds", function () {
          return this._renderableSprite3Ds.slice();
        }), e._sortScenes = function (t, n) {
          if (t.parent === i.stage && n.parent === i.stage) {
            var r = i.stage._childs;
            return r.indexOf(t) - r.indexOf(n);
          }
          return t.parent !== i.stage && n.parent !== i.stage ? e._sortScenes(t.parent, n.parent) : t.parent === i.stage ? -1 : 1;
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.FOGCOLOR = 0, e.FOGSTART = 1, e.FOGRANGE = 2, e.LIGHTDIRECTION = 3, e.LIGHTDIRCOLOR = 4, e.POINTLIGHTPOS = 5, e.POINTLIGHTRANGE = 6, e.POINTLIGHTATTENUATION = 7, e.POINTLIGHTCOLOR = 8, e.SPOTLIGHTPOS = 9, e.SPOTLIGHTDIRECTION = 10, e.SPOTLIGHTSPOT = 11, e.SPOTLIGHTRANGE = 12, e.SPOTLIGHTATTENUATION = 13, e.SPOTLIGHTCOLOR = 14, e.SHADOWDISTANCE = 15, e.SHADOWLIGHTVIEWPROJECT = 16, e.SHADOWMAPPCFOFFSET = 17, e.SHADOWMAPTEXTURE1 = 18, e.SHADOWMAPTEXTURE2 = 19, e.SHADOWMAPTEXTURE3 = 20, e.AMBIENTCOLOR = 21, e.TIME = 22, e;
      }(I),
      Vi = function (t) {
        function e(t) {
          e.__super.call(this), this.__loaded = !0, this._projectionViewWorldUpdateLoopCount = -1, this._activeInHierarchy = !1, this._projectionViewWorldMatrix = new Ce(), this._shaderValues = new ke(), this._colliders = [], this._id = ++e._uniqueIDCounter, this._transform = new ii(this), this.name = t || "Sprite3D-" + e._nameNumberCounter++, this.layer = z.currentCreationLayer, this.active = !0;
        }
        r(e, "laya.d3.core.Sprite3D", di);
        var n = e.prototype;
        return i.imps(n, {
          "laya.d3.core.render.IUpdate": !0,
          "laya.resource.ICreateResource": !0,
          "laya.d3.core.IClone": !0
        }), n._setUrl = function (t) {
          this._url = t;
        }, n._getGroup = function () {
          return this._group;
        }, n._setGroup = function (t) {
          this._group = t;
        }, n._addChild3D = function (t) {
          t.transform.parent = this.transform, this._hierarchyAnimator && (!t._hierarchyAnimator && t._setHierarchyAnimator(this._hierarchyAnimator, null), this._getAnimatorToLinkSprite3D(t, !0, [t.name])), this._scene && (t._setBelongScene(this._scene), this._activeInHierarchy && t._active && t._activeHierarchy());
        }, n._removeChild3D = function (t) {
          t.transform.parent = null, this._scene && (this._activeInHierarchy && t._active && t._inActiveHierarchy(), t._setUnBelongScene()), this._hierarchyAnimator && (t._hierarchyAnimator == this._hierarchyAnimator && t._clearHierarchyAnimator(this._hierarchyAnimator, null), this._getAnimatorToLinkSprite3D(t, !1, [t.name]));
        }, n._parseBaseCustomProps = function (t) {
          var e = this.transform.localPosition;
          e.fromArray(t.translate), this.transform.localPosition = e;
          var i = this.transform.localRotation;
          i.fromArray(t.rotation), this.transform.localRotation = i;
          var n = this.transform.localScale;
          n.fromArray(t.scale), this.transform.localScale = n;
          var r = t.layer;
          null != r && (this.layer = z.getLayerByNumber(r));
        }, n._parseCustomComponent = function (t, e, i) {
          for (var n in i) {
            var r = i[n];
            switch (n) {
              case "Animator":
                var a = this.addComponent(Si);
                if (r.avatarPath) a.avatar = y.getRes(e[r.avatarPath]);
                else {
                  var s = r.avatar;
                  if (s) {
                    a.avatar = y.getRes(e[s.path]);
                    var o = s.linkSprites;
                    o && t.once("hierarchyloaded", this, this._onRootNodeHierarchyLoaded, [a, o]);
                  }
                }
                for (var h = r.clipPaths, l = h.length, u = 0; u < l; u++) a.addClip(y.getRes(e[h[u]]));
                a.clip = y.getRes(e[h[0]]);
                var c = r.playOnWake;
                void 0 !== c && (a.playOnWake = c);
                break;
              case "Rigidbody":
                this.addComponent(Ei);
                break;
              case "SphereCollider":
                var _ = this.addComponent(tn);
                _.isTrigger = r.isTrigger;
                var d = _.center;
                d.fromArray(r.center), _.center = d, _.radius = r.radius;
                break;
              case "BoxCollider":
                var f = this.addComponent($i);
                f.isTrigger = r.isTrigger, f.center.fromArray(r.center);
                var p = f.size;
                p.fromArray(r.size), f.size = p;
                break;
              case "MeshCollider":
                this.addComponent(Ji);
            }
          }
        }, n._onRootNodeHierarchyLoaded = function (t, e) {
          for (var i in e) {
            for (var n = this, r = e[i], a = 0, s = r.length; a < s; a++) {
              var o = r[a];
              if ("" === o) break;
              if (!(n = n.getChildByName(o))) break;
            }
            n && t.linkSprite3DToAvatarNode(i, n);
          }
        }, n._setHierarchyAnimator = function (t, e) {
          this._changeHierarchyAnimator(t);
          for (var i = 0, n = this._childs.length; i < n; i++) {
            var r = this._childs[i];
            r._hierarchyAnimator == e && r._setHierarchyAnimator(t, e);
          }
        }, n._clearHierarchyAnimator = function (t, e) {
          this._changeHierarchyAnimator(e);
          for (var i = 0, n = this._childs.length; i < n; i++) {
            var r = this._childs[i];
            r._hierarchyAnimator == t && r._clearHierarchyAnimator(t, e);
          }
        }, n._getAnimatorToLinkSprite3D = function (t, e, i) {
          var n = this.getComponentByType(Si);
          if (n && (n.avatar ? n.avatar._version || t._setAnimatorToLinkAvatar(n, e) : t._setAnimatorToLinkSprite3DNoAvatar(n, e, i)), this._parent && this._parent instanceof laya.d3.core.Sprite3D) {
            i.unshift(this._parent.name);
            var r = this._parent;
            r._hierarchyAnimator && r._getAnimatorToLinkSprite3D(t, e, i);
          }
        }, n._setAnimatorToLinkSprite3DNoAvatar = function (t, e, i) {
          var n = 0,
            r = 0;
          for (n = 0, r = t.getClipCount(); n < r; n++) t._handleSpriteOwnersBySprite(n, e, i, this);
          for (n = 0, r = this._childs.length; n < r; n++) {
            var a = this._childs[n],
              s = i.length;
            i.push(a.name), a._setAnimatorToLinkSprite3DNoAvatar(t, e, i), i.splice(s, 1);
          }
        }, n._changeHierarchyAnimator = function (t) {
          this._hierarchyAnimator = t;
        }, n._isLinkSpriteToAnimationNode = function (t, e, i) {
          var n = t._avatarNodes.indexOf(e),
            r = t._cacheSpriteToNodesMap;
          if (i) this._transform.dummy = e.transform, t._cacheNodesToSpriteMap[n] = r.length, r.push(n);
          else {
            this._transform.dummy = null;
            var a = t._cacheNodesToSpriteMap[n];
            t._cacheNodesToSpriteMap[n] = null, r.splice(a, 1);
          }
        }, n._setBelongScene = function (t) {
          this._scene = t;
          for (var e = 0, i = this._childs.length; e < i; e++) this._childs[e]._setBelongScene(t);
        }, n._setUnBelongScene = function () {
          this._scene = null;
          for (var t = 0, e = this._childs.length; t < e; t++) this._childs[t]._setUnBelongScene();
        }, n._activeHierarchy = function () {
          var t = 0,
            e = 0;
          for (this._activeInHierarchy = !0, this._addSelfRenderObjects(), t = 0, e = this._colliders.length; t < e; t++) this._layer._addCollider(this._colliders[t]);
          for (this.event("activeinhierarchychanged", !0), t = 0, e = this._childs.length; t < e; t++) {
            var i = this._childs[t];
            i._active && i._activeHierarchy();
          }
        }, n._inActiveHierarchy = function () {
          var t = 0,
            e = 0;
          for (this._activeInHierarchy = !1, this._clearSelfRenderObjects(), t = 0, e = this._colliders.length; t < e; t++) {
            var i = this._colliders[t];
            i._clearCollsionMap(), this._layer._removeCollider(i);
          }
          for (this.event("activeinhierarchychanged", !1), t = 0, e = this._childs.length; t < e; t++) {
            var n = this._childs[t];
            n._active && n._inActiveHierarchy();
          }
        }, n.addComponent = function (t) {
          var e, i = this._componentsMap.indexOf(t);
          if (-1 === i) e = [], this._componentsMap.push(t), this._typeComponentsIndices.push(e);
          else if (e = this._typeComponentsIndices[i], this._components[e[0]].isSingleton) throw new Error("无法单实例创建" + t + "组件，" + t + "组件已存在！");
          var n = p.getInstance(t);
          if (e.push(this._components.length), this._components.push(n), n instanceof laya.d3.component.physics.Collider) {
            this.getComponentByType(Ei) && (n._isRigidbody = !0), this._activeInHierarchy && this._layer._addCollider(n), this._colliders.push(n);
          } else if (n instanceof laya.d3.component.Animator) {
            var r = n;
            this._setHierarchyAnimator(r, this._parent ? this._parent._hierarchyAnimator : null), this._setAnimatorToLinkSprite3DNoAvatar(r, !0, []);
          } else if (n instanceof laya.d3.component.Rigidbody)
            for (var a = 0, s = this._colliders.length; a < s; a++) this._colliders[a]._setIsRigidbody(!0);
          return n instanceof laya.d3.component.Script && this._scripts.push(n), n._initialize(this), n;
        }, n._removeComponent = function (t, e) {
          var i = 0,
            n = 0,
            r = this._typeComponentsIndices[t],
            a = r[e],
            s = this._components[a];
          if (s instanceof laya.d3.component.physics.Collider) {
            var o = s;
            this._activeInHierarchy && this._layer._removeCollider(o), this._colliders.splice(this._colliders.indexOf(o), 1);
          } else if (s instanceof laya.d3.component.Animator) {
            var h = s;
            this._clearHierarchyAnimator(h, this._parent ? this._parent._hierarchyAnimator : null);
          } else if (s instanceof laya.d3.component.Rigidbody)
            for (i = 0, n = this._colliders.length; i < n; i++) {
              var l = this._colliders[i];
              l._setIsRigidbody(!1);
              var u = l._runtimeCollisonMap,
                c = l._runtimeCollisonTestMap;
              for (var _ in u) delete c[_];
            }
          for (this._components.splice(a, 1), s instanceof laya.d3.component.Script && this._scripts.splice(this._scripts.indexOf(s), 1), r.splice(e, 1), 0 === r.length && (this._typeComponentsIndices.splice(t, 1), this._componentsMap.splice(t, 1)), i = 0, n = this._componentsMap.length; i < n; i++)
            for (var d = (r = this._typeComponentsIndices[i]).length - 1; d >= 0; d--) {
              var f = r[d];
              if (!(f > a)) break;
              r[d] = --f;
            }
          s._destroy();
        }, n._clearSelfRenderObjects = function () {}, n._addSelfRenderObjects = function () {}, n._parseCustomProps = function (t, e, i, n) {}, n._updateChilds = function (t) {
          var e = this._childs.length;
          if (0 !== e)
            for (var i = 0; i < e; ++i) this._childs[i]._update(t);
        }, n._getSortID = function (t, e) {
          return 1e3 * e.id + t._getVertexBuffer().vertexDeclaration.id;
        }, n._update = function (t) {
          t.owner = this, this._activeInHierarchy && (this._updateComponents(t), this._lateUpdateComponents(t), D.spriteCount++, this._childs.length && this._updateChilds(t));
        }, n.getProjectionViewWorldMatrix = function (t) {
          return Ce.multiply(t, this.transform.worldMatrix, this._projectionViewWorldMatrix), this._projectionViewWorldMatrix;
        }, n.loadHierarchy = function (t) {
          this.addChild(laya.d3.core.Sprite3D.load(t));
        }, n.addChildAt = function (t, e) {
          if (!(t instanceof laya.d3.core.Sprite3D)) throw new Error("Sprite3D:Node type must Sprite3D.");
          if (!t || this.destroyed || t === this) return t;
          if (t.zOrder && this._set$P("hasZorder", !0), e >= 0 && e <= this._childs.length) {
            if (t._parent === this) {
              var i = this.getChildIndex(t);
              this._childs.splice(i, 1), this._childs.splice(e, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, e)), this._childChanged();
            } else t.parent && t.parent.removeChild(t), this._childs === S.ARRAY_EMPTY && (this._childs = []), this._childs.splice(e, 0, t), this.conchModel && this.conchModel.addChildAt(t.conchModel, e), t.parent = this, this._addChild3D(t);
            return t;
          }
          throw new Error("appendChildAt:The index is out of bounds");
        }, n.addChild = function (t) {
          if (!(t instanceof laya.d3.core.Sprite3D)) throw new Error("Sprite3D:Node type must Sprite3D.");
          if (!t || this.destroyed || t === this) return t;
          if (t.zOrder && this._set$P("hasZorder", !0), t._parent === this) {
            var e = this.getChildIndex(t);
            e !== this._childs.length - 1 && (this._childs.splice(e, 1), this._childs.push(t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, this._childs.length - 1)), this._childChanged());
          } else t.parent && t.parent.removeChild(t), this._childs === S.ARRAY_EMPTY && (this._childs = []), this._childs.push(t), this.conchModel && this.conchModel.addChildAt(t.conchModel, this._childs.length - 1), t.parent = this, this._childChanged(), this._addChild3D(t);
          return t;
        }, n.removeChildAt = function (t) {
          var e = this.getChildAt(t);
          return e && (this._removeChild3D(e), this._childs.splice(t, 1), this.conchModel && this.conchModel.removeChild(e.conchModel), e.parent = null), e;
        }, n.removeChildren = function (t, e) {
          if (void 0 === t && (t = 0), void 0 === e && (e = 2147483647), this._childs && this._childs.length > 0) {
            var i = this._childs;
            if (0 === t && e >= a) {
              var n = i;
              this._childs = S.ARRAY_EMPTY;
            } else n = i.splice(t, e - t);
            for (var r = 0, a = n.length; r < a; r++) this._removeChild3D(n[r]), n[r].parent = null, this.conchModel && this.conchModel.removeChild(n[r].conchModel);
          }
          return this;
        }, n.onAsynLoaded = function (t, e, i) {
          var n = e[0];
          if ("Sprite3D" !== n.type) throw new Error("Sprite3D: The .lh file root type must be Sprite3D,please use other function to  load  this file.");
          var r = e[1];
          Ke._createNodeByJson(this, n, this, r), this.event("hierarchyloaded", [this]), this.__loaded = !0;
        }, n.cloneTo = function (t) {
          if (this.destroyed) throw new Error("Sprite3D: Can't be cloned if the Sprite3D has destroyed.");
          var e = t;
          e.name = this.name, e._destroyed = this._destroyed, e.timer = this.timer, e._$P = this._$P, e.active = this._active;
          var i = e.transform.localPosition;
          this.transform.localPosition.cloneTo(i), e.transform.localPosition = i;
          var n = e.transform.localRotation;
          this.transform.localRotation.cloneTo(n), e.transform.localRotation = n;
          var r = e.transform.localScale;
          this.transform.localScale.cloneTo(r), e.transform.localScale = r, e.isStatic = this.isStatic;
          var a = 0,
            s = 0;
          for (a = 0, s = this._componentsMap.length; a < s; a++) {
            var o = e.addComponent(this._componentsMap[a]);
            this._components[a]._cloneTo(o);
          }
          for (a = 0, s = this._childs.length; a < s; a++) e.addChild(this._childs[a].clone());
          var h = e.getComponentByType(Si);
          if (h) {
            var l = h._linkSpritesData;
            if (l)
              for (var u in l) {
                for (var c = l[u], _ = e, d = 0, f = c.length; d < f && (_ = _.getChildByName(c[d])); d++);
                if (_) {
                  var p = h._avatarNodeMap[u];
                  _._isLinkSpriteToAnimationNode(h, p, !0);
                }
              }
          }
        }, n.clone = function () {
          var t = new this.constructor();
          return this.cloneTo(t), t;
        }, n.destroy = function (t) {
          if (void 0 === t && (t = !0), !this.destroyed) {
            laya.display.Node.prototype.destroy.call(this, t);
            var e = 0,
              i = 0;
            for (e = 0, i = this._components.length; e < i; e++) this._components[e]._destroy();
            this._components = null, this._componentsMap = null, this._typeComponentsIndices = null, this._transform = null, this._colliders = null, y.clearRes(this.url), this.loaded || Ze._cancelLoadByUrl(this.url);
          }
        }, n._handleSpriteToAvatar = function (t, e) {
          t._avatarNodes;
          var i = t._avatarNodeMap[this.name];
          i && i.name === this.name && !this._transform.dummy && this._isLinkSpriteToAnimationNode(t, i, e);
        }, n._setAnimatorToLinkAvatar = function (t, e) {
          this._handleSpriteToAvatar(t, e);
          for (var i = 0, n = this._childs.length; i < n; i++) {
            this._childs[i]._setAnimatorToLinkAvatar(t, e);
          }
        }, a(0, n, "activeInHierarchy", function () {
          return this._activeInHierarchy;
        }), a(0, n, "_loaded", null, function (t) {
          this.__loaded = t;
        }), a(0, n, "active", function () {
          return this._active;
        }, function (t) {
          this._active !== t && (this._active = t, this._parent && (this._parent === this._scene && this._parent.displayedInStage || this._parent._activeInHierarchy) && (t ? this._activeHierarchy() : this._inActiveHierarchy()));
        }), a(0, n, "componentsCount", function () {
          return this._components.length;
        }), a(0, n, "loaded", function () {
          return this.__loaded;
        }), a(0, n, "id", function () {
          return this._id;
        }), a(0, n, "url", function () {
          return this._url;
        }), a(0, n, "layer", function () {
          return this._layer;
        }, function (t) {
          if (this._layer !== t) {
            if (!t) throw new Error("Layer value can be null.");
            if (this._activeInHierarchy) {
              var e = 0,
                i = this._colliders.length;
              if (this._layer)
                for (e = 0; e < i; e++) this._layer._removeCollider(this._colliders[e]);
              for (e = 0; e < i; e++) t._addCollider(this._colliders[e]);
            }
            this._layer = t, this.event("layerchanged", t);
          }
        }), a(0, n, "scene", function () {
          return this._scene;
        }), a(0, n, "transform", function () {
          return this._transform;
        }), e.instantiate = function (t, e, i, n, r) {
          void 0 === i && (i = !0);
          var a = t.clone();
          e && e.addChild(a);
          var s = a.transform;
          if (i) {
            var o = s.worldMatrix;
            t.transform.worldMatrix.cloneTo(o), s.worldMatrix = o;
          } else n && (s.position = n), r && (s.rotation = r);
          return a;
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.WORLDMATRIX = 0, e.MVPMATRIX = 1, e._uniqueIDCounter = 0, e._nameNumberCounter = 0, e;
      }(),
      Fi = function (t) {
        function e(t, i, n, r, a, s, o, h) {
          if (this._curActTexIndex = 0, this._program = null, this._attributeParams = null, this._uniformParams = null, this._attributeParamsMap = [], this._sceneUniformParamsMap = [], this._cameraUniformParamsMap = [], this._spriteUniformParamsMap = [], this._materialUniformParamsMap = [], this._renderElementUniformParamsMap = [], e.__super.call(this), !t || !i) throw "Shader Error";
          this._id = ++e._count, this._vs = t, this._ps = i, this._attributeMap = n, this._sceneUniformMap = r, this._cameraUniformMap = a, this._spriteUniformMap = s, this._materialUniformMap = o, this._renderElementUniformMap = h, this.recreateResource();
        }
        r(e, "laya.d3.shader.Shader3D", c);
        var i = e.prototype;
        return i.recreateResource = function () {
          this._compile(), this.completeCreate(), this.memorySize = 0;
        }, i.disposeResource = function () {
          L.mainContext.deleteShader(this._vshader), L.mainContext.deleteShader(this._pshader), L.mainContext.deleteProgram(this._program), this._vshader = this._pshader = this._program = null, this._attributeParams = null, this._uniformParams = null, this.memorySize = 0, this._curActTexIndex = 0;
        }, i._compile = function () {
          if (this._vs && this._ps && !this._attributeParams && !this._uniformParams) {
            this._reCompile = !0, this._attributeParams = [], this._uniformParams = [];
            var t = [this._vs, this._ps],
              i = L.mainContext;
            if (this._program = i.createProgram(), this._vshader = e._createShader(i, t[0], 35633), this._pshader = e._createShader(i, t[1], 35632), i.attachShader(this._program, this._vshader), i.attachShader(this._program, this._pshader), i.linkProgram(this._program), !w.isConchApp && ui.debugMode && !i.getProgramParameter(this._program, 35714)) throw i.getProgramInfoLog(this._program);
            var n, r = 0,
              a = 0,
              s = 0;
            for (s = w.isConchApp ? i.getProgramParameterEx(this._vs, this._ps, "", 35721) : i.getProgramParameter(this._program, 35721), r = 0; r < s; r++) {
              var o = null;
              n = {
                vartype: "attribute",
                ivartype: 0,
                attrib: o = w.isConchApp ? i.getActiveAttribEx(this._vs, this._ps, "", r) : i.getActiveAttrib(this._program, r),
                location: i.getAttribLocation(this._program, o.name),
                name: o.name,
                type: o.type,
                isArray: !1,
                isSame: !1,
                preValue: null,
                indexOfParams: 0
              }, this._attributeParams.push(n);
            }
            var h = 0;
            for (h = w.isConchApp ? i.getProgramParameterEx(this._vs, this._ps, "", 35718) : i.getProgramParameter(this._program, 35718), r = 0; r < h; r++) {
              var l = null;
              l = w.isConchApp ? i.getActiveUniformEx(this._vs, this._ps, "", r) : i.getActiveUniform(this._program, r), (n = {
                vartype: "uniform",
                ivartype: 1,
                attrib: o,
                location: i.getUniformLocation(this._program, l.name),
                name: l.name,
                type: l.type,
                isArray: !1,
                isSame: !1,
                preValue: null,
                indexOfParams: 0
              }).name.indexOf("[0]") > 0 && (n.name = n.name.substr(0, n.name.length - 3), n.isArray = !0, n.location = i.getUniformLocation(this._program, n.name)), this._uniformParams.push(n);
            }
            for (r = 0, a = this._attributeParams.length; r < a; r++)(n = this._attributeParams[r]).indexOfParams = r, n.index = 1, n.value = [n.location, null], n.codename = n.name, n.name = null != this._attributeMap[n.codename] ? this._attributeMap[n.codename] : n.codename, this._attributeParamsMap.push(n.name), this._attributeParamsMap.push(n), n._this = this, n.uploadedValue = [], n.fun = this._attribute;
            for (r = 0, a = this._uniformParams.length; r < a; r++) switch (n = this._uniformParams[r], n.indexOfParams = r, n.index = 1, n.value = [n.location, null], n.codename = n.name, null != this._sceneUniformMap[n.codename] ? (n.name = this._sceneUniformMap[n.codename], this._sceneUniformParamsMap.push(n.name), this._sceneUniformParamsMap.push(n)) : null != this._cameraUniformMap[n.codename] ? (n.name = this._cameraUniformMap[n.codename], this._cameraUniformParamsMap.push(n.name), this._cameraUniformParamsMap.push(n)) : null != this._spriteUniformMap[n.codename] ? (n.name = this._spriteUniformMap[n.codename], this._spriteUniformParamsMap.push(n.name), this._spriteUniformParamsMap.push(n)) : null != this._materialUniformMap[n.codename] ? (n.name = this._materialUniformMap[n.codename], this._materialUniformParamsMap.push(n.name), this._materialUniformParamsMap.push(n)) : null != this._renderElementUniformMap[n.codename] ? (n.name = this._renderElementUniformMap[n.codename], this._renderElementUniformParamsMap.push(n.name), this._renderElementUniformParamsMap.push(n)) : console.log("Shader:can't find uinform name:" + n.codename + " in shader file."), n._this = this, n.uploadedValue = [], n.type) {
              case 5124:
                n.fun = n.isArray ? this._uniform1iv : this._uniform1i;
                break;
              case 5126:
                n.fun = n.isArray ? this._uniform1fv : this._uniform1f;
                break;
              case 35664:
                n.fun = n.isArray ? this._uniform_vec2v : this._uniform_vec2;
                break;
              case 35665:
                n.fun = n.isArray ? this._uniform_vec3v : this._uniform_vec3;
                break;
              case 35666:
                n.fun = n.isArray ? this._uniform_vec4v : this._uniform_vec4;
                break;
              case 35678:
                n.fun = this._uniform_sampler2D;
                break;
              case 35680:
                n.fun = this._uniform_samplerCube;
                break;
              case 35676:
                n.fun = this._uniformMatrix4fv;
                break;
              case 35670:
                n.fun = this._uniform1i;
                break;
              case 35674:
                n.fun = this._uinformMatrix2fv;
                break;
              case 35675:
                n.fun = this._uinformMatrix3fv;
                break;
              default:
                throw new Error("compile shader err!");
            }
          }
        }, i._attribute = function (t, e) {
          var i = L.mainContext,
            n = d._enableAtributes,
            r = t.location;
          return n[r] || i.enableVertexAttribArray(r), i.vertexAttribPointer(r, e[0], e[1], e[2], e[3], e[4]), n[r] = d._bindVertexBuffer, 1;
        }, i._uniform1f = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e ? (L.mainContext.uniform1f(t.location, i[0] = e), 1) : 0;
        }, i._uniform1fv = function (t, e) {
          if (e.length < 4) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (L.mainContext.uniform1fv(t.location, e), i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0;
          }
          return L.mainContext.uniform1fv(t.location, e), 1;
        }, i._uniform_vec2 = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] ? (L.mainContext.uniform2f(t.location, i[0] = e[0], i[1] = e[1]), 1) : 0;
        }, i._uniform_vec2v = function (t, e) {
          if (e.length < 2) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (L.mainContext.uniform2fv(t.location, e), i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0;
          }
          return L.mainContext.uniform2fv(t.location, e), 1;
        }, i._uniform_vec3 = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (L.mainContext.uniform3f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]), 1) : 0;
        }, i._uniform_vec3v = function (t, e) {
          return L.mainContext.uniform3fv(t.location, e), 1;
        }, i._uniform_vec4 = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (L.mainContext.uniform4f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]), 1) : 0;
        }, i._uniform_vec4v = function (t, e) {
          return L.mainContext.uniform4fv(t.location, e), 1;
        }, i._uniformMatrix2fv = function (t, e) {
          return L.mainContext.uniformMatrix2fv(t.location, !1, e), 1;
        }, i._uniformMatrix3fv = function (t, e) {
          return L.mainContext.uniformMatrix3fv(t.location, !1, e), 1;
        }, i._uniformMatrix4fv = function (t, e) {
          return L.mainContext.uniformMatrix4fv(t.location, !1, e), 1;
        }, i._uinformMatrix2fv = function (t, e) {
          return L.mainContext.uniformMatrix2fv(t.location, !1, e), 1;
        }, i._uinformMatrix3fv = function (t, e) {
          return L.mainContext.uniformMatrix3fv(t.location, !1, e), 1;
        }, i._uniform1i = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e ? (L.mainContext.uniform1i(t.location, i[0] = e), 1) : 0;
        }, i._uniform1iv = function (t, e) {
          return L.mainContext.uniform1iv(t.location, e), 1;
        }, i._uniform_ivec2 = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] ? (L.mainContext.uniform2i(t.location, i[0] = e[0], i[1] = e[1]), 1) : 0;
        }, i._uniform_ivec2v = function (t, e) {
          return L.mainContext.uniform2iv(t.location, e), 1;
        }, i._uniform_vec3i = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (L.mainContext.uniform3i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]), 1) : 0;
        }, i._uniform_vec3vi = function (t, e) {
          return L.mainContext.uniform3iv(t.location, e), 1;
        }, i._uniform_vec4i = function (t, e) {
          var i = t.uploadedValue;
          return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (L.mainContext.uniform4i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]), 1) : 0;
        }, i._uniform_vec4vi = function (t, e) {
          return L.mainContext.uniform4iv(t.location, e), 1;
        }, i._uniform_sampler2D = function (t, i) {
          var n = i.source || i.defaulteTexture.source,
            r = L.mainContext,
            a = t.uploadedValue;
          if (null == a[0]) {
            if (this._curActTexIndex > 7) throw new Error("Shader3D: shader support textures max count is 8,can't large than it.");
            return a[0] = this._curActTexIndex, r.uniform1i(t.location, this._curActTexIndex), r.activeTexture(e._TEXTURES[this._curActTexIndex]), n && O.bindTexture(r, 3553, n), this._curActTexIndex++, 1;
          }
          return r.activeTexture(e._TEXTURES[a[0]]), n && O.bindTexture(r, 3553, n), 0;
        }, i._uniform_samplerCube = function (t, i) {
          var n = i.source || i.defaulteTexture.source,
            r = L.mainContext,
            a = t.uploadedValue;
          if (null == a[0]) {
            if (this._curActTexIndex > 7) throw new Error("Shader3D: shader support textures max count is 8,can't large than it.");
            return a[0] = this._curActTexIndex, r.uniform1i(t.location, this._curActTexIndex), r.activeTexture(e._TEXTURES[this._curActTexIndex]), n ? O.bindTexture(r, 34067, n) : O.bindTexture(r, 34067, on.grayTexture.source), this._curActTexIndex++, 1;
          }
          return r.activeTexture(e._TEXTURES[a[0]]), n ? O.bindTexture(r, 34067, n) : O.bindTexture(r, 34067, on.grayTexture.source), 0;
        }, i._noSetValue = function (t) {
          console.log("no....:" + t.name);
        }, i.bind = function () {
          return c.activeShader = this, c.bindShader = this, this.activeResource(), O.UseProgram(this._program);
        }, i.uploadAttributes = function (t, e) {
          for (var i, n, r = 0, a = 0, s = this._attributeParamsMap.length; a < s; a += 2) n = this._attributeParamsMap[a + 1], null != (i = t[this._attributeParamsMap[a]]) && (e && e[n.name] && e[n.name].bind(), r += n.fun.call(this, n, i));
          D.shaderCall += r;
        }, i.uploadAttributesX = function (t, e) {
          for (var i, n, r = 0, a = 0, s = this._attributeParamsMap.length; a < s; a += 2) n = this._attributeParamsMap[a + 1], null != (i = t[this._attributeParamsMap[a]]) && (e._bind(), r += n.fun.call(this, n, i));
          D.shaderCall += r;
        }, i.uploadSceneUniforms = function (t) {
          for (var e, i, n = 0, r = 0, a = this._sceneUniformParamsMap.length; r < a; r += 2) i = this._sceneUniformParamsMap[r + 1], null != (e = t[this._sceneUniformParamsMap[r]]) && (n += i.fun.call(this, i, e));
          D.shaderCall += n;
        }, i.uploadCameraUniforms = function (t) {
          for (var e, i, n = 0, r = 0, a = this._cameraUniformParamsMap.length; r < a; r += 2) i = this._cameraUniformParamsMap[r + 1], null != (e = t[this._cameraUniformParamsMap[r]]) && (n += i.fun.call(this, i, e));
          D.shaderCall += n;
        }, i.uploadSpriteUniforms = function (t) {
          for (var e, i, n = 0, r = 0, a = this._spriteUniformParamsMap.length; r < a; r += 2) i = this._spriteUniformParamsMap[r + 1], null != (e = t[this._spriteUniformParamsMap[r]]) && (n += i.fun.call(this, i, e));
          D.shaderCall += n;
        }, i.uploadMaterialUniforms = function (t) {
          for (var e, i, n = 0, r = 0, a = this._materialUniformParamsMap.length; r < a; r += 2) i = this._materialUniformParamsMap[r + 1], null != (e = t[this._materialUniformParamsMap[r]]) && (n += i.fun.call(this, i, e));
          D.shaderCall += n;
        }, i.uploadRenderElementUniforms = function (t) {
          for (var e, i, n = 0, r = 0, a = this._renderElementUniformParamsMap.length; r < a; r += 2) i = this._renderElementUniformParamsMap[r + 1], null != (e = t[this._renderElementUniformParamsMap[r]]) && (n += i.fun.call(this, i, e));
          D.shaderCall += n;
        }, e.create = function (t, i, n, r, a, s, o, h) {
          return new e(t, i, n, r, a, s, o, h);
        }, e.addInclude = function (t, e) {
          M.addInclude(t, e);
        }, e._createShader = function (t, e, i) {
          var n = t.createShader(i);
          if (t.shaderSource(n, e), t.compileShader(n), ui.debugMode && !t.getShaderParameter(n, 35713)) throw t.getShaderInfoLog(n);
          return n;
        }, e.PERIOD_RENDERELEMENT = 0, e.PERIOD_MATERIAL = 1, e.PERIOD_SPRITE = 2, e.PERIOD_CAMERA = 3, e.PERIOD_SCENE = 4, e._TEXTURES = [33984, 33985, 33986, 33987, 33988, 33989, 33990, 33991], e._count = 0, n(e, ["shaderParamsMap", function () {
          return this.shaderParamsMap = {
            float: 5126,
            int: 5124,
            bool: 35670,
            vec2: 35664,
            vec3: 35665,
            vec4: 35666,
            ivec2: 35667,
            ivec3: 35668,
            ivec4: 35669,
            bvec2: 35671,
            bvec3: 35672,
            bvec4: 35673,
            mat2: 35674,
            mat3: 35675,
            mat4: 35676,
            sampler2D: 35678,
            samplerCube: 35680
          };
        }, "nameKey", function () {
          return this.nameKey = new A();
        }]), e;
      }(),
      Bi = function (t) {
        function e() {
          e.__super.call(this), this.setShaderName("BLINNPHONG"), this._albedoIntensity = 1, this._albedoColor = new Oe(1, 1, 1, 1), this._setColor(6, new Oe(1, 1, 1, 1)), this._setColor(8, new Le(1, 1, 1)), this._setNumber(9, .078125), this._setColor(10, new Le(1, 1, 1)), this._setNumber(0, .5), this._setColor(11, new Oe(1, 1, 0, 0)), this._enableLighting = !0, this.renderMode = 0;
        }
        r(e, "laya.d3.core.material.BlinnPhongMaterial", t);
        var s = e.prototype;
        return s.disableLight = function () {
          this._addDisablePublicShaderDefine(ui.SHADERDEFINE_POINTLIGHT | ui.SHADERDEFINE_SPOTLIGHT | ui.SHADERDEFINE_DIRECTIONLIGHT);
        }, s.disableFog = function () {
          this._addDisablePublicShaderDefine(ui.SHADERDEFINE_FOG);
        }, s.cloneTo = function (e) {
          t.prototype.cloneTo.call(this, e);
          var i = e;
          i._enableLighting = this._enableLighting, i._albedoIntensity = this._albedoIntensity, this._albedoColor.cloneTo(i._albedoColor);
        }, a(0, s, "renderMode", null, function (t) {
          switch (t) {
            case 0:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1, this.depthTest = 513, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 1:
              this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3, this.alphaTest = !0, this.depthTest = 513, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 2:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this.depthTest = 513, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 3:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this.depthTest = 513, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            default:
              throw new Error("Material:renderMode value error.");
          }
          this._conchMaterial && this._conchMaterial.setRenderMode(t);
        }), a(0, s, "normalTexture", function () {
          return this._getTexture(2);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_NORMALMAP) : this._removeShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_NORMALMAP), this._setTexture(2, t);
        }), a(0, s, "reflectColor", function () {
          return this._getColor(10);
        }, function (t) {
          this._setColor(10, t);
        }), a(0, s, "tilingOffset", function () {
          return this._getColor(11);
        }, function (t) {
          if (t) {
            var e = t.elements;
            1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3] ? this._addShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_TILINGOFFSET);
          } else this._removeShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_TILINGOFFSET);
          this._setColor(11, t);
        }), a(0, s, "specularColor", function () {
          return this._getColor(8);
        }, function (t) {
          this._setColor(8, t);
        }), a(0, s, "albedoColor", function () {
          return this._albedoColor;
        }, function (t) {
          var e = this._getColor(6);
          Oe.scale(t, this._albedoIntensity, e), this._albedoColor = t;
        }), a(0, s, "albedoIntensity", function () {
          return this._albedoIntensity;
        }, function (t) {
          if (this._albedoIntensity !== t) {
            var e = this._getColor(6);
            Oe.scale(this._albedoColor, t, e), this._albedoIntensity = t;
          }
        }), a(0, s, "albedoTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP) : this._removeShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP), this._setTexture(1, t);
        }), a(0, s, "shininess", function () {
          return this._getNumber(9);
        }, function (t) {
          t = Math.max(0, Math.min(1, t)), this._setNumber(9, t);
        }), a(0, s, "specularTexture", function () {
          return this._getTexture(3);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP) : this._removeShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP), this._setTexture(3, t);
        }), a(0, s, "reflectTexture", function () {
          return this._getTexture(5);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_REFLECTMAP) : this._removeShaderDefine(laya.d3.core.material.BlinnPhongMaterial.SHADERDEFINE_REFLECTMAP), this._setTexture(5, t);
        }), a(0, s, "enableLighting", function () {
          return this._enableLighting;
        }, function (t) {
          this._enableLighting !== t && (t ? this._removeDisablePublicShaderDefine(ui.SHADERDEFINE_POINTLIGHT | ui.SHADERDEFINE_SPOTLIGHT | ui.SHADERDEFINE_DIRECTIONLIGHT) : this._addDisablePublicShaderDefine(ui.SHADERDEFINE_POINTLIGHT | ui.SHADERDEFINE_SPOTLIGHT | ui.SHADERDEFINE_DIRECTIONLIGHT), this._enableLighting = t);
        }), e.__init__ = function () {
          e.SHADERDEFINE_DIFFUSEMAP = e.shaderDefines.registerDefine("DIFFUSEMAP"), e.SHADERDEFINE_NORMALMAP = e.shaderDefines.registerDefine("NORMALMAP"), e.SHADERDEFINE_SPECULARMAP = e.shaderDefines.registerDefine("SPECULARMAP"), e.SHADERDEFINE_REFLECTMAP = e.shaderDefines.registerDefine("REFLECTMAP"), e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine("TILINGOFFSET"), e.SHADERDEFINE_ADDTIVEFOG = e.shaderDefines.registerDefine("ADDTIVEFOG");
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.SPECULARSOURCE_DIFFUSEMAPALPHA = 0, e.SPECULARSOURCE_SPECULARMAP = 0, e.RENDERMODE_OPAQUE = 0, e.RENDERMODE_CUTOUT = 1, e.RENDERMODE_TRANSPARENT = 2, e.RENDERMODE_ADDTIVE = 3, e.SHADERDEFINE_DIFFUSEMAP = 0, e.SHADERDEFINE_NORMALMAP = 0, e.SHADERDEFINE_SPECULARMAP = 0, e.SHADERDEFINE_REFLECTMAP = 0, e.SHADERDEFINE_TILINGOFFSET = 0, e.SHADERDEFINE_ADDTIVEFOG = 0, e.ALBEDOTEXTURE = 1, e.NORMALTEXTURE = 2, e.SPECULARTEXTURE = 3, e.EMISSIVETEXTURE = 4, e.REFLECTTEXTURE = 5, e.ALBEDOCOLOR = 6, e.MATERIALSPECULAR = 8, e.SHININESS = 9, e.MATERIALREFLECT = 10, e.TILINGOFFSET = 11, n(e, ["defaultMaterial", function () {
          return this.defaultMaterial = new e();
        }, "shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(mi),
      Ui = function (t) {
        function e() {
          e.__super.call(this), this.setShaderName("ExtendTerrain"), this.renderMode = 1;
        }
        r(e, "laya.d3.core.material.ExtendTerrainMaterial", mi);
        var i = e.prototype;
        return i._setDetailNum = function (t) {
          switch (t) {
            case 1:
              this._addShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);
              break;
            case 2:
              this._addShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);
              break;
            case 3:
              this._addShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);
              break;
            case 4:
              this._addShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);
              break;
            case 5:
              this._addShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(laya.d3.core.material.ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4);
          }
        }, i.disableLight = function () {
          this._addDisablePublicShaderDefine(ui.SHADERDEFINE_POINTLIGHT | ui.SHADERDEFINE_SPOTLIGHT | ui.SHADERDEFINE_DIRECTIONLIGHT);
        }, a(0, i, "diffuseScaleOffset2", null, function (t) {
          this._setColor(7, t);
        }), a(0, i, "splatAlphaTexture", function () {
          return this._getTexture(0);
        }, function (t) {
          this._setTexture(0, t);
        }), a(0, i, "diffuseScaleOffset3", null, function (t) {
          this._setColor(8, t);
        }), a(0, i, "diffuseTexture1", null, function (t) {
          this._setTexture(1, t), this._setDetailNum(1);
        }), a(0, i, "renderMode", null, function (t) {
          switch (t) {
            case 1:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.depthTest = 513;
              break;
            case 2:
              this.renderQueue = 2e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.depthTest = 515;
              break;
            default:
              throw new Error("ExtendTerrainMaterial:renderMode value error.");
          }
          this._conchMaterial && this._conchMaterial.setRenderMode(t);
        }), a(0, i, "diffuseTexture2", function () {
          return this._getTexture(2);
        }, function (t) {
          this._setTexture(2, t), this._setDetailNum(2);
        }), a(0, i, "diffuseScaleOffset1", null, function (t) {
          this._setColor(6, t);
        }), a(0, i, "diffuseTexture3", function () {
          return this._getTexture(3);
        }, function (t) {
          this._setTexture(3, t), this._setDetailNum(3);
        }), a(0, i, "diffuseTexture4", function () {
          return this._getTexture(4);
        }, function (t) {
          this._setTexture(4, t), this._setDetailNum(4);
        }), a(0, i, "diffuseTexture5", function () {
          return this._getTexture(5);
        }, function (t) {
          this._setTexture(5, t), this._setDetailNum(5);
        }), a(0, i, "diffuseScaleOffset4", null, function (t) {
          this._setColor(9, t);
        }), a(0, i, "diffuseScaleOffset5", null, function (t) {
          this._setColor(10, t);
        }), a(0, i, "albedo", function () {
          return this._getColor(14);
        }, function (t) {
          this._setColor(14, t);
        }), a(0, i, "ambientColor", function () {
          return this._getColor(11);
        }, function (t) {
          this._setColor(11, t);
        }), a(0, i, "diffuseColor", function () {
          return this._getColor(12);
        }, function (t) {
          this._setColor(12, t);
        }), a(0, i, "specularColor", function () {
          return this._getColor(13);
        }, function (t) {
          this._setColor(13, t);
        }), e.__init__ = function () {
          e.SHADERDEFINE_DETAIL_NUM1 = e.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM1"), e.SHADERDEFINE_DETAIL_NUM2 = e.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM2"), e.SHADERDEFINE_DETAIL_NUM3 = e.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM3"), e.SHADERDEFINE_DETAIL_NUM4 = e.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM4"), e.SHADERDEFINE_DETAIL_NUM5 = e.shaderDefines.registerDefine("ExtendTerrain_DETAIL_NUM5");
        }, e.RENDERMODE_OPAQUE = 1, e.RENDERMODE_TRANSPARENT = 2, e.SPLATALPHATEXTURE = 0, e.DIFFUSETEXTURE1 = 1, e.DIFFUSETEXTURE2 = 2, e.DIFFUSETEXTURE3 = 3, e.DIFFUSETEXTURE4 = 4, e.DIFFUSETEXTURE5 = 5, e.DIFFUSESCALEOFFSET1 = 6, e.DIFFUSESCALEOFFSET2 = 7, e.DIFFUSESCALEOFFSET3 = 8, e.DIFFUSESCALEOFFSET4 = 9, e.DIFFUSESCALEOFFSET5 = 10, e.MATERIALAMBIENT = 11, e.MATERIALDIFFUSE = 12, e.MATERIALSPECULAR = 13, e.MATERIALALBEDO = 14, e.SHADERDEFINE_DETAIL_NUM1 = 0, e.SHADERDEFINE_DETAIL_NUM2 = 0, e.SHADERDEFINE_DETAIL_NUM3 = 0, e.SHADERDEFINE_DETAIL_NUM4 = 0, e.SHADERDEFINE_DETAIL_NUM5 = 0, n(e, ["shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(),
      ki = function (t) {
        function e() {
          e.__super.call(this), this.setShaderName("GLITTER"), this.renderMode = 1, this._setColor(3, new Oe(1, 1, 1, 1)), this._setColor(2, new Oe(1, 1, 1, 1));
        }
        r(e, "laya.d3.core.material.GlitterMaterial", t);
        var s = e.prototype;
        return s.setShaderName = function (e) {
          t.prototype.setShaderName.call(this, e);
        }, a(0, s, "renderMode", null, function (t) {
          switch (t) {
            case 1:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0;
              break;
            case 2:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0;
              break;
            case 13:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
              break;
            case 14:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
              break;
            case 15:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
              break;
            case 16:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
              break;
            case 5:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
              break;
            case 6:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
              break;
            case 7:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
              break;
            case 8:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
              break;
            case 9:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
              break;
            case 10:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
              break;
            case 11:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
              break;
            case 12:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1;
              break;
            default:
              throw new Error("Material:renderMode value error.");
          }
          this._conchMaterial && this._conchMaterial.setRenderMode(t);
        }), a(0, s, "diffuseTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          this._setTexture(1, t);
        }), a(0, s, "albedo", function () {
          return this._getColor(2);
        }, function (t) {
          this._setColor(2, t);
        }), a(0, s, "color", function () {
          return this._getColor(3);
        }, function (t) {
          this._setColor(3, t);
        }), e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.RENDERMODE_OPAQUE = 1, e.RENDERMODE_OPAQUEDOUBLEFACE = 2, e.RENDERMODE_TRANSPARENT = 13, e.RENDERMODE_TRANSPARENTDOUBLEFACE = 14, e.RENDERMODE_ADDTIVE = 15, e.RENDERMODE_ADDTIVEDOUBLEFACE = 16, e.RENDERMODE_DEPTHREAD_TRANSPARENT = 5, e.RENDERMODE_DEPTHREAD_TRANSPARENTDOUBLEFACE = 6, e.RENDERMODE_DEPTHREAD_ADDTIVE = 7, e.RENDERMODE_DEPTHREAD_ADDTIVEDOUBLEFACE = 8, e.RENDERMODE_NONDEPTH_TRANSPARENT = 9, e.RENDERMODE_NONDEPTH_TRANSPARENTDOUBLEFACE = 10, e.RENDERMODE_NONDEPTH_ADDTIVE = 11, e.RENDERMODE_NONDEPTH_ADDTIVEDOUBLEFACE = 12, e.DIFFUSETEXTURE = 1, e.ALBEDO = 2, e.UNICOLOR = 3, n(e, ["defaultMaterial", function () {
          return this.defaultMaterial = new e();
        }]), e;
      }(mi),
      Gi = function (t) {
        function e() {
          if (this._transformUV = null, e.__super.call(this), !laya.d3.core.material.PBRMaterial.pbrlutTex) {
            var t = _.window.__pbrlutdata;
            if (!t) throw alert("no pbr lutdata, need pbrlut.js"), "no pbr lutdata, need pbrlut.js";
            var i = en.create(new Uint32Array(t).buffer, 256, 256, 9728, 9728, !1);
            laya.d3.core.material.PBRMaterial.pbrlutTex = i;
          }
          this._setTexture(4, laya.d3.core.material.PBRMaterial.pbrlutTex), this.setShaderName("PBR"), this._setNumber(0, .5), this.use_groundtruth = !1;
        }
        r(e, "laya.d3.core.material.PBRMaterial", t);
        var s = e.prototype;
        return s.disableLight = function () {
          this._addDisablePublicShaderDefine(ui.SHADERDEFINE_POINTLIGHT | ui.SHADERDEFINE_SPOTLIGHT | ui.SHADERDEFINE_DIRECTIONLIGHT);
        }, s.disableFog = function () {
          this._addDisablePublicShaderDefine(ui.SHADERDEFINE_FOG);
        }, s.onAsynLoaded = function (e, i, n) {
          t.prototype.onAsynLoaded.call(this, e, i, n);
        }, s.radicalInverse_VdC = function (t) {
          var e = new Uint32Array(1);
          return function (t) {
            return t = t << 16 | t >>> 16, t = (1431655765 & t) << 1 | (2863311530 & t) >>> 1, t = (858993459 & t) << 2 | (3435973836 & t) >>> 2, t = (252645135 & t) << 4 | (4042322160 & t) >>> 4, t = (16711935 & t) << 8 | (4278255360 & t) >>> 8, e[0] = t, 2.3283064365386963e-10 * e[0];
          }(t);
        }, s.createHammersleyTex = function (t, e) {
          var i = new Uint8Array(t * e * 4),
            n = 0,
            r = 0;
          for (r = 0; r < t * e; r++) {
            var a = this.radicalInverse_VdC(r);
            i[n++] = 255 * a, i[n++] = 0, i[n++] = 0, i[n++] = 255;
          }
          return i;
        }, a(0, s, "normalTexture", function () {
          return this._getTexture(2);
        }, function (t) {
          this._setTexture(2, t);
        }), a(0, s, "has_tangent", null, function (t) {
          this._addShaderDefine(e.SHADERDEFINE_HAS_TANGENT);
        }), a(0, s, "roughness", function () {
          return this._getNumber(6);
        }, function (t) {
          this._setNumber(6, t), this._addShaderDefine(e.SHADERDEFINE_FIX_ROUGHNESS);
        }), a(0, s, "metaless", function () {
          return this._getNumber(7);
        }, function (t) {
          this._setNumber(7, t), this._addShaderDefine(e.SHADERDEFINE_FIX_METALESS);
        }), a(0, s, "pbrlutTexture", function () {
          return this._getTexture(4);
        }, function (t) {
          this._setTexture(4, t);
        }), a(0, s, "use_groundtruth", null, function (t) {
          if (t) {
            if (this._addShaderDefine(e.SHADERDEFINE_USE_GROUNDTRUTH), !laya.d3.core.material.PBRMaterial.HammersleyNoiseTex) {
              var i = this.createHammersleyTex(32, 32);
              laya.d3.core.material.PBRMaterial.HammersleyNoiseTex = en.create(i.buffer, 32, 32, 9728, 9728, !1);
            }
            this._setTexture(15, e.HammersleyNoiseTex);
          } else laya.d3.core.material.PBRMaterial.HammersleyNoiseTex = null, this._removeShaderDefine(e.SHADERDEFINE_USE_GROUNDTRUTH);
        }), a(0, s, "transformUV", function () {
          return this._transformUV;
        }, function (t) {
          this._transformUV = t, this._setMatrix4x4(8, t.matrix), this._conchMaterial && this._conchMaterial.setShaderValue(8, t.matrix.elements, 0);
        }), a(0, s, "diffuseTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          this._setTexture(1, t);
        }), a(0, s, "renderMode", null, function (t) {
          switch (t) {
            case 1:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1;
              break;
            case 2:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !1;
              break;
            case 3:
              this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3;
              break;
            case 13:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
              break;
            default:
              throw new Error("PBRMaterial:renderMode value error.");
          }
        }), a(0, s, "pbrInfoTexture", function () {
          return this._getTexture(3);
        }, function (t) {
          this._setTexture(3, t), this._addShaderDefine(e.SHADERDEFINE_HAS_PBRINFO);
        }), a(0, s, "testClipZ", null, function (t) {
          this._addShaderDefine(e.SHADERDEFINE_TEST_CLIPZ);
        }), e.__init__ = function () {
          e.SHADERDEFINE_FIX_METALESS = e.shaderDefines.registerDefine("FIX_METALESS"), e.SHADERDEFINE_FIX_ROUGHNESS = e.shaderDefines.registerDefine("FIX_ROUGHNESS"), e.SHADERDEFINE_HAS_TANGENT = e.shaderDefines.registerDefine("HAS_TANGENT"), e.SHADERDEFINE_HAS_PBRINFO = e.shaderDefines.registerDefine("HAS_PBRINFO"), e.SHADERDEFINE_USE_GROUNDTRUTH = e.shaderDefines.registerDefine("USE_GROUNDTRUTH"), e.SHADERDEFINE_TEST_CLIPZ = e.shaderDefines.registerDefine("CLIPZ");
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.DIFFUSETEXTURE = 1, e.NORMALTEXTURE = 2, e.PBRINFOTEXTURE = 3, e.PBRLUTTEXTURE = 4, e.UVANIAGE = 5, e.MATERIALROUGHNESS = 6, e.MATERIALMETALESS = 7, e.UVMATRIX = 8, e.UVAGE = 9, e.AOOBJPOS = 14, e.HSNOISETEXTURE = 15, e.SHADERDEFINE_FIX_ROUGHNESS = 0, e.SHADERDEFINE_FIX_METALESS = 0, e.SHADERDEFINE_HAS_TANGENT = 0, e.SHADERDEFINE_TEST_CLIPZ = 0, e.SHADERDEFINE_HAS_PBRINFO = 0, e.SHADERDEFINE_USE_GROUNDTRUTH = 0, e.RENDERMODE_OPAQUE = 1, e.RENDERMODE_OPAQUEDOUBLEFACE = 2, e.RENDERMODE_CUTOUT = 3, e.RENDERMODE_CUTOUTDOUBLEFACE = 4, e.RENDERMODE_TRANSPARENT = 13, e.pbrlutTex = null, e.HammersleyNoiseTex = null, n(e, ["defaultMaterial", function () {
          return this.defaultMaterial = new e();
        }, "shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(mi),
      Hi = function (t) {
        function e() {
          e.__super.call(this), this.setShaderName("PBRSpecular"), this._setColor(7, new Oe(1, 1, 1, 1)), this._setColor(9, new Oe(0, 0, 0, 0)), this._setColor(8, new Oe(.2, .2, .2, .2)), this._setNumber(10, .5), this._setNumber(11, 1), this._setNumber(12, 0), this._setNumber(13, 1), this._setNumber(14, 1), this._setNumber(15, .001), this._setBool(16, !1), this._setNumber(0, .5);
        }
        r(e, "laya.d3.core.material.PBRSpecularMaterial", mi);
        var i = e.prototype;
        return a(0, i, "albedoColor", function () {
          return this._getColor(7);
        }, function (t) {
          this._setColor(7, t);
        }), a(0, i, "specularTexture", function () {
          return this._getTexture(2);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_SPECULARTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_SPECULARTEXTURE), this._setTexture(2, t);
        }), a(0, i, "albedoTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_DIFFUSETEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_DIFFUSETEXTURE), this._setTexture(1, t);
        }), a(0, i, "occlusionTexture", function () {
          return this._getTexture(5);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_OCCLUSIONTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_OCCLUSIONTEXTURE), this._setTexture(5, t);
        }), a(0, i, "normalTexture", function () {
          return this._getTexture(3);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_NORMALTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_NORMALTEXTURE), this._setTexture(3, t);
        }), a(0, i, "parallaxTexture", function () {
          return this._getTexture(4);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_PARALLAXTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_PARALLAXTEXTURE), this._setTexture(4, t);
        }), a(0, i, "emissionColor", function () {
          return this._getColor(9);
        }, function (t) {
          this._setColor(9, t);
        }), a(0, i, "normalTextureScale", function () {
          return this._getNumber(14);
        }, function (t) {
          this._setNumber(14, t);
        }), a(0, i, "parallaxTextureScale", function () {
          return this._getNumber(15);
        }, function (t) {
          t = Math.max(.005, Math.min(.08, t)), this._setNumber(15, t);
        }), a(0, i, "occlusionTextureStrength", function () {
          return this._getNumber(13);
        }, function (t) {
          t = Math.max(0, Math.min(1, t)), this._setNumber(13, t);
        }), a(0, i, "specularColor", function () {
          return this._getColor(8);
        }, function (t) {
          this._setColor(8, t);
        }), a(0, i, "smoothness", function () {
          return this._getNumber(10);
        }, function (t) {
          t = Math.max(0, Math.min(1, t)), this._setNumber(10, t);
        }), a(0, i, "smoothnessTextureScale", function () {
          return this._getNumber(11);
        }, function (t) {
          t = Math.max(0, Math.min(1, t)), this._setNumber(11, t);
        }), a(0, i, "smoothnessSource", function () {
          return this._getNumber(12);
        }, function (t) {
          1 == t ? this._addShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA) : (this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA), t = 0), this._setNumber(12, t);
        }), a(0, i, "enableEmission", function () {
          return this._getBool(16);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_EMISSION) : this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_EMISSION), this._setBool(16, t);
        }), a(0, i, "emissionTexture", function () {
          return this._getTexture(6);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_EMISSIONTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_EMISSIONTEXTURE), this._setTexture(6, t);
        }), a(0, i, "tilingOffset", function () {
          return this._getColor(17);
        }, function (t) {
          if (t) {
            var e = t.elements;
            1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3] ? this._addShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_TILINGOFFSET);
          } else this._removeShaderDefine(laya.d3.core.material.PBRSpecularMaterial.SHADERDEFINE_TILINGOFFSET);
          this._setColor(17, t);
        }), e.__init__ = function () {
          e.SHADERDEFINE_DIFFUSETEXTURE = e.shaderDefines.registerDefine("DIFFUSETEXTURE"), e.SHADERDEFINE_SPECULARTEXTURE = e.shaderDefines.registerDefine("SPECULARTEXTURE"), e.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = e.shaderDefines.registerDefine("SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA"), e.SHADERDEFINE_NORMALTEXTURE = e.shaderDefines.registerDefine("NORMALTEXTURE"), e.SHADERDEFINE_PARALLAXTEXTURE = e.shaderDefines.registerDefine("PARALLAXTEXTURE"), e.SHADERDEFINE_OCCLUSIONTEXTURE = e.shaderDefines.registerDefine("OCCLUSIONTEXTURE"), e.SHADERDEFINE_EMISSION = e.shaderDefines.registerDefine("EMISSION"), e.SHADERDEFINE_EMISSIONTEXTURE = e.shaderDefines.registerDefine("EMISSIONTEXTURE"), e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine("TILINGOFFSET");
        }, e.SmoothnessSource_MetallicGlossTexture_Alpha = 0, e.SmoothnessSource_DiffuseTexture_Alpha = 1, e.SHADERDEFINE_DIFFUSETEXTURE = 0, e.SHADERDEFINE_NORMALTEXTURE = 0, e.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = 0, e.SHADERDEFINE_SPECULARTEXTURE = 0, e.SHADERDEFINE_OCCLUSIONTEXTURE = 0, e.SHADERDEFINE_PARALLAXTEXTURE = 0, e.SHADERDEFINE_EMISSION = 0, e.SHADERDEFINE_EMISSIONTEXTURE = 0, e.SHADERDEFINE_TILINGOFFSET = 0, e.DIFFUSETEXTURE = 1, e.SPECULARTEXTURE = 2, e.NORMALTEXTURE = 3, e.PARALLAXTEXTURE = 4, e.OCCLUSIONTEXTURE = 5, e.EMISSIONTEXTURE = 6, e.DIFFUSECOLOR = 7, e.SPECULARCOLOR = 8, e.EMISSIONCOLOR = 9, e.SMOOTHNESS = 10, e.SMOOTHNESSSCALE = 11, e.SMOOTHNESSSOURCE = 12, e.OCCLUSIONSTRENGTH = 13, e.NORMALSCALE = 14, e.PARALLAXSCALE = 15, e.ENABLEEMISSION = 16, e.TILINGOFFSET = 17, n(e, ["shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(),
      zi = function (t) {
        function e() {
          e.__super.call(this), this.setShaderName("PBRStandard"), this._setColor(7, new Oe(1, 1, 1, 1)), this._setColor(8, new Oe(0, 0, 0, 0)), this._setNumber(9, 0), this._setNumber(10, .5), this._setNumber(11, 1), this._setNumber(12, 0), this._setNumber(13, 1), this._setNumber(14, 1), this._setNumber(15, .001), this._setBool(16, !1), this._setNumber(0, .5);
        }
        r(e, "laya.d3.core.material.PBRStandardMaterial", mi);
        var i = e.prototype;
        return a(0, i, "albedoColor", function () {
          return this._getColor(7);
        }, function (t) {
          this._setColor(7, t);
        }), a(0, i, "albedoTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_DIFFUSETEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_DIFFUSETEXTURE), this._setTexture(1, t);
        }), a(0, i, "enableEmission", function () {
          return this._getBool(16);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_EMISSION) : this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_EMISSION), this._setBool(16, t);
        }), a(0, i, "metallicGlossTexture", function () {
          return this._getTexture(2);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE), this._setTexture(2, t);
        }), a(0, i, "occlusionTexture", function () {
          return this._getTexture(5);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_OCCLUSIONTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_OCCLUSIONTEXTURE), this._setTexture(5, t);
        }), a(0, i, "normalTexture", function () {
          return this._getTexture(3);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_NORMALTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_NORMALTEXTURE), this._setTexture(3, t);
        }), a(0, i, "parallaxTexture", function () {
          return this._getTexture(4);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_PARALLAXTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_PARALLAXTEXTURE), this._setTexture(4, t);
        }), a(0, i, "emissionColor", function () {
          return this._getColor(8);
        }, function (t) {
          this._setColor(8, t);
        }), a(0, i, "normalTextureScale", function () {
          return this._getNumber(14);
        }, function (t) {
          this._setNumber(14, t);
        }), a(0, i, "parallaxTextureScale", function () {
          return this._getNumber(15);
        }, function (t) {
          t = Math.max(.005, Math.min(.08, t)), this._setNumber(15, t);
        }), a(0, i, "occlusionTextureStrength", function () {
          return this._getNumber(13);
        }, function (t) {
          t = Math.max(0, Math.min(1, t)), this._setNumber(13, t);
        }), a(0, i, "metallic", function () {
          return this._getNumber(9);
        }, function (t) {
          t = Math.max(0, Math.min(1, t)), this._setNumber(9, t);
        }), a(0, i, "smoothness", function () {
          return this._getNumber(10);
        }, function (t) {
          t = Math.max(0, Math.min(1, t)), this._setNumber(10, t);
        }), a(0, i, "smoothnessTextureScale", function () {
          return this._getNumber(11);
        }, function (t) {
          t = Math.max(0, Math.min(1, t)), this._setNumber(11, t);
        }), a(0, i, "smoothnessSource", function () {
          return this._getNumber(12);
        }, function (t) {
          1 == t ? this._addShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA) : (this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA), t = 0), this._setNumber(12, t);
        }), a(0, i, "emissionTexture", function () {
          return this._getTexture(6);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_EMISSIONTEXTURE) : this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_EMISSIONTEXTURE), this._setTexture(6, t);
        }), a(0, i, "tilingOffset", function () {
          return this._getColor(17);
        }, function (t) {
          if (t) {
            var e = t.elements;
            1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3] ? this._addShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_TILINGOFFSET);
          } else this._removeShaderDefine(laya.d3.core.material.PBRStandardMaterial.SHADERDEFINE_TILINGOFFSET);
          this._setColor(17, t);
        }), e.__init__ = function () {
          e.SHADERDEFINE_DIFFUSETEXTURE = e.shaderDefines.registerDefine("DIFFUSETEXTURE"), e.SHADERDEFINE_METALLICGLOSSTEXTURE = e.shaderDefines.registerDefine("METALLICGLOSSTEXTURE"), e.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = e.shaderDefines.registerDefine("SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA"), e.SHADERDEFINE_NORMALTEXTURE = e.shaderDefines.registerDefine("NORMALTEXTURE"), e.SHADERDEFINE_PARALLAXTEXTURE = e.shaderDefines.registerDefine("PARALLAXTEXTURE"), e.SHADERDEFINE_OCCLUSIONTEXTURE = e.shaderDefines.registerDefine("OCCLUSIONTEXTURE"), e.SHADERDEFINE_EMISSION = e.shaderDefines.registerDefine("EMISSION"), e.SHADERDEFINE_EMISSIONTEXTURE = e.shaderDefines.registerDefine("EMISSIONTEXTURE"), e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine("TILINGOFFSET");
        }, e.SmoothnessSource_MetallicGlossTexture_Alpha = 0, e.SmoothnessSource_DiffuseTexture_Alpha = 1, e.SHADERDEFINE_DIFFUSETEXTURE = 0, e.SHADERDEFINE_NORMALTEXTURE = 0, e.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = 0, e.SHADERDEFINE_METALLICGLOSSTEXTURE = 0, e.SHADERDEFINE_OCCLUSIONTEXTURE = 0, e.SHADERDEFINE_PARALLAXTEXTURE = 0, e.SHADERDEFINE_EMISSION = 0, e.SHADERDEFINE_EMISSIONTEXTURE = 0, e.SHADERDEFINE_TILINGOFFSET = 0, e.DIFFUSETEXTURE = 1, e.METALLICGLOSSTEXTURE = 2, e.NORMALTEXTURE = 3, e.PARALLAXTEXTURE = 4, e.OCCLUSIONTEXTURE = 5, e.EMISSIONTEXTURE = 6, e.DIFFUSECOLOR = 7, e.EMISSIONCOLOR = 8, e.METALLIC = 9, e.SMOOTHNESS = 10, e.SMOOTHNESSSCALE = 11, e.SMOOTHNESSSOURCE = 12, e.OCCLUSIONSTRENGTH = 13, e.NORMALSCALE = 14, e.PARALLAXSCALE = 15, e.ENABLEEMISSION = 16, e.TILINGOFFSET = 17, n(e, ["shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(),
      Wi = function (t) {
        function e() {
          this._transformUV = null, e.__super.call(this), this.setShaderName("SIMPLE"), this._setColor(9, new Le(.6, .6, .6)), this._setColor(10, new Le(1, 1, 1)), this._setColor(11, new Oe(1, 1, 1, 8)), this._setColor(12, new Le(1, 1, 1)), this._setColor(7, new Oe(1, 1, 1, 1)), this._setNumber(0, .5), this._setColor(15, new Oe(1, 1, 0, 0)), this.renderMode = 1;
        }
        r(e, "laya.d3.core.material.StandardMaterial", t);
        var s = e.prototype;
        return s.disableLight = function () {
          this._addDisablePublicShaderDefine(ui.SHADERDEFINE_POINTLIGHT | ui.SHADERDEFINE_SPOTLIGHT | ui.SHADERDEFINE_DIRECTIONLIGHT);
        }, s.disableFog = function () {
          this._addDisablePublicShaderDefine(ui.SHADERDEFINE_FOG);
        }, s.onAsynLoaded = function (i, n, r) {
          var a = n[0];
          if (a.version) t.prototype.onAsynLoaded.call(this, i, n, r);
          else {
            var s = n[1],
              o = a.props;
            for (var h in o) this[h] = o[h];
            e._parseStandardMaterial(s, this, a), this._endLoaded();
          }
        }, s.cloneTo = function (e) {
          t.prototype.cloneTo.call(this, e);
          var i = e;
          this._transformUV && (i._transformUV = this._transformUV.clone());
        }, a(0, s, "ambientColor", function () {
          return this._getColor(9);
        }, function (t) {
          this._setColor(9, t);
        }), a(0, s, "ambientTexture", function () {
          return this._getTexture(5);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_AMBIENTMAP) : this._removeShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_AMBIENTMAP), this._setTexture(5, t);
        }), a(0, s, "renderMode", null, function (t) {
          switch (t) {
            case 1:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 2:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 3:
              this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3, this.alphaTest = !0, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 4:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !0, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 13:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 14:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 15:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 16:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 5:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 6:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 7:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 8:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 9:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 10:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 11:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 12:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            default:
              throw new Error("Material:renderMode value error.");
          }
          this._conchMaterial && this._conchMaterial.setRenderMode(t);
        }), a(0, s, "reflectColor", function () {
          return this._getColor(12);
        }, function (t) {
          this._setColor(12, t);
        }), a(0, s, "tilingOffset", function () {
          return this._getColor(15);
        }, function (t) {
          if (t) {
            var e = t.elements;
            1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3] ? this._addShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_TILINGOFFSET);
          } else this._removeShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_TILINGOFFSET);
          this._setColor(15, t);
        }), a(0, s, "albedo", function () {
          return this._getColor(7);
        }, function (t) {
          this._setColor(7, t);
        }), a(0, s, "diffuseColor", function () {
          return this._getColor(10);
        }, function (t) {
          this._setColor(10, t);
        }), a(0, s, "albedoColor", function () {
          return this._getColor(7);
        }, function (t) {
          this._setColor(7, t);
        }), a(0, s, "specularColor", function () {
          return this._getColor(11);
        }, function (t) {
          this._setColor(11, t);
        }), a(0, s, "diffuseTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_DIFFUSEMAP) : this._removeShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_DIFFUSEMAP), this._setTexture(1, t);
        }), a(0, s, "normalTexture", function () {
          return this._getTexture(2);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_NORMALMAP) : this._removeShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_NORMALMAP), this._setTexture(2, t);
        }), a(0, s, "specularTexture", function () {
          return this._getTexture(3);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_SPECULARMAP) : this._removeShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_SPECULARMAP), this._setTexture(3, t);
        }), a(0, s, "emissiveTexture", function () {
          return this._getTexture(4);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_EMISSIVEMAP) : this._removeShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_EMISSIVEMAP), this._setTexture(4, t);
        }), a(0, s, "reflectTexture", function () {
          return this._getTexture(6);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_REFLECTMAP) : this._removeShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_REFLECTMAP), this._setTexture(6, t);
        }), a(0, s, "transformUV", function () {
          return this._transformUV;
        }, function (t) {
          this._transformUV = t, this._setMatrix4x4(13, t.matrix), t ? this._addShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_UVTRANSFORM) : this._removeShaderDefine(laya.d3.core.material.StandardMaterial.SHADERDEFINE_UVTRANSFORM), this._conchMaterial && this._conchMaterial.setShaderValue(13, t.matrix.elements, 0);
        }), e.__init__ = function () {
          e.SHADERDEFINE_DIFFUSEMAP = e.shaderDefines.registerDefine("DIFFUSEMAP"), e.SHADERDEFINE_NORMALMAP = e.shaderDefines.registerDefine("NORMALMAP"), e.SHADERDEFINE_SPECULARMAP = e.shaderDefines.registerDefine("SPECULARMAP"), e.SHADERDEFINE_EMISSIVEMAP = e.shaderDefines.registerDefine("EMISSIVEMAP"), e.SHADERDEFINE_AMBIENTMAP = e.shaderDefines.registerDefine("AMBIENTMAP"), e.SHADERDEFINE_REFLECTMAP = e.shaderDefines.registerDefine("REFLECTMAP"), e.SHADERDEFINE_UVTRANSFORM = e.shaderDefines.registerDefine("UVTRANSFORM"), e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine("TILINGOFFSET"), e.SHADERDEFINE_ADDTIVEFOG = e.shaderDefines.registerDefine("ADDTIVEFOG");
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e._parseStandardMaterial = function (t, e, i) {
          var n = i.customProps,
            r = n.ambientColor;
          e.ambientColor = new Le(r[0], r[1], r[2]);
          var a = n.diffuseColor;
          e.diffuseColor = new Le(a[0], a[1], a[2]);
          var s = n.specularColor;
          e.specularColor = new Oe(s[0], s[1], s[2], s[3]);
          var o = n.reflectColor;
          e.reflectColor = new Le(o[0], o[1], o[2]);
          var h = n.albedoColor;
          h && (e.albedo = new Oe(h[0], h[1], h[2], h[3]));
          var l = n.diffuseTexture.texture2D;
          l && (e.diffuseTexture = y.getRes(t[l]));
          var u = n.normalTexture.texture2D;
          u && (e.normalTexture = y.getRes(t[u]));
          var c = n.specularTexture.texture2D;
          c && (e.specularTexture = y.getRes(t[c]));
          var _ = n.emissiveTexture.texture2D;
          _ && (e.emissiveTexture = y.getRes(t[_]));
          var d = n.ambientTexture.texture2D;
          d && (e.ambientTexture = y.getRes(t[d]));
          var f = n.reflectTexture.texture2D;
          f && (e.reflectTexture = y.getRes(t[f]));
        }, e.RENDERMODE_OPAQUE = 1, e.RENDERMODE_OPAQUEDOUBLEFACE = 2, e.RENDERMODE_CUTOUT = 3, e.RENDERMODE_CUTOUTDOUBLEFACE = 4, e.RENDERMODE_TRANSPARENT = 13, e.RENDERMODE_TRANSPARENTDOUBLEFACE = 14, e.RENDERMODE_ADDTIVE = 15, e.RENDERMODE_ADDTIVEDOUBLEFACE = 16, e.RENDERMODE_DEPTHREAD_TRANSPARENT = 5, e.RENDERMODE_DEPTHREAD_TRANSPARENTDOUBLEFACE = 6, e.RENDERMODE_DEPTHREAD_ADDTIVE = 7, e.RENDERMODE_DEPTHREAD_ADDTIVEDOUBLEFACE = 8, e.RENDERMODE_NONDEPTH_TRANSPARENT = 9, e.RENDERMODE_NONDEPTH_TRANSPARENTDOUBLEFACE = 10, e.RENDERMODE_NONDEPTH_ADDTIVE = 11, e.RENDERMODE_NONDEPTH_ADDTIVEDOUBLEFACE = 12, e.SHADERDEFINE_DIFFUSEMAP = 0, e.SHADERDEFINE_NORMALMAP = 0, e.SHADERDEFINE_SPECULARMAP = 0, e.SHADERDEFINE_EMISSIVEMAP = 0, e.SHADERDEFINE_AMBIENTMAP = 0, e.SHADERDEFINE_REFLECTMAP = 0, e.SHADERDEFINE_UVTRANSFORM = 0, e.SHADERDEFINE_TILINGOFFSET = 0, e.SHADERDEFINE_ADDTIVEFOG = 0, e.DIFFUSETEXTURE = 1, e.NORMALTEXTURE = 2, e.SPECULARTEXTURE = 3, e.EMISSIVETEXTURE = 4, e.AMBIENTTEXTURE = 5, e.REFLECTTEXTURE = 6, e.ALBEDO = 7, e.UVANIAGE = 8, e.MATERIALAMBIENT = 9, e.MATERIALDIFFUSE = 10, e.MATERIALSPECULAR = 11, e.MATERIALREFLECT = 12, e.UVMATRIX = 13, e.UVAGE = 14, e.TILINGOFFSET = 15, n(e, ["defaultMaterial", function () {
          return this.defaultMaterial = new e();
        }, "shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(mi),
      ji = function (t) {
        function e() {
          this._diffuseScale1 = null, this._diffuseScale2 = null, this._diffuseScale3 = null, this._diffuseScale4 = null, e.__super.call(this), this.setShaderName("Terrain"), this.renderMode = 1, this._diffuseScale1 = new Pe(), this._diffuseScale2 = new Pe(), this._diffuseScale3 = new Pe(), this._diffuseScale4 = new Pe(), this.ambientColor = new Le(.6, .6, .6), this.diffuseColor = new Le(1, 1, 1), this.specularColor = new Oe(.2, .2, .2, 32);
        }
        r(e, "laya.d3.core.material.TerrainMaterial", t);
        var s = e.prototype;
        return s.setDiffuseScale1 = function (t, e) {
          this._diffuseScale1.x = t, this._diffuseScale1.y = e, this._setColor(6, this._diffuseScale1);
        }, s.setDiffuseScale2 = function (t, e) {
          this._diffuseScale2.x = t, this._diffuseScale2.y = e, this._setColor(7, this._diffuseScale2);
        }, s.setDiffuseScale3 = function (t, e) {
          this._diffuseScale3.x = t, this._diffuseScale3.y = e, this._setColor(8, this._diffuseScale3);
        }, s.setDiffuseScale4 = function (t, e) {
          this._diffuseScale4.x = t, this._diffuseScale4.y = e, this._setColor(9, this._diffuseScale4);
        }, s.setDetailNum = function (t) {
          switch (t) {
            case 1:
              this._addShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM4);
              break;
            case 2:
              this._addShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM4);
              break;
            case 3:
              this._addShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM3), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM4);
              break;
            case 4:
              this._addShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM4), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM1), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM2), this._removeShaderDefine(laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM3);
          }
        }, s.disableLight = function () {
          this._addDisablePublicShaderDefine(ui.SHADERDEFINE_POINTLIGHT | ui.SHADERDEFINE_SPOTLIGHT | ui.SHADERDEFINE_DIRECTIONLIGHT);
        }, s.setShaderName = function (e) {
          t.prototype.setShaderName.call(this, e);
        }, a(0, s, "renderMode", null, function (t) {
          switch (t) {
            case 1:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.depthTest = 513;
              break;
            case 2:
              this.renderQueue = 2e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.depthTest = 515;
              break;
            default:
              throw new Error("TerrainMaterial:renderMode value error.");
          }
          this._conchMaterial && this._conchMaterial.setRenderMode(t);
        }), a(0, s, "diffuseTexture2", function () {
          return this._getTexture(3);
        }, function (t) {
          this._setTexture(3, t);
        }), a(0, s, "ambientColor", function () {
          return this._getColor(10);
        }, function (t) {
          this._setColor(10, t);
        }), a(0, s, "diffuseTexture4", function () {
          return this._getTexture(5);
        }, function (t) {
          this._setTexture(5, t);
        }), a(0, s, "diffuseColor", function () {
          return this._getColor(11);
        }, function (t) {
          this._setColor(11, t);
        }), a(0, s, "diffuseTexture1", function () {
          return this._getTexture(2);
        }, function (t) {
          this._setTexture(2, t);
        }), a(0, s, "specularColor", function () {
          return this._getColor(12);
        }, function (t) {
          this._setColor(12, t);
        }), a(0, s, "diffuseTexture3", function () {
          return this._getTexture(4);
        }, function (t) {
          this._setTexture(4, t);
        }), a(0, s, "splatAlphaTexture", function () {
          return this._getTexture(0);
        }, function (t) {
          this._setTexture(0, t);
        }), a(0, s, "normalTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          this._setTexture(1, t);
        }), e.__init__ = function () {
          e.SHADERDEFINE_DETAIL_NUM1 = e.shaderDefines.registerDefine("DETAIL_NUM1"), e.SHADERDEFINE_DETAIL_NUM2 = e.shaderDefines.registerDefine("DETAIL_NUM2"), e.SHADERDEFINE_DETAIL_NUM4 = e.shaderDefines.registerDefine("DETAIL_NUM4"), e.SHADERDEFINE_DETAIL_NUM3 = e.shaderDefines.registerDefine("DETAIL_NUM3");
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.RENDERMODE_OPAQUE = 1, e.RENDERMODE_TRANSPARENT = 2, e.SPLATALPHATEXTURE = 0, e.NORMALTEXTURE = 1, e.DIFFUSETEXTURE1 = 2, e.DIFFUSETEXTURE2 = 3, e.DIFFUSETEXTURE3 = 4, e.DIFFUSETEXTURE4 = 5, e.DIFFUSESCALE1 = 6, e.DIFFUSESCALE2 = 7, e.DIFFUSESCALE3 = 8, e.DIFFUSESCALE4 = 9, e.MATERIALAMBIENT = 10, e.MATERIALDIFFUSE = 11, e.MATERIALSPECULAR = 12, e.SHADERDEFINE_DETAIL_NUM1 = 0, e.SHADERDEFINE_DETAIL_NUM2 = 0, e.SHADERDEFINE_DETAIL_NUM3 = 0, e.SHADERDEFINE_DETAIL_NUM4 = 0, n(e, ["defaultMaterial", function () {
          return this.defaultMaterial = new e();
        }, "shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(mi),
      Xi = function (t) {
        function e() {
          this._useVertexDeep = !1, e.__super.call(this), this.setShaderName("Water");
        }
        r(e, "laya.d3.core.material.WaterMaterial", t);
        var s = e.prototype;
        return s.disableFog = function () {
          this._addDisablePublicShaderDefine(ui.SHADERDEFINE_FOG);
        }, s.onAsynLoaded = function (e, i, n) {
          t.prototype.onAsynLoaded.call(this, e, i, n);
        }, a(0, s, "diffuseTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          this._setTexture(1, t);
        }), a(0, s, "normalTexture", function () {
          return this._getTexture(2);
        }, function (t) {
          this._setTexture(2, t);
        }), a(0, s, "underWaterTexture", function () {
          return this._getTexture(3);
        }, function (t) {
          this._setTexture(3, t);
        }), a(0, s, "deepColorTexture", function () {
          return this._getTexture(10);
        }, function (t) {
          this._setTexture(10, t);
        }), a(0, s, "useFoam", null, function (t) {
          t ? this._addShaderDefine(e.SHADERDEFINE_USE_FOAM) : this._removeShaderDefine(e.SHADERDEFINE_USE_FOAM);
        }), a(0, s, "skyTexture", function () {
          return this._getTexture(11);
        }, function (t) {
          this._setTexture(11, t);
        }), a(0, s, "deepScale", function () {
          return this._getNumber(20);
        }, function (t) {
          this._setNumber(20, t);
        }), a(0, s, "detailTexture", function () {
          return this._getTexture(9);
        }, function (t) {
          this._setTexture(9, t);
        }), a(0, s, "foamTexture", function () {
          return this._getTexture(17);
        }, function (t) {
          this._setTexture(17, t);
        }), a(0, s, "waterInfoTexture", function () {
          return this._getTexture(16);
        }, function (t) {
          this._setTexture(16, t);
        }), a(0, s, "vertexDispTexture", function () {
          return this._getTexture(4);
        }, function (t) {
          this._setTexture(4, t);
        }), a(0, s, "currentTm", function () {
          return this._getNumber(8);
        }, function (t) {
          this._setNumber(8, t);
        }), a(0, s, "waveInfo", function () {
          return this._getBuffer(12);
        }, function (t) {
          this._setBuffer(12, t);
        }), a(0, s, "waveInfoD", function () {
          return this._getBuffer(13);
        }, function (t) {
          this._setBuffer(13, t);
        }), a(0, s, "waveMainDir", function () {
          return this._getNumber(14);
        }, function (t) {
          this._setNumber(14, t * Math.PI / 180);
        }), a(0, s, "geoWaveUVScale", function () {
          return this._getNumber(18);
        }, function (t) {
          this._setNumber(18, t);
        }), a(0, s, "windSpeed", function () {
          return 0;
        }, function (t) {}), a(0, s, "scrsize", null, function (t) {
          this._setBuffer(15, t);
        }), a(0, s, "seaColor", function () {
          return this._getBuffer(19);
        }, function (t) {
          this._setBuffer(19, t);
        }), a(0, s, "useVertexDeep", function () {
          return this._useVertexDeep;
        }, function (t) {
          this._useVertexDeep = t, t ? this._addShaderDefine(e.SHADERDEFINE_USEVERTEXHEIGHT) : this._removeShaderDefine(e.SHADERDEFINE_USEVERTEXHEIGHT);
        }), a(0, s, "windDir", function () {
          return 0;
        }, function (t) {}), a(0, s, "useRefractTexture", null, function (t) {
          t ? this._addShaderDefine(e.SHADERDEFINE_USE_REFRACT_TEX) : this._removeShaderDefine(e.SHADERDEFINE_USE_REFRACT_TEX);
        }), a(0, s, "renderMode", null, function (t) {
          switch (t) {
            case 1:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1;
              break;
            case 2:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !1;
              break;
            case 3:
              this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3;
              break;
            case 13:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771;
              break;
            default:
              throw new Error("PBRMaterial:renderMode value error.");
          }
        }), e.__init__ = function () {
          e.SHADERDEFINE_CUBE_ENV = e.shaderDefines.registerDefine("CUBE_ENV"), e.SHADERDEFINE_HDR_ENV = e.shaderDefines.registerDefine("HDR_ENV"), e.SHADERDEFINE_SHOW_NORMAL = e.shaderDefines.registerDefine("SHOW_NORMAL"), e.SHADERDEFINE_USEVERTEXHEIGHT = e.shaderDefines.registerDefine("USE_VERTEX_DEEPINFO"), e.SHADERDEFINE_USE_FOAM = e.shaderDefines.registerDefine("USE_FOAM"), e.SHADERDEFINE_USE_REFRACT_TEX = e.shaderDefines.registerDefine("USE_REFR_TEX");
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.DIFFUSETEXTURE = 1, e.NORMALTEXTURE = 2, e.UNDERWATERTEXTURE = 3, e.VERTEXDISPTEXTURE = 4, e.UVANIAGE = 5, e.UVMATRIX = 6, e.UVAGE = 7, e.CURTM = 8, e.DETAILTEXTURE = 9, e.DEEPCOLORTEXTURE = 10, e.SKYTEXTURE = 11, e.WAVEINFO = 12, e.WAVEINFOD = 13, e.WAVEMAINDIR = 14, e.SCRSIZE = 15, e.WATERINFO = 16, e.FOAMTEXTURE = 17, e.GEOWAVE_UV_SCALE = 18, e.SEA_COLOR = 19, e.WAVEINFODEEPSCALE = 20, e.SHADERDEFINE_SHOW_NORMAL = 0, e.SHADERDEFINE_CUBE_ENV = 0, e.SHADERDEFINE_HDR_ENV = 0, e.SHADERDEFINE_USE_FOAM = 0, e.SHADERDEFINE_USE_REFRACT_TEX = 0, e.SHADERDEFINE_USEVERTEXHEIGHT = 0, e.RENDERMODE_OPAQUE = 1, e.RENDERMODE_OPAQUEDOUBLEFACE = 2, e.RENDERMODE_CUTOUT = 3, e.RENDERMODE_CUTOUTDOUBLEFACE = 4, e.RENDERMODE_TRANSPARENT = 13, n(e, ["defaultMaterial", function () {
          return this.defaultMaterial = new e();
        }, "shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(mi),
      Yi = function (t) {
        function e(t, i, n, r) {
          this._indexType = null, this._indexTypeByteCount = 0, this._indexCount = 0, this._canRead = !1, void 0 === n && (n = 35044), void 0 === r && (r = !1), e.__super.call(this), this._indexType = t, this._indexCount = i, this._bufferUsage = n, this._bufferType = 34963, this._canRead = r;
          var a = 0;
          if ("ushort" == t) this._indexTypeByteCount = 2;
          else {
            if ("ubyte" != t) throw new Error("unidentification index type.");
            this._indexTypeByteCount = 1;
          }
          a = this._indexTypeByteCount * i, this._byteLength = a, this._bind(), d._gl.bufferData(this._bufferType, a, this._bufferUsage), r ? ("ushort" == t ? this._buffer = new Uint16Array(i) : "ubyte" == t && (this._buffer = new Uint8Array(i)), this.memorySize = 2 * a) : this.memorySize = a;
        }
        r(e, "laya.d3.graphics.IndexBuffer3D", t);
        var i = e.prototype;
        return i.setData = function (t, e, i, n) {
          void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 4294967295);
          var r = 0;
          if ("ushort" == this._indexType ? (r = 2, 0 === i && 4294967295 === n || (t = new Uint16Array(t.buffer, i * r, n))) : "ubyte" == this._indexType && (r = 1, 0 === i && 4294967295 === n || (t = new Uint8Array(t.buffer, i * r, n))), this._bind(), d._gl.bufferSubData(this._bufferType, e * r, t), this._canRead)
            if (0 !== e || 0 !== i || 4294967295 !== n) {
              var a = this._buffer.length - e;
              n > a && (n = a);
              for (var s = 0; s < n; s++) this._buffer[e + s] = t[s];
            } else this._buffer = t;
        }, i.getData = function () {
          if (this._canRead) return this._buffer;
          throw new Error("Can't read data from VertexBuffer with only write flag!");
        }, i.disposeResource = function () {
          t.prototype.disposeResource.call(this), this._buffer = null, this.memorySize = 0;
        }, a(0, i, "indexType", function () {
          return this._indexType;
        }), a(0, i, "indexTypeByteCount", function () {
          return this._indexTypeByteCount;
        }), a(0, i, "indexCount", function () {
          return this._indexCount;
        }), a(0, i, "canRead", function () {
          return this._canRead;
        }), e.INDEXTYPE_UBYTE = "ubyte", e.INDEXTYPE_USHORT = "ushort", e.create = function (t, i, n, r) {
          return void 0 === n && (n = 35044), void 0 === r && (r = !1), new e(t, i, n, r);
        }, e;
      }(d),
      qi = function (t) {
        function e(t, i, n, r) {
          this._vertexDeclaration = null, this._vertexCount = 0, this._canRead = !1, void 0 === r && (r = !1), e.__super.call(this), this._vertexDeclaration = t, this._vertexCount = i, this._bufferUsage = n, this._bufferType = 34962, this._canRead = r, this.memorySize = this._byteLength = this._vertexDeclaration.vertexStride * i, this._bind(), d._gl.bufferData(this._bufferType, this._byteLength, this._bufferUsage), r && (this._buffer = new Float32Array(this._byteLength / 4));
        }
        r(e, "laya.d3.graphics.VertexBuffer3D", t);
        var i = e.prototype;
        return i.bindWithIndexBuffer = function (t) {
          t && t._bind(), this._bind();
        }, i.setData = function (t, e, i, n) {
          if (void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 4294967295), 0 === i && 4294967295 === n || (t = new Float32Array(t.buffer, 4 * i, n)), this._bind(), d._gl.bufferSubData(this._bufferType, 4 * e, t), this._canRead)
            if (0 !== e || 0 !== i || 4294967295 !== n) {
              var r = this._buffer.length - e;
              n > r && (n = r);
              for (var a = 0; a < n; a++) this._buffer[e + a] = t[a];
            } else this._buffer = t;
        }, i.getData = function () {
          if (this._canRead) return this._buffer;
          throw new Error("Can't read data from VertexBuffer with only write flag!");
        }, i.disposeResource = function () {
          for (var e = L.mainContext, i = this._vertexDeclaration.getVertexElements(), n = d._enableAtributes, r = 0, a = i.length; r < a; r++) n[r] === this._glBuffer && (e.disableVertexAttribArray(r), n[r] = null);
          t.prototype.disposeResource.call(this), this._buffer = null, this._vertexDeclaration = null, this.memorySize = 0;
        }, a(0, i, "vertexDeclaration", function () {
          return this._vertexDeclaration;
        }), a(0, i, "vertexCount", function () {
          return this._vertexCount;
        }), a(0, i, "canRead", function () {
          return this._canRead;
        }), e.create = function (t, i, n, r) {
          return void 0 === n && (n = 35044), void 0 === r && (r = !1), new e(t, i, n, r);
        }, e;
      }(d),
      Qi = function (t) {
        function e() {
          e.__super.call(this), this.setShaderName("PARTICLESHURIKEN"), this.renderMode = 6;
        }
        r(e, "laya.d3.core.particleShuriKen.ShurikenParticleMaterial", t);
        var s = e.prototype;
        return s.onAsynLoaded = function (i, n, r) {
          var a = n[0];
          if (a.version) t.prototype.onAsynLoaded.call(this, i, n, r);
          else {
            var s = n[1],
              o = a.props;
            for (var h in o) this[h] = o[h];
            e._parseShurikenParticleMaterial(s, this, a), this._endLoaded();
          }
        }, a(0, s, "renderMode", null, function (t) {
          switch (t) {
            case 1:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 2, this.blend = 0, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 2:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 3:
              this.depthWrite = !0, this.cull = 2, this.blend = 0, this.renderQueue = 2e3, this.alphaTest = !0, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 4:
              this.renderQueue = 2e3, this.depthWrite = !0, this.cull = 0, this.blend = 0, this.alphaTest = !0, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 13:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 14:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 15:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 16:
              this.renderQueue = 3e3, this.depthWrite = !0, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 5:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 6:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 7:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 8:
              this.renderQueue = 3e3, this.depthWrite = !1, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 9:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 10:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 771, this.alphaTest = !1, this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 11:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 2, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            case 12:
              this.renderQueue = 3e3, this.depthTest = 513, this.cull = 0, this.blend = 1, this.srcBlend = 770, this.dstBlend = 1, this.alphaTest = !1, this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
              break;
            default:
              throw new Error("Material:renderMode value error.");
          }
          this._conchMaterial && this._conchMaterial.setRenderMode(t);
        }), a(0, s, "tintColor", function () {
          return this._getColor(2);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR) : this._removeShaderDefine(laya.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR), this._setColor(2, t);
        }), a(0, s, "tilingOffset", function () {
          return this._getColor(3);
        }, function (t) {
          if (t) {
            var e = t.elements;
            1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3] ? this._addShaderDefine(laya.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(laya.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TILINGOFFSET);
          } else this._removeShaderDefine(laya.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_TILINGOFFSET);
          this._setColor(3, t);
        }), a(0, s, "diffuseTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP) : this._removeShaderDefine(laya.d3.core.particleShuriKen.ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP), this._setTexture(1, t);
        }), e.__init__ = function () {
          e.SHADERDEFINE_DIFFUSEMAP = e.shaderDefines.registerDefine("DIFFUSEMAP"), e.SHADERDEFINE_TINTCOLOR = e.shaderDefines.registerDefine("TINTCOLOR"), e.SHADERDEFINE_ADDTIVEFOG = e.shaderDefines.registerDefine("ADDTIVEFOG"), e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine("TILINGOFFSET");
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e._parseShurikenParticleMaterial = function (t, e, i) {
          var n = i.customProps,
            r = n.diffuseTexture.texture2D;
          r && (e.diffuseTexture = y.getRes(t[r]));
          var a = n.tintColor;
          a && (e.tintColor = new Oe(a[0], a[1], a[2], a[3]));
        }, e.RENDERMODE_OPAQUE = 1, e.RENDERMODE_OPAQUEDOUBLEFACE = 2, e.RENDERMODE_CUTOUT = 3, e.RENDERMODE_CUTOUTDOUBLEFACE = 4, e.RENDERMODE_TRANSPARENT = 13, e.RENDERMODE_TRANSPARENTDOUBLEFACE = 14, e.RENDERMODE_ADDTIVE = 15, e.RENDERMODE_ADDTIVEDOUBLEFACE = 16, e.RENDERMODE_DEPTHREAD_TRANSPARENT = 5, e.RENDERMODE_DEPTHREAD_TRANSPARENTDOUBLEFACE = 6, e.RENDERMODE_DEPTHREAD_ADDTIVE = 7, e.RENDERMODE_DEPTHREAD_ADDTIVEDOUBLEFACE = 8, e.RENDERMODE_NONDEPTH_TRANSPARENT = 9, e.RENDERMODE_NONDEPTH_TRANSPARENTDOUBLEFACE = 10, e.RENDERMODE_NONDEPTH_ADDTIVE = 11, e.RENDERMODE_NONDEPTH_ADDTIVEDOUBLEFACE = 12, e.SHADERDEFINE_DIFFUSEMAP = 0, e.SHADERDEFINE_TINTCOLOR = 0, e.SHADERDEFINE_TILINGOFFSET = 0, e.SHADERDEFINE_ADDTIVEFOG = 0, e.DIFFUSETEXTURE = 1, e.TINTCOLOR = 2, e.TILINGOFFSET = 3, n(e, ["defaultMaterial", function () {
          return this.defaultMaterial = new e();
        }, "shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(mi),
      Ki = function (t) {
        function e() {
          e.__super.call(this), this.setShaderName("Trail"), this._setColor(2, new Oe(1, 1, 1, 1));
        }
        r(e, "laya.d3.core.trail.TrailMaterial", mi);
        var s = e.prototype;
        return a(0, s, "tintColor", function () {
          return this._getColor(2);
        }, function (t) {
          this._setColor(2, t);
        }), a(0, s, "diffuseTexture", function () {
          return this._getTexture(1);
        }, function (t) {
          t ? this._addShaderDefine(laya.d3.core.trail.TrailMaterial.SHADERDEFINE_DIFFUSETEXTURE) : this._removeShaderDefine(laya.d3.core.trail.TrailMaterial.SHADERDEFINE_DIFFUSETEXTURE), this._setTexture(1, t);
        }), a(0, s, "tilingOffset", function () {
          return this._getColor(3);
        }, function (t) {
          if (t) {
            var e = t.elements;
            1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3] ? this._addShaderDefine(laya.d3.core.trail.TrailMaterial.SHADERDEFINE_TILINGOFFSET) : this._removeShaderDefine(laya.d3.core.trail.TrailMaterial.SHADERDEFINE_TILINGOFFSET);
          } else this._removeShaderDefine(laya.d3.core.trail.TrailMaterial.SHADERDEFINE_TILINGOFFSET);
          this._setColor(3, t);
        }), e.__init__ = function () {
          e.SHADERDEFINE_DIFFUSETEXTURE = e.shaderDefines.registerDefine("DIFFUSETEXTURE"), e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine("TILINGOFFSET");
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.SHADERDEFINE_DIFFUSETEXTURE = 0, e.SHADERDEFINE_TILINGOFFSET = 0, e.DIFFUSETEXTURE = 1, e.TINTCOLOR = 2, e.TILINGOFFSET = 3, n(e, ["defaultMaterial", function () {
          return this.defaultMaterial = new e();
        }, "shaderDefines", function () {
          return this.shaderDefines = new Be(mi.shaderDefines);
        }]), e;
      }(),
      Zi = (function (t) {
        function e() {
          this._animationSprites = null, this._animationSpritesInitLocalMatrix = null, this._tempCurAnimationData = null, this._curOriginalData = null, this._lastFrameIndex = -1, this._curAnimationDatas = null, e.__super.call(this), this._animationSprites = [], this._animationSpritesInitLocalMatrix = [];
        }
        r(e, "laya.d3.component.animation.RigidAnimations", t);
        var n = e.prototype;
        n._init = function () {
          for (var t = this._templet.getNodes(this.currentAnimationClipIndex), e = this._owner, i = t.length, n = 0, r = new Uint16Array(this._templet.getPublicExtData()), a = 0; a < i; a++) {
            var s = r.slice(n + 1, n + 1 + r[n]);
            n += r[n] + 1;
            for (var o = 1; o < s.length; o++) {
              s[o];
              e = e._childs[s[o]];
            }
            var h = e.getChildByName(t[a].name);
            if (!h) break;
            this._animationSprites[a] = h;
            var l = this._animationSpritesInitLocalMatrix[a];
            l || (l = this._animationSpritesInitLocalMatrix[a] = new Ce()), h.transform.localMatrix.cloneTo(l), e = this._owner;
          }
        }, n._animtionPlay = function () {
          this._templet.loaded ? this._init() : this._templet.once("loaded", this, this._init);
        }, n._animtionStop = function () {
          if (this._lastFrameIndex = -1, this._player.returnToZeroStopped) {
            this._curAnimationDatas = null;
            for (var t = 0; t < this._animationSprites.length; t++) this._animationSprites[t].transform.localMatrix = this._animationSpritesInitLocalMatrix[t];
          }
        }, n._effectAnimation = function (t) {
          for (var e = 0, i = this._animationSprites.length; e < i; e++) {
            for (var n = this._animationSprites[e], r = n.transform.localMatrix, a = r.elements, s = 0; s < 16; s++) a[s] = this._curAnimationDatas[16 * e + s];
            n.transform.localMatrix = r;
          }
        }, n._load = function (e) {
          t.prototype._load.call(this, e), this._player.on("stopped", this, this._animtionStop), this._player.on("played", this, this._animtionPlay);
        }, n._update = function (t) {
          if (2 === this._player.state && this._templet && this._templet.loaded) {
            var e = this._player.playbackRate * i.timer.scale,
              n = this._player.cachePlayRate,
              r = this._player.isCache && e >= n,
              a = r ? this.currentFrameIndex : -1;
            if (-1 === a || this._lastFrameIndex !== a) {
              var s = this.currentAnimationClipIndex,
                o = this._templet.getNodes(s),
                h = this._templet._animationDatasCache;
              if (r) {
                var l = this._templet.getAnimationDataWithCache(n, h, s, a);
                if (l) return this._curAnimationDatas = l, this._lastFrameIndex = a, void this._effectAnimation(o);
              }
              var u = 16 * o.length;
              r ? this._curAnimationDatas = new Float32Array(u) : (this._tempCurAnimationData || (this._tempCurAnimationData = new Float32Array(u)), this._curAnimationDatas = this._tempCurAnimationData), this._curOriginalData || (this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(s))), r ? this._templet.getOriginalData(s, this._curOriginalData, this._player._fullFrames[s], a, this._player.currentFrameTime) : this._templet.getOriginalDataUnfixedRate(s, this._curOriginalData, this._player.currentPlayTime), Ke._computeRootAnimationData(o, this._curOriginalData, this._curAnimationDatas), r && this._templet.setAnimationDataWithCache(n, h, s, a, this._curAnimationDatas), this._lastFrameIndex = a, this._effectAnimation(o);
            }
          }
        }, n._unload = function (e) {
          t.prototype._unload.call(this, e), this._animationSprites = null, this._animationSpritesInitLocalMatrix = null, this._tempCurAnimationData = null, this._curOriginalData = null, this._curAnimationDatas = null;
        }, a(0, n, "url", null, function (t) {
          console.log("Warning: discard property,please use templet property instead.");
          var e = i.loader.create(t, null, null, h);
          this._templet !== e && (0 !== this._player.state && this._player.stop(!0), this._templet = e, this._player.templet = e, this._curOriginalData = null, this._curAnimationDatas = null, this._tempCurAnimationData = null, this._templet._animationDatasCache || (this._templet._animationDatasCache = []), this.event("animationchanged", this));
        }), a(0, n, "templet", t.prototype._$get_templet, function (t) {
          this._templet !== t && (0 !== this._player.state && this._player.stop(!0), this._templet = t, this._player.templet = t, this._curOriginalData = null, this._curAnimationDatas = null, this._tempCurAnimationData = null, this._templet._animationDatasCache || (this._templet._animationDatasCache = []), this.event("animationchanged", this));
        });
      }(Ti), function (t) {
        function e() {
          this._tempCurAnimationData = null, this._tempCurBonesData = null, this._curOriginalData = null, this._lastFrameIndex = -1, this._curMeshAnimationData = null, this._curBonesDatas = null, this._curAnimationDatas = null, this._ownerMesh = null, this._boneIndexToMeshList = null, this._oldVersion = !1, e.__super.call(this), this._boneIndexToMeshList = [];
        }
        r(e, "laya.d3.component.animation.SkinAnimations", t);
        var n = e.prototype;
        return n._computeBoneIndexToMeshOnTemplet = function () {
          this._templet.loaded ? this._computeBoneIndexToMeshOnMesh() : this._templet.once("loaded", this, this._computeBoneIndexToMeshOnMesh);
        }, n._computeBoneIndexToMeshOnMesh = function () {
          "LAYAANIMATION:02" === this._templet._aniVersion ? this._oldVersion = !1 : this._oldVersion = !0;
          var t = this._owner.meshFilter.sharedMesh;
          t.loaded ? this._computeBoneIndexToMesh(t) : t.on("loaded", this, this._computeBoneIndexToMesh);
        }, n._computeBoneIndexToMesh = function (t) {
          var e = t._boneNames;
          if (e)
            for (var i = e.length, n = this._templet._anis, r = 0, a = n.length; r < a; r++) {
              var s = this._boneIndexToMeshList[r];
              s || (s = this._boneIndexToMeshList[r] = []), s.length = i;
              for (var o = n[r], h = 0; h < i; h++) s[h] = o.bone3DMap[e[h]];
            }
        }, n._getAnimationDatasWithCache = function (t, e, i, n, r) {
          var a = i[n];
          if (a) {
            var s = a[t];
            if (s) {
              var o = s[e.id];
              return o ? o[r] : null;
            }
            return null;
          }
          return null;
        }, n._setAnimationDatasWithCache = function (t, e, i, n, r, a) {
          var s = i[n] || (i[n] = {}),
            o = s[t] || (s[t] = {});
          (o[e.id] || (o[e.id] = []))[r] = a;
        }, n._onAnimationPlayMeshLoaded = function () {
          for (var t = this._ownerMesh.meshRender._renderElements, e = 0, i = t.length; e < i; e++) t[e]._canDynamicBatch = !1;
        }, n._onAnimationPlay = function () {
          this._ownerMesh._render._addShaderDefine(yn.SHADERDEFINE_BONE);
          var t = this._ownerMesh.meshFilter.sharedMesh;
          t.loaded ? this._onAnimationPlayMeshLoaded() : t.once("loaded", this, this._onAnimationPlayMeshLoaded);
        }, n._onAnimationStop = function () {
          this._lastFrameIndex = -1, this._player.returnToZeroStopped && (this._curBonesDatas = null, this._curAnimationDatas = null, this._ownerMesh._render._removeShaderDefine(yn.SHADERDEFINE_BONE));
          for (var t = this._ownerMesh.meshRender._renderElements, e = 0, i = t.length; e < i; e++) t[e]._canDynamicBatch = !0;
        }, n._load = function (e) {
          t.prototype._load.call(this, e), this._ownerMesh = e, this._player.on("played", this, this._onAnimationPlay), this._player.on("stopped", this, this._onAnimationStop), this._owner.meshFilter.on("meshchanged", this, this._computeBoneIndexToMeshOnTemplet);
        }, n._update = function (t) {
          var n = this._ownerMesh.meshFilter.sharedMesh;
          if (2 === this._player.state && this._templet && this._templet.loaded && n.loaded) {
            var r = this._player.playbackRate * i.timer.scale,
              a = this._player.cachePlayRate,
              s = this._player.isCache && r >= a,
              o = s ? this.currentFrameIndex : -1;
            if (-1 === o || this._lastFrameIndex !== o) {
              var h = this.currentAnimationClipIndex,
                l = this._templet._animationDatasCache[0],
                u = this._templet._animationDatasCache[1];
              if (s) {
                var c = this._getAnimationDatasWithCache(a, n, u, h, o);
                if (c) return this._curAnimationDatas = c, this._curBonesDatas = this._templet.getAnimationDataWithCache(a, l, h, o), void(this._lastFrameIndex = o);
              }
              var _ = !1;
              s && (this._curBonesDatas = this._templet.getAnimationDataWithCache(a, l, h, o), _ = !!this._curBonesDatas);
              var d = this._templet.getNodes(h),
                f = 16 * d.length,
                p = n.InverseAbsoluteBindPoses;
              this._oldVersion ? this._curMeshAnimationData || (this._curMeshAnimationData = new Float32Array(f)) : this._curMeshAnimationData || (this._curMeshAnimationData = new Float32Array(16 * p.length));
              var m, g, v = 0,
                y = 0,
                x = 0,
                T = n.getSubMeshCount();
              if (s) {
                for (this._curAnimationDatas = [], this._curAnimationDatas.length = T, v = 0; v < T; v++)
                  for (m = this._curAnimationDatas[v] = [], x = (g = n.getSubMesh(v))._boneIndicesList.length, m.length = x, y = 0; y < x; y++) m[y] = new Float32Array(16 * g._boneIndicesList[y].length);
                _ || (this._curBonesDatas = new Float32Array(f));
              } else {
                if (!this._tempCurAnimationData)
                  for (this._tempCurAnimationData = [], this._tempCurAnimationData.length = T, v = 0; v < T; v++)
                    for (m = this._tempCurAnimationData[v] = [], x = (g = n.getSubMesh(v))._boneIndicesList.length, m.length = x, y = 0; y < x; y++) m[y] = new Float32Array(16 * g._boneIndicesList[y].length);
                this._tempCurBonesData || (this._tempCurBonesData = new Float32Array(f)), this._curAnimationDatas = this._tempCurAnimationData, this._curBonesDatas = this._tempCurBonesData;
              }
              if (this._curOriginalData || (this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(h))), s ? this._templet.getOriginalData(h, this._curOriginalData, this._player._fullFrames[h], o, this._player.currentFrameTime) : this._templet.getOriginalDataUnfixedRate(h, this._curOriginalData, this._player.currentPlayTime), this._oldVersion) s && _ ? Ke._computeAnimationDatasByArrayAndMatrixFastOld(p, this._curBonesDatas, this._curMeshAnimationData) : Ke._computeBoneAndAnimationDatasByBindPoseMatrxixOld(d, this._curOriginalData, p, this._curBonesDatas, this._curMeshAnimationData);
              else {
                var S = this._boneIndexToMeshList[h];
                s && _ ? Ke._computeAnimationDatasByArrayAndMatrixFast(p, this._curBonesDatas, this._curMeshAnimationData, S) : Ke._computeBoneAndAnimationDatasByBindPoseMatrxix(d, this._curOriginalData, p, this._curBonesDatas, this._curMeshAnimationData, S);
              }
              for (v = 0; v < T; v++) {
                var w = n.getSubMesh(v)._boneIndicesList;
                for (x = w.length, m = this._curAnimationDatas[v], y = 0; y < x; y++) e._splitAnimationDatas(w[y], this._curMeshAnimationData, m[y]);
              }
              s && (this._setAnimationDatasWithCache(a, n, u, h, o, this._curAnimationDatas), _ || this._templet.setAnimationDataWithCache(a, l, h, o, this._curBonesDatas)), this._lastFrameIndex = o;
            }
          }
        }, n._preRenderUpdate = function (t) {
          var e = t.renderElement.renderObj;
          this._curAnimationDatas ? e._skinAnimationDatas = this._curAnimationDatas[e._indexInMesh] : e._skinAnimationDatas = null;
        }, n._unload = function (e) {
          2 == this.player.state && this._ownerMesh._render._removeShaderDefine(yn.SHADERDEFINE_BONE), this._templet && !this._templet.loaded && this._templet.off("loaded", this, this._computeBoneIndexToMeshOnMesh);
          var i = this._ownerMesh.meshFilter.sharedMesh;
          i.loaded || i.off("loaded", this, this._onAnimationPlayMeshLoaded), t.prototype._unload.call(this, e), this._tempCurAnimationData = null, this._tempCurBonesData = null, this._curOriginalData = null, this._curMeshAnimationData = null, this._curBonesDatas = null, this._curAnimationDatas = null, this._ownerMesh = null;
        }, a(0, n, "curBonesDatas", function () {
          return this._curBonesDatas;
        }), a(0, n, "templet", t.prototype._$get_templet, function (t) {
          this._templet !== t && (0 !== this._player.state && this._player.stop(!0), this._templet = t, this._player.templet = t, this._computeBoneIndexToMeshOnTemplet(), this._curOriginalData = null, this._curMeshAnimationData = null, this._tempCurBonesData = null, this._tempCurAnimationData = null, this._templet._animationDatasCache || (this._templet._animationDatasCache = [
            [],
            []
          ]), this.event("animationchanged", this));
        }), e._splitAnimationDatas = function (t, e, i) {
          for (var n = 0, r = t.length, a = 0; n < r; n++)
            for (var s = 0; s < 16; s++, a++) i[a] = e[(t[n] << 4) + s];
        }, e;
      }(Ti)),
      $i = function (t) {
        function e() {
          this._size = null, this._transformOrientedBoundBox = null, this.center = null, e.__super.call(this), this._needUpdate = !1;
        }
        r(e, "laya.d3.component.physics.BoxCollider", wi);
        var i = e.prototype;
        return i._updateCollider = function () {
          if (this._needUpdate) {
            var t = this._transformOrientedBoundBox.transformation,
              i = this._owner.transform,
              n = i.rotation,
              r = i.scale,
              a = this.center.elements;
            0 === a[0] && 0 === a[1] && 0 === a[2] ? Ce.createAffineTransformation(i.position, n, Le.ONE, t) : (Le.multiply(this.center, r, e._deviationV3), Le.transformQuat(e._deviationV3, n, e._deviationV3), Le.add(i.position, e._deviationV3, e._deviationV3), Ce.createAffineTransformation(e._deviationV3, n, Le.ONE, t)), this._transformOrientedBoundBox.transformation = t;
            var s = this._transformOrientedBoundBox.extents.elements,
              o = this._size.elements,
              h = r.elements;
            s[0] = .5 * o[0] * h[0], s[1] = .5 * o[1] * h[1], s[2] = .5 * o[2] * h[2], this._needUpdate = !1;
          }
        }, i._onWorldMatrixChanged = function () {
          this._needUpdate = !0;
          for (var t in this._runtimeCollisonMap) this._runtimeCollisonTestMap[t] = !0, this._runtimeCollisonMap[t]._runtimeCollisonTestMap[this.id] = !0;
        }, i._initialize = function (t) {
          laya.d3.component.Component3D.prototype._initialize.call(this, t), this._transformOrientedBoundBox = new Me(new Le(), new Ce()), this._size = new Le(), this.center = new Le(), t.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged), this._needUpdate = !0;
        }, i._getType = function () {
          return 1;
        }, i._collisonTo = function (t) {
          switch (t._getType()) {
            case 0:
              return 0 !== this.boundBox.containsSphere(t.boundSphere);
            case 1:
              return 0 !== this.boundBox.containsOrientedBoundBox(t.boundBox);
            case 2:
              var e = t;
              if (0 !== this.boundBox.containsBoundBox(e._boundBox)) {
                for (var i = t.mesh._positions, n = 0, r = i.length; n < r; n++)
                  if (1 === this.boundBox.containsPoint(i[n])) return !0;
                return !1;
              }
              return !1;
            default:
              throw new Error("BoxCollider:unknown collider type.");
          }
        }, i._cloneTo = function (t) {
          var e = t,
            i = e.size;
          this.size.cloneTo(i), e.size = i, this.center.cloneTo(e.center);
        }, i.raycast = function (t, e, i) {
          void 0 === i && (i = 1.79e308), this._updateCollider();
          var n = this._transformOrientedBoundBox.intersectsRay(t, e.position);
          return -1 !== n && n <= i ? (e.distance = n, e.sprite3D = this._owner, !0) : (e.distance = -1, e.sprite3D = null, !1);
        }, i.setFromBoundBox = function (t) {
          Me.createByBoundBox(t, this._transformOrientedBoundBox);
          var e = this._transformOrientedBoundBox.extents;
          this._size = new Le(2 * e.x, 2 * e.y, 2 * e.z), this.center = new Le(), Le.add(t.min, t.max, this.center), Le.scale(this.center, .5, this.center), this._needUpdate = !0;
        }, a(0, i, "boundBox", function () {
          return this._updateCollider(), this._transformOrientedBoundBox;
        }), a(0, i, "size", function () {
          return this._size;
        }, function (t) {
          this._size = t, this._needUpdate = !0;
        }), n(e, ["_deviationV3", function () {
          return this._deviationV3 = new Le();
        }, "_obbCenterV3", function () {
          return this._obbCenterV3 = new Le();
        }]), e;
      }(),
      Ji = function (t) {
        function e() {
          this._transformBoundingBox = null, this._mesh = null, e.__super.call(this), this._transformBoundingBox = new xe(new Le(), new Le()), this._needUpdate = !1;
        }
        r(e, "laya.d3.component.physics.MeshCollider", wi);
        var i = e.prototype;
        return i._updateBoundBoxCollider = function () {
          if (this._needUpdate) {
            for (var t = this._owner.transform.worldMatrix, i = this._mesh.boundingBoxCorners, n = 0; n < 8; n++) Le.transformCoordinate(i[n], t, e._tempBoundBoxCorners[n]);
            xe.createfromPoints(e._tempBoundBoxCorners, this._transformBoundingBox), this._needUpdate = !1;
          }
        }, i._raycastMesh = function (t, i, n, r) {
          void 0 === r && (r = 1.79e308);
          var a = i.transform.worldMatrix,
            s = e._tempMatrix4x40;
          a.invert(s);
          var o = t.origin,
            h = t.direction,
            l = e._tempRay0;
          Le.transformCoordinate(o, s, l.origin), Le.TransformNormal(h, s, l.direction);
          for (var u = Number.MAX_VALUE, c = 0, _ = this._mesh.getRenderElementsCount(); c < _; c++) {
            var d = this._mesh.getRenderElement(c),
              f = d._getVertexBuffer(0),
              p = f.getData(),
              m = d._getIndexBuffer().getData(),
              g = e._tempRaycastHit;
            if (Ye.rayIntersectsPositionsAndIndices(l, p, f.vertexDeclaration, m, g)) {
              Le.transformCoordinate(g.position, a, g.position);
              var v = e._tempVector30;
              Le.subtract(o, g.position, v);
              var y = Le.scalarLength(v);
              if (y < r && y < u) {
                g.distance = y, g.sprite3D = i;
                var x = g.trianglePositions;
                Le.transformCoordinate(x[0], a, x[0]), Le.transformCoordinate(x[1], a, x[1]), Le.transformCoordinate(x[2], a, x[2]);
                var T = g.triangleNormals;
                return Le.transformCoordinate(T[0], a, T[0]), Le.transformCoordinate(T[1], a, T[1]), Le.transformCoordinate(T[2], a, T[2]), u = y, g.cloneTo(n), !0;
              }
              return !1;
            }
          }
          return !1;
        }, i._onWorldMatrixChanged = function () {
          this._needUpdate = !0;
        }, i._initialize = function (t) {
          laya.d3.component.Component3D.prototype._initialize.call(this, t), t.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged), this._needUpdate = !0;
        }, i._getType = function () {
          return 2;
        }, i._collisonTo = function (t) {
          var e = 0,
            i = 0,
            n = this.mesh._positions;
          switch (t._getType()) {
            case 0:
              var r = t;
              if (0 !== we.sphereContainsBox(r.boundSphere, this._boundBox)) {
                for (e = 0, i = n.length; e < i; e++)
                  if (1 === we.sphereContainsPoint(r.boundSphere, n[e])) return !0;
                return !1;
              }
              return !1;
            case 1:
              var a = t;
              if (0 !== a.boundBox.containsBoundBox(this._boundBox)) {
                for (e = 0, i = n.length; e < i; e++)
                  if (1 === a.boundBox.containsPoint(n[e])) return !0;
                return !1;
              }
              return !1;
            case 2:
              var s = t;
              return 1 !== we.intersectsBoxAndBox(s._boundBox, this._boundBox);
            default:
              throw new Error("MeshCollider:unknown collider type.");
          }
        }, i._cloneTo = function (t) {
          t.mesh = this._mesh;
        }, i.raycast = function (t, e, i) {
          if (void 0 === i && (i = 1.79e308), null == this._mesh || !this._mesh.loaded) return !1;
          var n = we.intersectsRayAndBoxRD(t, this._boundBox);
          return !!(-1 !== n && n <= i && this._raycastMesh(t, this._owner, e, i)) || (e.distance = -1, e.sprite3D = null, !1);
        }, a(0, i, "_boundBox", function () {
          return this._updateBoundBoxCollider(), this._transformBoundingBox;
        }), a(0, i, "mesh", function () {
          return this._mesh;
        }, function (t) {
          this._mesh = t;
        }), n(e, ["_tempRay0", function () {
          return this._tempRay0 = new Re(new Le(), new Le());
        }, "_tempVector30", function () {
          return this._tempVector30 = new Le();
        }, "_tempMatrix4x40", function () {
          return this._tempMatrix4x40 = new Ce();
        }, "_tempRaycastHit", function () {
          return this._tempRaycastHit = new qe();
        }, "_tempBoundBoxCorners", function () {
          return this._tempBoundBoxCorners = [new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le(), new Le()];
        }]), e;
      }(),
      tn = function (t) {
        function e() {
          this._originalBoundSphere = null, this._transformBoundSphere = null, e.__super.call(this), this._needUpdate = !1;
        }
        r(e, "laya.d3.component.physics.SphereCollider", wi);
        var i = e.prototype;
        return i._updateCollider = function () {
          if (this._needUpdate) {
            var t = NaN,
              e = this._owner.transform,
              i = e.scale;
            t = i.x >= i.y && i.x >= i.z ? i.x : i.y >= i.z ? i.y : i.z, Le.transformCoordinate(this._originalBoundSphere.center, e.worldMatrix, this._transformBoundSphere.center), this._transformBoundSphere.radius = this._originalBoundSphere.radius * t, this._needUpdate = !1;
          }
        }, i._onWorldMatrixChanged = function () {
          this._needUpdate = !0;
          for (var t in this._runtimeCollisonMap) this._runtimeCollisonTestMap[t] = !0, this._runtimeCollisonMap[t]._runtimeCollisonTestMap[this.id] = !0;
        }, i._initialize = function (t) {
          laya.d3.component.Component3D.prototype._initialize.call(this, t), this._originalBoundSphere = new Se(new Le(0, 0, 0), .5), this._transformBoundSphere = new Se(new Le(0, 0, 0), .5), t.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged), this._needUpdate = !0;
        }, i._getType = function () {
          return 0;
        }, i._collisonTo = function (t) {
          switch (t._getType()) {
            case 0:
              return 0 !== we.sphereContainsSphere(this.boundSphere, t.boundSphere);
            case 1:
              return 0 !== t.boundBox.containsSphere(this.boundSphere);
            case 2:
              var e = t;
              if (0 !== we.sphereContainsBox(this.boundSphere, e._boundBox)) {
                for (var i = e.mesh._positions, n = 0, r = i.length; n < r; n++)
                  if (1 === we.sphereContainsPoint(this.boundSphere, i[n])) return !0;
                return !1;
              }
              return !1;
            default:
              throw new Error("SphereCollider:unknown collider type.");
          }
        }, i._cloneTo = function (t) {
          var e = t;
          e.radius = this.radius;
          var i = e.center;
          this.center.cloneTo(i), e.center = i;
        }, i.raycast = function (t, e, i) {
          void 0 === i && (i = 1.79e308), this._updateCollider();
          var n = this._transformBoundSphere.intersectsRayPoint(t, e.position);
          return -1 !== n && n <= i ? (e.distance = n, e.sprite3D = this._owner, !0) : (e.distance = -1, e.sprite3D = null, !1);
        }, a(0, i, "center", function () {
          return this._originalBoundSphere.center;
        }, function (t) {
          this._originalBoundSphere.center = t;
        }), a(0, i, "radius", function () {
          return this._originalBoundSphere.radius;
        }, function (t) {
          this._originalBoundSphere.radius = t;
        }), a(0, i, "boundSphere", function () {
          return this._updateCollider(), this._transformBoundSphere;
        }), e;
      }(),
      en = function (t) {
        function e() {
          this.simLodInfo = null, this._src = null, this._buffer = null, this._mipmaps = null, this._recreateLock = !1, this._needReleaseAgain = !1, e.__super.call(this), this._type = 3553;
        }
        r(e, "laya.d3.resource.DataTexture2D", gi);
        var s = e.prototype;
        return s.genDebugMipmaps = function () {
          var t = [];
          return t.push(new Uint8Array(new Uint32Array(131072).fill(4278190335).buffer)), t.push(new Uint8Array(new Uint32Array(32768).fill(4278223103).buffer)), t.push(new Uint8Array(new Uint32Array(8192).fill(4278255615).buffer)), t.push(new Uint8Array(new Uint32Array(2048).fill(4278255360).buffer)), t.push(new Uint8Array(new Uint32Array(512).fill(4286595072).buffer)), t.push(new Uint8Array(new Uint32Array(128).fill(4294901760).buffer)), t.push(new Uint8Array(new Uint32Array(32).fill(4294901888).buffer)), t.push(new Uint8Array(new Uint32Array(8).fill(0).buffer)), t.push(new Uint8Array(new Uint32Array(2).fill(4286611584).buffer)), t.push(new Uint8Array(new Uint32Array(1).fill(4294967295).buffer)), t;
        }, s._onTextureLoaded = function (t) {}, s._createWebGlTexture = function () {
          if (!this._buffer && !this._mipmaps) throw "create GLTextur err:no data";
          var t = L.mainContext;
          t.getExtension("EXT_shader_texture_lod");
          var i = this._source = t.createTexture(),
            n = this._width,
            r = this._height,
            a = O.curBindTexTarget,
            s = O.curBindTexValue;
          if (O.bindTexture(t, this._type, i), this._mipmaps) {
            if (laya.d3.resource.DataTexture2D.lodasatlas) {
              var o = 0;
              t.texImage2D(this._type, 0, 6408, this._width, this._height, 0, 6408, 5121, null);
              for (var h = 0; h < this._mipmaps.length; h++) {
                if (this._mipmaps[h].byteLength != u * c * 4) throw "mipmap size error  level:" + h;
                t.texSubImage2D(this._type, 0, e.simLodRect[o++], e.simLodRect[o++], e.simLodRect[o++], e.simLodRect[o++], 6408, 5121, new Uint8Array(this._mipmaps[h]));
              }
              this.minFifter = 9729, this.magFifter = 9729;
            } else {
              var u = this._width,
                c = this._height;
              for (o = 0, t.texImage2D(this._type, 0, 6408, this._width, this._height, 0, 6408, 5121, null), h = 0; h < this._mipmaps.length; h++) {
                if (this._mipmaps[h].byteLength != u * c * 4) throw "mipmap size error  level:" + h;
                t.texImage2D(this._type, h, 6408, u, c, 0, 6408, 5121, new Uint8Array(this._mipmaps[h])), c /= 2, (u /= 2) < 1 && (u = 1), c < 1 && (c = 1), this.minFifter = 9987, this.magFifter = 9729;
              }
            }
            this.mipmap = !1;
          } else t.texImage2D(this._type, 0, 6408, n, r, 0, 6408, 5121, new Uint8Array(this._buffer));
          var _ = this._minFifter,
            d = this._magFifter,
            f = this._repeat ? 10497 : 33071,
            p = l.isPOT(n, r);
          if (!p) throw "data texture must be POT";
          this._mipmap || this._mipmaps ? -1 !== _ || (_ = 9987) : -1 !== _ || (_ = 9729), -1 !== d || (d = 9729), t.texParameteri(this._type, 10241, _), t.texParameteri(this._type, 10240, d), t.texParameteri(this._type, 10242, f), this._mipmaps ? t.texParameteri(this._type, 10243, 33071) : t.texParameteri(this._type, 10243, f), this._mipmap && t.generateMipmap(this._type), a && s && O.bindTexture(t, a, s), this.src && this.src.length > 0 && (this._buffer = null), this.memorySize = p ? n * r * 4 * (1 + 1 / 3) : n * r * 4, this._recreateLock = !1;
        }, s.recreateResource = function () {
          if (this._buffer || null != this._src && "" !== this._src)
            if (this._needReleaseAgain = !1, this._buffer || this._mipmaps) {
              if (this._recreateLock) return;
              this._createWebGlTexture(), this.completeCreate();
            } else {
              this._recreateLock = !0;
            }
        }, s.onAsynLoaded = function (t, e, i) {
          var n;
          i && (n = i[0].call(this, e)), n && (this._width = n.width, this._height = n.height, this._buffer = n.data), this._src = t, this._size = new Qe(this._width, this._height), this._conchTexture ? alert("怎么给runtime传递datatexture数据") : this.activeResource(), this._endLoaded();
        }, s.getPixels = function () {
          return new Uint8Array(this._buffer);
        }, s.disposeResource = function () {
          this._recreateLock && (this._needReleaseAgain = !0), this._source && (L.mainContext.deleteTexture(this._source), this._source = null, this._buffer = null, this.memorySize = 0);
        }, a(0, s, "src", function () {
          return this._src;
        }), e.create = function (t, i, n, r, a, s) {
          if (void 0 === r && (r = 9729), void 0 === a && (a = 9729), void 0 === s && (s = !0), !t || t.byteLength < i * n * 4) throw "DataTexture2D create error";
          var o = new e();
          return o._buffer = t, o._width = i, o._height = n, o._mipmap = s, o._magFifter = r, o._minFifter = a, o._size = new Qe(o._width, o._height), o._conchTexture ? alert("怎么给runtime传递datatexture数据") : o.activeResource(), o;
        }, e.load = function (t, n, r, a, s) {
          void 0 === n && (n = 0), void 0 === r && (r = 0), void 0 === a && (a = 9729), void 0 === s && (s = 9729);
          if ("mipmaps" === P.getFileExtension(t)) {
            var o = i.loader.create(t, null, null, e, [function (t) {
              this._mipmaps = [];
              var e = new Uint32Array(t);
              this._width = e[0];
              var i = 512;
              if (laya.d3.resource.DataTexture2D.lodasatlas && (this._width *= 2, i = 1024), this._width != i) throw console.error("现在只支持512x256的环境贴图。当前的是" + e[0]), "现在只支持512x256的环境贴图。当前的是" + e[0];
              this._height = e[1];
              for (var n = laya.d3.resource.DataTexture2D.lodasatlas ? this._width / 2 : this._width, r = this._height, a = 8;;) {
                var s = n * r * 4;
                if (a + s > t.byteLength) throw "load mipmaps data size error ";
                var o = new Uint8Array(t, a, s);
                if (this._mipmaps.push(o), a += s, 1 == n && 1 == r) break;
                r /= 2, (n /= 2) < 1 && (n = 1), r < 1 && (r = 1);
              }
              return null;
            }]);
            if (laya.d3.resource.DataTexture2D.lodasatlas) {
              o.simLodInfo = new Float32Array(40);
              for (var h = 0; h < o.simLodInfo.length;) o.simLodInfo[h] = (e.simLodRect[h] + .5) / 1024, h++, o.simLodInfo[h] = (e.simLodRect[h] + .5) / 256, h++, o.simLodInfo[h] = Math.max(e.simLodRect[h] - 1, .1) / 1024, h++, o.simLodInfo[h] = Math.max(e.simLodRect[h] - 1.5, .1) / 256, h++;
            }
            return o;
          }
          if ("number" == typeof n) return i.loader.create(t, null, null, e, [function (t) {
            return this._width = n, this._height = r, this._buffer = t, null;
          }]);
          if ("function" == typeof n) return i.loader.create(t, null, null, e, [n]);
          throw new Error("unknown params.");
        }, e.lodasatlas = !1, n(e, ["simLodRect", function () {
          return this.simLodRect = new Uint32Array([0, 0, 512, 256, 512, 0, 256, 128, 768, 0, 128, 64, 896, 0, 64, 32, 960, 0, 32, 16, 992, 0, 16, 8, 1008, 0, 8, 4, 1016, 0, 4, 2, 1020, 0, 2, 1, 1022, 0, 1, 1]);
        }]), e;
      }(),
      nn = function (t) {
        function e() {
          this._numberVertices = 0, this._numberIndices = 0, this._vertexBuffer = null, this._indexBuffer = null, e.__super.call(this);
        }
        r(e, "laya.d3.resource.models.PrimitiveMesh", vi);
        var n = e.prototype;
        return i.imps(n, {
          "laya.d3.core.render.IRenderable": !0
        }), n._getVertexBuffer = function (t) {
          return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
        }, n._getVertexBuffers = function () {
          return null;
        }, n._getIndexBuffer = function () {
          return this._indexBuffer;
        }, n._getPositions = function () {
          var t, e = [],
            i = this._vertexBuffer.vertexDeclaration.getVertexElements(),
            n = 0;
          for (n = 0; n < i.length; n++) {
            var r = i[n];
            if ("vector3" === r.elementFormat && 0 === r.elementUsage) {
              t = r;
              break;
            }
          }
          var a = this._vertexBuffer.getData();
          for (n = 0; n < a.length; n += this._vertexBuffer.vertexDeclaration.vertexStride / 4) {
            var s = n + t.offset / 4,
              o = new Le(a[s + 0], a[s + 1], a[s + 2]);
            e.push(o);
          }
          return e;
        }, n.getRenderElement = function (t) {
          return this;
        }, n.getRenderElementsCount = function () {
          return 1;
        }, n.disposeResource = function () {
          this._vertexBuffer && (this._vertexBuffer.destroy(), this._vertexBuffer = null), this._indexBuffer && (this._indexBuffer.destroy(), this._indexBuffer = null), this.memorySize = 0;
        }, n._beforeRender = function (t) {
          return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0;
        }, n._render = function (t) {
          L.mainContext.drawElements(4, this._numberIndices, 5123, 0), D.drawCall++, D.trianglesFaces += this._numberIndices / 3;
        }, a(0, n, "_vertexBufferCount", function () {
          return 1;
        }), a(0, n, "triangleCount", function () {
          return this._indexBuffer.indexCount / 3;
        }), e;
      }(),
      rn = function (t) {
        function e() {
          this._materials = null, this._subMeshes = null, this._vertexBuffers = null, this._indexBuffer = null, this._boneNames = null, this._inverseBindPoses = null, this._skinnedDatas = null, e.__super.call(this), this._subMeshes = [], this._materials = [], this._vertexBuffers = [];
        }
        r(e, "laya.d3.resource.models.Mesh", vi);
        var n = e.prototype;
        return n._getPositions = function () {
          var t, e, i, n, r, a = [],
            s = 0,
            o = 0,
            h = 0;
          if (0 !== this._vertexBuffers.length) {
            var l = this._vertexBuffers.length;
            for (s = 0; s < l; s++) {
              for (i = (t = this._vertexBuffers[s]).vertexDeclaration.getVertexElements(), o = 0; o < i.length; o++)
                if ("vector3" === (n = i[o]).elementFormat && 0 === n.elementUsage) {
                  e = n;
                  break;
                }
              for (r = t.getData(), o = 0; o < r.length; o += t.vertexDeclaration.vertexStride / 4) h = o + e.offset / 4, a.push(new Le(r[h + 0], r[h + 1], r[h + 2]));
            }
          } else {
            var u = this._subMeshes.length;
            for (s = 0; s < u; s++) {
              for (i = (t = this._subMeshes[s]._getVertexBuffer()).vertexDeclaration.getVertexElements(), o = 0; o < i.length; o++)
                if ("vector3" === (n = i[o]).elementFormat && 0 === n.elementUsage) {
                  e = n;
                  break;
                }
              for (r = t.getData(), o = 0; o < r.length; o += t.vertexDeclaration.vertexStride / 4) h = o + e.offset / 4, a.push(new Le(r[h + 0], r[h + 1], r[h + 2]));
            }
          }
          return a;
        }, n._setSubMeshes = function (t) {
          this._subMeshes = t, this._subMeshCount = t.length;
          for (var e = 0; e < this._subMeshCount; e++) t[e]._indexInMesh = e;
          this._positions = this._getPositions(), this._generateBoundingObject();
        }, n.onAsynLoaded = function (t, e, i) {
          var n = e[0],
            r = e[1];
          ye.read(n, this, this._materials, this._subMeshes, r), this.completeCreate(), this._endLoaded();
        }, n.getSubMesh = function (t) {
          return this._subMeshes[t];
        }, n.getSubMeshCount = function () {
          return this._subMeshes.length;
        }, n.getRenderElementsCount = function () {
          return this._subMeshes.length;
        }, n.getRenderElement = function (t) {
          return this._subMeshes[t];
        }, n.disposeResource = function () {
          for (var t = 0; t < this._subMeshes.length; t++) this._subMeshes[t].dispose();
          this._materials = null, this._subMeshes = null, this._vertexBuffers = null, this._indexBuffer = null, this._boneNames = null, this._inverseBindPoses = null;
        }, a(0, n, "materials", function () {
          return this._materials.slice();
        }), a(0, n, "InverseAbsoluteBindPoses", function () {
          return this._inverseBindPoses;
        }), e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e;
      }(),
      an = function (t) {
        function e(t, i, n, r, a, s, o, h, l) {
          this._alreadyResolved = !1, this._surfaceFormat = 0, this._surfaceType = 0, this._depthStencilFormat = 0, this._frameBuffer = null, this._depthStencilBuffer = null, void 0 === n && (n = 6408), void 0 === r && (r = 5121), void 0 === a && (a = 33189), void 0 === s && (s = !1), void 0 === o && (o = !1), void 0 === h && (h = -1), void 0 === l && (l = -1), e.__super.call(this), this._type = 3553, this._width = t, this._height = i, this._size = new Qe(t, i), this._surfaceFormat = n, this._surfaceType = r, this._depthStencilFormat = a, w.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189), this._mipmap = s, this._repeat = o, this._minFifter = h, this._magFifter = l, this.activeResource(), this._alreadyResolved = !0;
        }
        r(e, "laya.d3.resource.RenderTexture", gi);
        var n = e.prototype;
        return n.recreateResource = function () {
          var t = L.mainContext;
          this._frameBuffer = t.createFramebuffer(), this._source = t.createTexture();
          var e = O.curBindTexTarget,
            i = O.curBindTexValue;
          O.bindTexture(t, this._type, this._source), t.texImage2D(this._type, 0, 6408, this._width, this._height, 0, this._surfaceFormat, this._surfaceType, null);
          var n = this._minFifter,
            r = this._magFifter,
            a = this._repeat ? 10497 : 33071;
          if (l.isPOT(this._width, this._height) ? (this._mipmap ? -1 !== n || (n = 9987) : -1 !== n || (n = 9729), -1 !== r || (r = 9729), t.texParameteri(this._type, 10241, n), t.texParameteri(this._type, 10240, r), t.texParameteri(this._type, 10242, a), t.texParameteri(this._type, 10243, a), this._mipmap && t.generateMipmap(this._type)) : (-1 !== n || (n = 9729), -1 !== r || (r = 9729), t.texParameteri(this._type, 10241, n), t.texParameteri(this._type, 10240, r), t.texParameteri(this._type, 10242, 33071), t.texParameteri(this._type, 10243, 33071)), t.bindFramebuffer(36160, this._frameBuffer), t.framebufferTexture2D(36160, 36064, 3553, this._source, 0), this._depthStencilFormat) switch (this._depthStencilBuffer = t.createRenderbuffer(), t.bindRenderbuffer(36161, this._depthStencilBuffer), t.renderbufferStorage(36161, this._depthStencilFormat, this._width, this._height), this._depthStencilFormat) {
            case 33189:
              t.framebufferRenderbuffer(36160, 36096, 36161, this._depthStencilBuffer);
              break;
            case 36168:
              t.framebufferRenderbuffer(36160, 36128, 36161, this._depthStencilBuffer);
              break;
            case 34041:
              t.framebufferRenderbuffer(36160, 33306, 36161, this._depthStencilBuffer);
          }
          t.bindFramebuffer(36160, null), e && i && O.bindTexture(t, e, i), t.bindRenderbuffer(36161, null), this.memorySize = this._width * this._height * 4, this.completeCreate();
        }, n.start = function () {
          L.mainContext.bindFramebuffer(36160, this.frameBuffer), e._currentRenderTarget = this, this._alreadyResolved = !1;
        }, n.end = function () {
          L.mainContext.bindFramebuffer(36160, null), e._currentRenderTarget = null, this._alreadyResolved = !0;
        }, n.getData = function (t, e, i, n) {
          var r = L.mainContext;
          r.bindFramebuffer(36160, this._frameBuffer);
          if (!(36053 === r.checkFramebufferStatus(36160))) return r.bindFramebuffer(36160, null), null;
          var a = new Uint8Array(this._width * this._height * 4);
          return r.readPixels(t, e, i, n, this._surfaceFormat, this._surfaceType, a), r.bindFramebuffer(36160, null), a;
        }, n.disposeResource = function () {
          if (this._frameBuffer) {
            var t = L.mainContext;
            t.deleteTexture(this._source), t.deleteFramebuffer(this._frameBuffer), t.deleteRenderbuffer(this._depthStencilBuffer), this._source = null, this._frameBuffer = null, this._depthStencilBuffer = null, this.memorySize = 0;
          }
        }, a(0, n, "surfaceFormat", function () {
          return this._surfaceFormat;
        }), a(0, n, "surfaceType", function () {
          return this._surfaceType;
        }), a(0, n, "depthStencilFormat", function () {
          return this._depthStencilFormat;
        }), a(0, n, "source", function () {
          return this._alreadyResolved ? i.superGet(gi, this, "source") : null;
        }), a(0, n, "depthStencilBuffer", function () {
          return this._depthStencilBuffer;
        }), a(0, n, "frameBuffer", function () {
          return this._frameBuffer;
        }), e._currentRenderTarget = null, e;
      }(),
      sn = function (t) {
        function e(t) {
          this._color = null, this._pixels = null, e.__super.call(this), this._type = 3553, this._width = 1, this._height = 1, this._size = new Qe(this.width, this.height), this._color = t, this._pixels = new Uint8Array([255 * t.x, 255 * t.y, 255 * t.z, 255 * t.w]);
        }
        r(e, "laya.d3.resource.SolidColorTexture2D", gi);
        var i = e.prototype;
        return i._createWebGlTexture = function () {
          var t = L.mainContext,
            e = this._source = t.createTexture(),
            i = this._width,
            n = this._height,
            r = O.curBindTexTarget,
            a = O.curBindTexValue;
          O.bindTexture(t, this._type, e), t.texImage2D(this._type, 0, 6408, i, n, 0, 6408, 5121, this._pixels);
          var s = this._minFifter,
            o = this._magFifter,
            h = this._repeat ? 10497 : 33071,
            u = l.isPOT(i, n);
          u ? (this._mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729), -1 !== o || (o = 9729), t.texParameteri(this._type, 10241, s), t.texParameteri(this._type, 10240, o), t.texParameteri(this._type, 10242, h), t.texParameteri(this._type, 10243, h), this._mipmap && t.generateMipmap(this._type)) : (-1 !== s || (s = 9729), -1 !== o || (o = 9729), t.texParameteri(this._type, 10241, s), t.texParameteri(this._type, 10240, o), t.texParameteri(this._type, 10242, 33071), t.texParameteri(this._type, 10243, 33071)), r && a && O.bindTexture(t, r, a), this.memorySize = u ? i * n * 4 * (1 + 1 / 3) : i * n * 4;
        }, i.recreateResource = function () {
          this._createWebGlTexture(), this.completeCreate();
        }, i.disposeResource = function () {
          this._source && (L.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0);
        }, n(e, ["magentaTexture", function () {
          return this.magentaTexture = new e(new Oe(1, 0, 1, 1));
        }, "grayTexture", function () {
          return this.grayTexture = new e(new Oe(.5, .5, .5, 1));
        }]), e;
      }(),
      on = function (t) {
        function e(t) {
          this._color = null, this._pixels = null, this._texCount = 6, e.__super.call(this), this._type = 34067, this._width = 1, this._height = 1, this._size = new Qe(this.width, this.height), this._color = t, this._pixels = new Uint8Array([255 * t.x, 255 * t.y, 255 * t.z, 255 * t.w]);
        }
        r(e, "laya.d3.resource.SolidColorTextureCube", gi);
        var i = e.prototype;
        return i._createWebGlTexture = function () {
          var t = L.mainContext,
            e = this._source = t.createTexture(),
            i = this._width,
            n = this._height,
            r = O.curBindTexTarget,
            a = O.curBindTexValue;
          O.bindTexture(t, this._type, e), t.texImage2D(34069, 0, 6408, i, n, 0, 6408, 5121, this._pixels), t.texImage2D(34070, 0, 6408, i, n, 0, 6408, 5121, this._pixels), t.texImage2D(34071, 0, 6408, i, n, 0, 6408, 5121, this._pixels), t.texImage2D(34072, 0, 6408, i, n, 0, 6408, 5121, this._pixels), t.texImage2D(34073, 0, 6408, i, n, 0, 6408, 5121, this._pixels), t.texImage2D(34074, 0, 6408, i, n, 0, 6408, 5121, this._pixels);
          var s = this.minFifter,
            o = this.magFifter,
            h = this._repeat ? 10497 : 33071,
            u = l.isPOT(i, n);
          u ? (this.mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729), -1 !== o || (o = 9729), t.texParameteri(this._type, 10241, s), t.texParameteri(this._type, 10240, o), t.texParameteri(this._type, 10242, h), t.texParameteri(this._type, 10243, h), this.mipmap && t.generateMipmap(this._type)) : (-1 !== s || (s = 9729), -1 !== o || (o = 9729), t.texParameteri(this._type, 10241, s), t.texParameteri(this._type, 10240, o), t.texParameteri(this._type, 10242, 33071), t.texParameteri(this._type, 10243, 33071)), r && a && O.bindTexture(t, r, a), this.memorySize = u ? i * n * 4 * (1 + 1 / 3) * this._texCount : i * n * 4 * this._texCount;
        }, i.recreateResource = function () {
          this._createWebGlTexture(), this.completeCreate();
        }, i.disposeResource = function () {
          this._source && (L.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0);
        }, n(e, ["magentaTexture", function () {
          return this.magentaTexture = new e(new Oe(1, 0, 1, 1));
        }, "grayTexture", function () {
          return this.grayTexture = new e(new Oe(.5, .5, .5, 1));
        }]), e;
      }(),
      hn = function (e) {
        function n(t, e, i, r) {
          this._canRead = !1, this._image = null, this._pixels = null, void 0 === t && (t = !1), void 0 === e && (e = !0), void 0 === i && (i = 6408), void 0 === r && (r = !0), n.__super.call(this), this._type = 3553, this._repeat = e, this._canRead = t, this._format = i, this._mipmap = r;
        }
        r(n, "laya.d3.resource.Texture2D", gi);
        var s = n.prototype;
        return s._createWebGlTexture = function () {
          if (!this._image) throw "create GLTextur err:no data:" + this._image;
          var t = L.mainContext,
            e = this._source = t.createTexture(),
            i = this._width,
            n = this._height,
            r = O.curBindTexTarget,
            a = O.curBindTexValue;
          switch (O.bindTexture(t, this._type, e), this._format) {
            case 6407:
            case 6408:
              this._canRead ? t.texImage2D(this._type, 0, this._format, i, n, 0, this._format, 5121, this._pixels) : t.texImage2D(this._type, 0, this._format, this._format, 5121, this._image);
              break;
            case L.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
              t.compressedTexImage2D(this._type, 0, this._format, this._width, this._height, 0, this._image);
          }
          var s = this._minFifter,
            o = this._magFifter,
            h = this._repeat ? 10497 : 33071,
            u = 0 == this._wrapModeU ? 10497 : 33071,
            c = 0 == this._wrapModeV ? 10497 : 33071,
            _ = l.isPOT(i, n);
          _ ? (this._mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729), -1 !== o || (o = 9729), t.texParameteri(this._type, 10241, s), t.texParameteri(this._type, 10240, o), t.texParameteri(this._type, 10242, h), t.texParameteri(this._type, 10243, h), t.texParameteri(this._type, 10242, u), t.texParameteri(this._type, 10243, c), this._mipmap && t.generateMipmap(this._type)) : (-1 !== s || (s = 9729), -1 !== o || (o = 9729), t.texParameteri(this._type, 10241, s), t.texParameteri(this._type, 10240, o), t.texParameteri(this._type, 10242, 33071), t.texParameteri(this._type, 10243, 33071)), r && a && O.bindTexture(t, r, a), this._image.onload = null, this._image = null, this.memorySize = _ ? i * n * 4 * (1 + 1 / 3) : i * n * 4;
        }, s.recreateResource = function () {
          this._createWebGlTexture(), this.completeCreate();
        }, s.onAsynLoaded = function (e, i, n) {
          if (n) {
            var r = n[0];
            void 0 !== r && (this._canRead = r);
            var a = n[1];
            void 0 !== a && (this._repeat = a);
            var s = n[2];
            void 0 !== s && (this._format = s);
            var o = n[3];
            void 0 !== o && (this._mipmap = o);
            var h = n.wrapModeU;
            void 0 !== h && (this._wrapModeU = h);
            var l = n.wrapModeV;
            void 0 !== l && (this._wrapModeV = l);
          }
          switch (this._format) {
            case 6407:
            case 6408:
              this._image = i;
              var u = i.width,
                c = i.height;
              this._width = u, this._height = c, this._size = new Qe(u, c), this._canRead && (w.isConchApp ? i instanceof t.HTMLElement && (this._pixels = new Uint8Array(i.getImageData(0, 0, u, c))) : (_.canvas.size(u, c), _.canvas.clear(), _.context.drawImage(i, 0, 0, u, c), this._pixels = new Uint8Array(_.context.getImageData(0, 0, u, c).data.buffer)));
              break;
            case L.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
              var d = new f(i);
              d.readUTFBytes(4), d.readUTFBytes(2), d.getInt16();
              d.endian = "bigEndian", this._width = d.getInt16(), this._height = d.getInt16(), this._size = new Qe(this._width, this._height);
              d.getInt16(), d.getInt16();
              this._image = new Uint8Array(i, d.pos);
          }
          this.recreateResource(), this._endLoaded();
        }, s.getPixels = function () {
          if (this._canRead) return this._pixels;
          throw new Error("Texture2D: must set texture canRead is true.");
        }, s.disposeResource = function () {
          this._source && (L.mainContext.deleteTexture(this._source), this._source = null, this._image = null, this.memorySize = 0);
        }, a(0, s, "_src", function () {
          return this.url;
        }), a(0, s, "src", function () {
          return this.url;
        }), n.load = function (t) {
          return i.loader.create(t, null, null, n);
        }, n;
      }(),
      ln = function (t) {
        function e() {
          e.__super.call(this), this._type = 34067;
        }
        r(e, "laya.d3.resource.TextureCube", gi);
        var n = e.prototype;
        return n._onTextureLoaded = function (t) {
          this._images = t;
          for (var e = 2147483647, i = 2147483647, n = 0; n < 6; n++) {
            var r = t[n];
            e = Math.min(e, r.width), i = Math.min(i, r.height);
          }
          this._width = e, this._height = i, this._size = new Qe(e, i);
        }, n._createWebGlTexture = function () {
          var t = 0;
          for (t = 0; t < 6; t++)
            if (!this._images[t]) throw "create GLTextur err:no data:" + this._images[t];
          var e = L.mainContext,
            i = this._source = e.createTexture(),
            n = this._width,
            r = this._height,
            a = O.curBindTexTarget,
            s = O.curBindTexValue;
          O.bindTexture(e, this._type, i), e.texImage2D(34069, 0, 6408, 6408, 5121, this._images[0]), e.texImage2D(34070, 0, 6408, 6408, 5121, this._images[1]), e.texImage2D(34071, 0, 6408, 6408, 5121, this._images[2]), e.texImage2D(34072, 0, 6408, 6408, 5121, this._images[3]), e.texImage2D(34073, 0, 6408, 6408, 5121, this._images[4]), e.texImage2D(34074, 0, 6408, 6408, 5121, this._images[5]);
          var o = this.minFifter,
            h = this.magFifter,
            u = this._repeat ? 10497 : 33071,
            c = l.isPOT(n, r);
          for (c ? (this.mipmap ? -1 !== o || (o = 9987) : -1 !== o || (o = 9729), -1 !== h || (h = 9729), e.texParameteri(this._type, 10241, o), e.texParameteri(this._type, 10240, h), e.texParameteri(this._type, 10242, u), e.texParameteri(this._type, 10243, u), this.mipmap && e.generateMipmap(this._type)) : (-1 !== o || (o = 9729), -1 !== h || (h = 9729), e.texParameteri(this._type, 10241, o), e.texParameteri(this._type, 10240, h), e.texParameteri(this._type, 10242, 33071), e.texParameteri(this._type, 10243, 33071)), a && s && O.bindTexture(e, a, s), t = 0; t < 6; t++) this._images[t].onload = null, this._images[t] = null;
          this.memorySize = c ? n * r * 4 * (1 + 1 / 3) * 6 : n * r * 4 * 6;
        }, n.recreateResource = function () {
          null != this._url && (this._createWebGlTexture(), this.completeCreate());
        }, n.onAsynLoaded = function (t, e, i) {
          this._onTextureLoaded(e), this.activeResource(), this._endLoaded();
        }, n.disposeResource = function () {
          this._source && (L.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0);
        }, a(0, n, "defaulteTexture", function () {
          return on.grayTexture;
        }), e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e;
      }(),
      un = function (t) {
        function e(t) {
          this._hasIndependentBound = !0, e.__super.call(this, t), this._owner.transform.off("worldmatrixneedchanged", this, this._onWorldMatNeedChange), this._cacheAnimationNodeIndex = [], this._cacheAnimationNode = [], this._localBoundingBoxCorners = s(8, null), this._owner.meshFilter.on("meshchanged", this, this._$3__onMeshChanged);
        }
        r(e, "laya.d3.core.SkinnedMeshRender", t);
        var i = e.prototype;
        return i._getCacheAnimationNodes = function () {
          var t = this._cacheMesh._boneNames,
            e = t.length;
          this._cacheAnimationNode.length = e, this._cacheAnimationNodeIndex.length = e;
          for (var i = this._cacheAnimator._avatarNodes, n = this._cacheAnimator._avatarNodeMap, r = 0; r < e; r++) {
            var a = n[t[r]];
            this._cacheAnimationNode[r] = a, this._cacheAnimationNodeIndex[r] = i.indexOf(a);
          }
        }, i._offComputeBoneIndexToMeshEvent = function (t, e) {
          t.loaded ? e.loaded || e.off("loaded", this, this._getCacheAnimationNodes) : t.off("loaded", this, this._computeBoneIndexToMeshWithAsyncMesh);
        }, i._computeBoneIndexToMeshWithAsyncAvatar = function () {
          this._cacheAvatar.loaded ? this._computeBoneIndexToMeshWithAsyncMesh() : this._cacheAvatar.once("loaded", this, this._computeBoneIndexToMeshWithAsyncMesh);
        }, i._computeBoneIndexToMeshWithAsyncMesh = function () {
          this._cacheMesh.loaded ? this._getCacheAnimationNodes() : this._cacheMesh.on("loaded", this, this._getCacheAnimationNodes);
        }, i._$3__onMeshChanged = function (t, e, i) {
          this._cacheMesh = i, e && !e.loaded && i.off("loaded", this, this._onMeshLoaded), i.loaded ? this._onMeshLoaded(i) : i.on("loaded", this, this._onMeshLoaded), this._cacheAvatar && (e && this._offComputeBoneIndexToMeshEvent(this._cacheAvatar, e), i && this._computeBoneIndexToMeshWithAsyncAvatar());
        }, i._onMeshLoaded = function (t) {
          var e = t.subMeshCount;
          this._subSkinnedDatas = [], this._subSkinnedDatas.length = e;
          for (var i = 0; i < e; i++)
            for (var n = this._subSkinnedDatas[i] = [], r = t.getSubMesh(i)._boneIndicesList, a = 0, s = r.length; a < s; a++) n[a] = new Float32Array(16 * r[a].length);
        }, i._setCacheAnimator = function (t) {
          this._cacheAnimator = t, this._rootBone && (this._rootIndex = t._avatarNodes.indexOf(t._avatarNodeMap[this._rootBone]));
        }, i._setRootBone = function (t) {
          this._rootBone = t, this._cacheAnimator && (this._rootIndex = this._cacheAnimator._avatarNodes.indexOf(this._cacheAnimator._avatarNodeMap[t]));
        }, i._setCacheAvatar = function (t) {
          this._cacheAvatar !== t && (this._cacheMesh ? (this._cacheAvatar && this._offComputeBoneIndexToMeshEvent(this._cacheAvatar, this._cacheMesh), this._cacheAvatar = t, t && (this._addShaderDefine(yn.SHADERDEFINE_BONE), this._computeBoneIndexToMeshWithAsyncAvatar())) : this._cacheAvatar = t);
        }, i._calculateBoundingBox = function () {
          if (this._hasIndependentBound) {
            if (this._cacheAnimator) {
              var e = this._owner.transform,
                i = e.worldMatrix;
              if (this._cacheAnimator._canCache) {
                var n = this._cacheAnimator._curAvatarNodeDatas;
                Ke.matrix4x4MultiplyMFM(this._cacheAnimator.owner.transform.worldMatrix, n[this._rootIndex], i);
              } else Ke.matrix4x4MultiplyMFM(this._cacheAnimator.owner.transform.worldMatrix, this._cacheAnimator._avatarNodeMap[this._rootBone].transform.getWorldMatrix(), i);
              e.worldMatrix = i;
              null == this._cacheAnimator._avatarNodeMap[this._rootBone] || null == this._localBoundBox ? this._boundingBox.toDefault() : this._calculateBoundBoxByInitCorners(this._localBoundingBoxCorners);
            }
          } else t.prototype._calculateBoundingBox.call(this);
        }, i._calculateBoundingSphere = function () {
          if (this._hasIndependentBound) {
            if (this._cacheAnimator) {
              var e = this._owner.transform,
                i = e.worldMatrix;
              if (this._cacheAnimator._canCache) {
                var n = this._cacheAnimator._curAvatarNodeDatas;
                Ke.matrix4x4MultiplyMFM(this._cacheAnimator.owner.transform.worldMatrix, n[this._rootIndex], i);
              } else Ke.matrix4x4MultiplyMFM(this._cacheAnimator.owner.transform.worldMatrix, this._cacheAnimator._avatarNodeMap[this._rootBone].transform.getWorldMatrix(), i);
              e.worldMatrix = i;
              null == this._cacheAnimator._avatarNodeMap[this._rootBone] || null == this.localBoundSphere ? this._boundingSphere.toDefault() : this._calculateBoundingSphereByInitSphere(this.localBoundSphere);
            }
          } else t.prototype._calculateBoundingSphere.call(this);
        }, i._updateOctreeNode = function () {
          var t = this._treeNode;
          t && t.updateObject(this);
        }, i._renderUpdate = function (t) {
          var i, n = this._cacheAnimator,
            r = this._cacheMesh.subMeshCount,
            a = this._owner.transform;
          if (n) {
            var s = n._canCache,
              o = this._cacheAnimator._curAvatarNodeDatas,
              h = n.owner;
            if (this._setShaderValueMatrix4x4(0, h._transform.worldMatrix), i = h.getProjectionViewWorldMatrix(t), this._setShaderValueMatrix4x4(1, i), this._cacheMesh && this._cacheMesh.loaded && this._cacheAvatar && this._cacheAvatar.loaded) {
              var l = 0,
                u = 0,
                c = this._cacheMesh._inverseBindPoses,
                _ = this._cacheMesh._skinnedDatas;
              if (s)
                for (l = 0, u = c.length; l < u; l++) Ke._mulMatrixArray(o[this._cacheAnimationNodeIndex[l]], c[l], _, 16 * l);
              else
                for (l = 0, u = c.length; l < u; l++) Ke._mulMatrixArray(this._cacheAnimationNode[l].transform.getWorldMatrix(), c[l], _, 16 * l);
              for (l = 0; l < r; l++) {
                for (var d = this._cacheMesh.getSubMesh(l)._boneIndicesList, f = d.length, p = this._subSkinnedDatas[l], m = 0; m < f; m++) e._splitAnimationDatas(d[m], _, p[m]);
                this._renderElements[l]._skinAnimationDatas = p;
              }
            }
          } else this._setShaderValueMatrix4x4(0, a.worldMatrix), i = this._owner.getProjectionViewWorldMatrix(t), this._setShaderValueMatrix4x4(1, i);
          return Ze.debugMode && this._renderRenderableBoundBox(), !0;
        }, a(0, i, "localBoundBox", function () {
          return this._localBoundBox;
        }, function (t) {
          this._localBoundBox = t, t.getCorners(this._localBoundingBoxCorners);
        }), a(0, i, "boundingSphere", function () {
          return this._calculateBoundingSphere(), this._boundingSphere;
        }), a(0, i, "boundingBox", function () {
          return this._calculateBoundingBox(), this._boundingBox;
        }), a(0, i, "boundingBoxCenter", function () {
          var t = this.boundingBox;
          return Le.add(t.min, t.max, this._boundingBoxCenter), Le.scale(this._boundingBoxCenter, .5, this._boundingBoxCenter), this._boundingBoxCenter;
        }), e._splitAnimationDatas = function (t, e, i) {
          for (var n = 0, r = t.length, a = 0; n < r; n++)
            for (var s = t[n] << 4, o = 0; o < 16; o++, a++) i[a] = e[s + o];
        }, e;
      }(Mi),
      cn = function (t) {
        function e(t, n) {
          e.__super.call(this), void 0 === t && (t = .3), void 0 === n && (n = 1e3), this._tempVector3 = new Le(), this._position = new Le(), this._up = new Le(), this._forward = new Le(), this._right = new Le(), this._fieldOfView = 60, this._useUserProjectionMatrix = !1, this._orthographic = !1, this._viewportExpressedInClipSpace = !0, this._renderTargetSize = Qe.fullScreen, this._orthographicVerticalSize = 10, this.renderingOrder = 0, this._nearPlane = t, this._farPlane = n, this.cullingMask = 2147483647, this.clearFlag = 0, this.useOcclusionCulling = !0, this._calculateProjectionMatrix(), i.stage.on("resize", this, this._onScreenSizeChanged);
        }
        r(e, "laya.d3.core.BaseCamera", t);
        var s = e.prototype;
        return s._sortCamerasByRenderingOrder = function () {
          if (this._displayedInStage)
            for (var t = this.scene._cameraPool, e = t.length - 1, i = 0; i < e; i++)
              if (t[i].renderingOrder > t[e].renderingOrder) {
                var n = t[i];
                t[i] = t[e], t[e] = n;
              }
        }, s._calculateProjectionMatrix = function () {}, s._onScreenSizeChanged = function () {
          this._calculateProjectionMatrix();
        }, s._prepareCameraToRender = function () {
          z._currentCameraCullingMask = this.cullingMask;
          var t = this._shaderValues;
          t.setValue(0, this.transform.position.elements), t.setValue(5, this.forward.elements), t.setValue(6, this.up.elements);
        }, s._prepareCameraViewProject = function (t, e) {
          var i = this._shaderValues;
          i.setValue(1, t.elements), i.setValue(2, e.elements);
        }, s._renderCamera = function (t, e, i) {}, s.addLayer = function (t) {
          29 !== t.number && 30 != t.number && (this.cullingMask = this.cullingMask | t.mask);
        }, s.removeLayer = function (t) {
          29 !== t.number && 30 != t.number && (this.cullingMask = this.cullingMask & ~t.mask);
        }, s.addAllLayers = function () {
          this.cullingMask = 2147483647;
        }, s.removeAllLayers = function () {
          this.cullingMask = 0 | z.getLayerByNumber(29).mask | z.getLayerByNumber(30).mask;
        }, s.ResetProjectionMatrix = function () {
          this._useUserProjectionMatrix = !1, this._calculateProjectionMatrix();
        }, s.moveForward = function (t) {
          this._tempVector3.elements[0] = this._tempVector3.elements[1] = 0, this._tempVector3.elements[2] = t, this.transform.translate(this._tempVector3);
        }, s.moveRight = function (t) {
          this._tempVector3.elements[1] = this._tempVector3.elements[2] = 0, this._tempVector3.elements[0] = t, this.transform.translate(this._tempVector3);
        }, s.moveVertical = function (t) {
          this._tempVector3.elements[0] = this._tempVector3.elements[2] = 0, this._tempVector3.elements[1] = t, this.transform.translate(this._tempVector3, !1);
        }, s._addSelfRenderObjects = function () {
          var t = this.scene._cameraPool,
            e = t.length;
          if (e > 0) {
            for (var i = e - 1; i >= 0; i--)
              if (this.renderingOrder <= t[i].renderingOrder) {
                t.splice(i + 1, 0, this);
                break;
              }
          } else t.push(this), this.scene.conchModel && this.scene.conchModel.setCurrentCamera(this.conchModel);
        }, s._clearSelfRenderObjects = function () {
          var t = this.scene._cameraPool;
          t.splice(t.indexOf(this), 1);
        }, s.destroy = function (e) {
          void 0 === e && (e = !0), this._sky && this._sky.destroy(), this.renderTarget = null, i.stage.off("resize", this, this._onScreenSizeChanged), t.prototype.destroy.call(this, e);
        }, a(0, s, "sky", function () {
          return this._sky;
        }, function (t) {
          this._sky = t, t._ownerCamera = this;
        }), a(0, s, "forward", function () {
          var t = this.transform.worldMatrix.elements,
            e = this._forward.elements;
          return e[0] = -t[8], e[1] = -t[9], e[2] = -t[10], this._forward;
        }), a(0, s, "position", function () {
          var t = this.transform.worldMatrix.elements,
            e = this._position.elements;
          return e[0] = t[12], e[1] = t[13], e[2] = t[14], this._position;
        }), a(0, s, "renderTarget", function () {
          return this._renderTarget;
        }, function (t) {
          this._renderTarget = t, null != t && (this._renderTargetSize = t.size);
        }), a(0, s, "up", function () {
          var t = this.transform.worldMatrix.elements,
            e = this._up.elements;
          return e[0] = t[4], e[1] = t[5], e[2] = t[6], this._up;
        }), a(0, s, "right", function () {
          var t = this.transform.worldMatrix.elements,
            e = this._right.elements;
          return e[0] = t[0], e[1] = t[1], e[2] = t[2], this._right;
        }), a(0, s, "renderTargetSize", function () {
          return this._renderTargetSize;
        }, function (t) {
          null != this.renderTarget && this._renderTargetSize, this._renderTargetSize = t, this._calculateProjectionMatrix();
        }), a(0, s, "fieldOfView", function () {
          return this._fieldOfView;
        }, function (t) {
          this._fieldOfView = t, this._calculateProjectionMatrix();
        }), a(0, s, "nearPlane", function () {
          return this._nearPlane;
        }, function (t) {
          this._nearPlane = t, this._calculateProjectionMatrix();
        }), a(0, s, "farPlane", function () {
          return this._farPlane;
        }, function (t) {
          this._farPlane = t, this._calculateProjectionMatrix();
        }), a(0, s, "orthographic", function () {
          return this._orthographic;
        }, function (t) {
          this._orthographic = t, this._calculateProjectionMatrix();
        }), a(0, s, "orthographicVerticalSize", function () {
          return this._orthographicVerticalSize;
        }, function (t) {
          this._orthographicVerticalSize = t, this._calculateProjectionMatrix();
        }), a(0, s, "renderingOrder", function () {
          return this._renderingOrder;
        }, function (t) {
          this._renderingOrder = t, this._sortCamerasByRenderingOrder();
        }), e.CAMERAPOS = 0, e.VIEWMATRIX = 1, e.PROJECTMATRIX = 2, e.VPMATRIX = 3, e.VPMATRIX_NO_TRANSLATE = 4, e.CAMERADIRECTION = 5, e.CAMERAUP = 6, e.ENVIRONMENTDIFFUSE = 7, e.ENVIRONMENTSPECULAR = 8, e.SIMLODINFO = 9, e.DIFFUSEIRRADMATR = 10, e.DIFFUSEIRRADMATG = 11, e.DIFFUSEIRRADMATB = 12, e.HDREXPOSURE = 13, e.RENDERINGTYPE_DEFERREDLIGHTING = "DEFERREDLIGHTING", e.RENDERINGTYPE_FORWARDRENDERING = "FORWARDRENDERING", e.CLEARFLAG_SOLIDCOLOR = 0, e.CLEARFLAG_SKY = 1, e.CLEARFLAG_DEPTHONLY = 2, e.CLEARFLAG_NONE = 3, n(e, ["_invertYScaleMatrix", function () {
          return this._invertYScaleMatrix = new Ce(1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }, "_invertYProjectionMatrix", function () {
          return this._invertYProjectionMatrix = new Ce();
        }, "_invertYProjectionViewMatrix", function () {
          return this._invertYProjectionViewMatrix = new Ce();
        }]), e;
      }(Vi),
      _n = function (t) {
        function e(t) {
          this._render = null, this._geometryFilter = null, e.__super.call(this, t);
        }
        r(e, "laya.d3.core.RenderableSprite3D", t);
        var i = e.prototype;
        return i._addToInitStaticBatchManager = function () {}, i._setBelongScene = function (e) {
          t.prototype._setBelongScene.call(this, e), e._renderableSprite3Ds.push(this), this._render._applyLightMapParams();
        }, i._setUnBelongScene = function () {
          var e = this._scene._renderableSprite3Ds,
            i = e.indexOf(this);
          e.splice(i, 1), this._render._removeShaderDefine(laya.d3.core.RenderableSprite3D.SAHDERDEFINE_LIGHTMAP), t.prototype._setUnBelongScene.call(this);
        }, i._update = function (t) {
          t.owner = this, this._activeInHierarchy && (this._updateComponents(t), this._render._updateOctreeNode(), this._lateUpdateComponents(t), D.spriteCount++, this._childs.length && this._updateChilds(t));
        }, i.destroy = function (e) {
          void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._render._destroy(), this._render = null;
        }, e.__init__ = function () {
          e.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV = e.shaderDefines.registerDefine("SCALEOFFSETLIGHTINGMAPUV"), e.SAHDERDEFINE_LIGHTMAP = e.shaderDefines.registerDefine("LIGHTMAP");
        }, e.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV = 2, e.SAHDERDEFINE_LIGHTMAP = 4, e.LIGHTMAPSCALEOFFSET = 2, e.LIGHTMAP = 3, n(e, ["shaderDefines", function () {
          return this.shaderDefines = new Be();
        }]), e;
      }(Vi),
      dn = function (t) {
        function e() {
          this._intensityColor = null, this._intensity = NaN, this._shadow = !1, this._shadowFarPlane = 0, this._shadowMapSize = 0, this._shadowMapCount = 0, this._shadowMapPCFType = 0, this._parallelSplitShadowMap = null, this._lightmapBakedType = 0, this.color = null, e.__super.call(this), this._intensity = 1, this._intensityColor = new Le(), this.color = new Le(1, 1, 1), this._shadow = !1, this._shadowFarPlane = 8, this._shadowMapSize = 512, this._shadowMapCount = 1, this._shadowMapPCFType = 0, this._lightmapBakedType = e.LIGHTMAPBAKEDTYPE_REALTIME;
        }
        r(e, "laya.d3.core.light.LightSprite", Vi);
        var i = e.prototype;
        return i._parseCustomProps = function (t, e, i, n) {
          var r = i.color,
            a = this.color.elements;
          a[0] = r[0], a[1] = r[1], a[2] = r[2];
        }, i._addSelfRenderObjects = function () {
          this.lightmapBakedType !== e.LIGHTMAPBAKEDTYPE_BAKED && this._scene._addLight(this);
        }, i._clearSelfRenderObjects = function () {
          this.lightmapBakedType !== e.LIGHTMAPBAKEDTYPE_BAKED && this._scene._removeLight(this);
        }, i._prepareToScene = function (t) {
          return !1;
        }, a(0, i, "lightmapBakedType", function () {
          return this._lightmapBakedType;
        }, function (t) {
          this._lightmapBakedType !== t && (this._lightmapBakedType = t, this._activeInHierarchy && (t !== e.LIGHTMAPBAKEDTYPE_BAKED ? this._scene._addLight(this) : this._scene._removeLight(this)));
        }), a(0, i, "shadowPCFType", function () {
          return this._shadowMapPCFType;
        }, function (t) {
          this._shadowMapPCFType = t, this._parallelSplitShadowMap && this._parallelSplitShadowMap.setPCFType(t);
        }), a(0, i, "intensity", function () {
          return this._intensity;
        }, function (t) {
          this._intensity = t;
        }), a(0, i, "shadow", function () {
          return this._shadow;
        }, function (t) {
          throw new Error("LightSprite: must override it.");
        }), a(0, i, "shadowDistance", function () {
          return this._shadowFarPlane;
        }, function (t) {
          this._shadowFarPlane = t, this._parallelSplitShadowMap && this._parallelSplitShadowMap.setFarDistance(t);
        }), a(0, i, "shadowPSSMCount", function () {
          return this._shadowMapCount;
        }, function (t) {
          this._shadowMapCount = t, this._parallelSplitShadowMap && (this._parallelSplitShadowMap.PSSMNum = t);
        }), a(0, i, "shadowResolution", function () {
          return this._shadowMapSize;
        }, function (t) {
          this._shadowMapSize = t, this._parallelSplitShadowMap && this._parallelSplitShadowMap.setShadowMapTextureSize(t);
        }), a(0, i, "diffuseColor", function () {
          return console.log("LightSprite: discard property,please use color property instead."), this.color;
        }, function (t) {
          console.log("LightSprite: discard property,please use color property instead."), this.color = t;
        }), e.LIGHTMAPBAKEDTYPE_REALTIME = 0, e.LIGHTMAPBAKEDTYPE_MIXED = 1, e.LIGHTMAPBAKEDTYPE_BAKED = 2, e;
      }(),
      fn = function (t) {
        function e(t) {
          this._terrainRes = null, this._lightmapScaleOffset = null, e.__super.call(this), this._lightmapScaleOffset = new Oe(1, 1, 0, 0), t && (this._terrainRes = t, t.loaded ? this.buildTerrain(t) : t.once("loaded", this, this.buildTerrain));
        }
        r(e, "laya.d3.terrain.Terrain", Vi);
        var n = e.prototype;
        return n._parseCustomProps = function (t, e, i, n) {
          this.terrainRes = y.getRes(e[i.dataPath]);
          var r = i.lightmapIndex;
          null != r && this.setLightmapIndex(r);
          var a = i.lightmapScaleOffset;
          a && this.setLightmapScaleOffset(new Oe(a[0], a[1], a[2], a[3]));
        }, n.setLightmapIndex = function (t) {
          for (var e = 0; e < this._childs.length; e++) {
            this._childs[e].terrainRender.lightmapIndex = t;
          }
        }, n.setLightmapScaleOffset = function (t) {
          if (t) {
            t.cloneTo(this._lightmapScaleOffset);
            for (var e = 0; e < this._childs.length; e++) {
              this._childs[e].terrainRender.lightmapScaleOffset = this._lightmapScaleOffset;
            }
          }
        }, n.disableLight = function () {
          for (var t = 0, e = this._childs.length; t < e; t++)
            for (var i = this._childs[t], n = 0, r = i._render.sharedMaterials.length; n < r; n++) {
              i._render.sharedMaterials[n].disableLight();
            }
        }, n.buildTerrain = function (t) {
          for (var e = t._chunkNumX, i = t._chunkNumZ, n = t._heightData, r = 0, a = 0; a < i; a++)
            for (var s = 0; s < e; s++) {
              for (var o = new Tn(s, a, t._gridSize, n._terrainHeightData, n._width, n._height, t._cameraCoordinateInverse), h = t._chunkInfos[r++], l = 0; l < h.alphaMap.length; l++) {
                var u = h.detailID[l].length,
                  c = u > 0 ? t._detailTextureInfos[h.detailID[l][0]].diffuseTexture : null,
                  _ = u > 1 ? t._detailTextureInfos[h.detailID[l][1]].diffuseTexture : null,
                  d = u > 2 ? t._detailTextureInfos[h.detailID[l][2]].diffuseTexture : null,
                  f = u > 3 ? t._detailTextureInfos[h.detailID[l][3]].diffuseTexture : null,
                  p = u > 0 ? t._detailTextureInfos[h.detailID[l][0]].scale : null,
                  m = u > 1 ? t._detailTextureInfos[h.detailID[l][1]].scale : null,
                  g = u > 2 ? t._detailTextureInfos[h.detailID[l][2]].scale : null,
                  v = u > 3 ? t._detailTextureInfos[h.detailID[l][3]].scale : null;
                o.buildRenderElementAndMaterial(u, h.normalMap, h.alphaMap[l], c, _, d, f, t._materialInfo.ambientColor, t._materialInfo.diffuseColor, t._materialInfo.specularColor, p ? p.x : 1, p ? p.y : 1, m ? m.x : 1, m ? m.y : 1, g ? g.x : 1, g ? g.y : 1, v ? v.x : 1, v ? v.y : 1);
              }
              o.terrainRender.receiveShadow = !0, o.terrainRender.lightmapScaleOffset = this._lightmapScaleOffset, this.addChild(o);
            }
        }, n.width = function () {
          return this._terrainRes._chunkNumX * He.CHUNK_GRID_NUM * this._terrainRes._gridSize;
        }, n.depth = function () {
          return this._terrainRes._chunkNumZ * He.CHUNK_GRID_NUM * this._terrainRes._gridSize;
        }, n.getHeightXZ = function (t, i) {
          if (!this._terrainRes || !this._terrainRes.loaded) return NaN;
          if (t -= this.transform.position.x, i -= this.transform.position.z, e.__VECTOR3__ || (e.__VECTOR3__ = new Le()), e.__VECTOR3__.elements[0] = t, e.__VECTOR3__.elements[1] = 0, e.__VECTOR3__.elements[2] = i, Le.transformV3ToV3(e.__VECTOR3__, He.__ADAPT_MATRIX_INV__, e.__VECTOR3__), t = e.__VECTOR3__.elements[0], i = e.__VECTOR3__.elements[2], t < 0 || t > this.width() || i < 0 || i > this.depth()) return NaN;
          var n = this._terrainRes._gridSize,
            r = parseInt("" + t / n),
            a = parseInt("" + i / n),
            s = t - r * n,
            o = i - a * n,
            h = NaN,
            l = NaN,
            u = NaN,
            c = NaN,
            _ = NaN,
            d = this._terrainRes._heightData;
          return s + o > n ? (h = d._terrainHeightData[(a + 1 - 1) * d._width + r + 1], l = d._terrainHeightData[(a + 1 - 1) * d._width + r], u = d._terrainHeightData[(a - 1) * d._width + r + 1], c = (n - s) / n, _ = (n - o) / n, h + (l - h) * c + (u - h) * _) : (h = d._terrainHeightData[Math.max(0, a - 1) * d._width + r], l = d._terrainHeightData[Math.min(d._width * d._height - 1, (a + 1 - 1) * d._width + r)], u = d._terrainHeightData[Math.min(d._width * d._height - 1, Math.max(0, a - 1) * d._width + r + 1)], c = s / n, _ = o / n, h + (l - h) * _ + (u - h) * c);
        }, a(0, n, "terrainRes", null, function (t) {
          t && (this._terrainRes = t, t.loaded ? this.buildTerrain(t) : t.once("loaded", this, this.buildTerrain));
        }), e.load = function (t) {
          return i.loader.create(t, null, null, e, null, 1, !1);
        }, e.RENDER_LINE_MODEL = !1, e.LOD_TOLERANCE_VALUE = 4, e.LOD_DISTANCE_FACTOR = 2, e.__VECTOR3__ = null, e;
      }(),
      pn = (function (t) {
        function e(t, i, n) {
          this._long = NaN, this._width = NaN, this._height = NaN, void 0 === t && (t = 1), void 0 === i && (i = 1), void 0 === n && (n = 1), e.__super.call(this), this._long = t, this._width = i, this._height = n, this.activeResource(), this._positions = this._getPositions(), this._generateBoundingObject();
        }
        r(e, "laya.d3.resource.models.BoxMesh", nn);
        var i = e.prototype;
        i.recreateResource = function () {
          this._numberVertices = 24, this._numberIndices = 36;
          var t = Zt.vertexDeclaration,
            e = (t.vertexStride, this._long / 2),
            i = this._height / 2,
            n = this._width / 2,
            r = new Float32Array([-e, i, -n, 0, 1, 0, 0, 0, e, i, -n, 0, 1, 0, 1, 0, e, i, n, 0, 1, 0, 1, 1, -e, i, n, 0, 1, 0, 0, 1, -e, -i, -n, 0, -1, 0, 0, 1, e, -i, -n, 0, -1, 0, 1, 1, e, -i, n, 0, -1, 0, 1, 0, -e, -i, n, 0, -1, 0, 0, 0, -e, i, -n, -1, 0, 0, 0, 0, -e, i, n, -1, 0, 0, 1, 0, -e, -i, n, -1, 0, 0, 1, 1, -e, -i, -n, -1, 0, 0, 0, 1, e, i, -n, 1, 0, 0, 1, 0, e, i, n, 1, 0, 0, 0, 0, e, -i, n, 1, 0, 0, 0, 1, e, -i, -n, 1, 0, 0, 1, 1, -e, i, n, 0, 0, 1, 0, 0, e, i, n, 0, 0, 1, 1, 0, e, -i, n, 0, 0, 1, 1, 1, -e, -i, n, 0, 0, 1, 0, 1, -e, i, -n, 0, 0, -1, 1, 0, e, i, -n, 0, 0, -1, 0, 0, e, -i, -n, 0, 0, -1, 0, 1, -e, -i, -n, 0, 0, -1, 1, 1]),
            a = new Uint16Array([0, 1, 2, 2, 3, 0, 4, 7, 6, 6, 5, 4, 8, 9, 10, 10, 11, 8, 12, 15, 14, 14, 13, 12, 16, 17, 18, 18, 19, 16, 20, 23, 22, 22, 21, 20]);
          this._vertexBuffer = new qi(t, this._numberVertices, 35044, !0), this._indexBuffer = new Yi("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(r), this._indexBuffer.setData(a), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate();
        }, a(0, i, "long", function () {
          return this._long;
        }, function (t) {
          this._long !== t && (this._long = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "width", function () {
          return this._width;
        }, function (t) {
          this._width !== t && (this._width = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "height", function () {
          return this._height;
        }, function (t) {
          this._height !== t && (this._height = t, this.releaseResource(), this.activeResource());
        });
      }(), function (t) {
        function e(t, i, n, r) {
          this._radius = NaN, this._height = NaN, this._slices = 0, this._stacks = 0, void 0 === t && (t = .5), void 0 === i && (i = 2), void 0 === n && (n = 16), void 0 === r && (r = 32), e.__super.call(this), this._radius = t, this._height = i < 2 * t ? 2 * t : i, this._stacks = n, this._slices = r, this.recreateResource(), this._positions = this._getPositions(), this._generateBoundingObject();
        }
        r(e, "laya.d3.resource.models.CapsuleMesh", nn);
        var i = e.prototype;
        i.recreateResource = function () {
          this._numberVertices = (this._stacks + 1) * (this.slices + 1) * 2 + 2 * (this._slices + 1), this._numberIndices = 3 * this._stacks * (this._slices + 1) * 2 * 2 + 2 * this._slices * 3;
          var t = Zt.vertexDeclaration,
            e = t.vertexStride / 4,
            i = new Float32Array(this._numberVertices * e),
            n = new Uint16Array(this._numberIndices),
            r = Math.PI / 2 / this._stacks,
            a = 2 * Math.PI / this._slices,
            s = this._height / 2 - this._radius,
            o = 0,
            h = 0,
            l = 0,
            u = 0,
            c = 0,
            _ = 0,
            d = 0,
            f = 0;
          for (d = 0; d <= this._stacks; d++)
            for (f = 0; f <= this._slices; f++) o = this._radius * Math.cos(d * r) * Math.cos(f * a + Math.PI), h = this._radius * Math.sin(d * r), l = this._radius * Math.cos(d * r) * Math.sin(f * a + Math.PI), i[u++] = o, i[u++] = h + s, i[u++] = l, i[u++] = o, i[u++] = h, i[u++] = l, i[u++] = 1 - f / this._slices, i[u++] = (1 - d / this._stacks) * (Math.PI * this._radius / 2 / (this._height + Math.PI * this._radius)), d < this._stacks && (n[c++] = d * (this._slices + 1) + f + (this._slices + 1), n[c++] = d * (this._slices + 1) + f, n[c++] = d * (this._slices + 1) + f + 1, n[c++] = d * (this._slices + 1) + f + this._slices, n[c++] = d * (this._slices + 1) + f, n[c++] = d * (this._slices + 1) + f + (this._slices + 1));
          for (_ += (this._stacks + 1) * (this._slices + 1), d = 0; d <= this._stacks; d++)
            for (f = 0; f <= this._slices; f++) o = this._radius * Math.cos(d * r) * Math.cos(f * a + Math.PI), h = this._radius * Math.sin(-d * r), l = this._radius * Math.cos(d * r) * Math.sin(f * a + Math.PI), i[u++] = o, i[u++] = h - s, i[u++] = l, i[u++] = o, i[u++] = h, i[u++] = l, i[u++] = 1 - f / this._slices, i[u++] = (d / this._stacks * (Math.PI * this._radius / 2) + (this._height + Math.PI * this._radius / 2)) / (this._height + Math.PI * this._radius), d < this._stacks && (n[c++] = _ + d * (this._slices + 1) + f, n[c++] = _ + d * (this._slices + 1) + f + (this._slices + 1), n[c++] = _ + d * (this._slices + 1) + f + 1, n[c++] = _ + d * (this._slices + 1) + f, n[c++] = _ + d * (this._slices + 1) + f + this._slices, n[c++] = _ + d * (this._slices + 1) + f + (this._slices + 1));
          for (_ += (this._stacks + 1) * (this._slices + 1), f = 0; f <= this._slices; f++) o = this._radius * Math.cos(f * a + Math.PI), h = s, l = this._radius * Math.sin(f * a + Math.PI), i[u++] = o, i[u + 8 * (this._slices + 1) - 1] = o, i[u++] = h, i[u + 8 * (this._slices + 1) - 1] = -h, i[u++] = l, i[u + 8 * (this._slices + 1) - 1] = l, i[u++] = o, i[u + 8 * (this._slices + 1) - 1] = o, i[u++] = 0, i[u + 8 * (this._slices + 1) - 1] = 0, i[u++] = l, i[u + 8 * (this._slices + 1) - 1] = l, i[u++] = 1 - 1 * f / this._slices, i[u + 8 * (this._slices + 1) - 1] = 1 - 1 * f / this._slices, i[u++] = Math.PI * this._radius / 2 / (this._height + Math.PI * this._radius), i[u + 8 * (this._slices + 1) - 1] = (Math.PI * this._radius / 2 + this._height) / (this._height + Math.PI * this._radius);
          for (f = 0; f < this._slices; f++) n[c++] = f + _ + (this._slices + 1), n[c++] = f + _ + 1, n[c++] = f + _, n[c++] = f + _ + (this._slices + 1), n[c++] = f + _ + (this._slices + 1) + 1, n[c++] = f + _ + 1;
          _ += 2 * (this._slices + 1), this._vertexBuffer = new qi(t, this._numberVertices, 35044, !0), this._indexBuffer = new Yi("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(i), this._indexBuffer.setData(n), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate();
        }, a(0, i, "radius", function () {
          return this._radius;
        }, function (t) {
          this._radius !== t && (this._radius = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "height", function () {
          return this._height;
        }, function (t) {
          this._height !== t && (this._height = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "stacks", function () {
          return this._stacks;
        }, function (t) {
          this._stacks !== t && (this._stacks = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "slices", function () {
          return this._slices;
        }, function (t) {
          this._slices !== t && (this._slices = t, this.releaseResource(), this.activeResource());
        });
      }(), function (t) {
        function e(t, i, n) {
          this._radius = NaN, this._height = NaN, this._slices = 0, void 0 === t && (t = .5), void 0 === i && (i = 2), void 0 === n && (n = 32), e.__super.call(this), this._radius = t, this._height = i, this._slices = n, this.recreateResource(), this._positions = this._getPositions(), this._generateBoundingObject();
        }
        r(e, "laya.d3.resource.models.CylinderMesh", nn);
        var i = e.prototype;
        i.recreateResource = function () {
          this._numberVertices = this._slices + 1 + 1 + 2 * (this._slices + 1) + (this._slices + 1 + 1), this._numberIndices = 3 * this._slices + 6 * this._slices + 3 * this._slices;
          for (var t = Zt.vertexDeclaration, e = t.vertexStride / 4, i = new Float32Array(this._numberVertices * e), n = new Uint16Array(this._numberIndices), r = 2 * Math.PI / this._slices, a = this._height / 2, s = 0, o = 0, h = 0, l = 0, u = 0, c = 0, _ = 0, d = 0; d <= this._slices; d++) 0 === d && (i[c++] = 0, i[c++] = a, i[c++] = 0, i[c++] = 0, i[c++] = 1, i[c++] = 0, i[c++] = .5, i[c++] = .5), s = d * r, h = Math.cos(s) * this._radius, l = a, u = Math.sin(s) * this._radius, i[c++] = h, i[c++] = l, i[c++] = u, i[c++] = 0, i[c++] = 1, i[c++] = 0, i[c++] = .5 + .5 * Math.cos(s), i[c++] = .5 + .5 * Math.sin(s);
          for (var f = 0; f < this._slices; f++) n[_++] = 0, n[_++] = f + 1, n[_++] = f + 2;
          o += this._slices + 1 + 1;
          for (var p = 0; p <= this._slices; p++) s = p * r, h = Math.cos(s + Math.PI) * this._radius, l = a, u = Math.sin(s + Math.PI) * this._radius, i[c++] = h, i[c + 8 * (this._slices + 1) - 1] = h, i[c++] = l, i[c + 8 * (this._slices + 1) - 1] = -l, i[c++] = u, i[c + 8 * (this._slices + 1) - 1] = u, i[c++] = h, i[c + 8 * (this._slices + 1) - 1] = h, i[c++] = 0, i[c + 8 * (this._slices + 1) - 1] = 0, i[c++] = u, i[c + 8 * (this._slices + 1) - 1] = u, i[c++] = 1 - 1 * p / this._slices, i[c + 8 * (this._slices + 1) - 1] = 1 - 1 * p / this._slices, i[c++] = 0, i[c + 8 * (this._slices + 1) - 1] = 1;
          c += 8 * (this._slices + 1);
          for (var m = 0; m < this._slices; m++) n[_++] = m + o + (this._slices + 1), n[_++] = m + o + 1, n[_++] = m + o, n[_++] = m + o + (this._slices + 1), n[_++] = m + o + (this._slices + 1) + 1, n[_++] = m + o + 1;
          o += 2 * (this._slices + 1);
          for (var g = 0; g <= this._slices; g++) 0 === g && (i[c++] = 0, i[c++] = -a, i[c++] = 0, i[c++] = 0, i[c++] = -1, i[c++] = 0, i[c++] = .5, i[c++] = .5), s = g * r, h = Math.cos(s + Math.PI) * this._radius, l = -a, u = Math.sin(s + Math.PI) * this._radius, i[c++] = h, i[c++] = l, i[c++] = u, i[c++] = 0, i[c++] = -1, i[c++] = 0, i[c++] = .5 + .5 * Math.cos(s), i[c++] = .5 + .5 * Math.sin(s);
          for (var v = 0; v < this._slices; v++) n[_++] = 0 + o, n[_++] = v + 2 + o, n[_++] = v + 1 + o;
          o += this._slices + 1 + 1, this._vertexBuffer = new qi(t, this._numberVertices, 35044, !0), this._indexBuffer = new Yi("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(i), this._indexBuffer.setData(n), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate();
        }, a(0, i, "radius", function () {
          return this._radius;
        }, function (t) {
          this._radius !== t && (this._radius = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "height", function () {
          return this._height;
        }, function (t) {
          this._height !== t && (this._height = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "slices", function () {
          return this._slices;
        }, function (t) {
          this._slices !== t && (this._slices = t, this.releaseResource(), this.activeResource());
        });
      }(), function (t) {
        function e(t, i, n, r) {
          this._long = NaN, this._width = NaN, this._stacks = 0, this._slices = 0, void 0 === t && (t = 10), void 0 === i && (i = 10), void 0 === n && (n = 10), void 0 === r && (r = 10), e.__super.call(this), this._long = t, this._width = i, this._stacks = n, this._slices = r, this.activeResource(), this._positions = this._getPositions(), this._generateBoundingObject();
        }
        r(e, "laya.d3.resource.models.PlaneMesh", nn);
        var i = e.prototype;
        i.recreateResource = function () {
          this._numberVertices = (this._stacks + 1) * (this._slices + 1), this._numberIndices = this._stacks * this._slices * 2 * 3;
          for (var t = new Uint16Array(this._numberIndices), e = Zt.vertexDeclaration, i = e.vertexStride / 4, n = new Float32Array(this._numberVertices * i), r = this._long / 2, a = this._width / 2, s = this._long / this._stacks, o = this._width / this._slices, h = 0, l = 0; l <= this._slices; l++)
            for (var u = 0; u <= this._stacks; u++) n[h++] = u * s - r, n[h++] = 0, n[h++] = l * o - a, n[h++] = 0, n[h++] = 1, n[h++] = 0, n[h++] = 1 * u / this._stacks, n[h++] = 1 * l / this._slices;
          var c = 0;
          for (l = 0; l < this._slices; l++)
            for (u = 0; u < this._stacks; u++) t[c++] = (l + 1) * (this._stacks + 1) + u, t[c++] = l * (this._stacks + 1) + u, t[c++] = (l + 1) * (this._stacks + 1) + u + 1, t[c++] = l * (this._stacks + 1) + u, t[c++] = l * (this._stacks + 1) + u + 1, t[c++] = (l + 1) * (this._stacks + 1) + u + 1;
          this._vertexBuffer = new qi(e, this._numberVertices, 35044, !0), this._indexBuffer = new Yi("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(n), this._indexBuffer.setData(t), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate();
        }, a(0, i, "long", function () {
          return this._long;
        }, function (t) {
          this._long !== t && (this._long = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "width", function () {
          return this._width;
        }, function (t) {
          this._width !== t && (this._width = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "stacks", function () {
          return this._stacks;
        }, function (t) {
          this._stacks !== t && (this._stacks = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "slices", function () {
          return this._slices;
        }, function (t) {
          this._slices !== t && (this._slices = t, this.releaseResource(), this.activeResource());
        });
      }(), function (t) {
        function e(t, i) {
          this._long = NaN, this._width = NaN, void 0 === t && (t = 1), void 0 === i && (i = 1), e.__super.call(this), this._long = t, this._width = i, this.activeResource(), this._positions = this._getPositions(), this._generateBoundingObject();
        }
        r(e, "laya.d3.resource.models.QuadMesh", nn);
        var i = e.prototype;
        i.recreateResource = function () {
          this._numberVertices = 4, this._numberIndices = 6;
          var t = Zt.vertexDeclaration,
            e = (t.vertexStride, this._long / 2),
            i = this._width / 2,
            n = new Float32Array([-e, i, 0, 0, 0, 1, 0, 0, e, i, 0, 0, 0, 1, 1, 0, -e, -i, 0, 0, 0, 1, 0, 1, e, -i, 0, 0, 0, 1, 1, 1]),
            r = new Uint16Array([0, 1, 2, 3, 2, 1]);
          this._vertexBuffer = new qi(t, this._numberVertices, 35044, !0), this._indexBuffer = new Yi("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(n), this._indexBuffer.setData(r), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate();
        }, a(0, i, "long", function () {
          return this._long;
        }, function (t) {
          this._long !== t && (this._long = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "width", function () {
          return this._width;
        }, function (t) {
          this._width !== t && (this._width = t, this.releaseResource(), this.activeResource());
        });
      }(), function (t) {
        function e(t, i, n) {
          this._radius = NaN, this._slices = 0, this._stacks = 0, void 0 === t && (t = .5), void 0 === i && (i = 32), void 0 === n && (n = 32), e.__super.call(this), this._radius = t, this._stacks = i, this._slices = n, this.activeResource(), this._positions = this._getPositions(), this._generateBoundingObject();
        }
        r(e, "laya.d3.resource.models.SphereMesh", nn);
        var i = e.prototype;
        i.recreateResource = function () {
          this._numberVertices = (this._stacks + 1) * (this._slices + 1), this._numberIndices = 3 * this._stacks * (this._slices + 1) * 2;
          for (var t = new Uint16Array(this._numberIndices), e = Zt.vertexDeclaration, i = e.vertexStride / 4, n = new Float32Array(this._numberVertices * i), r = Math.PI / this._stacks, a = 2 * Math.PI / this._slices, s = 0, o = 0, h = 0, l = 0; l < this._stacks + 1; l++)
            for (var u = Math.sin(l * r), c = Math.cos(l * r), _ = 0; _ < this._slices + 1; _++) {
              var d = u * Math.sin(_ * a + 1 * Math.PI / 2),
                f = u * Math.cos(_ * a + 1 * Math.PI / 2);
              n[o + 0] = d * this._radius, n[o + 1] = c * this._radius, n[o + 2] = f * this._radius, n[o + 3] = d, n[o + 4] = c, n[o + 5] = f, n[o + 6] = _ / this._slices, n[o + 7] = l / this._stacks, o += i, l != this._stacks - 1 && (t[h++] = s + (this._slices + 1), t[h++] = s, t[h++] = s + 1, t[h++] = s + this._slices, t[h++] = s, t[h++] = s + (this._slices + 1), s++);
            }
          this._vertexBuffer = new qi(e, this._numberVertices, 35044, !0), this._indexBuffer = new Yi("ushort", this._numberIndices, 35044, !0), this._vertexBuffer.setData(n), this._indexBuffer.setData(t), this.memorySize = 2 * (this._vertexBuffer._byteLength + this._indexBuffer._byteLength), this.completeCreate();
        }, a(0, i, "radius", function () {
          return this._radius;
        }, function (t) {
          this._radius !== t && (this._radius = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "slices", function () {
          return this._slices;
        }, function (t) {
          this._slices !== t && (this._slices = t, this.releaseResource(), this.activeResource());
        }), a(0, i, "stacks", function () {
          return this._stacks;
        }, function (t) {
          this._stacks !== t && (this._stacks = t, this.releaseResource(), this.activeResource());
        });
      }(), function (t) {
        function e(t, i, n) {
          void 0 === t && (t = 0), void 0 === i && (i = .3), void 0 === n && (n = 1e3), this._viewMatrix = new Ce(), this._projectionMatrix = new Ce(), this._projectionViewMatrix = new Ce(), this._viewport = new Ne(0, 0, 0, 0), this._normalizedViewport = new Ne(0, 0, 1, 1), this._aspectRatio = t, this._boundFrustumUpdate = !0, this._boundFrustum = new Te(Ce.DEFAULT), e.__super.call(this, i, n), this.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged);
        }
        r(e, "laya.d3.core.Camera", cn);
        var s = e.prototype;
        return s._onWorldMatrixChanged = function () {
          this._boundFrustumUpdate = !0;
        }, s._parseCustomProps = function (t, e, i, n) {
          var r = i.clearColor;
          this.clearColor = new Oe(r[0], r[1], r[2], r[3]);
          var a = i.viewport;
          this.normalizedViewport = new Ne(a[0], a[1], a[2], a[3]);
        }, s._calculateProjectionMatrix = function () {
          if (!this._useUserProjectionMatrix)
            if (this._orthographic) {
              var t = this.orthographicVerticalSize * this.aspectRatio * .5,
                e = .5 * this.orthographicVerticalSize;
              Ce.createOrthoOffCenterRH(-t, t, -e, e, this.nearPlane, this.farPlane, this._projectionMatrix);
            } else Ce.createPerspective(3.1416 * this.fieldOfView / 180, this.aspectRatio, this.nearPlane, this.farPlane, this._projectionMatrix);
          this._boundFrustumUpdate = !0;
        }, s._update = function (t) {
          this.conchModel && (this.conchModel.setViewMatrix(this.viewMatrix.elements), this.conchModel.setProjectMatrix(this.projectionMatrix.elements)), laya.d3.core.Sprite3D.prototype._update.call(this, t);
        }, s._renderCamera = function (t, e, i) {
          i.parallelSplitShadowMaps[0] && i._renderShadowMap(t, e, this), e.camera = this, this._prepareCameraToRender(), i._preRenderUpdateComponents(e);
          var n, r;
          n = e._viewMatrix = this.viewMatrix;
          var a = this._renderTarget;
          a ? (a.start(), Ce.multiply(cn._invertYScaleMatrix, this._projectionMatrix, cn._invertYProjectionMatrix), Ce.multiply(cn._invertYScaleMatrix, this.projectionViewMatrix, cn._invertYProjectionViewMatrix), r = e._projectionMatrix = cn._invertYProjectionMatrix, e._projectionViewMatrix = cn._invertYProjectionViewMatrix) : (r = e._projectionMatrix = this._projectionMatrix, e._projectionViewMatrix = this.projectionViewMatrix), this._prepareCameraViewProject(n, r), e._viewport = this.viewport, i._preRenderScene(t, e, this.boundFrustum), i._clear(t, e), i._renderScene(t, e), i._postRenderUpdateComponents(e), a && a.end();
        }, s.viewportPointToRay = function (t, e) {
          Ye.calculateCursorRay(t, this.viewport, this._projectionMatrix, this.viewMatrix, null, e);
        }, s.normalizedViewportPointToRay = function (t, i) {
          var n = e._tempVector20,
            r = this.viewport,
            a = t.elements,
            s = n.elements;
          s[0] = a[0] * r.width, s[1] = a[1] * r.height, Ye.calculateCursorRay(n, this.viewport, this._projectionMatrix, this.viewMatrix, null, i);
        }, s.worldToViewportPoint = function (t, e) {
          Ce.multiply(this._projectionMatrix, this._viewMatrix, this._projectionViewMatrix), this.viewport.project(t, this._projectionViewMatrix, e);
          var n = e.elements;
          n[0] = n[0] / i.stage.clientScaleX, n[1] = n[1] / i.stage.clientScaleY;
        }, s.worldToNormalizedViewportPoint = function (t, e) {
          Ce.multiply(this._projectionMatrix, this._viewMatrix, this._projectionViewMatrix), this.normalizedViewport.project(t, this._projectionViewMatrix, e);
          var n = e.elements;
          n[0] = n[0] / i.stage.clientScaleX, n[1] = n[1] / i.stage.clientScaleY;
        }, s.convertScreenCoordToOrthographicCoord = function (t, e) {
          if (this._orthographic) {
            var i = _t.clientWidth,
              n = _t.clientHeight,
              r = this.orthographicVerticalSize * this.aspectRatio / i,
              a = this.orthographicVerticalSize / n,
              s = t.elements,
              o = e.elements;
            return o[0] = (-i / 2 + s[0]) * r, o[1] = (n / 2 - s[1]) * a, o[2] = (this.nearPlane - this.farPlane) * (s[2] + 1) / 2 - this.nearPlane, Le.transformCoordinate(e, this.transform.worldMatrix, e), !0;
          }
          return !1;
        }, a(0, s, "projectionViewMatrix", function () {
          return Ce.multiply(this.projectionMatrix, this.viewMatrix, this._projectionViewMatrix), this._projectionViewMatrix;
        }), a(0, s, "aspectRatio", function () {
          if (0 === this._aspectRatio) {
            var t = this.viewport;
            return t.width / t.height;
          }
          return this._aspectRatio;
        }, function (t) {
          if (t < 0) throw new Error("Camera: the aspect ratio has to be a positive real number.");
          this._aspectRatio = t, this._calculateProjectionMatrix();
        }), a(0, s, "boundFrustum", function () {
          return this._boundFrustumUpdate && (this._boundFrustum.matrix = this.projectionViewMatrix), this._boundFrustum;
        }), a(0, s, "needViewport", function () {
          var t = this.normalizedViewport;
          return 0 === t.x && 0 === t.y && 1 === t.width && 1 === t.height;
        }), a(0, s, "viewport", function () {
          if (this._viewportExpressedInClipSpace) {
            var t = this._normalizedViewport,
              e = this.renderTargetSize,
              i = e.width,
              n = e.height;
            this._viewport.x = t.x * i, this._viewport.y = t.y * n, this._viewport.width = t.width * i, this._viewport.height = t.height * n;
          }
          return this._viewport;
        }, function (t) {
          if (null != this.renderTarget && (t.x < 0 || t.y < 0 || 0 == t.width || 0 == t.height)) throw new Error("Camera: viewport size invalid.", "value");
          this._viewportExpressedInClipSpace = !1, this._viewport = t, this._calculateProjectionMatrix();
        }), a(0, s, "normalizedViewport", function () {
          if (!this._viewportExpressedInClipSpace) {
            var t = this._viewport,
              e = this.renderTargetSize,
              i = e.width,
              n = e.height;
            this._normalizedViewport.x = t.x / i, this._normalizedViewport.y = t.y / n, this._normalizedViewport.width = t.width / i, this._normalizedViewport.height = t.height / n;
          }
          return this._normalizedViewport;
        }, function (t) {
          t.x < 0 && (t.x = 0, console.warn("Camera: viewport.x must large than 0.0.")), t.y < 0 && (t.y = 0, console.warn("Camera: viewport.y must large than 0.0.")), t.x + t.width > 1 && (t.width = 1 - t.x, console.warn("Camera: viewport.width + viewport.x must less than 1.0.")), t.y + t.height > 1 && (t.height = 1 - t.y, console.warn("Camera: viewport.height + viewport.y must less than 1.0.")), this._viewportExpressedInClipSpace = !0, this._normalizedViewport = t, this._calculateProjectionMatrix();
        }), a(0, s, "projectionMatrix", function () {
          return this._projectionMatrix;
        }, function (t) {
          this._projectionMatrix = t, this._useUserProjectionMatrix = !0;
        }), a(0, s, "viewMatrix", function () {
          return this.transform.worldMatrix.invert(this._viewMatrix), this._viewMatrix;
        }), n(e, ["_tempVector20", function () {
          return this._tempVector20 = new Pe();
        }]), e;
      }()),
      mn = (function (t) {
        function e() {
          e.__super.call(this), this._render = new bi(this), this._render.on("materialchanged", this, this._onMaterialChanged);
          var t = new ki();
          this._render.sharedMaterial = t, this._geometryFilter = new Pi(this), t.renderMode = 8, this._changeRenderObject(0);
        }
        r(e, "laya.d3.core.glitter.Glitter", t);
        var i = e.prototype;
        i._changeRenderObject = function (t) {
          var e = this._render._renderElements,
            i = e[t];
          i || (i = e[t] = new ut()), i._render = this._render;
          var n = this._render.sharedMaterials[t];
          n || (n = ki.defaultMaterial);
          var r = this._geometryFilter;
          return i._mainSortID = 0, i._sprite3D = this, i.renderObj = r, i._material = n, i;
        }, i._onMaterialChanged = function (t, e, i) {
          e < t._renderElements.length && this._changeRenderObject(e);
        }, i._clearSelfRenderObjects = function () {
          this.scene.removeFrustumCullingObject(this._render);
        }, i._addSelfRenderObjects = function () {
          this.scene.addFrustumCullingObject(this._render);
        }, i._update = function (e) {
          this._geometryFilter._update(e.elapsedTime), t.prototype._update.call(this, e);
        }, i.addGlitterByPositions = function (t, e) {
          this._geometryFilter.addVertexPosition(t, e);
        }, i.addGlitterByPositionsVelocitys = function (t, e, i, n) {
          this._geometryFilter.addVertexPositionVelocity(t, e, i, n);
        }, i.cloneTo = function (t) {
          var e = t,
            i = e.templet,
            n = this._geometryFilter;
          i.lifeTime = n.lifeTime, i.minSegmentDistance = n.minSegmentDistance, i.minInterpDistance = n.minInterpDistance, i.maxSlerpCount = n.maxSlerpCount, i._maxSegments = n._maxSegments;
          var r = e._render,
            a = this._render;
          r.sharedMaterials = a.sharedMaterials, r.enable = a.enable, laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
        }, i.destroy = function (e) {
          void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy(), this._geometryFilter = null);
        }, a(0, i, "templet", function () {
          return this._geometryFilter;
        }), a(0, i, "glitterRender", function () {
          return this._render;
        }), e.CURRENTTIME = 2, e.DURATION = 3;
      }(_n), function (t) {
        function e() {
          this._direction = null, this._updateDirection = !1, e.__super.call(this), this._updateDirection = !1, this._direction = new Le(), this.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChange);
        }
        r(e, "laya.d3.core.light.DirectionLight", t);
        var i = e.prototype;
        return i._initShadow = function () {
          if (this._shadow) this._parallelSplitShadowMap = new Ge(), this.scene.parallelSplitShadowMaps.push(this._parallelSplitShadowMap), this.transform.worldMatrix.getForward(this._direction), Le.normalize(this._direction, this._direction), this._parallelSplitShadowMap.setInfo(this.scene, this._shadowFarPlane, this._direction, this._shadowMapSize, this._shadowMapCount, this._shadowMapPCFType);
          else {
            var t = this.scene.parallelSplitShadowMaps;
            t.splice(t.indexOf(this._parallelSplitShadowMap), 1), this._parallelSplitShadowMap.disposeAllRenderTarget(), this._parallelSplitShadowMap = null, this.scene.removeShaderDefine(Ge.SHADERDEFINE_SHADOW_PSSM1), this.scene.removeShaderDefine(Ge.SHADERDEFINE_SHADOW_PSSM2), this.scene.removeShaderDefine(Ge.SHADERDEFINE_SHADOW_PSSM3);
          }
        }, i._addSelfRenderObjects = function () {
          t.prototype._addSelfRenderObjects.call(this), this._shadow && this._initShadow();
        }, i._clearSelfRenderObjects = function () {
          var t = this.scene,
            e = t._shaderValues;
          e.setValue(4, null), e.setValue(3, null), t.removeShaderDefine(ui.SHADERDEFINE_DIRECTIONLIGHT);
        }, i._prepareToScene = function (t) {
          var e = t.scene;
          if (e.enableLight && this._activeInHierarchy) {
            var i = e._shaderValues;
            return e.addShaderDefine(ui.SHADERDEFINE_DIRECTIONLIGHT), Le.scale(this.color, this._intensity, this._intensityColor), i.setValue(4, this._intensityColor.elements), this.transform.worldMatrix.getForward(this._direction), Le.normalize(this._direction, this._direction), i.setValue(3, this._direction.elements), !0;
          }
          return e.removeShaderDefine(ui.SHADERDEFINE_DIRECTIONLIGHT), !1;
        }, i._onWorldMatrixChange = function () {
          this._updateDirection = !0;
        }, a(0, i, "shadow", t.prototype._$get_shadow, function (t) {
          this._shadow !== t && (this._shadow = t, this.scene && this._initShadow());
        }), a(0, i, "direction", function () {
          return console.log("Warning: discard property,please use transform's property instead."), this._updateDirection && (this.transform.worldMatrix.getForward(this._direction), Le.normalize(this._direction, this._direction), this._updateDirection = !1), this._direction;
        }, function (t) {
          console.log("Warning: discard property,please use transform's property instead.");
          var e = this.transform.worldMatrix;
          e.setForward(t), this.transform.worldMatrix = e, Le.normalize(t, t), this._direction = t, this.shadow && this._parallelSplitShadowMap && this._parallelSplitShadowMap._setGlobalParallelLightDir(this._direction);
        }), e;
      }(dn)),
      gn = (function (t) {
        function e() {
          this._range = NaN, this._attenuation = null, e.__super.call(this), this._range = 6, this._attenuation = new Le(.6, .6, .6);
        }
        r(e, "laya.d3.core.light.PointLight", dn);
        var i = e.prototype;
        i._clearSelfRenderObjects = function () {
          var t = this.scene,
            e = t._shaderValues;
          e.setValue(8, null), e.setValue(5, null), e.setValue(6, null), e.setValue(7, null), t.removeShaderDefine(ui.SHADERDEFINE_POINTLIGHT);
        }, i._prepareToScene = function (t) {
          var e = t.scene;
          if (e.enableLight && this._activeInHierarchy) {
            var i = e._shaderValues;
            return e.addShaderDefine(ui.SHADERDEFINE_POINTLIGHT), Le.scale(this.color, this._intensity, this._intensityColor), i.setValue(8, this._intensityColor.elements), i.setValue(5, this.transform.position.elements), i.setValue(6, this.range), i.setValue(7, this.attenuation.elements), !0;
          }
          return e.removeShaderDefine(ui.SHADERDEFINE_POINTLIGHT), !1;
        }, a(0, i, "range", function () {
          return this._range;
        }, function (t) {
          this._range = t;
        }), a(0, i, "attenuation", function () {
          return this._attenuation;
        }, function (t) {
          this._attenuation = t;
        });
      }(), function (t) {
        function e() {
          this._updateDirection = !1, this._direction = null, this._spot = NaN, this._range = NaN, this._attenuation = null, e.__super.call(this), this._updateDirection = !1, this.direction = new Le(0, -1, -1), this._attenuation = new Le(.6, .6, .6), this._spot = 96, this._range = 6, this.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChange);
        }
        r(e, "laya.d3.core.light.SpotLight", dn);
        var i = e.prototype;
        i._onWorldMatrixChange = function () {
          this._updateDirection = !0;
        }, i._clearSelfRenderObjects = function () {
          var t = this.scene,
            e = t._shaderValues;
          e.setValue(14, null), e.setValue(9, null), e.setValue(10, null), e.setValue(12, null), e.setValue(11, null), e.setValue(13, null), t.removeShaderDefine(ui.SHADERDEFINE_SPOTLIGHT);
        }, i._prepareToScene = function (t) {
          var e = t.scene;
          if (e.enableLight && this._activeInHierarchy) {
            var i = e._shaderValues;
            return e.addShaderDefine(ui.SHADERDEFINE_SPOTLIGHT), Le.scale(this.color, this._intensity, this._intensityColor), i.setValue(14, this._intensityColor.elements), i.setValue(9, this.transform.position.elements), this.transform.worldMatrix.getForward(this._direction), Le.normalize(this._direction, this._direction), i.setValue(10, this._direction.elements), i.setValue(12, this.range), i.setValue(11, this.spot), i.setValue(13, this.attenuation.elements), !0;
          }
          return e.removeShaderDefine(ui.SHADERDEFINE_SPOTLIGHT), !1;
        }, a(0, i, "spot", function () {
          return this._spot;
        }, function (t) {
          this._spot = t;
        }), a(0, i, "direction", function () {
          return console.log("Warning: discard property,please use transform's property instead."), this._updateDirection && (this.transform.worldMatrix.getForward(this._direction), this._updateDirection = !1), this._direction;
        }, function (t) {
          console.log("Warning: discard property,please use transform's property instead.");
          var e = this.transform.worldMatrix;
          e.setForward(t), this.transform.worldMatrix = e, this._direction = t;
        }), a(0, i, "range", function () {
          return this._range;
        }, function (t) {
          this._range = t;
        }), a(0, i, "attenuation", function () {
          return this._attenuation;
        }, function (t) {
          this._attenuation = t;
        });
      }(), function (t) {
        function e(t, i) {
          e.__super.call(this, i), this._geometryFilter = new Ci(this), this._render = new Mi(this), this._geometryFilter.on("meshchanged", this, this._onMeshChanged), this._render.on("materialchanged", this, this._onMaterialChanged), t && (this._geometryFilter.sharedMesh = t, t instanceof laya.d3.resource.models.Mesh && (t.loaded ? this._render.sharedMaterials = t.materials : t.once("loaded", this, this._applyMeshMaterials)));
        }
        r(e, "laya.d3.core.MeshSprite3D", t);
        var s = e.prototype;
        return s._changeRenderObjectByMesh = function (t) {
          var e = this._render._renderElements,
            i = e[t];
          i || (i = e[t] = new li()), i._render = this._render;
          var n = this._render.sharedMaterials[t];
          n || (n = Wi.defaultMaterial);
          var r = this._geometryFilter.sharedMesh.getRenderElement(t);
          return i._mainSortID = this._getSortID(r, n), i._sprite3D = this, i.renderObj = r, i._material = n, i;
        }, s._changeRenderObjectByMaterial = function (t, e) {
          var i = this._render._renderElements[t];
          e || (e = Wi.defaultMaterial);
          var n = this._geometryFilter.sharedMesh.getRenderElement(t);
          return i._mainSortID = this._getSortID(n, e), i._sprite3D = this, i.renderObj = n, i._material = e, i;
        }, s._changeRenderObjectsByMesh = function () {
          var t = this._geometryFilter.sharedMesh.getRenderElementsCount();
          this._render._renderElements.length = t;
          for (var e = 0; e < t; e++) this._changeRenderObjectByMesh(e);
        }, s._onMeshChanged = function (t) {
          var e = t.sharedMesh;
          e.loaded ? this._changeRenderObjectsByMesh() : e.once("loaded", this, this._onMeshLoaded);
        }, s._onMeshLoaded = function (t) {
          t === this.meshFilter.sharedMesh && this._changeRenderObjectsByMesh();
        }, s._onMaterialChanged = function (t, e, i) {
          e < this._render._renderElements.length && this._changeRenderObjectByMaterial(e, i);
        }, s._clearSelfRenderObjects = function () {
          this.scene.removeFrustumCullingObject(this._render);
        }, s._addSelfRenderObjects = function () {
          this.scene.addFrustumCullingObject(this._render);
        }, s._parseCustomProps = function (t, e, i, n) {
          var r = this.meshRender,
            a = i.lightmapIndex;
          null != a && (r.lightmapIndex = a);
          var s = i.lightmapScaleOffset;
          s && (r.lightmapScaleOffset = new Oe(s[0], s[1], s[2], s[3]));
          var o, h;
          if (n.instanceParams)(o = n.instanceParams.loadPath) && (h = y.getRes(e[o]), this.meshFilter.sharedMesh = h, h.loaded ? r.sharedMaterials = h.materials : h.once("loaded", this, this._applyMeshMaterials));
          else {
            (o = i.meshPath) && (h = y.getRes(e[o]), this.meshFilter.sharedMesh = h);
            var l = i.materials;
            if (l) {
              var u = r.sharedMaterials,
                c = l.length;
              u.length = c;
              for (var _ = 0; _ < c; _++) u[_] = y.getRes(e[l[_].path]);
              r.sharedMaterials = u;
            }
          }
        }, s._applyMeshMaterials = function (t) {
          for (var e = this._render.sharedMaterials, i = t.materials, n = 0, r = i.length; n < r; n++) e[n] || (e[n] = i[n]);
          this._render.sharedMaterials = e;
        }, s._addToInitStaticBatchManager = function () {
          e._staticBatchManager._addInitBatchSprite(this);
        }, s.cloneTo = function (t) {
          var e = t;
          e._geometryFilter.sharedMesh = this._geometryFilter.sharedMesh;
          var i = this._render,
            n = e._render;
          n.enable = i.enable, n.sharedMaterials = i.sharedMaterials, n.castShadow = i.castShadow;
          var r = i.lightmapScaleOffset;
          r && (n.lightmapScaleOffset = r.clone()), n.lightmapIndex = i.lightmapIndex, n.receiveShadow = i.receiveShadow, n.sortingFudge = i.sortingFudge, laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
        }, s.destroy = function (e) {
          if (void 0 === e && (e = !0), !this.destroyed) {
            var i = this.meshFilter.sharedMesh;
            i.loaded || i.off("loaded", this, this._applyMeshMaterials), t.prototype.destroy.call(this, e), this._geometryFilter._destroy();
          }
        }, a(0, s, "meshFilter", function () {
          return this._geometryFilter;
        }), a(0, s, "meshRender", function () {
          return this._render;
        }), e.__init__ = function () {
          Et._staticBatchManagers.push(e._staticBatchManager);
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, n(e, ["_staticBatchManager", function () {
          return this._staticBatchManager = new ci();
        }]), e;
      }(_n)),
      vn = function (t) {
        function e(t) {
          e.__super.call(this), this._render = new Di(this), this._render.on("materialchanged", this, this._onMaterialChanged), this._geometryFilter = new Ii(this), this._createRenderElement(0), t && (this._render.sharedMaterial = t);
        }
        r(e, "laya.d3.core.particleShuriKen.ShuriKenParticle3D", t);
        var s = e.prototype;
        return s._initParticleVelocity = function (t) {
          for (var e = new $(), i = t.velocitys, n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            e.add(a.key, a.value);
          }
          return e;
        }, s._initParticleColor = function (t) {
          var e = new K(),
            i = t.alphas,
            n = 0,
            r = 0;
          for (n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            e.addAlpha(a.key, a.value);
          }
          var s = t.rgbs;
          for (n = 0, r = s.length; n < r; n++) {
            var o = s[n],
              h = o.value;
            e.addRGB(o.key, new Le(h[0], h[1], h[2]));
          }
          return e;
        }, s._initParticleSize = function (t) {
          for (var e = new $(), i = t.sizes, n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            e.add(a.key, a.value);
          }
          return e;
        }, s._initParticleRotation = function (t) {
          for (var e = new $(), i = t.angularVelocitys, n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            e.add(a.key, a.value / 180 * Math.PI);
          }
          return e;
        }, s._initParticleFrame = function (t) {
          for (var e = new Z(), i = t.frames, n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            e.add(a.key, a.value);
          }
          return e;
        }, s._createRenderElement = function (t) {
          var e = this._render._renderElements[t] = new ut();
          e._render = this._render;
          var i = this._render.sharedMaterials[t];
          i || (i = Qi.defaultMaterial);
          var n = this._geometryFilter;
          e._mainSortID = 0, e._sprite3D = this, e.renderObj = n, e._material = i;
        }, s._onMaterialChanged = function (t, e, i) {
          var n = t._renderElements;
          if (e < n.length) {
            n[e]._material = i || Qi.defaultMaterial;
          }
        }, s._clearSelfRenderObjects = function () {
          this.scene.removeFrustumCullingObject(this._render);
        }, s._addSelfRenderObjects = function () {
          this.scene.addFrustumCullingObject(this._render);
        }, s._parseCustomProps = function (t, i, n, r) {
          var a, s = Math.PI / 180,
            o = 0,
            h = 0,
            l = this.particleRender,
            u = n.material;
          if (u) a = y.getRes(i[u.path]);
          else {
            var c = n.materialPath;
            c ? a = y.getRes(i[c]) : (a = new Qi()).diffuseTexture = i ? y.getRes(i[n.texturePath]) : hn.load(n.texturePath);
          }
          l.sharedMaterial = a;
          var _ = n.meshPath;
          _ && (l.mesh = y.getRes(i[_])), l.renderMode = n.renderMode, l.stretchedBillboardCameraSpeedScale = n.stretchedBillboardCameraSpeedScale, l.stretchedBillboardSpeedScale = n.stretchedBillboardSpeedScale, l.stretchedBillboardLengthScale = n.stretchedBillboardLengthScale, l.sortingFudge = n.sortingFudge ? n.sortingFudge : 0;
          var d = this.particleSystem;
          d.isPerformanceMode = n.isPerformanceMode, d.duration = n.duration, d.looping = n.looping, d.prewarm = n.prewarm, d.startDelayType = n.startDelayType, d.startDelay = n.startDelay, d.startDelayMin = n.startDelayMin, d.startDelayMax = n.startDelayMax, d.startLifetimeType = n.startLifetimeType, d.startLifetimeConstant = n.startLifetimeConstant, d.startLifeTimeGradient = e._initStartLife(n.startLifetimeGradient), d.startLifetimeConstantMin = n.startLifetimeConstantMin, d.startLifetimeConstantMax = n.startLifetimeConstantMax, d.startLifeTimeGradientMin = e._initStartLife(n.startLifetimeGradientMin), d.startLifeTimeGradientMax = e._initStartLife(n.startLifetimeGradientMax), d.startSpeedType = n.startSpeedType, d.startSpeedConstant = n.startSpeedConstant, d.startSpeedConstantMin = n.startSpeedConstantMin, d.startSpeedConstantMax = n.startSpeedConstantMax, d.threeDStartSize = n.threeDStartSize, d.startSizeType = n.startSizeType, d.startSizeConstant = n.startSizeConstant;
          var f = n.startSizeConstantSeparate,
            p = d.startSizeConstantSeparate.elements;
          p[0] = f[0], p[1] = f[1], p[2] = f[2], d.startSizeConstantMin = n.startSizeConstantMin, d.startSizeConstantMax = n.startSizeConstantMax;
          var m = n.startSizeConstantMinSeparate,
            g = d.startSizeConstantMinSeparate.elements;
          g[0] = m[0], g[1] = m[1], g[2] = m[2];
          var v = n.startSizeConstantMaxSeparate,
            x = d.startSizeConstantMaxSeparate.elements;
          x[0] = v[0], x[1] = v[1], x[2] = v[2], d.threeDStartRotation = n.threeDStartRotation, d.startRotationType = n.startRotationType, d.startRotationConstant = n.startRotationConstant * s;
          var T = n.startRotationConstantSeparate,
            S = d.startRotationConstantSeparate.elements;
          S[0] = T[0] * s, S[1] = T[1] * s, S[2] = T[2] * s, d.startRotationConstantMin = n.startRotationConstantMin * s, d.startRotationConstantMax = n.startRotationConstantMax * s;
          var w = n.startRotationConstantMinSeparate,
            E = d.startRotationConstantMinSeparate.elements;
          E[0] = w[0] * s, E[1] = w[1] * s, E[2] = w[2] * s;
          var b = n.startRotationConstantMaxSeparate,
            C = d.startRotationConstantMaxSeparate.elements;
          C[0] = b[0] * s, C[1] = b[1] * s, C[2] = b[2] * s, d.randomizeRotationDirection = n.randomizeRotationDirection, d.startColorType = n.startColorType;
          var M = n.startColorConstant,
            I = d.startColorConstant.elements;
          I[0] = M[0], I[1] = M[1], I[2] = M[2], I[3] = M[3];
          var D = n.startColorConstantMin,
            A = d.startColorConstantMin.elements;
          A[0] = D[0], A[1] = D[1], A[2] = D[2], A[3] = D[3];
          var R = n.startColorConstantMax,
            P = d.startColorConstantMax.elements;
          P[0] = R[0], P[1] = R[1], P[2] = R[2], P[3] = R[3], d.gravityModifier = n.gravityModifier, d.simulationSpace = n.simulationSpace, d.scaleMode = n.scaleMode, d.playOnAwake = n.playOnAwake, d.maxParticles = n.maxParticles;
          var L = n.autoRandomSeed;
          null != L && (d.autoRandomSeed = L);
          var O = n.randomSeed;
          null != O && (d.randomSeed[0] = O);
          var N = n.emission,
            V = d.emission;
          if (N) {
            V.emissionRate = N.emissionRate;
            var F = N.bursts;
            if (F)
              for (o = 0, h = F.length; o < h; o++) {
                var B = F[o];
                V.addBurst(new W(B.time, B.min, B.max));
              }
            V.enbale = N.enable;
          } else V.enbale = !1;
          var U = n.shape;
          if (U) {
            var k;
            switch (U.shapeType) {
              case 0:
                var G;
                k = G = new hi(), G.radius = U.sphereRadius, G.emitFromShell = U.sphereEmitFromShell, G.randomDirection = U.sphereRandomDirection;
                break;
              case 1:
                var H;
                k = H = new oi(), H.radius = U.hemiSphereRadius, H.emitFromShell = U.hemiSphereEmitFromShell, H.randomDirection = U.hemiSphereRandomDirection;
                break;
              case 2:
                var z;
                k = z = new si(), z.angle = U.coneAngle * s, z.radius = U.coneRadius, z.length = U.coneLength, z.emitType = U.coneEmitType, z.randomDirection = U.coneRandomDirection;
                break;
              case 3:
                var X;
                k = X = new ri(), X.x = U.boxX, X.y = U.boxY, X.z = U.boxZ, X.randomDirection = U.boxRandomDirection;
                break;
              case 7:
                var K;
                k = K = new ai(), K.radius = U.circleRadius, K.arc = U.circleArc * s, K.emitFromEdge = U.circleEmitFromEdge, K.randomDirection = U.circleRandomDirection;
                break;
              default:
                var Z;
                k = Z = new ai(), Z.radius = U.circleRadius, Z.arc = U.circleArc * s, Z.emitFromEdge = U.circleEmitFromEdge, Z.randomDirection = U.circleRandomDirection;
            }
            k.enable = U.enable, d.shape = k;
          }
          var $ = n.velocityOverLifetime;
          if ($) {
            var it, nt = $.velocity;
            switch (nt.type) {
              case 0:
                var ht = nt.constant;
                it = tt.createByConstant(new Le(ht[0], ht[1], ht[2]));
                break;
              case 1:
                it = tt.createByGradient(this._initParticleVelocity(nt.gradientX), this._initParticleVelocity(nt.gradientY), this._initParticleVelocity(nt.gradientZ));
                break;
              case 2:
                var lt = nt.constantMin,
                  ut = nt.constantMax;
                it = tt.createByRandomTwoConstant(new Le(lt[0], lt[1], lt[2]), new Le(ut[0], ut[1], ut[2]));
                break;
              case 3:
                it = tt.createByRandomTwoGradient(this._initParticleVelocity(nt.gradientXMin), this._initParticleVelocity(nt.gradientXMax), this._initParticleVelocity(nt.gradientYMin), this._initParticleVelocity(nt.gradientYMax), this._initParticleVelocity(nt.gradientZMin), this._initParticleVelocity(nt.gradientZMax));
            }
            var ct = new ot(it);
            ct.space = $.space, ct.enbale = $.enable, d.velocityOverLifetime = ct;
          }
          var _t = n.colorOverLifetime;
          if (_t) {
            var dt, ft = _t.color;
            switch (ft.type) {
              case 0:
                var pt = ft.constant;
                dt = Q.createByConstant(new Oe(pt[0], pt[1], pt[2], pt[3]));
                break;
              case 1:
                dt = Q.createByGradient(this._initParticleColor(ft.gradient));
                break;
              case 2:
                var mt = ft.constantMin,
                  gt = ft.constantMax;
                dt = Q.createByRandomTwoConstant(new Oe(mt[0], mt[1], mt[2], mt[3]), new Oe(gt[0], gt[1], gt[2], gt[3]));
                break;
              case 3:
                dt = Q.createByRandomTwoGradient(this._initParticleColor(ft.gradientMin), this._initParticleColor(ft.gradientMax));
            }
            var vt = new j(dt);
            vt.enbale = _t.enable, d.colorOverLifetime = vt;
          }
          var yt = n.sizeOverLifetime;
          if (yt) {
            var xt, Tt = yt.size;
            switch (Tt.type) {
              case 0:
                xt = Tt.separateAxes ? J.createByGradientSeparate(this._initParticleSize(Tt.gradientX), this._initParticleSize(Tt.gradientY), this._initParticleSize(Tt.gradientZ)) : J.createByGradient(this._initParticleSize(Tt.gradient));
                break;
              case 1:
                if (Tt.separateAxes) {
                  var St = Tt.constantMinSeparate,
                    wt = Tt.constantMaxSeparate;
                  xt = J.createByRandomTwoConstantSeparate(new Le(St[0], St[1], St[2]), new Le(wt[0], wt[1], wt[2]));
                } else xt = J.createByRandomTwoConstant(Tt.constantMin, Tt.constantMax);
                break;
              case 2:
                xt = Tt.separateAxes ? J.createByRandomTwoGradientSeparate(this._initParticleSize(Tt.gradientXMin), this._initParticleSize(Tt.gradientYMin), this._initParticleSize(Tt.gradientZMin), this._initParticleSize(Tt.gradientXMax), this._initParticleSize(Tt.gradientYMax), this._initParticleSize(Tt.gradientZMax)) : J.createByRandomTwoGradient(this._initParticleSize(Tt.gradientMin), this._initParticleSize(Tt.gradientMax));
            }
            var Et = new rt(xt);
            Et.enbale = yt.enable, d.sizeOverLifetime = Et;
          }
          var bt = n.rotationOverLifetime;
          if (bt) {
            var Ct, Mt = bt.angularVelocity;
            switch (Mt.type) {
              case 0:
                Mt.separateAxes || (Ct = q.createByConstant(Mt.constant * s));
                break;
              case 1:
                Mt.separateAxes || (Ct = q.createByGradient(this._initParticleRotation(Mt.gradient)));
                break;
              case 2:
                if (Mt.separateAxes) {
                  var It = Mt.constantMinSeparate,
                    Dt = Mt.constantMaxSeparate;
                  Ct = q.createByRandomTwoConstantSeparate(new Le(It[0] * s, It[1] * s, It[2] * s), new Le(Dt[0] * s, Dt[1] * s, Dt[2] * s));
                } else Ct = q.createByRandomTwoConstant(Mt.constantMin * s, Mt.constantMax * s);
                break;
              case 3:
                Mt.separateAxes || (Ct = q.createByRandomTwoGradient(this._initParticleRotation(Mt.gradientMin), this._initParticleRotation(Mt.gradientMax)));
            }
            var At = new et(Ct);
            At.enbale = bt.enable, d.rotationOverLifetime = At;
          }
          var Rt = n.textureSheetAnimation;
          if (Rt) {
            var Pt, Lt = Rt.frame;
            switch (Lt.type) {
              case 0:
                Pt = Y.createByConstant(Lt.constant);
                break;
              case 1:
                Pt = Y.createByOverTime(this._initParticleFrame(Lt.overTime));
                break;
              case 2:
                Pt = Y.createByRandomTwoConstant(Lt.constantMin, Lt.constantMax);
                break;
              case 3:
                Pt = Y.createByRandomTwoOverTime(this._initParticleFrame(Lt.overTimeMin), this._initParticleFrame(Lt.overTimeMax));
            }
            var Ot, Nt = Rt.startFrame;
            switch (Nt.type) {
              case 0:
                Ot = at.createByConstant(Nt.constant);
                break;
              case 1:
                Ot = at.createByRandomTwoConstant(Nt.constantMin, Nt.constantMax);
            }
            var Vt = new st(Pt, Ot);
            Vt.enable = Rt.enable;
            var Ft = Rt.tiles;
            Vt.tiles = new Pe(Ft[0], Ft[1]), Vt.type = Rt.type, Vt.randomRow = Rt.randomRow;
            var Bt = Rt.rowIndex;
            void 0 !== Bt && (Vt.rowIndex = Bt), Vt.cycles = Rt.cycles, d.textureSheetAnimation = Vt;
          }
        }, s._activeHierarchy = function () {
          laya.d3.core.Sprite3D.prototype._activeHierarchy.call(this), this.particleSystem.playOnAwake && this.particleSystem.play();
        }, s._inActiveHierarchy = function () {
          laya.d3.core.Sprite3D.prototype._inActiveHierarchy.call(this), this.particleSystem.isAlive && this.particleSystem.simulate(0, !0);
        }, s.cloneTo = function (t) {
          var e = t,
            i = e._geometryFilter;
          this._geometryFilter.cloneTo(i);
          var n = e._render,
            r = this._render;
          n.sharedMaterials = r.sharedMaterials, n.enable = r.enable, n.renderMode = r.renderMode, n.mesh = r.mesh, n.stretchedBillboardCameraSpeedScale = r.stretchedBillboardCameraSpeedScale, n.stretchedBillboardSpeedScale = r.stretchedBillboardSpeedScale, n.stretchedBillboardLengthScale = r.stretchedBillboardLengthScale, n.sortingFudge = r.sortingFudge, laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
        }, s.destroy = function (e) {
          void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy(), this._geometryFilter = null);
        }, a(0, s, "particleSystem", function () {
          return this._geometryFilter;
        }), a(0, s, "particleRender", function () {
          return this._render;
        }), e.__init__ = function () {
          e.SHADERDEFINE_RENDERMODE_BILLBOARD = e.shaderDefines.registerDefine("SPHERHBILLBOARD"), e.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = e.shaderDefines.registerDefine("STRETCHEDBILLBOARD"), e.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = e.shaderDefines.registerDefine("HORIZONTALBILLBOARD"), e.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = e.shaderDefines.registerDefine("VERTICALBILLBOARD"), e.SHADERDEFINE_COLOROVERLIFETIME = e.shaderDefines.registerDefine("COLOROVERLIFETIME"), e.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = e.shaderDefines.registerDefine("RANDOMCOLOROVERLIFETIME"), e.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = e.shaderDefines.registerDefine("VELOCITYOVERLIFETIMECONSTANT"), e.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = e.shaderDefines.registerDefine("VELOCITYOVERLIFETIMECURVE"), e.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = e.shaderDefines.registerDefine("VELOCITYOVERLIFETIMERANDOMCONSTANT"), e.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = e.shaderDefines.registerDefine("VELOCITYOVERLIFETIMERANDOMCURVE"), e.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = e.shaderDefines.registerDefine("TEXTURESHEETANIMATIONCURVE"), e.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = e.shaderDefines.registerDefine("TEXTURESHEETANIMATIONRANDOMCURVE"), e.SHADERDEFINE_ROTATIONOVERLIFETIME = e.shaderDefines.registerDefine("ROTATIONOVERLIFETIME"), e.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = e.shaderDefines.registerDefine("ROTATIONOVERLIFETIMESEPERATE"), e.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = e.shaderDefines.registerDefine("ROTATIONOVERLIFETIMECONSTANT"), e.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = e.shaderDefines.registerDefine("ROTATIONOVERLIFETIMECURVE"), e.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = e.shaderDefines.registerDefine("ROTATIONOVERLIFETIMERANDOMCURVES"), e.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = e.shaderDefines.registerDefine("ROTATIONOVERLIFETIMERANDOMCURVES"), e.SHADERDEFINE_SIZEOVERLIFETIMECURVE = e.shaderDefines.registerDefine("SIZEOVERLIFETIMECURVE"), e.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = e.shaderDefines.registerDefine("SIZEOVERLIFETIMECURVESEPERATE"), e.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = e.shaderDefines.registerDefine("SIZEOVERLIFETIMERANDOMCURVES"), e.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = e.shaderDefines.registerDefine("SIZEOVERLIFETIMERANDOMCURVESSEPERATE"), e.SHADERDEFINE_RENDERMODE_MESH = e.shaderDefines.registerDefine("RENDERMODE_MESH"), e.SHADERDEFINE_SHAPE = e.shaderDefines.registerDefine("SHAPE");
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e._initStartLife = function (t) {
          for (var e = new $(), i = t.startLifetimes, n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            e.add(a.key, a.value);
          }
          return e;
        }, e.SHADERDEFINE_RENDERMODE_BILLBOARD = 0, e.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = 0, e.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = 0, e.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = 0, e.SHADERDEFINE_COLOROVERLIFETIME = 0, e.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = 0, e.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = 0, e.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = 0, e.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = 0, e.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = 0, e.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = 0, e.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = 0, e.SHADERDEFINE_ROTATIONOVERLIFETIME = 0, e.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = 0, e.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = 0, e.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = 0, e.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = 0, e.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = 0, e.SHADERDEFINE_SIZEOVERLIFETIMECURVE = 0, e.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = 0, e.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = 0, e.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = 0, e.SHADERDEFINE_RENDERMODE_MESH = 0, e.SHADERDEFINE_SHAPE = 0, e.WORLDPOSITION = 0, e.WORLDROTATION = 1, e.POSITIONSCALE = 4, e.SIZESCALE = 5, e.SCALINGMODE = 6, e.GRAVITY = 7, e.THREEDSTARTROTATION = 8, e.STRETCHEDBILLBOARDLENGTHSCALE = 9, e.STRETCHEDBILLBOARDSPEEDSCALE = 10, e.SIMULATIONSPACE = 11, e.CURRENTTIME = 12, e.VOLVELOCITYCONST = 13, e.VOLVELOCITYGRADIENTX = 14, e.VOLVELOCITYGRADIENTY = 15, e.VOLVELOCITYGRADIENTZ = 16, e.VOLVELOCITYCONSTMAX = 17, e.VOLVELOCITYGRADIENTXMAX = 18, e.VOLVELOCITYGRADIENTYMAX = 19, e.VOLVELOCITYGRADIENTZMAX = 20, e.VOLSPACETYPE = 21, e.COLOROVERLIFEGRADIENTALPHAS = 22, e.COLOROVERLIFEGRADIENTCOLORS = 23, e.MAXCOLOROVERLIFEGRADIENTALPHAS = 24, e.MAXCOLOROVERLIFEGRADIENTCOLORS = 25, e.SOLSIZEGRADIENT = 26, e.SOLSIZEGRADIENTX = 27, e.SOLSIZEGRADIENTY = 28, e.SOLSizeGradientZ = 29, e.SOLSizeGradientMax = 30, e.SOLSIZEGRADIENTXMAX = 31, e.SOLSIZEGRADIENTYMAX = 32, e.SOLSizeGradientZMAX = 33, e.ROLANGULARVELOCITYCONST = 34, e.ROLANGULARVELOCITYCONSTSEPRARATE = 35, e.ROLANGULARVELOCITYGRADIENT = 36, e.ROLANGULARVELOCITYGRADIENTX = 37, e.ROLANGULARVELOCITYGRADIENTY = 38, e.ROLANGULARVELOCITYGRADIENTZ = 39, e.ROLANGULARVELOCITYGRADIENTW = 40, e.ROLANGULARVELOCITYCONSTMAX = 41, e.ROLANGULARVELOCITYCONSTMAXSEPRARATE = 42, e.ROLANGULARVELOCITYGRADIENTMAX = 43, e.ROLANGULARVELOCITYGRADIENTXMAX = 44, e.ROLANGULARVELOCITYGRADIENTYMAX = 45, e.ROLANGULARVELOCITYGRADIENTZMAX = 46, e.ROLANGULARVELOCITYGRADIENTWMAX = 47, e.TEXTURESHEETANIMATIONCYCLES = 48, e.TEXTURESHEETANIMATIONSUBUVLENGTH = 49, e.TEXTURESHEETANIMATIONGRADIENTUVS = 50, e.TEXTURESHEETANIMATIONGRADIENTMAXUVS = 51, n(e, ["shaderDefines", function () {
          return this.shaderDefines = new Be(_n.shaderDefines);
        }]), e;
      }(_n),
      yn = function (t) {
        function e(t, i) {
          this._subMeshOffset = null, e.__super.call(this, i), this._subMeshOffset = [], this._geometryFilter = new Ci(this), this._render = new un(this), this._geometryFilter.on("meshchanged", this, this._onMeshChanged), this._render.on("materialchanged", this, this._onMaterialChanged), t && (this._geometryFilter.sharedMesh = t);
        }
        r(e, "laya.d3.core.SkinnedMeshSprite3D", t);
        var s = e.prototype;
        return s._changeRenderObjectByMesh = function (t) {
          var e = this._render._renderElements,
            i = e[t];
          i || (i = e[t] = new li()), i._render = this._render;
          var n = this._render.sharedMaterials[t];
          n || (n = Wi.defaultMaterial);
          var r = this._geometryFilter.sharedMesh.getRenderElement(t);
          return i._mainSortID = this._getSortID(r, n), i._sprite3D = this, i.renderObj = r, i._material = n, i;
        }, s._changeRenderObjectByMaterial = function (t, e) {
          var i = this._render._renderElements[t];
          e || (e = Wi.defaultMaterial);
          var n = this._geometryFilter.sharedMesh.getRenderElement(t);
          return i._mainSortID = this._getSortID(n, e), i._sprite3D = this, i.renderObj = n, i._material = e, i;
        }, s._changeRenderObjectsByMesh = function () {
          var t = this._geometryFilter.sharedMesh.getRenderElementsCount();
          this._render._renderElements.length = t;
          for (var e = 0; e < t; e++) this._changeRenderObjectByMesh(e);
        }, s._onMeshChanged = function (t) {
          var e = t.sharedMesh;
          e.loaded ? this._changeRenderObjectsByMesh() : e.once("loaded", this, this._changeRenderObjectsByMesh);
        }, s._onMaterialChanged = function (t, e, i) {
          e < this._render._renderElements.length && this._changeRenderObjectByMaterial(e, i);
        }, s._parseCustomProps = function (t, e, i, n) {
          var r = this.skinnedMeshRender,
            a = i.lightmapIndex;
          null != a && (r.lightmapIndex = a);
          var s = i.lightmapScaleOffset;
          s && (r.lightmapScaleOffset = new Oe(s[0], s[1], s[2], s[3]));
          var o, h;
          if (n.instanceParams)(o = n.instanceParams.loadPath) && (h = y.getRes(e[o]), this.meshFilter.sharedMesh = h, h.loaded ? r.sharedMaterials = h.materials : h.once("loaded", this, this._applyMeshMaterials));
          else {
            (o = i.meshPath) && (h = y.getRes(e[o]), this.meshFilter.sharedMesh = h);
            var l = i.materials;
            if (l) {
              var u = r.sharedMaterials,
                c = l.length;
              u.length = c;
              for (var _ = 0; _ < c; _++) u[_] = y.getRes(e[l[_].path]);
              r.sharedMaterials = u;
            }
            var d = i.rootBone;
            d && r._setRootBone(d);
            var f = i.boundBox;
            if (f) {
              var p = f.min,
                m = f.max,
                g = new xe(new Le(p[0], p[1], p[2]), new Le(m[0], m[1], m[2]));
              r.localBoundBox = g;
            } else r._hasIndependentBound = !1;
            var v = i.boundSphere;
            if (v) {
              var x = v.center,
                T = new Se(new Le(x[0], x[1], x[2]), v.radius);
              r.localBoundSphere = T;
            }
          }
        }, s._changeHierarchyAnimator = function (t) {
          if (t) {
            var e = this.skinnedMeshRender;
            e._setCacheAnimator(t);
            var i = t.avatar;
            i && e._setCacheAvatar(i);
          }
          laya.d3.core.Sprite3D.prototype._changeHierarchyAnimator.call(this, t);
        }, s._clearSelfRenderObjects = function () {
          this._scene.removeFrustumCullingObject(this._render);
        }, s._addSelfRenderObjects = function () {
          this._scene.addFrustumCullingObject(this._render);
        }, s._applyMeshMaterials = function (t) {
          for (var e = this._render.sharedMaterials, i = t.materials, n = 0, r = i.length; n < r; n++) e[n] || (e[n] = i[n]);
          this._render.sharedMaterials = e;
        }, s.cloneTo = function (t) {
          var e = t;
          e._geometryFilter.sharedMesh = this._geometryFilter.sharedMesh;
          var i = this._render,
            n = e._render;
          n.enable = i.enable, n.sharedMaterials = i.sharedMaterials, n.castShadow = i.castShadow;
          var r = i.lightmapScaleOffset;
          r && (n.lightmapScaleOffset = r.clone()), n.receiveShadow = i.receiveShadow, n.sortingFudge = i.sortingFudge, n._rootBone = i._rootBone;
          var a = i.localBoundSphere;
          a && (n.localBoundSphere = a.clone());
          var s = i.localBoundBox;
          s && (n.localBoundBox = s.clone()), n._hasIndependentBound = i._hasIndependentBound, laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
        }, s.destroy = function (e) {
          void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy());
        }, a(0, s, "meshFilter", function () {
          return this._geometryFilter;
        }), a(0, s, "skinnedMeshRender", function () {
          return this._render;
        }), e.__init__ = function () {
          e.SHADERDEFINE_BONE = e.shaderDefines.registerDefine("BONE");
        }, e.load = function (t) {
          return i.loader.create(t, null, null, e);
        }, e.SHADERDEFINE_BONE = 8, e.BONES = 0, n(e, ["shaderDefines", function () {
          return this.shaderDefines = new Be(_n.shaderDefines);
        }]), e;
      }(_n),
      xn = (function (t) {
        function e(t, i, n, r, a) {
          void 0 === t && (t = .1), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === r && (r = .3), void 0 === a && (a = 1e3), this._tempMatrix = new Ce(), this._leftViewMatrix = new Ce(), this._leftProjectionMatrix = new Ce(), this._leftProjectionViewMatrix = new Ce(), this._leftViewport = new Ne(0, 0, 0, 0), this._leftNormalizedViewport = new Ne(0, 0, .5, 1), this._leftAspectRatio = i, this._rightViewMatrix = new Ce(), this._rightProjectionMatrix = new Ce(), this._rightProjectionViewMatrix = new Ce(), this._rightViewport = new Ne(0, 0, 0, 0), this._rightNormalizedViewport = new Ne(.5, 0, .5, 1), this._rightAspectRatio = n, this._pupilDistande = t, this._leftBoundFrustumUpdate = !0, this._leftBoundFrustum = new Te(Ce.DEFAULT), this._rightBoundFrustumUpdate = !0, this._rightBoundFrustum = new Te(Ce.DEFAULT), e.__super.call(this, r, a), this.transform.on("worldmatrixneedchanged", this, this._onWorldMatrixChanged);
        }
        r(e, "laya.d3.core.VRCamera", cn);
        var i = e.prototype;
        i._onWorldMatrixChanged = function () {
          this._leftBoundFrustumUpdate = this._rightBoundFrustumUpdate = !0;
        }, i._calculatePupilOffset = function () {
          var t = this._tempVector3;
          return Le.scale(this.right, this._pupilDistande / 2, t), t.elements;
        }, i._calculateLeftProjectionMatrix = function () {
          if (!this._useUserProjectionMatrix)
            if (this._orthographic) {
              var t = this.orthographicVerticalSize * this.leftAspectRatio * .5,
                e = .5 * this.orthographicVerticalSize;
              Ce.createOrthoOffCenterRH(-t, t, -e, e, this.nearPlane, this.farPlane, this._leftProjectionMatrix);
            } else Ce.createPerspective(3.1416 * this.fieldOfView / 180, this.leftAspectRatio, this.nearPlane, this.farPlane, this._rightProjectionMatrix);
          this._leftBoundFrustumUpdate = !0;
        }, i._calculateRightProjectionMatrix = function () {
          if (!this._useUserProjectionMatrix)
            if (this._orthographic) {
              var t = this.orthographicVerticalSize * this.rightAspectRatio * .5,
                e = .5 * this.orthographicVerticalSize;
              Ce.createOrthoOffCenterRH(-t, t, e, e, this.nearPlane, this.farPlane, this._rightProjectionMatrix);
            } else Ce.createPerspective(3.1416 * this.fieldOfView / 180, this.rightAspectRatio, this.nearPlane, this.farPlane, this._rightProjectionMatrix);
          this._rightBoundFrustumUpdate = !0;
        }, i._calculateProjectionMatrix = function () {
          if (!this._useUserProjectionMatrix)
            if (this._orthographic) {
              var t = this.orthographicVerticalSize * this.leftAspectRatio * .5,
                e = .5 * this.orthographicVerticalSize,
                i = this.orthographicVerticalSize * this.rightAspectRatio * .5,
                n = .5 * this.orthographicVerticalSize;
              Ce.createOrthoOffCenterRH(-t, t, -e, e, this.nearPlane, this.farPlane, this._leftProjectionMatrix), Ce.createOrthoOffCenterRH(-i, i, n, n, this.nearPlane, this.farPlane, this._rightProjectionMatrix);
            } else Ce.createPerspective(3.1416 * this.fieldOfView / 180, this.leftAspectRatio, this.nearPlane, this.farPlane, this._leftProjectionMatrix), Ce.createPerspective(3.1416 * this.fieldOfView / 180, this.rightAspectRatio, this.nearPlane, this.farPlane, this._rightProjectionMatrix);
          this._leftBoundFrustumUpdate = this._rightBoundFrustumUpdate = !0;
        }, i._renderCamera = function (t, e, i) {
          e.camera = this, this._prepareCameraToRender(), i._preRenderUpdateComponents(e);
          var n, r;
          n = e._viewMatrix = this.leftViewMatrix;
          var a = this._renderTarget;
          a ? (a.start(), Ce.multiply(cn._invertYScaleMatrix, this._leftProjectionMatrix, cn._invertYProjectionMatrix), Ce.multiply(cn._invertYScaleMatrix, this.leftProjectionViewMatrix, cn._invertYProjectionViewMatrix), r = e._projectionMatrix = cn._invertYProjectionMatrix, e._projectionViewMatrix = cn._invertYProjectionViewMatrix) : (r = e._projectionMatrix = this._leftProjectionMatrix, e._projectionViewMatrix = this.leftProjectionViewMatrix), this._prepareCameraViewProject(n, r), e._viewport = this.leftViewport, i._preRenderScene(t, e, this.leftBoundFrustum), i._clear(t, e), i._renderScene(t, e);
          var s, o;
          s = e._viewMatrix = this.rightViewMatrix, a ? (a.start(), Ce.multiply(cn._invertYScaleMatrix, this._rightProjectionMatrix, cn._invertYProjectionMatrix), Ce.multiply(cn._invertYScaleMatrix, this.rightProjectionViewMatrix, cn._invertYProjectionViewMatrix), e._projectionMatrix = cn._invertYProjectionMatrix, o = e._projectionViewMatrix = cn._invertYProjectionViewMatrix) : (o = e._projectionMatrix = this._rightProjectionMatrix, e._projectionViewMatrix = this.rightProjectionViewMatrix), this._prepareCameraViewProject(s, o), e._viewport = this.rightViewport, i._preRenderScene(t, e, this.rightBoundFrustum), i._clear(t, e), i._renderScene(t, e), i._postRenderUpdateComponents(e), a && a.end();
        }, a(0, i, "rightBoundFrustum", function () {
          return this._rightBoundFrustumUpdate && (this._rightBoundFrustum.matrix = this.rightProjectionViewMatrix), this._rightBoundFrustum;
        }), a(0, i, "leftNormalizedViewport", function () {
          if (!this._viewportExpressedInClipSpace) {
            var t = this._leftViewport,
              e = this.renderTargetSize,
              i = e.width,
              n = e.height;
            this._leftNormalizedViewport.x = t.x / i, this._leftNormalizedViewport.y = t.y / n, this._leftNormalizedViewport.width = t.width / i, this._leftNormalizedViewport.height = t.height / n;
          }
          return this._leftNormalizedViewport;
        }), a(0, i, "rightViewport", function () {
          if (this._viewportExpressedInClipSpace) {
            var t = this._rightNormalizedViewport,
              e = this.renderTargetSize,
              i = e.width,
              n = e.height;
            this._rightViewport.x = t.x * i, this._rightViewport.y = t.y * n, this._rightViewport.width = t.width * i, this._rightViewport.height = t.height * n;
          }
          return this._rightViewport;
        }), a(0, i, "viewport", null, function (t) {
          if (null != this.renderTarget && (t.x < 0 || t.y < 0 || 0 == t.width || 0 == t.height)) throw new Error("VRCamera: viewport size invalid.", "value");
          this._viewportExpressedInClipSpace = !1, this._leftViewport = new Ne(0, 0, t.width / 2, t.height), this._rightViewport = new Ne(t.width / 2, 0, t.width / 2, t.height), this._calculateProjectionMatrix();
        }), a(0, i, "leftAspectRatio", function () {
          if (0 === this._leftAspectRatio) {
            var t = this.leftViewport;
            return t.width / t.height;
          }
          return this._leftAspectRatio;
        }), a(0, i, "rightAspectRatio", function () {
          if (0 === this._rightAspectRatio) {
            var t = this.rightViewport;
            return t.width / t.height;
          }
          return this._rightAspectRatio;
        }), a(0, i, "aspectRatio", null, function (t) {
          if (t < 0) throw new Error("VRCamera: the aspect ratio has to be a positive real number.");
          this._leftAspectRatio = t, this._rightAspectRatio = t, this._calculateRightProjectionMatrix();
        }), a(0, i, "rightNormalizedViewport", function () {
          if (!this._viewportExpressedInClipSpace) {
            var t = this._rightViewport,
              e = this.renderTargetSize,
              i = e.width,
              n = e.height;
            this._rightNormalizedViewport.x = t.x / i, this._rightNormalizedViewport.y = t.y / n, this._rightNormalizedViewport.width = t.width / i, this._rightNormalizedViewport.height = t.height / n;
          }
          return this._rightNormalizedViewport;
        }), a(0, i, "normalizedViewport", null, function (t) {
          if (t.x < 0 || t.y < 0 || t.x + t.width > 1 || t.x + t.height > 1) throw new Error("VRCamera: viewport size invalid.", "value");
          this._viewportExpressedInClipSpace = !0, this._leftNormalizedViewport = new Ne(0, 0, t.width / 2, t.height), this._rightNormalizedViewport = new Ne(t.width / 2, 0, t.width / 2, t.height), this._calculateProjectionMatrix();
        }), a(0, i, "leftViewport", function () {
          if (this._viewportExpressedInClipSpace) {
            var t = this._leftNormalizedViewport,
              e = this.renderTargetSize,
              i = e.width,
              n = e.height;
            this._leftViewport.x = t.x * i, this._leftViewport.y = t.y * n, this._leftViewport.width = t.width * i, this._leftViewport.height = t.height * n;
          }
          return this._leftViewport;
        }), a(0, i, "needLeftViewport", function () {
          var t = this.leftNormalizedViewport;
          return 0 === t.x && 0 === t.y && 1 === t.width && 1 === t.height;
        }), a(0, i, "needRightViewport", function () {
          var t = this.rightNormalizedViewport;
          return 0 === t.x && 0 === t.y && 1 === t.width && 1 === t.height;
        }), a(0, i, "leftViewMatrix", function () {
          var t = this._calculatePupilOffset(),
            e = this._tempMatrix;
          this.transform.worldMatrix.cloneTo(e);
          var i = e.elements;
          return i[12] -= t[0], i[13] -= t[1], i[14] -= t[2], e.invert(this._leftViewMatrix), this._leftViewMatrix;
        }), a(0, i, "rightViewMatrix", function () {
          var t = this._calculatePupilOffset(),
            e = this._tempMatrix;
          this.transform.worldMatrix.cloneTo(e);
          var i = e.elements;
          return i[12] += t[0], i[13] += t[1], i[14] += t[2], e.invert(this._rightViewMatrix), this._rightViewMatrix;
        }), a(0, i, "leftProjectionMatrix", function () {
          return this._leftProjectionMatrix;
        }), a(0, i, "leftProjectionViewMatrix", function () {
          return Ce.multiply(this.leftProjectionMatrix, this.leftViewMatrix, this._leftProjectionViewMatrix), this._leftProjectionViewMatrix;
        }), a(0, i, "rightProjectionMatrix", function () {
          return this._rightProjectionMatrix;
        }), a(0, i, "rightProjectionViewMatrix", function () {
          return Ce.multiply(this.rightProjectionMatrix, this.rightViewMatrix, this._rightProjectionViewMatrix), this._rightProjectionViewMatrix;
        }), a(0, i, "leftBoundFrustum", function () {
          return this._leftBoundFrustumUpdate && (this._leftBoundFrustum.matrix = this.leftProjectionViewMatrix), this._leftBoundFrustum;
        });
      }(), function (t) {
        function e() {
          e.__super.call(this), this._geometryFilter = new Ai(this), this._render = new Ri(this), this._changeRenderObjectsByMaterial(this._render, 0, Ki.defaultMaterial), this._render.on("materialchanged", this, this._changeRenderObjectsByMaterial), this._geometryFilter.on("trailfilterchange", this, this._changeRenderObjectsByRenderElement);
        }
        r(e, "laya.d3.core.trail.TrailSprite3D", t);
        var i = e.prototype;
        return i._changeRenderObjectsByMaterial = function (t, e, i) {
          var n = this._geometryFilter.getRenderElementsCount();
          this._render._renderElements.length = n;
          for (var r = 0; r < n; r++) this._changeRenderObjectByMaterial(r, i);
        }, i._changeRenderObjectByMaterial = function (t, e) {
          var i = this._render._renderElements;
          e || (e = Ki.defaultMaterial);
          var n = i[t];
          n || (n = i[t] = new ut()), n._sprite3D = this, n.renderObj = this._geometryFilter.getRenderElement(t), n._render = this._render, n._material = e;
        }, i._changeRenderObjectsByRenderElement = function (t, e) {
          var i = this._render._renderElements,
            n = i[t];
          n || (n = i[t] = new ut()), n._sprite3D = this, n.renderObj = e, n._render = this._render, n._material = this._render.sharedMaterial;
        }, i._clearSelfRenderObjects = function () {
          this.scene.removeFrustumCullingObject(this._render);
        }, i._addSelfRenderObjects = function () {
          this.scene.addFrustumCullingObject(this._render);
        }, i._update = function (e) {
          t.prototype._update.call(this, e), this._geometryFilter._update(e);
        }, i._parseCustomProps = function (t, e, i, n) {
          var r = this._render,
            a = this._geometryFilter,
            s = 0,
            o = 0,
            h = i.materials;
          if (h) {
            var l = r.sharedMaterials,
              u = h.length;
            for (l.length = u, s = 0; s < u; s++) l[s] = y.getRes(e[h[s].path]);
            r.sharedMaterials = l;
          }
          var c = n.props;
          a.time = c.time, a.minVertexDistance = c.minVertexDistance, a.widthMultiplier = c.widthMultiplier, a.textureMode = c.textureMode;
          var _ = [],
            d = i.widthCurve;
          for (s = 0, o = d.length; s < o; s++) {
            var f = new vt();
            f.time = d[s].time, f.inTangent = d[s].inTangent, f.outTangent = d[s].outTangent, f.value = d[s].value, _.push(f);
          }
          a.widthCurve = _;
          var p = i.colorGradient,
            m = new pt();
          m.mode = p.mode;
          var g, v, x = [],
            T = p.colorKeys;
          for (s = 0, o = T.length; s < o; s++) v = T[s], g = new gt(new ft(v.value[0], v.value[1], v.value[2], 1), v.time), x.push(g);
          var S, w, E = [],
            b = p.alphaKeys;
          for (s = 0, o = b.length; s < o; s++) w = b[s], S = new mt(w.value, w.time), E.push(S);
          m.setKeys(x, E), a.colorGradient = m;
        }, i.reset = function () {
          this.trailFilter.reset();
        }, i.cloneTo = function (t) {
          laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
          var e = 0,
            i = 0,
            n = t,
            r = n.trailFilter;
          r.time = this.trailFilter.time, r.minVertexDistance = this.trailFilter.minVertexDistance, r.widthMultiplier = this.trailFilter.widthMultiplier;
          var a = this.trailFilter.widthCurve,
            s = [];
          for (e = 0, i = a.length; e < i; e++) {
            var o = new vt();
            a[e].cloneTo(o), s.push(o);
          }
          r.widthCurve = s;
          var h = new pt();
          this.trailFilter.colorGradient.cloneTo(h), r.colorGradient = h, r.textureMode = this.trailFilter.textureMode;
          n.trailRender.sharedMaterial = this.trailRender.sharedMaterial;
        }, i.destroy = function (e) {
          void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy(), this._geometryFilter = null);
        }, a(0, i, "trailFilter", function () {
          return this._geometryFilter;
        }), a(0, i, "trailRender", function () {
          return this._render;
        }), e.__init__ = function () {
          e.SHADERDEFINE_GRADIENTMODE_BLEND = e.shaderDefines.registerDefine("GRADIENTMODE_BLEND");
        }, e.CURTIME = 3, e.LIFETIME = 4, e.WIDTHCURVE = 5, e.WIDTHCURVEKEYLENGTH = 6, e.GRADIENTCOLORKEY = 7, e.GRADIENTALPHAKEY = 8, e.SHADERDEFINE_GRADIENTMODE_BLEND = 0, n(e, ["shaderDefines", function () {
          return this.shaderDefines = new Be(_n.shaderDefines);
        }]), e;
      }(_n)),
      Tn = function (t) {
        function e(t, i, n, r, a, s, o, h) {
          e.__super.call(this, h), this._geometryFilter = new Li(this, t, i, n, r, a, s, o), this._render = new Oi(this);
        }
        r(e, "laya.d3.terrain.TerrainChunk", t);
        var n = e.prototype;
        return n.buildRenderElementAndMaterial = function (t, e, i, n, r, a, s, o, h, l, u, c, _, d, f, p, m, g) {
          void 0 === u && (u = 1), void 0 === c && (c = 1), void 0 === _ && (_ = 1), void 0 === d && (d = 1), void 0 === f && (f = 1), void 0 === p && (p = 1), void 0 === m && (m = 1), void 0 === g && (g = 1);
          var v = new ji();
          h && (v.diffuseColor = h), o && (v.ambientColor = o), l && (v.specularColor = l), v.splatAlphaTexture = y.getRes(i), v.normalTexture = e ? y.getRes(e) : null, v.diffuseTexture1 = n ? y.getRes(n) : null, v.diffuseTexture2 = r ? y.getRes(r) : null, v.diffuseTexture3 = a ? y.getRes(a) : null, v.diffuseTexture4 = s ? y.getRes(s) : null, v.setDiffuseScale1(u, c), v.setDiffuseScale2(_, d), v.setDiffuseScale3(f, p), v.setDiffuseScale4(m, g), v.setDetailNum(t), 0 != this._render._renderElements.length && (v.renderMode = 2);
          var x = new ut();
          x._mainSortID = 0, x._sprite3D = this, x.renderObj = this._geometryFilter, x._material = v, this._render._materials.push(v), this._render._renderElements.push(x);
        }, n._clearSelfRenderObjects = function () {
          this.scene.removeFrustumCullingObject(this._render);
        }, n._addSelfRenderObjects = function () {
          this.scene.addFrustumCullingObject(this._render);
        }, n._applyMeshMaterials = function (t) {
          for (var e = this._render.sharedMaterials, i = t.materials, n = 0, r = i.length; n < r; n++) e[n] || (e[n] = i[n]);
          this._render.sharedMaterials = e;
        }, n.cloneTo = function (t) {
          console.log("Terrain Chunk can't clone");
        }, n.destroy = function (e) {
          void 0 === e && (e = !0), this.destroyed || (t.prototype.destroy.call(this, e), this._geometryFilter._destroy());
        }, a(0, n, "terrainFilter", function () {
          return this._geometryFilter;
        }), a(0, n, "terrainRender", function () {
          return this._render;
        }), e.load = function (t) {
          return i.loader.create(t, null, null, e, null, 1, !1);
        }, e;
      }(_n);
    ! function (t) {
      function e(t, i, n) {
        this._minX = NaN, this._minZ = NaN, this._cellSize = null, this._heightMap = null, e.__super.call(this, t, n), this._heightMap = i, this._cellSize = new Pe();
      }
      r(e, "laya.d3.core.MeshTerrainSprite3D", gn);
      var i = e.prototype;
      i._disableRotation = function () {
        var t = this.transform.rotation;
        t.elements[0] = 0, t.elements[1] = 0, t.elements[2] = 0, t.elements[3] = 1, this.transform.rotation = t;
      }, i._getScaleX = function () {
        var t = this.transform.worldMatrix.elements,
          e = t[0],
          i = t[1],
          n = t[2];
        return Math.sqrt(e * e + i * i + n * n);
      }, i._getScaleZ = function () {
        var t = this.transform.worldMatrix.elements,
          e = t[8],
          i = t[9],
          n = t[10];
        return Math.sqrt(e * e + i * i + n * n);
      }, i._initCreateFromMesh = function (t, e) {
        this._heightMap = H.creatFromMesh(this.meshFilter.sharedMesh, t, e, this._cellSize);
        var i = this.meshFilter.sharedMesh.boundingBox,
          n = i.min;
        i.max;
        this._minX = n.x, this._minZ = n.z;
      }, i._initCreateFromMeshHeightMap = function (t, e, i) {
        var n = this,
          r = this.meshFilter.sharedMesh.boundingBox;
        t.loaded ? (this._heightMap = H.createFromImage(t, e, i), this._computeCellSize(r)) : t.once("loaded", null, function () {
          n._heightMap = H.createFromImage(t, e, i), n._computeCellSize(r);
        });
        var a = r.min;
        r.max;
        this._minX = a.x, this._minZ = a.z;
      }, i._computeCellSize = function (t) {
        var e = t.min,
          i = t.max,
          n = e.x,
          r = e.z,
          a = i.x - n,
          s = i.z - r;
        this._cellSize.elements[0] = a / (this._heightMap.width - 1), this._cellSize.elements[1] = s / (this._heightMap.height - 1);
      }, i._update = function (t) {
        this._disableRotation(), laya.d3.core.RenderableSprite3D.prototype._update.call(this, t);
      }, i.getHeight = function (t, i) {
        e._tempVector3.elements[0] = t, e._tempVector3.elements[1] = 0, e._tempVector3.elements[2] = i, this._disableRotation();
        var n = this.transform.worldMatrix;
        n.invert(e._tempMatrix4x4), Le.transformCoordinate(e._tempVector3, e._tempMatrix4x4, e._tempVector3), t = e._tempVector3.elements[0], i = e._tempVector3.elements[2];
        var r = (t - this._minX) / this._cellSize.x,
          a = (i - this._minZ) / this._cellSize.y,
          s = Math.floor(a),
          o = Math.floor(r),
          h = r - o,
          l = a - s,
          u = NaN,
          c = NaN,
          _ = n.elements,
          d = _[4],
          f = _[5],
          p = _[6],
          m = Math.sqrt(d * d + f * f + p * p),
          g = _[13],
          v = this._heightMap.getHeight(s, o + 1),
          y = this._heightMap.getHeight(s + 1, o);
        if (isNaN(v) || isNaN(y)) return NaN;
        if (h + l <= 1) {
          var x = this._heightMap.getHeight(s, o);
          return isNaN(x) ? NaN : (u = v - x, c = y - x, (x + h * u + l * c) * m + g);
        }
        var T = this._heightMap.getHeight(s + 1, o + 1);
        return isNaN(T) ? NaN : (u = y - T, c = v - T, (T + (1 - h) * u + (1 - l) * c) * m + g);
      }, a(0, i, "minX", function () {
        var t = this.transform.worldMatrix.elements;
        return this._minX * this._getScaleX() + t[12];
      }), a(0, i, "width", function () {
        return (this._heightMap.width - 1) * this._cellSize.x * this._getScaleX();
      }), a(0, i, "minZ", function () {
        var t = this.transform.worldMatrix.elements;
        return this._minZ * this._getScaleZ() + t[14];
      }), a(0, i, "depth", function () {
        return (this._heightMap.height - 1) * this._cellSize.y * this._getScaleZ();
      }), e.createFromMesh = function (t, i, n, r) {
        var a = new e(t, null, r);
        return t.loaded ? a._initCreateFromMesh(i, n) : t.once("loaded", a, a._initCreateFromMesh, [i, n]), a;
      }, e.createFromMeshAndHeightMap = function (t, i, n, r, a) {
        var s = new e(t, null, a);
        return t.loaded ? s._initCreateFromMeshHeightMap(i, n, r) : t.once("loaded", s, s._initCreateFromMeshHeightMap, [i, n, r]), s;
      }, n(e, ["_tempVector3", function () {
        return this._tempVector3 = new Le();
      }, "_tempMatrix4x4", function () {
        return this._tempMatrix4x4 = new Ce();
      }]);
    }();
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function (t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  });
var Zlib = window.Zlib = function () {
  var t = {};
  t.Huffman = {}, t.Huffman.buildHuffmanTable = function (t) {
    var e, i, n, r, a, s, o, h, l, u, c, _ = t.length,
      d = 0,
      f = Number.POSITIVE_INFINITY;
    for (h = 0, l = _; l > h; ++h) t[h] > d && (d = t[h]), t[h] < f && (f = t[h]);
    for (e = 1 << d, i = new Uint32Array(e), n = 1, r = 0, a = 2; d >= n;) {
      for (h = 0; _ > h; ++h)
        if (t[h] === n) {
          for (s = 0, o = r, u = 0; n > u; ++u) s = s << 1 | 1 & o, o >>= 1;
          for (c = n << 16 | h, u = s; e > u; u += a) i[u] = c;
          ++r;
        }
        ++ n, r <<= 1, a <<= 1;
    }
    return [i, d, f];
  };
  var e = t.Huffman.buildHuffmanTable;
  return t.RawInflate = function (e, i) {
    switch (this.buffer, this.blocks = [], this.bufferSize = 32768, this.totalpos = 0, this.ip = 0, this.bitsbuf = 0, this.bitsbuflen = 0, this.input = new Uint8Array(e), this.output, this.op, this.bfinal = !1, this.bufferType = t.RawInflate.BufferType.ADAPTIVE, this.resize = !1, !i && (i = {}) || (i.index && (this.ip = i.index), i.bufferSize && (this.bufferSize = i.bufferSize), i.bufferType && (this.bufferType = i.bufferType), i.resize && (this.resize = i.resize)), this.bufferType) {
      case t.RawInflate.BufferType.BLOCK:
        this.op = t.RawInflate.MaxBackwardLength, this.output = new Uint8Array(t.RawInflate.MaxBackwardLength + this.bufferSize + t.RawInflate.MaxCopyLength);
        break;
      case t.RawInflate.BufferType.ADAPTIVE:
        this.op = 0, this.output = new Uint8Array(this.bufferSize), this.expandBuffer = this.expandBufferAdaptive, this.concatBuffer = this.concatBufferDynamic, this.decodeHuffman = this.decodeHuffmanAdaptive;
        break;
      default:
        throw new Error("invalid inflate mode");
    }
  }, t.RawInflate.BufferType = {
    BLOCK: 0,
    ADAPTIVE: 1
  }, t.RawInflate.prototype.decompress = function () {
    for (; !this.bfinal;) this.parseBlock();
    return this.concatBuffer();
  }, t.RawInflate.MaxBackwardLength = 32768, t.RawInflate.MaxCopyLength = 258, t.RawInflate.Order = function (t) {
    return new Uint16Array(t);
  }([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), t.RawInflate.LengthCodeTable = function (t) {
    return new Uint16Array(t);
  }([3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258]), t.RawInflate.LengthExtraTable = function (t) {
    return new Uint8Array(t);
  }([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0]), t.RawInflate.DistCodeTable = function (t) {
    return new Uint16Array(t);
  }([1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577]), t.RawInflate.DistExtraTable = function (t) {
    return new Uint8Array(t);
  }([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]), t.RawInflate.FixedLiteralLengthTable = function () {
    var t, i, n = new Uint8Array(288);
    for (t = 0, i = n.length; i > t; ++t) n[t] = 143 >= t ? 8 : 255 >= t ? 9 : 279 >= t ? 7 : 8;
    return e(n);
  }(), t.RawInflate.FixedDistanceTable = function () {
    var t, i, n = new Uint8Array(30);
    for (t = 0, i = n.length; i > t; ++t) n[t] = 5;
    return e(n);
  }(), t.RawInflate.prototype.parseBlock = function () {
    var t = this.readBits(3);
    switch (1 & t && (this.bfinal = !0), t >>>= 1) {
      case 0:
        this.parseUncompressedBlock();
        break;
      case 1:
        this.parseFixedHuffmanBlock();
        break;
      case 2:
        this.parseDynamicHuffmanBlock();
        break;
      default:
        throw new Error("unknown BTYPE: " + t);
    }
  }, t.RawInflate.prototype.readBits = function (t) {
    for (var e, i = this.bitsbuf, n = this.bitsbuflen, r = this.input, a = this.ip, s = r.length; t > n;) {
      if (a >= s) throw new Error("input buffer is broken");
      i |= r[a++] << n, n += 8;
    }
    return e = i & (1 << t) - 1, i >>>= t, n -= t, this.bitsbuf = i, this.bitsbuflen = n, this.ip = a, e;
  }, t.RawInflate.prototype.readCodeByTable = function (t) {
    for (var e, i, n = this.bitsbuf, r = this.bitsbuflen, a = this.input, s = this.ip, o = a.length, h = t[0], l = t[1]; l > r && !(s >= o);) n |= a[s++] << r, r += 8;
    if (e = h[n & (1 << l) - 1], (i = e >>> 16) > r) throw new Error("invalid code length: " + i);
    return this.bitsbuf = n >> i, this.bitsbuflen = r - i, this.ip = s, 65535 & e;
  }, t.RawInflate.prototype.parseUncompressedBlock = function () {
    var e, i, n, r = this.input,
      a = this.ip,
      s = this.output,
      o = this.op,
      h = r.length,
      l = s.length;
    if (this.bitsbuf = 0, this.bitsbuflen = 0, a + 1 >= h) throw new Error("invalid uncompressed block header: LEN");
    if (e = r[a++] | r[a++] << 8, a + 1 >= h) throw new Error("invalid uncompressed block header: NLEN");
    if (i = r[a++] | r[a++] << 8, e === ~i) throw new Error("invalid uncompressed block header: length verify");
    if (a + e > r.length) throw new Error("input buffer is broken");
    switch (this.bufferType) {
      case t.RawInflate.BufferType.BLOCK:
        for (; o + e > s.length;) {
          if (n = l - o, e -= n, 0)
            for (; n--;) s[o++] = r[a++];
          else s.set(r.subarray(a, a + n), o), o += n, a += n;
          this.op = o, s = this.expandBuffer(), o = this.op;
        }
        break;
      case t.RawInflate.BufferType.ADAPTIVE:
        for (; o + e > s.length;) s = this.expandBuffer({
          fixRatio: 2
        });
        break;
      default:
        throw new Error("invalid inflate mode");
    }
    s.set(r.subarray(a, a + e), o), o += e, a += e, this.ip = a, this.op = o, this.output = s;
  }, t.RawInflate.prototype.parseFixedHuffmanBlock = function () {
    this.decodeHuffman(t.RawInflate.FixedLiteralLengthTable, t.RawInflate.FixedDistanceTable);
  }, t.RawInflate.prototype.parseDynamicHuffmanBlock = function () {
    var i, n, r, a, s, o, h, l, u, c = this.readBits(5) + 257,
      _ = this.readBits(5) + 1,
      d = this.readBits(4) + 4,
      f = new Uint8Array(t.RawInflate.Order.length);
    for (l = 0; d > l; ++l) f[t.RawInflate.Order[l]] = this.readBits(3);
    for (i = e(f), a = new Uint8Array(c + _), l = 0, u = c + _; u > l;) switch (s = this.readCodeByTable(i)) {
      case 16:
        for (h = 3 + this.readBits(2); h--;) a[l++] = o;
        break;
      case 17:
        for (h = 3 + this.readBits(3); h--;) a[l++] = 0;
        o = 0;
        break;
      case 18:
        for (h = 11 + this.readBits(7); h--;) a[l++] = 0;
        o = 0;
        break;
      default:
        a[l++] = s, o = s;
    }
    n = e(a.subarray(0, c)), r = e(a.subarray(c)), this.decodeHuffman(n, r);
  }, t.RawInflate.prototype.decodeHuffman = function (e, i) {
    var n = this.output,
      r = this.op;
    this.currentLitlenTable = e;
    for (var a, s, o, h, l = n.length - t.RawInflate.MaxCopyLength; 256 !== (a = this.readCodeByTable(e));)
      if (256 > a) r >= l && (this.op = r, n = this.expandBuffer(), r = this.op), n[r++] = a;
      else
        for (s = a - 257, h = t.RawInflate.LengthCodeTable[s], t.RawInflate.LengthExtraTable[s] > 0 && (h += this.readBits(t.RawInflate.LengthExtraTable[s])), a = this.readCodeByTable(i), o = t.RawInflate.DistCodeTable[a], t.RawInflate.DistExtraTable[a] > 0 && (o += this.readBits(t.RawInflate.DistExtraTable[a])), r >= l && (this.op = r, n = this.expandBuffer(), r = this.op); h--;) n[r] = n[r++ - o];
    for (; this.bitsbuflen >= 8;) this.bitsbuflen -= 8, this.ip--;
    this.op = r;
  }, t.RawInflate.prototype.decodeHuffmanAdaptive = function (e, i) {
    var n = this.output,
      r = this.op;
    this.currentLitlenTable = e;
    for (var a, s, o, h, l = n.length; 256 !== (a = this.readCodeByTable(e));)
      if (256 > a) r >= l && (n = this.expandBuffer(), l = n.length), n[r++] = a;
      else
        for (s = a - 257, h = t.RawInflate.LengthCodeTable[s], t.RawInflate.LengthExtraTable[s] > 0 && (h += this.readBits(t.RawInflate.LengthExtraTable[s])), a = this.readCodeByTable(i), o = t.RawInflate.DistCodeTable[a], t.RawInflate.DistExtraTable[a] > 0 && (o += this.readBits(t.RawInflate.DistExtraTable[a])), r + h > l && (n = this.expandBuffer(), l = n.length); h--;) n[r] = n[r++ - o];
    for (; this.bitsbuflen >= 8;) this.bitsbuflen -= 8, this.ip--;
    this.op = r;
  }, t.RawInflate.prototype.expandBuffer = function (e) {
    var i, n = new Uint8Array(this.op - t.RawInflate.MaxBackwardLength),
      r = this.op - t.RawInflate.MaxBackwardLength,
      a = this.output;
    if (n.set(a.subarray(t.RawInflate.MaxBackwardLength, n.length)), this.blocks.push(n), this.totalpos += n.length, 0)
      for (i = 0; i < t.RawInflate.MaxBackwardLength; ++i) a[i] = a[r + i];
    else a.set(a.subarray(r, r + t.RawInflate.MaxBackwardLength));
    return this.op = t.RawInflate.MaxBackwardLength, a;
  }, t.RawInflate.prototype.expandBufferAdaptive = function (t) {
    var e, i, n, r, a = this.input.length / this.ip + 1 | 0,
      s = this.input,
      o = this.output;
    return t && ("number" == typeof t.fixRatio && (a = t.fixRatio), "number" == typeof t.addRatio && (a += t.addRatio)), 2 > a ? (i = (s.length - this.ip) / this.currentLitlenTable[2], r = i / 2 * 258 | 0, n = r < o.length ? o.length + r : o.length << 1) : n = o.length * a, (e = new Uint8Array(n)).set(o), this.output = e, this.output;
  }, t.RawInflate.prototype.concatBuffer = function () {
    var e, i, n, r, a, s = 0,
      o = this.totalpos + (this.op - t.RawInflate.MaxBackwardLength),
      h = this.output,
      l = this.blocks,
      u = new Uint8Array(o);
    if (0 === l.length) return this.output.subarray(t.RawInflate.MaxBackwardLength, this.op);
    for (i = 0, n = l.length; n > i; ++i)
      for (e = l[i], r = 0, a = e.length; a > r; ++r) u[s++] = e[r];
    for (i = t.RawInflate.MaxBackwardLength, n = this.op; n > i; ++i) u[s++] = h[i];
    return this.blocks = [], this.buffer = u, this.buffer;
  }, t.RawInflate.prototype.concatBufferDynamic = function () {
    var t, e = this.op;
    return this.resize ? (t = new Uint8Array(e)).set(this.output.subarray(0, e)) : t = this.output.subarray(0, e), this.buffer = t, this.buffer;
  }, t;
}();
"function" == typeof define && define.amd && define("Zlib", ["require", "exports"], function (t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
  }),
  function (t, e, i) {
    i.un, i.uns;
    var n = i.static,
      r = i.class,
      a = i.getset,
      s = i.__newvec,
      o = laya.utils.Browser,
      h = laya.utils.Byte,
      l = laya.filters.ColorFilter,
      u = laya.events.Event,
      c = laya.events.EventDispatcher,
      _ = (laya.display.Graphics, laya.html.dom.HTMLDivElement),
      d = laya.utils.Handler,
      f = laya.utils.HitArea,
      p = laya.display.Input,
      m = (laya.net.Loader, laya.utils.Log),
      g = (laya.display.Node, laya.maths.Point),
      v = laya.maths.Rectangle,
      y = laya.renders.Render,
      x = laya.media.SoundManager,
      T = laya.display.Sprite,
      S = (laya.display.Stage, laya.display.Text),
      w = laya.resource.Texture,
      E = laya.utils.Utils,
      b = laya.utils.WeakObject;
    i.interface("fairygui.IUISource"), i.interface("fairygui.gears.IColorGear"), i.interface("fairygui.gears.IAnimationGear");
    var C = function () {
        function t() {
          this.fromPage = null, this.toPage = null;
        }
        r(t, "fairygui.action.ControllerAction");
        var e = t.prototype;
        return e.run = function (t, e, i) {
          null != this.fromPage && 0 != this.fromPage.length && -1 == this.fromPage.indexOf(e) || null != this.toPage && 0 != this.toPage.length && -1 == this.toPage.indexOf(i) ? this.leave(t) : this.enter(t);
        }, e.enter = function (t) {}, e.leave = function (t) {}, e.setup = function (t) {
          var e = 0,
            i = 0;
          for (e = t.getInt16(), this.fromPage = [], i = 0; i < e; i++) this.fromPage[i] = t.readS();
          for (e = t.getInt16(), this.toPage = [], i = 0; i < e; i++) this.toPage[i] = t.readS();
        }, t.createAction = function (t) {
          switch (t) {
            case 0:
              return new ht();
            case 1:
              return new ot();
          }
          return null;
        }, t;
      }(),
      M = function () {
        function t() {
          this._asset = null, this._asset = i.loader;
        }
        r(t, "fairygui.AssetProxy");
        var e = t.prototype;
        return e.getRes = function (t) {
          return -1 == t.indexOf("wxlocal") ? this._asset.getRes(t + Z.versions) : this._asset.getRes(t);
        }, e.load = function (t, e, i, n, r, a) {
          void 0 === r && (r = 1), void 0 === a && (a = !0), this._asset.load(t, e, i, n, r, a);
        }, e.setAsset = function (t) {
          this._asset = t;
        }, a(1, t, "inst", function () {
          return null == fairygui.AssetProxy._inst && (t._inst = new t()), fairygui.AssetProxy._inst;
        }), t._inst = null, t;
      }(),
      I = function () {
        function t() {
          this.callback = null, this._itemList = null, this._objectPool = null, this._index = 0, this._itemList = [], this._objectPool = [];
        }
        var e;
        r(t, "fairygui.AsyncOperation");
        var n = t.prototype;
        return n.createObject = function (t, e) {
          var i = J.getByName(t);
          if (!i) throw new Error("package not found: " + t);
          var n = i.getItemByName(e);
          if (!n) throw new Error("resource not found: " + e);
          this.internalCreateObject(n);
        }, n.createObjectFromURL = function (t) {
          var e = J.getItemByURL(t);
          if (!e) throw new Error("resource not found: " + t);
          this.internalCreateObject(e);
        }, n.cancel = function () {
          if (i.timer.clear(this, this.run), this._itemList.length = 0, this._objectPool.length > 0) {
            for (var t = this._objectPool.length, e = 0; e < t; e++) this._objectPool[e].dispose();
            this._objectPool.length = 0;
          }
        }, n.internalCreateObject = function (t) {
          this._itemList.length = 0, this._objectPool.length = 0;
          var n = new e(t, 9);
          n.childCount = this.collectComponentChildren(t), this._itemList.push(n), this._index = 0, i.timer.frameLoop(1, this, this.run);
        }, n.collectComponentChildren = function (t) {
          var i = t.rawData;
          i.seek(0, 2);
          var n, r, a, s = 0,
            o = 0,
            h = 0,
            l = i.getInt16();
          for (s = 0; s < l; s++) {
            o = i.getInt16(), h = i.pos, i.seek(h, 0);
            var u = i.readByte(),
              c = i.readS(),
              _ = i.readS();
            i.pos = h, null != c ? (r = null != (a = null != _ ? J.getById(_) : t.owner) ? a.getItemById(c) : null, n = new e(r, u), null != r && 3 == r.type && (n.childCount = this.collectComponentChildren(r))) : (n = new e(null, u), 10 == u && (n.listItemCount = this.collectListChildren(i))), this._itemList.push(n), i.pos = h + o;
          }
          return l;
        }, n.collectListChildren = function (t) {
          t.seek(t.pos, 8);
          var i, n, r, a = 0,
            s = 0,
            o = 0,
            h = t.readS(),
            l = t.getInt16();
          for (s = 0; s < l; s++) o = t.getInt16(), o += t.pos, null == (i = t.readS()) && (i = h), i && null != (n = J.getItemByURL(i)) && (r = new e(n, n.objectType), 3 == n.type && (r.childCount = this.collectComponentChildren(n)), this._itemList.push(r), a++), t.pos = o;
          return a;
        }, n.run = function () {
          for (var t, e, n = 0, r = 0, a = o.now(), s = Z.frameTimeForAsyncUIConstruction, h = this._itemList.length; this._index < h;) {
            if (null != (e = this._itemList[this._index]).packageItem)(t = $.newObject(e.packageItem)).packageItem = e.packageItem, this._objectPool.push(t), J._constructing++, 3 == e.packageItem.type ? (n = this._objectPool.length - e.childCount - 1, t.constructFromResource2(this._objectPool, n), this._objectPool.splice(n, e.childCount)) : t.constructFromResource(), J._constructing--;
            else if (t = $.newObject2(e.type), this._objectPool.push(t), 10 == e.type && e.listItemCount > 0) {
              for (n = this._objectPool.length - e.listItemCount - 1, r = 0; r < e.listItemCount; r++) t.itemPool.returnObject(this._objectPool[r + n]);
              this._objectPool.splice(n, e.listItemCount);
            }
            if (this._index++, this._index % 5 == 0 && o.now() - a >= s) return;
          }
          i.timer.clear(this, this.run);
          var l = this._objectPool[0];
          this._itemList.length = 0, this._objectPool.length = 0, null != this.callback && this.callback.runWith(l);
        }, t.__init$ = function () {
          e = function () {
            function t(t, e) {
              this.packageItem = null, this.type = 0, this.childCount = 0, this.listItemCount = 0, this.packageItem = t, this.type = e;
            }
            return r(t, ""), t;
          }();
        }, t;
      }(),
      D = (function () {
        function t() {}
        r(t, "fairygui.AutoSizeType"), t.None = 0, t.Both = 1, t.Height = 2, t.Shrink = 3;
      }(), function () {
        function t() {}
        r(t, "fairygui.ButtonMode"), t.Common = 0, t.Check = 1, t.Radio = 2;
      }(), function () {
        function t() {}
        r(t, "fairygui.ChildrenRenderOrder"), t.Ascent = 0, t.Descent = 1, t.Arch = 2;
      }(), function () {
        function t() {
          this.id = null, this.size = 0, this.ttf = !1, this.glyphs = null, this.resizable = !1, this.glyphs = {};
        }
        return r(t, "fairygui.display.BitmapFont", null, "BitmapFont$1"), t;
      }()),
      A = function () {
        function t() {
          this.offsetX = 0, this.offsetY = 0, this.width = 0, this.height = 0, this.advance = 0, this.lineHeight = 0, this.channel = 0, this.texture = null;
        }
        return r(t, "fairygui.display.BMGlyph"), t;
      }(),
      R = function () {
        function t() {
          this.rect = null, this.addDelay = 0, this.texture = null, this.rect = new v();
        }
        return r(t, "fairygui.display.Frame"), t;
      }(),
      P = (function () {
        function t() {
          this._agent = null, this._sourceData = null, this._agent = new St(), this._agent.draggable = !0, this._agent.touchable = !1, this._agent.setSize(100, 100), this._agent.setPivot(.5, .5, !0), this._agent.align = "center", this._agent.verticalAlign = "middle", this._agent.sortingOrder = 1e6, this._agent.on("fui_drag_end", this, this.__dragEnd);
        }
        r(t, "fairygui.DragDropManager");
        var e = t.prototype;
        e.startDrag = function (t, e, n, r) {
          if (void 0 === r && (r = -1), null == this._agent.parent) {
            this._sourceData = n, this._agent.url = e, Rt.inst.addChild(this._agent);
            var a = Rt.inst.globalToLocal(i.stage.mouseX, i.stage.mouseY);
            this._agent.setXY(a.x, a.y), this._agent.startDrag(r);
          }
        }, e.cancel = function () {
          null != this._agent.parent && (this._agent.stopDrag(), Rt.inst.removeChild(this._agent), this._sourceData = null);
        }, e.__dragEnd = function (t) {
          if (null != this._agent.parent) {
            Rt.inst.removeChild(this._agent);
            var e = this._sourceData;
            this._sourceData = null;
            for (var i = L.cast(t.target); null != i;) {
              if (i.displayObject.hasListener("fui_drop")) return i.requestFocus(), void i.displayObject.event("fui_drop", [e, P.createEvent("fui_drop", i.displayObject, t)]);
              i = i.parent;
            }
          }
        }, a(0, e, "dragAgent", function () {
          return this._agent;
        }), a(0, e, "dragging", function () {
          return null != this._agent.parent;
        }), a(1, t, "inst", function () {
          return null == fairygui.DragDropManager._inst && (fairygui.DragDropManager._inst = new t()), fairygui.DragDropManager._inst;
        }), t._inst = null;
      }(), function () {
        function t() {}
        return r(t, "fairygui.Events"), t.createEvent = function (t, e, i) {
          return fairygui.Events.$event.setTo(t, e, i ? i.target : e), i ? (fairygui.Events.$event.touchId = i.touchId, fairygui.Events.$event.nativeEvent = i.nativeEvent) : fairygui.Events.$event.nativeEvent = null, fairygui.Events.$event._stoped = !1, fairygui.Events.$event;
        }, t.dispatch = function (t, e, i) {
          e.event(t, fairygui.Events.createEvent(t, e, i));
        }, t.STATE_CHANGED = "fui_state_changed", t.XY_CHANGED = "fui_xy_changed", t.SIZE_CHANGED = "fui_size_changed", t.SIZE_DELAY_CHANGE = "fui_size_delay_change", t.CLICK_ITEM = "fui_click_item", t.SCROLL = "fui_scroll", t.SCROLL_END = "fui_scroll_end", t.DROP = "fui_drop", t.FOCUS_CHANGED = "fui_focus_changed", t.DRAG_START = "fui_drag_start", t.DRAG_MOVE = "fui_drag_move", t.DRAG_END = "fui_drag_end", t.PULL_DOWN_RELEASE = "fui_pull_down_release", t.PULL_UP_RELEASE = "fui_pull_up_release", t.GEAR_STOP = "fui_gear_stop", n(t, ["$event", function () {
          return this.$event = new u();
        }]), t;
      }()),
      L = (function () {
        function t() {}
        r(t, "fairygui.FlipType"), t.None = 0, t.Horizontal = 1, t.Vertical = 2, t.Both = 3;
      }(), function () {
        function t() {
          this.data = null, this.packageItem = null, this._x = 0, this._y = 0, this._alpha = 1, this._rotation = 0, this._visible = !0, this._touchable = !0, this._grayed = !1, this._draggable = !1, this._scaleX = 1, this._scaleY = 1, this._skewX = 0, this._skewY = 0, this._pivotX = 0, this._pivotY = 0, this._pivotAsAnchor = !1, this._pivotOffsetX = 0, this._pivotOffsetY = 0, this._sortingOrder = 0, this._internalVisible = !0, this._handlingController = !1, this._focusable = !1, this._tooltips = null, this._pixelSnapping = !1, this._relations = null, this._group = null, this._gears = null, this._dragBounds = null, this._displayObject = null, this._yOffset = 0, this._sizeImplType = 0, this.minWidth = 0, this.minHeight = 0, this.maxWidth = 0, this.maxHeight = 0, this.sourceWidth = 0, this.sourceHeight = 0, this.initWidth = 0, this.initHeight = 0, this._parent = null, this._width = 0, this._height = 0, this._rawWidth = 0, this._rawHeight = 0, this._id = null, this._name = null, this._underConstruct = !1, this._gearLocked = !1, this._sizePercentInGroup = 0, this._touchDownPoint = null, this._id = "" + fairygui.GObject._gInstanceCounter++, this._name = "", this.createDisplayObject(), this._relations = new G(this), this._gears = s(8, null);
        }
        r(t, "fairygui.GObject");
        var e = t.prototype;
        return e.setXY = function (e, i) {
          if (this._x != e || this._y != i) {
            var n = e - this._x,
              r = i - this._y;
            this._x = e, this._y = i, this.handleXYChanged(), this instanceof fairygui.GGroup && this.moveChildren(n, r), this.updateGear(1), !this._parent || this._parent instanceof fairygui.GList || (this._parent.setBoundsChangedFlag(), null != this._group && this._group.setBoundsChangedFlag(), this.displayObject.event("fui_xy_changed")), t.draggingObject != this || t.sUpdateInDragging || this.localToGlobalRect(0, 0, this.width, this.height, t.sGlobalRect);
          }
        }, e.center = function (t) {
          void 0 === t && (t = !1);
          var e;
          e = null != this._parent ? this.parent : this.root, this.setXY((e.width - this.width) / 2, (e.height - this.height) / 2), t && (this.addRelation(e, 3), this.addRelation(e, 10));
        }, e.setSize = function (t, e, i) {
          if (void 0 === i && (i = !1), this._rawWidth != t || this._rawHeight != e) {
            this._rawWidth = t, this._rawHeight = e, t < this.minWidth && (t = this.minWidth), e < this.minHeight && (e = this.minHeight), this.maxWidth > 0 && t > this.maxWidth && (t = this.maxWidth), this.maxHeight > 0 && e > this.maxHeight && (e = this.maxHeight);
            var n = t - this._width,
              r = e - this._height;
            this._width = t, this._height = e, this.handleSizeChanged(), 0 == this._pivotX && 0 == this._pivotY || (this._pivotAsAnchor ? this.applyPivot() : (i || this.setXY(this.x - this._pivotX * n, this.y - this._pivotY * r), this.updatePivotOffset())), this instanceof fairygui.GGroup && this.resizeChildren(n, r), this.updateGear(2), this._parent && (this._relations.onOwnerSizeChanged(n, r, this._pivotAsAnchor || !i), this._parent.setBoundsChangedFlag(), null != this._group && this._group.setBoundsChangedFlag(!0)), this.displayObject.event("fui_size_changed");
          }
        }, e.ensureSizeCorrect = function () {}, e.setScale = function (t, e) {
          this._scaleX == t && this._scaleY == e || (this._scaleX = t, this._scaleY = e, this.handleScaleChanged(), this.applyPivot(), this.updateGear(2));
        }, e.setSkew = function (t, e) {
          this._skewX == t && this._skewY == e || (this._skewX = t, this._skewY = e, null != this._displayObject && (this._displayObject.skew(-t, e), this.applyPivot()));
        }, e.setPivot = function (t, e, i) {
          void 0 === e && (e = 0), void 0 === i && (i = !1), this._pivotX == t && this._pivotY == e && this._pivotAsAnchor == i || (this._pivotX = t, this._pivotY = e, this._pivotAsAnchor = i, this.updatePivotOffset(), this.handleXYChanged());
        }, e.internalSetPivot = function (t, e, i) {
          this._pivotX = t, this._pivotY = e, this._pivotAsAnchor = i, this._pivotAsAnchor && this.handleXYChanged();
        }, e.updatePivotOffset = function () {
          if (null != this._displayObject)
            if (!this._displayObject.transform || 0 == this._pivotX && 0 == this._pivotY) this._pivotOffsetX = 0, this._pivotOffsetY = 0;
            else {
              0 == this._sizeImplType ? (fairygui.GObject.sHelperPoint.x = this._pivotX * this._width, fairygui.GObject.sHelperPoint.y = this._pivotY * this._height) : (fairygui.GObject.sHelperPoint.x = this._pivotX * this.sourceWidth, fairygui.GObject.sHelperPoint.y = this._pivotY * this.sourceHeight);
              var t = this._displayObject.transform.transformPoint(fairygui.GObject.sHelperPoint);
              this._pivotOffsetX = this._pivotX * this._width - t.x, this._pivotOffsetY = this._pivotY * this._height - t.y;
            }
        }, e.applyPivot = function () {
          0 == this._pivotX && 0 == this._pivotY || (this.updatePivotOffset(), this.handleXYChanged());
        }, e.requestFocus = function () {
          for (var t = this; t && !t._focusable;) t = t.parent;
          null != t && (this.root.focus = t);
        }, e.__rollOver = function (t) {
          i.timer.once(100, this, this.__doShowTooltips);
        }, e.__doShowTooltips = function () {
          this.root && this.root.showTooltips(this._tooltips);
        }, e.__rollOut = function (t) {
          i.timer.clear(this, this.__doShowTooltips), this.root.hideTooltips();
        }, e.getGear = function (t) {
          var e = this._gears[t];
          if (null == e) {
            switch (t) {
              case 0:
                e = new dt(this);
                break;
              case 1:
                e = new Tt(this);
                break;
              case 2:
                e = new mt(this);
                break;
              case 3:
                e = new pt(this);
                break;
              case 4:
                e = new _t(this);
                break;
              case 5:
                e = new ct(this);
                break;
              case 6:
                e = new vt(this);
                break;
              case 7:
                e = new ft(this);
                break;
              default:
                throw new Error("FairyGUI: invalid gear index!");
            }
            this._gears[t] = e;
          }
          return e;
        }, e.updateGear = function (t) {
          if (!this._underConstruct && !this._gearLocked) {
            var e = this._gears[t];
            null != e && null != e.controller && e.updateState();
          }
        }, e.checkGearController = function (t, e) {
          return null != this._gears[t] && this._gears[t].controller == e;
        }, e.updateGearFromRelations = function (t, e, i) {
          null != this._gears[t] && this._gears[t].updateFromRelations(e, i);
        }, e.addDisplayLock = function () {
          var t = this._gears[0];
          if (t && t.controller) {
            var e = t.addLock();
            return this.checkGearDisplay(), e;
          }
          return 0;
        }, e.releaseDisplayLock = function (t) {
          var e = this._gears[0];
          e && e.controller && (e.releaseLock(t), this.checkGearDisplay());
        }, e.checkGearDisplay = function () {
          if (!this._handlingController) {
            var t = null == this._gears[0] || this._gears[0].connected;
            t != this._internalVisible && (this._internalVisible = t, this._parent && this._parent.childStateChanged(this));
          }
        }, e.addRelation = function (t, e, i) {
          void 0 === i && (i = !1), this._relations.add(t, e, i);
        }, e.removeRelation = function (t, e) {
          void 0 === e && (e = 0), this._relations.remove(t, e);
        }, e.removeFromParent = function () {
          this._parent && this._parent.removeChild(this);
        }, e.dispose = function () {
          this.removeFromParent(), this._relations.dispose(), this._displayObject.destroy();
        }, e.onClick = function (t, e, i) {
          this.on("click", t, e, i);
        }, e.offClick = function (t, e) {
          this.off("click", t, e);
        }, e.hasClickListener = function () {
          return this._displayObject.hasListener("click");
        }, e.on = function (t, e, i, n) {
          this._displayObject.on(t, e, i, n);
        }, e.off = function (t, e, i) {
          this._displayObject.off(t, e, i);
        }, e.startDrag = function (t) {
          void 0 === t && (t = -1), null != this._displayObject.stage && this.dragBegin();
        }, e.stopDrag = function () {
          this.dragEnd();
        }, e.localToGlobal = function (t, e, i) {
          return void 0 === t && (t = 0), void 0 === e && (e = 0), this._pivotAsAnchor && (t += this._pivotX * this._width, e += this._pivotY * this._height), i ? (i.x = t, i.y = e, this._displayObject.localToGlobal(i, !1)) : (i = fairygui.GObject.sHelperPoint, i.x = t, i.y = e, this._displayObject.localToGlobal(i, !0));
        }, e.globalToLocal = function (t, e, i) {
          return void 0 === t && (t = 0), void 0 === e && (e = 0), i ? (i.x = t, i.y = e, this._displayObject.globalToLocal(i, !1)) : ((i = fairygui.GObject.sHelperPoint).x = t, i.y = e, i = this._displayObject.globalToLocal(i, !0)), this._pivotAsAnchor && (i.x -= this._pivotX * this._width, i.y -= this._pivotY * this._height), i;
        }, e.localToGlobalRect = function (t, e, i, n, r) {
          void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), null == r && (r = new v());
          var a = this.localToGlobal(t, e);
          return r.x = a.x, r.y = a.y, a = this.localToGlobal(t + i, e + n), r.width = a.x - r.x, r.height = a.y - r.y, r;
        }, e.globalToLocalRect = function (t, e, i, n, r) {
          void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), null == r && (r = new v());
          var a = this.globalToLocal(t, e);
          return r.x = a.x, r.y = a.y, a = this.globalToLocal(t + i, e + n), r.width = a.x - r.x, r.height = a.y - r.y, r;
        }, e.handleControllerChanged = function (t) {
          this._handlingController = !0;
          for (var e = 0; e < 8; e++) {
            var i = this._gears[e];
            null != i && i.controller == t && i.apply();
          }
          this._handlingController = !1, this.checkGearDisplay();
        }, e.createDisplayObject = function () {
          this._displayObject = new T(), this._displayObject.$owner = this;
        }, e.handleXYChanged = function () {
          var t = this._x,
            e = this._y + this._yOffset;
          this._pivotAsAnchor && (t -= this._pivotX * this._width, e -= this._pivotY * this._height), this._pixelSnapping && (t = Math.round(t), e = Math.round(e)), this._displayObject.pos(t + this._pivotOffsetX, e + this._pivotOffsetY);
        }, e.handleSizeChanged = function () {
          null != this._displayObject && (0 == this._sizeImplType || 0 == this.sourceWidth || 0 == this.sourceHeight ? this._displayObject.size(this._width, this._height) : this._displayObject.scale(this._width / this.sourceWidth * this._scaleX, this._height / this.sourceHeight * this._scaleY));
        }, e.handleScaleChanged = function () {
          null != this._displayObject && (0 == this._sizeImplType || 0 == this.sourceWidth || 0 == this.sourceHeight ? this._displayObject.scale(this._scaleX, this._scaleY) : this._displayObject.scale(this._width / this.sourceWidth * this._scaleX, this._height / this.sourceHeight * this._scaleY));
        }, e.handleGrayedChanged = function () {
          this._displayObject && (this._grayed ? (null == t.grayFilter && (t.grayFilter = new l([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0])), this._displayObject.filters = [t.grayFilter]) : this._displayObject.filters = null);
        }, e.handleAlphaChanged = function () {
          this._displayObject && (this._displayObject.alpha = this._alpha);
        }, e.handleVisibleChanged = function () {
          this._displayObject && (this._displayObject.visible = this.internalVisible2);
        }, e.constructFromResource = function () {}, e.setup_beforeAdd = function (t, e) {
          t.seek(e, 0), t.skip(5);
          var i = NaN,
            n = NaN;
          this._id = t.readS(), this._name = t.readS(), i = t.getInt32(), n = t.getInt32(), this.setXY(i, n), t.readBool() && (this.initWidth = t.getInt32(), this.initHeight = t.getInt32(), this.setSize(this.initWidth, this.initHeight, !0)), t.readBool() && (this.minWidth = t.getInt32(), this.maxWidth = t.getInt32(), this.minHeight = t.getInt32(), this.maxHeight = t.getInt32()), t.readBool() && (i = t.getFloat32(), n = t.getFloat32(), this.setScale(i, n)), t.readBool() && (i = t.getFloat32(), n = t.getFloat32(), this.setSkew(i, n)), t.readBool() && (i = t.getFloat32(), n = t.getFloat32(), this.setPivot(i, n, t.readBool())), 1 != (i = t.getFloat32()) && (this.alpha = i), 0 != (i = t.getFloat32()) && (this.rotation = i), t.readBool() || (this.visible = !1), t.readBool() || (this.touchable = !1), t.readBool() && (this.grayed = !0);
          2 == t.readByte() && (this.blendMode = "lighter");
          if (1 == t.readByte()) {
            var r = new nt();
            r.adjustBrightness(t.getFloat32()), r.adjustContrast(t.getFloat32()), r.adjustSaturation(t.getFloat32()), r.adjustHue(t.getFloat32());
            var a = new l(r);
            this.filters = [a];
          }
          var s = t.readS();
          null != s && (this.data = s);
        }, e.setup_afterAdd = function (t, e) {
          t.seek(e, 1);
          var i = t.readS();
          null != i && (this.tooltips = i);
          var n = t.getInt16();
          n >= 0 && (this.group = this.parent.getChildAt(n)), t.seek(e, 2);
          for (var r = t.getInt16(), a = 0; a < r; a++) {
            var s = t.getInt16();
            s += t.pos;
            this.getGear(t.readByte()).setup(t), t.pos = s;
          }
        }, e.initDrag = function () {
          this._draggable ? this.on("mousedown", this, this.__begin) : this.off("mousedown", this, this.__begin);
        }, e.dragBegin = function () {
          null != fairygui.GObject.draggingObject && fairygui.GObject.draggingObject.stopDrag(), fairygui.GObject.sGlobalDragStart.x = i.stage.mouseX, fairygui.GObject.sGlobalDragStart.y = i.stage.mouseY, this.localToGlobalRect(0, 0, this.width, this.height, fairygui.GObject.sGlobalRect), fairygui.GObject.draggingObject = this, i.stage.on("mousemove", this, this.__moving2), i.stage.on("mouseup", this, this.__end2);
        }, e.dragEnd = function () {
          fairygui.GObject.draggingObject == this && (i.stage.off("mousemove", this, this.__moving2), i.stage.off("mouseup", this, this.__end2), fairygui.GObject.draggingObject = null), fairygui.GObject.sDraggingQuery = !1;
        }, e.reset = function () {
          i.stage.off("mousemove", this, this.__moving), i.stage.off("mouseup", this, this.__end);
        }, e.__begin = function () {
          null == this._touchDownPoint && (this._touchDownPoint = new g()), this._touchDownPoint.x = i.stage.mouseX, this._touchDownPoint.y = i.stage.mouseY, i.stage.on("mousemove", this, this.__moving), i.stage.on("mouseup", this, this.__end);
        }, e.__end = function () {
          this.reset();
        }, e.__moving = function (t) {
          var e = Z.touchDragSensitivity;
          null != this._touchDownPoint && Math.abs(this._touchDownPoint.x - i.stage.mouseX) < e && Math.abs(this._touchDownPoint.y - i.stage.mouseY) < e || (this.reset(), fairygui.GObject.sDraggingQuery = !0, P.dispatch("fui_drag_start", this._displayObject, t), fairygui.GObject.sDraggingQuery && this.dragBegin());
        }, e.__moving2 = function (e) {
          var n = i.stage.mouseX - fairygui.GObject.sGlobalDragStart.x + fairygui.GObject.sGlobalRect.x,
            r = i.stage.mouseY - fairygui.GObject.sGlobalDragStart.y + fairygui.GObject.sGlobalRect.y;
          if (null != this._dragBounds) {
            var a = Rt.inst.localToGlobalRect(this._dragBounds.x, this._dragBounds.y, this._dragBounds.width, this._dragBounds.height, fairygui.GObject.sDragHelperRect);
            n < a.x ? n = a.x : n + fairygui.GObject.sGlobalRect.width > a.right && (n = a.right - fairygui.GObject.sGlobalRect.width) < a.x && (n = a.x), r < a.y ? r = a.y : r + fairygui.GObject.sGlobalRect.height > a.bottom && (r = a.bottom - fairygui.GObject.sGlobalRect.height) < a.y && (r = a.y);
          }
          t.sUpdateInDragging = !0;
          var s = this.parent.globalToLocal(n, r, fairygui.GObject.sHelperPoint);
          this.setXY(Math.round(s.x), Math.round(s.y)), t.sUpdateInDragging = !1, P.dispatch("fui_drag_move", this._displayObject, e);
        }, e.__end2 = function (t) {
          fairygui.GObject.draggingObject == this && (this.stopDrag(), P.dispatch("fui_drag_end", this._displayObject, t));
        }, a(0, e, "yMin", function () {
          return this._pivotAsAnchor ? this._y - this._height * this._pivotY : this._y;
        }, function (t) {
          this._pivotAsAnchor ? this.setXY(this._x, t + this._height * this._pivotY) : this.setXY(this._x, t);
        }), a(0, e, "id", function () {
          return this._id;
        }), a(0, e, "name", function () {
          return this._name;
        }, function (t) {
          this._name = t;
        }), a(0, e, "rotation", function () {
          return this._rotation;
        }, function (t) {
          this._rotation != t && (this._rotation = t, null != this._displayObject && (this._displayObject.rotation = this.normalizeRotation, this.applyPivot()), this.updateGear(3));
        }), a(0, e, "width", function () {
          return this.ensureSizeCorrect(), this._relations.sizeDirty && this._relations.ensureRelationsSizeCorrect(), this._width;
        }, function (t) {
          this.setSize(t, this._rawHeight);
        }), a(0, e, "x", function () {
          return this._x;
        }, function (t) {
          this.setXY(t, this._y);
        }), a(0, e, "draggable", function () {
          return this._draggable;
        }, function (t) {
          this._draggable != t && (this._draggable = t, this.initDrag());
        }), a(0, e, "y", function () {
          return this._y;
        }, function (t) {
          this.setXY(this._x, t);
        }), a(0, e, "gearXY", function () {
          return this.getGear(1);
        }), a(0, e, "xMin", function () {
          return this._pivotAsAnchor ? this._x - this._width * this._pivotX : this._x;
        }, function (t) {
          this._pivotAsAnchor ? this.setXY(t + this._width * this._pivotX, this._y) : this.setXY(t, this._y);
        }), a(0, e, "pixelSnapping", function () {
          return this._pixelSnapping;
        }, function (t) {
          this._pixelSnapping != t && (this._pixelSnapping = t, this.handleXYChanged());
        }), a(0, e, "height", function () {
          return this.ensureSizeCorrect(), this._relations.sizeDirty && this._relations.ensureRelationsSizeCorrect(), this._height;
        }, function (t) {
          this.setSize(this._rawWidth, t);
        }), a(0, e, "asButton", function () {
          return this;
        }), a(0, e, "actualWidth", function () {
          return this.width * Math.abs(this._scaleX);
        }), a(0, e, "actualHeight", function () {
          return this.height * Math.abs(this._scaleY);
        }), a(0, e, "blendMode", function () {
          return this._displayObject.blendMode;
        }, function (t) {
          this._displayObject.blendMode = t;
        }), a(0, e, "scaleX", function () {
          return this._scaleX;
        }, function (t) {
          this.setScale(t, this._scaleY);
        }), a(0, e, "scaleY", function () {
          return this._scaleY;
        }, function (t) {
          this.setScale(this._scaleX, t);
        }), a(0, e, "skewX", function () {
          return this._skewX;
        }, function (t) {
          this.setSkew(t, this._skewY);
        }), a(0, e, "pivotAsAnchor", function () {
          return this._pivotAsAnchor;
        }), a(0, e, "skewY", function () {
          return this._skewY;
        }, function (t) {
          this.setSkew(this._skewX, t);
        }), a(0, e, "pivotX", function () {
          return this._pivotX;
        }, function (t) {
          this.setPivot(t, this._pivotY);
        }), a(0, e, "asLoader", function () {
          return this;
        }), a(0, e, "asTextInput", function () {
          return this;
        }), a(0, e, "displayObject", function () {
          return this._displayObject;
        }), a(0, e, "normalizeRotation", function () {
          var t = this._rotation % 360;
          return t > 180 ? t -= 360 : t < -180 && (t = 360 + t), t;
        }), a(0, e, "pivotY", function () {
          return this._pivotY;
        }, function (t) {
          this.setPivot(this._pivotX, t);
        }), a(0, e, "touchable", function () {
          return this._touchable;
        }, function (t) {
          if (this._touchable != t) {
            if (this._touchable = t, this.updateGear(3), this instanceof fairygui.GImage || this instanceof fairygui.GMovieClip || this instanceof fairygui.GTextField && !(this instanceof fairygui.GTextInput) && !(this instanceof fairygui.GRichTextField)) return;
            null != this._displayObject && (this._displayObject.mouseEnabled = this._touchable);
          }
        }), a(0, e, "alpha", function () {
          return this._alpha;
        }, function (t) {
          this._alpha != t && (this._alpha = t, this.handleAlphaChanged(), this.updateGear(3));
        }), a(0, e, "grayed", function () {
          return this._grayed;
        }, function (t) {
          this._grayed != t && (this._grayed = t, this.handleGrayedChanged(), this.updateGear(3));
        }), a(0, e, "dragBounds", function () {
          return this._dragBounds;
        }, function (t) {
          this._dragBounds = t;
        }), a(0, e, "asProgress", function () {
          return this;
        }), a(0, e, "enabled", function () {
          return !this._grayed && this._touchable;
        }, function (t) {
          this.grayed = !t, this.touchable = t;
        }), a(0, e, "sortingOrder", function () {
          return this._sortingOrder;
        }, function (t) {
          if (t < 0 && (t = 0), this._sortingOrder != t) {
            var e = this._sortingOrder;
            this._sortingOrder = t, null != this._parent && this._parent.childSortingOrderChanged(this, e, this._sortingOrder);
          }
        }), a(0, e, "visible", function () {
          return this._visible;
        }, function (t) {
          this._visible != t && (this._visible = t, this.handleVisibleChanged(), this._parent && this._parent.setBoundsChangedFlag());
        }), a(0, e, "internalVisible", function () {
          return this._internalVisible && (!this._group || this._group.internalVisible) && !this._displayObject._$P.maskParent;
        }), a(0, e, "icon", function () {
          return null;
        }, function (t) {}), a(0, e, "internalVisible2", function () {
          return this._visible && (!this._group || this._group.internalVisible2);
        }), a(0, e, "asGraph", function () {
          return this;
        }), a(0, e, "gearSize", function () {
          return this.getGear(2);
        }), a(0, e, "focusable", function () {
          return this._focusable;
        }, function (t) {
          this._focusable = t;
        }), a(0, e, "focused", function () {
          return this.root.focus == this;
        }), a(0, e, "tooltips", function () {
          return this._tooltips;
        }, function (t) {
          this._tooltips && (this.off("mouseover", this, this.__rollOver), this.off("mouseout", this, this.__rollOut)), this._tooltips = t, this._tooltips && (this.on("mouseover", this, this.__rollOver), this.on("mouseout", this, this.__rollOut));
        }), a(0, e, "dragging", function () {
          return fairygui.GObject.draggingObject == this;
        }), a(0, e, "group", function () {
          return this._group;
        }, function (t) {
          this._group != t && (null != this._group && this._group.setBoundsChangedFlag(!0), this._group = t, null != this._group && this._group.setBoundsChangedFlag(!0));
        }), a(0, e, "filters", function () {
          return this._displayObject.filters;
        }, function (t) {
          this._displayObject.filters = t;
        }), a(0, e, "inContainer", function () {
          return null != this._displayObject && null != this._displayObject.parent;
        }), a(0, e, "resourceURL", function () {
          return null != this.packageItem ? "ui://" + this.packageItem.owner.id + this.packageItem.id : null;
        }), a(0, e, "onStage", function () {
          return null != this._displayObject && null != this._displayObject.stage;
        }), a(0, e, "root", function () {
          if (this instanceof fairygui.GRoot) return this;
          for (var t = this._parent; t;) {
            if (t instanceof fairygui.GRoot) return t;
            t = t.parent;
          }
          return Rt.inst;
        }), a(0, e, "gearLook", function () {
          return this.getGear(3);
        }), a(0, e, "asCom", function () {
          return this;
        }), a(0, e, "relations", function () {
          return this._relations;
        }), a(0, e, "parent", function () {
          return this._parent;
        }, function (t) {
          this._parent = t;
        }), a(0, e, "asLabel", function () {
          return this;
        }), a(0, e, "asImage", function () {
          return this;
        }), a(0, e, "asTextField", function () {
          return this;
        }), a(0, e, "asGroup", function () {
          return this;
        }), a(0, e, "asRichTextField", function () {
          return this;
        }), a(0, e, "asList", function () {
          return this;
        }), a(0, e, "asSlider", function () {
          return this;
        }), a(0, e, "asComboBox", function () {
          return this;
        }), a(0, e, "asMovieClip", function () {
          return this;
        }), a(0, e, "text", function () {
          return null;
        }, function (t) {}), t.cast = function (t) {
          return t.$owner;
        }, t.draggingObject = null, t._gInstanceCounter = 0, t.grayFilter = null, t.sDraggingQuery = !1, t.sUpdateInDragging = !1, n(t, ["sGlobalDragStart", function () {
          return this.sGlobalDragStart = new g();
        }, "sGlobalRect", function () {
          return this.sGlobalRect = new v();
        }, "sHelperPoint", function () {
          return this.sHelperPoint = new g();
        }, "sDragHelperRect", function () {
          return this.sDragHelperRect = new v();
        }]), t;
      }()),
      O = function () {
        function t(t) {
          this._owner = null, this._controller = null, this._tweenConfig = null, this._owner = t;
        }
        r(t, "fairygui.gears.GearBase");
        var e = t.prototype;
        return e.setup = function (t) {
          this._controller = this._owner.parent.getControllerAt(t.getInt16()), this.init();
          var e, i = 0,
            n = 0;
          if (this instanceof fairygui.gears.GearDisplay) {
            i = t.getInt16();
            var r = [];
            for (n = 0; n < i; n++) r[n] = t.readS();
            this.pages = r;
          } else {
            for (i = t.getInt16(), n = 0; n < i; n++) null != (e = t.readS()) && this.addStatus(e, t);
            t.readBool() && this.addStatus(null, t);
          }
          t.readBool() && (this._tweenConfig = new N(), this._tweenConfig.easeType = t.readByte(), this._tweenConfig.duration = t.getFloat32(), this._tweenConfig.delay = t.getFloat32());
        }, e.updateFromRelations = function (t, e) {}, e.addStatus = function (t, e) {}, e.init = function () {}, e.apply = function () {}, e.updateState = function () {}, a(0, e, "controller", function () {
          return this._controller;
        }, function (t) {
          t != this._controller && (this._controller = t, this._controller && this.init());
        }), a(0, e, "tweenConfig", function () {
          return null == this._tweenConfig && (this._tweenConfig = new N()), this._tweenConfig;
        }), t.disableAllTweenEffect = !1, t;
      }(),
      N = function () {
        function t() {
          this.tween = !1, this.easeType = 0, this.duration = NaN, this.delay = NaN, this._displayLockToken = NaN, this._tweener = null, this.tween = !0, this.easeType = 5, this.duration = .3, this.delay = 0;
        }
        return r(t, "fairygui.gears.GearTweenConfig"), t;
      }(),
      V = function () {
        function t() {
          this._pool = null, this._count = 0, this._pool = {};
        }
        r(t, "fairygui.GObjectPool");
        var e = t.prototype;
        return e.clear = function () {
          for (var t in this._pool)
            for (var e = this._pool[t], i = e.length, n = 0; n < i; n++) e[n].dispose();
          this._pool = {}, this._count = 0;
        }, e.getObject = function (t) {
          if (null == (t = J.normalizeURL(t))) return null;
          var e = this._pool[t];
          if (null != e && e.length > 0) return this._count--, e.shift();
          return J.createObjectFromURL(t);
        }, e.returnObject = function (t) {
          var e = t.resourceURL;
          if (e) {
            var i = this._pool[e];
            null == i && (i = [], this._pool[e] = i), this._count++, i.push(t);
          }
        }, a(0, e, "count", function () {
          return this._count;
        }), t;
      }(),
      F = (function () {
        function t() {}
        r(t, "fairygui.GroupLayoutType"), t.None = 0, t.Horizontal = 1, t.Vertical = 2;
      }(), function () {
        function t() {}
        r(t, "fairygui.ListLayoutType"), t.SingleColumn = 0, t.SingleRow = 1, t.FlowHorizontal = 2, t.FlowVertical = 3, t.Pagination = 4;
      }(), function () {
        function t() {}
        r(t, "fairygui.ListSelectionMode"), t.Single = 0, t.Multiple = 1, t.Multiple_SingleClick = 2, t.None = 3;
      }(), function () {
        function t() {}
        r(t, "fairygui.LoaderFillType"), t.None = 0, t.Scale = 1, t.ScaleMatchHeight = 2, t.ScaleMatchWidth = 3, t.ScaleFree = 4, t.ScaleNoBorder = 5;
      }(), function () {
        function t() {
          this.left = 0, this.right = 0, this.top = 0, this.bottom = 0;
        }
        r(t, "fairygui.Margin");
        return t.prototype.copy = function (t) {
          this.top = t.top, this.bottom = t.bottom, this.left = t.left, this.right = t.right;
        }, t;
      }()),
      B = (function () {
        function t() {}
        r(t, "fairygui.ObjectType"), t.Image = 0, t.MovieClip = 1, t.Swf = 2, t.Graph = 3, t.Loader = 4, t.Group = 5, t.Text = 6, t.RichText = 7, t.InputText = 8, t.Component = 9, t.List = 10, t.Label = 11, t.Button = 12, t.ComboBox = 13, t.ProgressBar = 14, t.Slider = 15, t.ScrollBar = 16;
      }(), function () {
        function t() {}
        r(t, "fairygui.OverflowType"), t.Visible = 0, t.Hidden = 1, t.Scroll = 2;
      }(), function () {
        function t() {
          this.owner = null, this.type = 0, this.objectType = 0, this.id = null, this.name = null, this.width = 0, this.height = 0, this.file = null, this.decoded = !1, this.rawData = null, this.scale9Grid = null, this.scaleByTile = !1, this.tileGridIndice = 0, this.smoothing = !1, this.texture = null, this.pixelHitTestData = null, this.interval = 0, this.repeatDelay = 0, this.swing = !1, this.frames = null, this.extensionType = null, this.bitmapFont = null;
        }
        r(t, "fairygui.PackageItem");
        var e = t.prototype;
        return e.load = function () {
          return this.owner.getItemAsset(this);
        }, e.toString = function () {
          return this.name;
        }, t;
      }()),
      U = (function () {
        function t() {}
        r(t, "fairygui.PackageItemType"), t.Image = 0, t.MovieClip = 1, t.Sound = 2, t.Component = 3, t.Atlas = 4, t.Font = 5, t.Swf = 6, t.Misc = 7, t.Unknown = 8;
      }(), function () {
        function t() {
          this._controller = null, this._id = null;
        }
        r(t, "fairygui.PageOption");
        var e = t.prototype;
        return e.clear = function () {
          this._id = null;
        }, a(0, e, "controller", null, function (t) {
          this._controller = t;
        }), a(0, e, "index", function () {
          return this._id ? this._controller.getPageIndexById(this._id) : -1;
        }, function (t) {
          this._id = this._controller.getPageId(t);
        }), a(0, e, "name", function () {
          return this._id ? this._controller.getPageNameById(this._id) : null;
        }, function (t) {
          this._id = this._controller.getPageIdByName(t);
        }), a(0, e, "id", function () {
          return this._id;
        }, function (t) {
          this._id = t;
        }), t;
      }()),
      k = (function () {
        function t() {}
        r(t, "fairygui.PopupDirection"), t.Auto = 0, t.Up = 1, t.Down = 2;
      }(), function () {
        function t(t) {
          if (this._contentPane = null, this._list = null, !t && !(t = Z.popupMenu)) throw "UIConfig.popupMenu not defined";
          this._contentPane = J.createObjectFromURL(t).asCom, this._contentPane.on("display", this, this.__addedToStage), this._list = this._contentPane.getChild("list"), this._list.removeChildrenToPool(), this._list.addRelation(this._contentPane, 14), this._list.removeRelation(this._contentPane, 15), this._contentPane.addRelation(this._list, 15), this._list.on("fui_click_item", this, this.__clickItem);
        }
        r(t, "fairygui.PopupMenu");
        var e = t.prototype;
        e.dispose = function () {
          this._contentPane.dispose();
        }, e.addItem = function (t, e) {
          var i = this._list.addItemFromPool().asButton;
          i.title = t, i.data = e, i.grayed = !1;
          var n = i.getController("checked");
          return null != n && (n.selectedIndex = 0), i;
        }, e.addItemAt = function (t, e, i) {
          var n = this._list.getFromPool().asButton;
          this._list.addChildAt(n, e), n.title = t, n.data = i, n.grayed = !1;
          var r = n.getController("checked");
          return null != r && (r.selectedIndex = 0), n;
        }, e.addSeperator = function () {
          if (null == Z.popupMenu_seperator) throw "UIConfig.popupMenu_seperator not defined";
          this.list.addItemFromPool(Z.popupMenu_seperator);
        }, e.getItemName = function (t) {
          return this._list.getChildAt(t).name;
        }, e.setItemText = function (t, e) {
          this._list.getChild(t).asButton.title = e;
        }, e.setItemVisible = function (t, e) {
          var i = this._list.getChild(t).asButton;
          i.visible != e && (i.visible = e, this._list.setBoundsChangedFlag());
        }, e.setItemGrayed = function (t, e) {
          this._list.getChild(t).asButton.grayed = e;
        }, e.setItemCheckable = function (t, e) {
          var i = this._list.getChild(t).asButton.getController("checked");
          null != i && (e ? 0 == i.selectedIndex && (i.selectedIndex = 1) : i.selectedIndex = 0);
        }, e.setItemChecked = function (t, e) {
          var i = this._list.getChild(t).asButton.getController("checked");
          null != i && (i.selectedIndex = e ? 2 : 1);
        }, e.isItemChecked = function (t) {
          var e = this._list.getChild(t).asButton.getController("checked");
          return null != e && 2 == e.selectedIndex;
        }, e.removeItem = function (t) {
          var e = this._list.getChild(t);
          if (null != e) {
            var i = this._list.getChildIndex(e);
            return this._list.removeChildToPoolAt(i), !0;
          }
          return !1;
        }, e.clearItems = function () {
          this._list.removeChildrenToPool();
        }, e.show = function (t, e) {
          (null != t ? t.root : Rt.inst).showPopup(this.contentPane, t instanceof fairygui.GRoot ? null : t, e);
        }, e.__clickItem = function (t) {
          i.timer.once(100, this, this.__clickItem2, [t]);
        }, e.__clickItem2 = function (t) {
          if (t instanceof fairygui.GButton)
            if (t.grayed) this._list.selectedIndex = -1;
            else {
              var e = t.asCom.getController("checked");
              null != e && 0 != e.selectedIndex && (1 == e.selectedIndex ? e.selectedIndex = 2 : e.selectedIndex = 1);
              this._contentPane.parent.hidePopup(this.contentPane), null != t.data && t.data.run();
            }
        }, e.__addedToStage = function () {
          this._list.selectedIndex = -1, this._list.resizeToFit(1e5, 10);
        }, a(0, e, "itemCount", function () {
          return this._list.numChildren;
        }), a(0, e, "contentPane", function () {
          return this._contentPane;
        }), a(0, e, "list", function () {
          return this._list;
        });
      }(), function () {
        function t() {}
        r(t, "fairygui.ProgressTitleType"), t.Percent = 0, t.ValueAndMax = 1, t.Value = 2, t.Max = 3;
      }(), function () {
        function t(t) {
          this._owner = null, this._target = null, this._defs = null, this._targetX = NaN, this._targetY = NaN, this._targetWidth = NaN, this._targetHeight = NaN, this._owner = t, this._defs = [];
        }
        var e;
        r(t, "fairygui.RelationItem");
        var i = t.prototype;
        return i.add = function (t, e) {
          if (24 == t) return this.add(14, e), void this.add(15, e);
          for (var i = this._defs.length, n = 0; n < i; n++)
            if (this._defs[n].type == t) return;
          this.internalAdd(t, e);
        }, i.internalAdd = function (t, i) {
          if (24 == t) return this.internalAdd(14, i), void this.internalAdd(15, i);
          var n = new e();
          n.percent = i, n.type = t, n.axis = t <= 6 || 14 == t || t >= 16 && t <= 19 ? 0 : 1, this._defs.push(n), (i || 1 == t || 3 == t || 5 == t || 8 == t || 10 == t || 12 == t) && (this._owner.pixelSnapping = !0);
        }, i.remove = function (t) {
          if (24 == t) return this.remove(14), void this.remove(15);
          for (var e = this._defs.length, i = 0; i < e; i++)
            if (this._defs[i].type == t) {
              this._defs.splice(i, 1);
              break;
            }
        }, i.copyFrom = function (t) {
          this.target = t.target, this._defs.length = 0;
          for (var i = t._defs.length, n = 0; n < i; n++) {
            var r = t._defs[n],
              a = new e();
            a.copyFrom(r), this._defs.push(a);
          }
        }, i.dispose = function () {
          null != this._target && (this.releaseRefTarget(this._target), this._target = null);
        }, i.applyOnSelfResized = function (t, e, i) {
          var n = this._defs.length;
          if (0 != n) {
            for (var r = this._owner.x, a = this._owner.y, s = 0; s < n; s++) {
              switch (this._defs[s].type) {
                case 3:
                  this._owner.x -= (.5 - (i ? this._owner.pivotX : 0)) * t;
                  break;
                case 5:
                case 4:
                case 6:
                  this._owner.x -= (1 - (i ? this._owner.pivotX : 0)) * t;
                  break;
                case 10:
                  this._owner.y -= (.5 - (i ? this._owner.pivotY : 0)) * e;
                  break;
                case 12:
                case 11:
                case 13:
                  this._owner.y -= (1 - (i ? this._owner.pivotY : 0)) * e;
              }
            }
            if ((r != this._owner.x || a != this._owner.y) && (r = this._owner.x - r, a = this._owner.y - a, this._owner.updateGearFromRelations(1, r, a), null != this._owner.parent && this._owner.parent._transitions.length > 0)) {
              n = this._owner.parent._transitions.length;
              for (var o = 0; o < n; o++) {
                this._owner.parent._transitions[o].updateFromRelations(this._owner.id, r, a);
              }
            }
          }
        }, i.applyOnXYChanged = function (t, e, i) {
          var n = NaN;
          switch (t.type) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
              this._owner.x += e;
              break;
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
              this._owner.y += i;
              break;
            case 14:
            case 15:
              break;
            case 16:
            case 17:
              n = this._owner.xMin, this._owner.width = this._owner._rawWidth - e, this._owner.xMin = n + e;
              break;
            case 18:
            case 19:
              n = this._owner.xMin, this._owner.width = this._owner._rawWidth + e, this._owner.xMin = n;
              break;
            case 20:
            case 21:
              n = this._owner.yMin, this._owner.height = this._owner._rawHeight - i, this._owner.yMin = n + i;
              break;
            case 22:
            case 23:
              n = this._owner.yMin, this._owner.height = this._owner._rawHeight + i, this._owner.yMin = n;
          }
        }, i.applyOnSizeChanged = function (t) {
          var e = 0,
            i = 0,
            n = 0,
            r = NaN,
            a = NaN;
          switch (0 == t.axis ? (this._target != this._owner.parent && (e = this._target.x, this._target.pivotAsAnchor && (i = this._target.pivotX)), t.percent ? 0 != this._targetWidth && (n = this._target._width / this._targetWidth) : n = this._target._width - this._targetWidth) : (this._target != this._owner.parent && (e = this._target.y, this._target.pivotAsAnchor && (i = this._target.pivotY)), t.percent ? 0 != this._targetHeight && (n = this._target._height / this._targetHeight) : n = this._target._height - this._targetHeight), t.type) {
            case 0:
              t.percent ? this._owner.xMin = e + (this._owner.xMin - e) * n : 0 != i && (this._owner.x += n * -i);
              break;
            case 1:
              t.percent ? this._owner.xMin = e + (this._owner.xMin - e) * n : this._owner.x += n * (.5 - i);
              break;
            case 2:
              t.percent ? this._owner.xMin = e + (this._owner.xMin - e) * n : this._owner.x += n * (1 - i);
              break;
            case 3:
              t.percent ? this._owner.xMin = e + (this._owner.xMin + .5 * this._owner._rawWidth - e) * n - .5 * this._owner._rawWidth : this._owner.x += n * (.5 - i);
              break;
            case 4:
              t.percent ? this._owner.xMin = e + (this._owner.xMin + this._owner._rawWidth - e) * n - this._owner._rawWidth : 0 != i && (this._owner.x += n * -i);
              break;
            case 5:
              t.percent ? this._owner.xMin = e + (this._owner.xMin + this._owner._rawWidth - e) * n - this._owner._rawWidth : this._owner.x += n * (.5 - i);
              break;
            case 6:
              t.percent ? this._owner.xMin = e + (this._owner.xMin + this._owner._rawWidth - e) * n - this._owner._rawWidth : this._owner.x += n * (1 - i);
              break;
            case 7:
              t.percent ? this._owner.yMin = e + (this._owner.yMin - e) * n : 0 != i && (this._owner.y += n * -i);
              break;
            case 8:
              t.percent ? this._owner.yMin = e + (this._owner.yMin - e) * n : this._owner.y += n * (.5 - i);
              break;
            case 9:
              t.percent ? this._owner.yMin = e + (this._owner.yMin - e) * n : this._owner.y += n * (1 - i);
              break;
            case 10:
              t.percent ? this._owner.yMin = e + (this._owner.yMin + .5 * this._owner._rawHeight - e) * n - .5 * this._owner._rawHeight : this._owner.y += n * (.5 - i);
              break;
            case 11:
              t.percent ? this._owner.yMin = e + (this._owner.yMin + this._owner._rawHeight - e) * n - this._owner._rawHeight : 0 != i && (this._owner.y += n * -i);
              break;
            case 12:
              t.percent ? this._owner.yMin = e + (this._owner.yMin + this._owner._rawHeight - e) * n - this._owner._rawHeight : this._owner.y += n * (.5 - i);
              break;
            case 13:
              t.percent ? this._owner.yMin = e + (this._owner.yMin + this._owner._rawHeight - e) * n - this._owner._rawHeight : this._owner.y += n * (1 - i);
              break;
            case 14:
              r = this._owner._underConstruct && this._owner == this._target.parent ? this._owner.sourceWidth - this._target.initWidth : this._owner._rawWidth - this._targetWidth, t.percent && (r *= n), this._target == this._owner.parent ? this._owner.pivotAsAnchor ? (a = this._owner.xMin, this._owner.setSize(this._target._width + r, this._owner._rawHeight, !0), this._owner.xMin = a) : this._owner.setSize(this._target._width + r, this._owner._rawHeight, !0) : this._owner.width = this._target._width + r;
              break;
            case 15:
              r = this._owner._underConstruct && this._owner == this._target.parent ? this._owner.sourceHeight - this._target.initHeight : this._owner._rawHeight - this._targetHeight, t.percent && (r *= n), this._target == this._owner.parent ? this._owner.pivotAsAnchor ? (a = this._owner.yMin, this._owner.setSize(this._owner._rawWidth, this._target._height + r, !0), this._owner.yMin = a) : this._owner.setSize(this._owner._rawWidth, this._target._height + r, !0) : this._owner.height = this._target._height + r;
              break;
            case 16:
              a = this._owner.xMin, r = t.percent ? e + (a - e) * n - a : n * -i, this._owner.width = this._owner._rawWidth - r, this._owner.xMin = a + r;
              break;
            case 17:
              a = this._owner.xMin, r = t.percent ? e + (a - e) * n - a : n * (1 - i), this._owner.width = this._owner._rawWidth - r, this._owner.xMin = a + r;
              break;
            case 18:
              a = this._owner.xMin, r = t.percent ? e + (a + this._owner._rawWidth - e) * n - (a + this._owner._rawWidth) : n * -i, this._owner.width = this._owner._rawWidth + r, this._owner.xMin = a;
              break;
            case 19:
              a = this._owner.xMin, t.percent ? this._owner == this._target.parent ? this._owner._underConstruct ? this._owner.width = e + this._target._width - this._target._width * i + (this._owner.sourceWidth - e - this._target.initWidth + this._target.initWidth * i) * n : this._owner.width = e + (this._owner._rawWidth - e) * n : (r = e + (a + this._owner._rawWidth - e) * n - (a + this._owner._rawWidth), this._owner.width = this._owner._rawWidth + r, this._owner.xMin = a) : this._owner == this._target.parent ? this._owner._underConstruct ? this._owner.width = this._owner.sourceWidth + (this._target._width - this._target.initWidth) * (1 - i) : this._owner.width = this._owner._rawWidth + n * (1 - i) : (r = n * (1 - i), this._owner.width = this._owner._rawWidth + r, this._owner.xMin = a);
              break;
            case 20:
              a = this._owner.yMin, r = t.percent ? e + (a - e) * n - a : n * -i, this._owner.height = this._owner._rawHeight - r, this._owner.yMin = a + r;
              break;
            case 21:
              a = this._owner.yMin, r = t.percent ? e + (a - e) * n - a : n * (1 - i), this._owner.height = this._owner._rawHeight - r, this._owner.yMin = a + r;
              break;
            case 22:
              a = this._owner.yMin, r = t.percent ? e + (a + this._owner._rawHeight - e) * n - (a + this._owner._rawHeight) : n * -i, this._owner.height = this._owner._rawHeight + r, this._owner.yMin = a;
              break;
            case 23:
              a = this._owner.yMin, t.percent ? this._owner == this._target.parent ? this._owner._underConstruct ? this._owner.height = e + this._target._height - this._target._height * i + (this._owner.sourceHeight - e - this._target.initHeight + this._target.initHeight * i) * n : this._owner.height = e + (this._owner._rawHeight - e) * n : (r = e + (a + this._owner._rawHeight - e) * n - (a + this._owner._rawHeight), this._owner.height = this._owner._rawHeight + r, this._owner.yMin = a) : this._owner == this._target.parent ? this._owner._underConstruct ? this._owner.height = this._owner.sourceHeight + (this._target._height - this._target.initHeight) * (1 - i) : this._owner.height = this._owner._rawHeight + n * (1 - i) : (r = n * (1 - i), this._owner.height = this._owner._rawHeight + r, this._owner.yMin = a);
          }
        }, i.addRefTarget = function (t) {
          t != this._owner.parent && t.on("fui_xy_changed", this, this.__targetXYChanged), t.on("fui_size_changed", this, this.__targetSizeChanged), t.on("fui_size_delay_change", this, this.__targetSizeWillChange), this._targetX = this._target.x, this._targetY = this._target.y, this._targetWidth = this._target._width, this._targetHeight = this._target._height;
        }, i.releaseRefTarget = function (t) {
          t.off("fui_xy_changed", this, this.__targetXYChanged), t.off("fui_size_changed", this, this.__targetSizeChanged), t.off("fui_size_delay_change", this, this.__targetSizeWillChange);
        }, i.__targetXYChanged = function (t) {
          if (null != this._owner.relations.handling || null != this._owner.group && this._owner.group._updating) return this._targetX = this._target.x, void(this._targetY = this._target.y);
          this._owner.relations.handling = t;
          for (var e = this._owner.x, i = this._owner.y, n = this._target.x - this._targetX, r = this._target.y - this._targetY, a = this._defs.length, s = 0; s < a; s++) this.applyOnXYChanged(this._defs[s], n, r);
          if (this._targetX = this._target.x, this._targetY = this._target.y, (e != this._owner.x || i != this._owner.y) && (e = this._owner.x - e, i = this._owner.y - i, this._owner.updateGearFromRelations(1, e, i), null != this._owner.parent && this._owner.parent._transitions.length > 0)) {
            a = this._owner.parent._transitions.length;
            for (var o = 0; o < a; o++) {
              this._owner.parent._transitions[o].updateFromRelations(this._owner.id, e, i);
            }
          }
          this._owner.relations.handling = null;
        }, i.__targetSizeChanged = function (t) {
          if (null != this._owner.relations.handling) return this._targetWidth = this._target._width, void(this._targetHeight = this._target._height);
          this._owner.relations.handling = t;
          for (var e = this._owner.x, i = this._owner.y, n = this._owner._rawWidth, r = this._owner._rawHeight, a = this._defs.length, s = 0; s < a; s++) this.applyOnSizeChanged(this._defs[s]);
          if (this._targetWidth = this._target._width, this._targetHeight = this._target._height, (e != this._owner.x || i != this._owner.y) && (e = this._owner.x - e, i = this._owner.y - i, this._owner.updateGearFromRelations(1, e, i), null != this._owner.parent && this._owner.parent._transitions.length > 0)) {
            a = this._owner.parent._transitions.length;
            for (var o = 0; o < a; o++) {
              this._owner.parent._transitions[o].updateFromRelations(this._owner.id, e, i);
            }
          }
          n == this._owner._rawWidth && r == this._owner._rawHeight || (n = this._owner._rawWidth - n, r = this._owner._rawHeight - r, this._owner.updateGearFromRelations(2, n, r)), this._owner.relations.handling = null;
        }, i.__targetSizeWillChange = function (t) {
          this._owner.relations.sizeDirty = !0;
        }, a(0, i, "owner", function () {
          return this._owner;
        }), a(0, i, "target", function () {
          return this._target;
        }, function (t) {
          this._target != t && (this._target && this.releaseRefTarget(this._target), this._target = t, this._target && this.addRefTarget(this._target));
        }), a(0, i, "isEmpty", function () {
          return 0 == this._defs.length;
        }), t.__init$ = function () {
          e = function () {
            function t() {
              this.percent = !1, this.type = 0, this.axis = 0;
            }
            r(t, "");
            return t.prototype.copyFrom = function (t) {
              this.percent = t.percent, this.type = t.type, this.axis = t.axis;
            }, t;
          }();
        }, t;
      }()),
      G = function () {
        function t(t) {
          this._owner = null, this._items = null, this.handling = null, this.sizeDirty = !1, this._owner = t, this._items = [];
        }
        r(t, "fairygui.Relations");
        var e = t.prototype;
        return e.add = function (t, e, i) {
          void 0 === i && (i = !1);
          for (var n = this._items.length, r = 0; r < n; r++) {
            var a = this._items[r];
            if (a.target == t) return void a.add(e, i);
          }
          var s = new k(this._owner);
          s.target = t, s.add(e, i), this._items.push(s);
        }, e.remove = function (t, e) {
          void 0 === e && (e = 0);
          for (var i = this._items.length, n = 0; n < i;) {
            var r = this._items[n];
            r.target == t ? (r.remove(e), r.isEmpty ? (r.dispose(), this._items.splice(n, 1), i--) : n++) : n++;
          }
        }, e.contains = function (t) {
          for (var e = this._items.length, i = 0; i < e; i++) {
            if (this._items[i].target == t) return !0;
          }
          return !1;
        }, e.clearFor = function (t) {
          for (var e = this._items.length, i = 0; i < e;) {
            var n = this._items[i];
            n.target == t ? (n.dispose(), this._items.splice(i, 1), e--) : i++;
          }
        }, e.clearAll = function () {
          for (var t = this._items.length, e = 0; e < t; e++) {
            this._items[e].dispose();
          }
          this._items.length = 0;
        }, e.copyFrom = function (t) {
          this.clearAll();
          for (var e = t._items, i = e.length, n = 0; n < i; n++) {
            var r = e[n],
              a = new k(this._owner);
            a.copyFrom(r), this._items.push(a);
          }
        }, e.dispose = function () {
          this.clearAll();
        }, e.onOwnerSizeChanged = function (t, e, i) {
          if (0 != this._items.length)
            for (var n = this._items.length, r = 0; r < n; r++) {
              this._items[r].applyOnSelfResized(t, e, i);
            }
        }, e.ensureRelationsSizeCorrect = function () {
          if (0 != this._items.length) {
            this.sizeDirty = !1;
            for (var t = this._items.length, e = 0; e < t; e++) {
              this._items[e].target.ensureSizeCorrect();
            }
          }
        }, e.setup = function (t, e) {
          for (var i, n = t.readByte(), r = 0; r < n; r++) {
            var a = t.getInt16();
            i = -1 == a ? this._owner.parent : e ? this._owner.getChildAt(a) : this._owner.parent.getChildAt(a);
            var s = new k(this._owner);
            s.target = i, this._items.push(s);
            for (var o = t.readByte(), h = 0; h < o; h++) {
              var l = t.readByte(),
                u = t.readBool();
              s.internalAdd(l, u);
            }
          }
        }, a(0, e, "empty", function () {
          return 0 == this._items.length;
        }), t;
      }(),
      H = (function () {
        function t() {}
        r(t, "fairygui.RelationType"), t.Left_Left = 0, t.Left_Center = 1, t.Left_Right = 2, t.Center_Center = 3, t.Right_Left = 4, t.Right_Center = 5, t.Right_Right = 6, t.Top_Top = 7, t.Top_Middle = 8, t.Top_Bottom = 9, t.Middle_Middle = 10, t.Bottom_Top = 11, t.Bottom_Middle = 12, t.Bottom_Bottom = 13, t.Width = 14, t.Height = 15, t.LeftExt_Left = 16, t.LeftExt_Right = 17, t.RightExt_Left = 18, t.RightExt_Right = 19, t.TopExt_Top = 20, t.TopExt_Bottom = 21, t.BottomExt_Top = 22, t.BottomExt_Bottom = 23, t.Size = 24;
      }(), function () {
        function t() {}
        r(t, "fairygui.ScrollBarDisplayType"), t.Default = 0, t.Visible = 1, t.Auto = 2, t.Hidden = 3;
      }(), function () {
        function t(t) {
          this._owner = null, this._container = null, this._maskContainer = null, this._alignContainer = null, this._scrollType = 0, this._scrollStep = 0, this._mouseWheelStep = 0, this._decelerationRate = NaN, this._scrollBarMargin = null, this._bouncebackEffect = !1, this._touchEffect = !1, this._scrollBarDisplayAuto = !1, this._vScrollNone = !1, this._hScrollNone = !1, this._needRefresh = !1, this._refreshBarAxis = null, this._displayOnLeft = !1, this._snapToItem = !1, this._displayInDemand = !1, this._mouseWheelEnabled = !1, this._pageMode = !1, this._inertiaDisabled = !1, this._xPos = NaN, this._yPos = NaN, this._viewSize = null, this._contentSize = null, this._overlapSize = null, this._pageSize = null, this._containerPos = null, this._beginTouchPos = null, this._lastTouchPos = null, this._lastTouchGlobalPos = null, this._velocity = null, this._velocityScale = NaN, this._lastMoveTime = NaN, this._isHoldAreaDone = !1, this._aniFlag = 0, this._scrollBarVisible = !1, this._loop = 0, this._headerLockedSize = 0, this._footerLockedSize = 0, this._refreshEventDispatching = !1, this._tweening = 0, this._tweenTime = null, this._tweenDuration = null, this._tweenStart = null, this._tweenChange = null, this._pageController = null, this._hzScrollBar = null, this._vtScrollBar = null, this._header = null, this._footer = null, this.isDragged = !1, this._owner = t, this._maskContainer = new T(), this._owner.displayObject.addChild(this._maskContainer), this._container = this._owner._container, this._container.pos(0, 0), this._maskContainer.addChild(this._container), this._scrollBarVisible = !0, this._mouseWheelEnabled = !0, this._xPos = 0, this._yPos = 0, this._aniFlag = 0, this._footerLockedSize = 0, this._headerLockedSize = 0, this._scrollBarMargin = new F(), this._viewSize = new g(), this._contentSize = new g(), this._pageSize = new g(1, 1), this._overlapSize = new g(), this._tweenTime = new g(), this._tweenStart = new g(), this._tweenDuration = new g(), this._tweenChange = new g(), this._velocity = new g(), this._containerPos = new g(), this._beginTouchPos = new g(), this._lastTouchPos = new g(), this._lastTouchGlobalPos = new g(), this._scrollStep = Z.defaultScrollStep, this._mouseWheelStep = 2 * this._scrollStep, this._decelerationRate = Z.defaultScrollDecelerationRate, this._owner.on("mousedown", this, this.__mouseDown), this._owner.on("mousewheel", this, this.__mouseWheel);
        }
        r(t, "fairygui.ScrollPane");
        var e = t.prototype;
        return e.setup = function (t) {
          this._scrollType = t.readByte();
          var e = t.readByte(),
            i = t.getInt32();
          t.readBool() && (this._scrollBarMargin.top = t.getInt32(), this._scrollBarMargin.bottom = t.getInt32(), this._scrollBarMargin.left = t.getInt32(), this._scrollBarMargin.right = t.getInt32());
          var n = t.readS(),
            r = t.readS(),
            a = t.readS(),
            s = t.readS();
          if (this._displayOnLeft = 0 != (1 & i), this._snapToItem = 0 != (2 & i), this._displayInDemand = 0 != (4 & i), this._pageMode = 0 != (8 & i), this._touchEffect = !!(16 & i) || !(32 & i) && Z.defaultScrollTouchEffect, this._bouncebackEffect = !!(64 & i) || !(128 & i) && Z.defaultScrollBounceEffect, this._inertiaDisabled = 0 != (256 & i), 0 == (512 & i) && (this._maskContainer.scrollRect = new v()), 0 == e && (e = Z.defaultScrollBarDisplay), 3 != e) {
            if (2 == this._scrollType || 1 == this._scrollType) {
              var o = n || Z.verticalScrollBar;
              if (o) {
                if (this._vtScrollBar = J.createObjectFromURL(o), !this._vtScrollBar) throw "cannot create scrollbar from " + o;
                this._vtScrollBar.setScrollPane(this, !0), this._owner.displayObject.addChild(this._vtScrollBar.displayObject);
              }
            }
            if ((2 == this._scrollType || 0 == this._scrollType) && (o = r || Z.horizontalScrollBar)) {
              if (this._hzScrollBar = J.createObjectFromURL(o), !this._hzScrollBar) throw "cannot create scrollbar from " + o;
              this._hzScrollBar.setScrollPane(this, !1), this._owner.displayObject.addChild(this._hzScrollBar.displayObject);
            }
            this._scrollBarDisplayAuto = 2 == e, this._scrollBarDisplayAuto && (this._scrollBarVisible = !1, this._vtScrollBar && (this._vtScrollBar.displayObject.visible = !1), this._hzScrollBar && (this._hzScrollBar.displayObject.visible = !1));
          } else this._mouseWheelEnabled = !1;
          if (a && (this._header = J.createObjectFromURL(a), null == this._header)) throw new Error("FairyGUI: cannot create scrollPane header from " + a);
          if (s && (this._footer = J.createObjectFromURL(s), null == this._footer)) throw new Error("FairyGUI: cannot create scrollPane footer from " + s);
          null == this._header && null == this._footer || (this._refreshBarAxis = 2 == this._scrollType || 1 == this._scrollType ? "y" : "x"), this.setSize(this.owner.width, this.owner.height);
        }, e.dispose = function () {
          0 != this._tweening && i.timer.clear(this, this.tweenUpdate), this._pageController = null, null != this._hzScrollBar && this._hzScrollBar.dispose(), null != this._vtScrollBar && this._vtScrollBar.dispose(), null != this._header && this._header.dispose(), null != this._footer && this._footer.dispose();
        }, e.setPercX = function (t, e) {
          void 0 === e && (e = !1), this._owner.ensureBoundsCorrect(), this.setPosX(this._overlapSize.x * et.clamp01(t), e);
        }, e.setPercY = function (t, e) {
          void 0 === e && (e = !1), this._owner.ensureBoundsCorrect(), this.setPosY(this._overlapSize.y * et.clamp01(t), e);
        }, e.setPosX = function (t, e) {
          void 0 === e && (e = !1), this._owner.ensureBoundsCorrect(), 1 == this._loop && (t = this.loopCheckingNewPos(t, "x")), (t = et.clamp(t, 0, this._overlapSize.x)) != this._xPos && (this._xPos = t, this.posChanged(e));
        }, e.setPosY = function (t, e) {
          void 0 === e && (e = !1), this._owner.ensureBoundsCorrect(), 1 == this._loop && (t = this.loopCheckingNewPos(t, "y")), (t = et.clamp(t, 0, this._overlapSize.y)) != this._yPos && (this._yPos = t, this.posChanged(e));
        }, e.setCurrentPageX = function (t, e) {
          this._pageMode && this._overlapSize.x > 0 && this.setPosX(t * this._pageSize.x, e);
        }, e.setCurrentPageY = function (t, e) {
          this._pageMode && this._overlapSize.y > 0 && this.setPosY(t * this._pageSize.y, e);
        }, e.scrollTop = function (t) {
          void 0 === t && (t = !1), this.setPercY(0, t);
        }, e.scrollBottom = function (t) {
          void 0 === t && (t = !1), this.setPercY(1, t);
        }, e.scrollUp = function (t, e) {
          void 0 === t && (t = 1), void 0 === e && (e = !1), this._pageMode ? this.setPosY(this._yPos - this._pageSize.y * t, e) : this.setPosY(this._yPos - this._scrollStep * t, e);
        }, e.scrollDown = function (t, e) {
          void 0 === t && (t = 1), void 0 === e && (e = !1), this._pageMode ? this.setPosY(this._yPos + this._pageSize.y * t, e) : this.setPosY(this._yPos + this._scrollStep * t, e);
        }, e.scrollLeft = function (t, e) {
          void 0 === t && (t = 1), void 0 === e && (e = !1), this._pageMode ? this.setPosX(this._xPos - this._pageSize.x * t, e) : this.setPosX(this._xPos - this._scrollStep * t, e);
        }, e.scrollRight = function (t, e) {
          void 0 === t && (t = 1), void 0 === e && (e = !1), this._pageMode ? this.setPosX(this._xPos + this._pageSize.x * t, e) : this.setPosX(this._xPos + this._scrollStep * t, e);
        }, e.scrollToView = function (t, e, i) {
          void 0 === e && (e = !1), void 0 === i && (i = !1), this._owner.ensureBoundsCorrect(), this._needRefresh && this.refresh();
          var n;
          if (t instanceof fairygui.GObject ? t.parent != this._owner ? (t.parent.localToGlobalRect(t.x, t.y, t.width, t.height, fairygui.ScrollPane.sHelperRect), n = this._owner.globalToLocalRect(fairygui.ScrollPane.sHelperRect.x, fairygui.ScrollPane.sHelperRect.y, fairygui.ScrollPane.sHelperRect.width, fairygui.ScrollPane.sHelperRect.height, fairygui.ScrollPane.sHelperRect)) : (n = fairygui.ScrollPane.sHelperRect).setTo(t.x, t.y, t.width, t.height) : n = t, this._overlapSize.y > 0) {
            var r = this._yPos + this._viewSize.y;
            i || n.y <= this._yPos || n.height >= this._viewSize.y ? this._pageMode ? this.setPosY(Math.floor(n.y / this._pageSize.y) * this._pageSize.y, e) : this.setPosY(n.y, e) : n.y + n.height > r && (this._pageMode ? this.setPosY(Math.floor(n.y / this._pageSize.y) * this._pageSize.y, e) : n.height <= this._viewSize.y / 2 ? this.setPosY(n.y + 2 * n.height - this._viewSize.y, e) : this.setPosY(n.y + n.height - this._viewSize.y, e));
          }
          if (this._overlapSize.x > 0) {
            var a = this._xPos + this._viewSize.x;
            i || n.x <= this._xPos || n.width >= this._viewSize.x ? this._pageMode ? this.setPosX(Math.floor(n.x / this._pageSize.x) * this._pageSize.x, e) : this.setPosX(n.x, e) : n.x + n.width > a && (this._pageMode ? this.setPosX(Math.floor(n.x / this._pageSize.x) * this._pageSize.x, e) : n.width <= this._viewSize.x / 2 ? this.setPosX(n.x + 2 * n.width - this._viewSize.x, e) : this.setPosX(n.x + n.width - this._viewSize.x, e));
          }!e && this._needRefresh && this.refresh();
        }, e.isChildInView = function (t) {
          if (this._overlapSize.y > 0) {
            var e = t.y + this._container.y;
            if (e < -t.height || e > this._viewSize.y) return !1;
          }
          return !(this._overlapSize.x > 0 && ((e = t.x + this._container.x) < -t.width || e > this._viewSize.x));
        }, e.cancelDragging = function () {
          this._owner.displayObject.stage.off("mousemove", this, this.__mouseMove), this._owner.displayObject.stage.off("mouseup", this, this.__mouseUp), this._owner.displayObject.stage.off("click", this, this.__click), t.draggingPane == this && (t.draggingPane = null), t._gestureFlag = 0, this.isDragged = !1, this._maskContainer.mouseEnabled = !0;
        }, e.lockHeader = function (t) {
          this._headerLockedSize != t && (this._headerLockedSize = t, !this._refreshEventDispatching && this._container[this._refreshBarAxis] >= 0 && (this._tweenStart.setTo(this._container.x, this._container.y), this._tweenChange.setTo(0, 0), this._tweenChange[this._refreshBarAxis] = this._headerLockedSize - this._tweenStart[this._refreshBarAxis], this._tweenDuration.setTo(.3, .3), this._tweenTime.setTo(0, 0), this._tweening = 2, i.timer.frameLoop(1, this, this.tweenUpdate)));
        }, e.lockFooter = function (t) {
          if (this._footerLockedSize != t && (this._footerLockedSize = t, !this._refreshEventDispatching && this._container[this._refreshBarAxis] <= -this._overlapSize[this._refreshBarAxis])) {
            this._tweenStart.setTo(this._container.x, this._container.y), this._tweenChange.setTo(0, 0);
            var e = this._overlapSize[this._refreshBarAxis];
            0 == e ? e = Math.max(this._contentSize[this._refreshBarAxis] + this._footerLockedSize - this._viewSize[this._refreshBarAxis], 0) : e += this._footerLockedSize, this._tweenChange[this._refreshBarAxis] = -e - this._tweenStart[this._refreshBarAxis], this._tweenDuration.setTo(.3, .3), this._tweenTime.setTo(0, 0), this._tweening = 2, i.timer.frameLoop(1, this, this.tweenUpdate);
          }
        }, e.onOwnerSizeChanged = function () {
          this.setSize(this._owner.width, this._owner.height), this.posChanged(!1);
        }, e.handleControllerChanged = function (t) {
          this._pageController == t && (0 == this._scrollType ? this.setCurrentPageX(t.selectedIndex, !0) : this.setCurrentPageY(t.selectedIndex, !0));
        }, e.updatePageController = function () {
          if (null != this._pageController && !this._pageController.changing) {
            var t = 0;
            if ((t = 0 == this._scrollType ? this.currentPageX : this.currentPageY) < this._pageController.pageCount) {
              var e = this._pageController;
              this._pageController = null, e.selectedIndex = t, this._pageController = e;
            }
          }
        }, e.adjustMaskContainer = function () {
          var t = NaN,
            e = NaN;
          t = this._displayOnLeft && null != this._vtScrollBar ? Math.floor(this._owner.margin.left + this._vtScrollBar.width) : Math.floor(this._owner.margin.left), e = Math.floor(this._owner.margin.top), this._maskContainer.pos(t, e), 0 != this._owner._alignOffset.x || 0 != this._owner._alignOffset.y ? (null == this._alignContainer && (this._alignContainer = new T(), this._maskContainer.addChild(this._alignContainer), this._alignContainer.addChild(this._container)), this._alignContainer.pos(this._owner._alignOffset.x, this._owner._alignOffset.y)) : this._alignContainer && this._alignContainer.pos(0, 0);
        }, e.setSize = function (t, e) {
          this.adjustMaskContainer(), this._hzScrollBar && (this._hzScrollBar.y = e - this._hzScrollBar.height, this._vtScrollBar && !this._vScrollNone ? (this._hzScrollBar.width = t - this._vtScrollBar.width - this._scrollBarMargin.left - this._scrollBarMargin.right, this._displayOnLeft ? this._hzScrollBar.x = this._scrollBarMargin.left + this._vtScrollBar.width : this._hzScrollBar.x = this._scrollBarMargin.left) : (this._hzScrollBar.width = t - this._scrollBarMargin.left - this._scrollBarMargin.right, this._hzScrollBar.x = this._scrollBarMargin.left)), this._vtScrollBar && (this._displayOnLeft || (this._vtScrollBar.x = t - this._vtScrollBar.width), this._hzScrollBar ? this._vtScrollBar.height = e - this._hzScrollBar.height - this._scrollBarMargin.top - this._scrollBarMargin.bottom : this._vtScrollBar.height = e - this._scrollBarMargin.top - this._scrollBarMargin.bottom, this._vtScrollBar.y = this._scrollBarMargin.top), this._viewSize.x = t, this._viewSize.y = e, this._hzScrollBar && !this._hScrollNone && (this._viewSize.y -= this._hzScrollBar.height), this._vtScrollBar && !this._vScrollNone && (this._viewSize.x -= this._vtScrollBar.width), this._viewSize.x -= this._owner.margin.left + this._owner.margin.right, this._viewSize.y -= this._owner.margin.top + this._owner.margin.bottom, this._viewSize.x = Math.max(1, this._viewSize.x), this._viewSize.y = Math.max(1, this._viewSize.y), this._pageSize.x = this._viewSize.x, this._pageSize.y = this._viewSize.y, this.handleSizeChanged();
        }, e.setContentSize = function (t, e) {
          this._contentSize.x == t && this._contentSize.y == e || (this._contentSize.x = t, this._contentSize.y = e, this.handleSizeChanged());
        }, e.changeContentSizeOnScrolling = function (t, e, i, n) {
          var r = this._xPos == this._overlapSize.x,
            a = this._yPos == this._overlapSize.y;
          this._contentSize.x += t, this._contentSize.y += e, this.handleSizeChanged(), 1 == this._tweening ? (0 != t && r && this._tweenChange.x < 0 && (this._xPos = this._overlapSize.x, this._tweenChange.x = -this._xPos - this._tweenStart.x), 0 != e && a && this._tweenChange.y < 0 && (this._yPos = this._overlapSize.y, this._tweenChange.y = -this._yPos - this._tweenStart.y)) : 2 == this._tweening ? (0 != i && (this._container.x -= i, this._tweenStart.x -= i, this._xPos = -this._container.x), 0 != n && (this._container.y -= n, this._tweenStart.y -= n, this._yPos = -this._container.y)) : this.isDragged ? (0 != i && (this._container.x -= i, this._containerPos.x -= i, this._xPos = -this._container.x), 0 != n && (this._container.y -= n, this._containerPos.y -= n, this._yPos = -this._container.y)) : (0 != t && r && (this._xPos = this._overlapSize.x, this._container.x = -this._xPos), 0 != e && a && (this._yPos = this._overlapSize.y, this._container.y = -this._yPos)), this._pageMode && this.updatePageController();
        }, e.handleSizeChanged = function (t) {
          void 0 === t && (t = !1), this._displayInDemand && (this._vtScrollBar && (this._contentSize.y <= this._viewSize.y ? this._vScrollNone || (this._vScrollNone = !0, this._viewSize.x += this._vtScrollBar.width) : this._vScrollNone && (this._vScrollNone = !1, this._viewSize.x -= this._vtScrollBar.width)), this._hzScrollBar && (this._contentSize.x <= this._viewSize.x ? this._hScrollNone || (this._hScrollNone = !0, this._viewSize.y += this._hzScrollBar.height) : this._hScrollNone && (this._hScrollNone = !1, this._viewSize.y -= this._hzScrollBar.height))), this._vtScrollBar && (this._viewSize.y < this._vtScrollBar.minSize ? this._vtScrollBar.displayObject.visible = !1 : (this._vtScrollBar.displayObject.visible = this._scrollBarVisible && !this._vScrollNone, 0 == this._contentSize.y ? this._vtScrollBar.displayPerc = 0 : this._vtScrollBar.displayPerc = Math.min(1, this._viewSize.y / this._contentSize.y))), this._hzScrollBar && (this._viewSize.x < this._hzScrollBar.minSize ? this._hzScrollBar.displayObject.visible = !1 : (this._hzScrollBar.displayObject.visible = this._scrollBarVisible && !this._hScrollNone, 0 == this._contentSize.x ? this._hzScrollBar.displayPerc = 0 : this._hzScrollBar.displayPerc = Math.min(1, this._viewSize.x / this._contentSize.x)));
          var e = this._maskContainer.scrollRect;
          if (e && (e.width = this._viewSize.x, e.height = this._viewSize.y, this._maskContainer.scrollRect = e), 0 == this._scrollType || 2 == this._scrollType ? this._overlapSize.x = Math.ceil(Math.max(0, this._contentSize.x - this._viewSize.x)) : this._overlapSize.x = 0, 1 == this._scrollType || 2 == this._scrollType ? this._overlapSize.y = Math.ceil(Math.max(0, this._contentSize.y - this._viewSize.y)) : this._overlapSize.y = 0, this._xPos = et.clamp(this._xPos, 0, this._overlapSize.x), this._yPos = et.clamp(this._yPos, 0, this._overlapSize.y), null != this._refreshBarAxis) {
            var i = this._overlapSize[this._refreshBarAxis];
            0 == i ? i = Math.max(this._contentSize[this._refreshBarAxis] + this._footerLockedSize - this._viewSize[this._refreshBarAxis], 0) : i += this._footerLockedSize, "x" == this._refreshBarAxis ? this._container.pos(et.clamp(this._container.x, -i, this._headerLockedSize), et.clamp(this._container.y, -this._overlapSize.y, 0)) : this._container.pos(et.clamp(this._container.x, -this._overlapSize.x, 0), et.clamp(this._container.y, -i, this._headerLockedSize)), null != this._header && ("x" == this._refreshBarAxis ? this._header.height = this._viewSize.y : this._header.width = this._viewSize.x), null != this._footer && ("y" == this._refreshBarAxis ? this._footer.height = this._viewSize.y : this._footer.width = this._viewSize.x);
          } else this._container.pos(et.clamp(this._container.x, -this._overlapSize.x, 0), et.clamp(this._container.y, -this._overlapSize.y, 0));
          this.syncScrollBar(!0), this.checkRefreshBar(), this._pageMode && this.updatePageController();
        }, e.posChanged = function (t) {
          0 == this._aniFlag ? this._aniFlag = t ? 1 : -1 : 1 != this._aniFlag || t || (this._aniFlag = -1), this._needRefresh = !0, i.timer.callLater(this, this.refresh);
        }, e.refresh = function () {
          this._needRefresh = !1, i.timer.clear(this, this.refresh), (this._pageMode || this._snapToItem) && (t.sEndPos.setTo(-this._xPos, -this._yPos), this.alignPosition(t.sEndPos, !1), this._xPos = -t.sEndPos.x, this._yPos = -t.sEndPos.y), this.refresh2(), P.dispatch("fui_scroll", this._owner.displayObject), this._needRefresh && (this._needRefresh = !1, i.timer.clear(this, this.refresh), this.refresh2()), this.syncScrollBar(), this._aniFlag = 0;
        }, e.refresh2 = function () {
          if (1 != this._aniFlag || this.isDragged) 0 != this._tweening && this.killTween(), this._container.pos(Math.floor(-this._xPos), Math.floor(-this._yPos)), this.loopCheckingCurrent();
          else {
            var t = NaN,
              e = NaN;
            this._overlapSize.x > 0 ? t = -Math.floor(this._xPos) : (0 != this._container.x && (this._container.x = 0), t = 0), this._overlapSize.y > 0 ? e = -Math.floor(this._yPos) : (0 != this._container.y && (this._container.y = 0), e = 0), t != this._container.x || e != this._container.y ? (this._tweening = 1, this._tweenTime.setTo(0, 0), this._tweenDuration.setTo(.5, .5), this._tweenStart.setTo(this._container.x, this._container.y), this._tweenChange.setTo(t - this._tweenStart.x, e - this._tweenStart.y), i.timer.frameLoop(1, this, this.tweenUpdate)) : 0 != this._tweening && this.killTween();
          }
          this._pageMode && this.updatePageController();
        }, e.syncScrollBar = function (t) {
          void 0 === t && (t = !1), null != this._vtScrollBar && (this._vtScrollBar.scrollPerc = 0 == this._overlapSize.y ? 0 : et.clamp(-this._container.y, 0, this._overlapSize.y) / this._overlapSize.y, this._scrollBarDisplayAuto && this.showScrollBar(!t)), null != this._hzScrollBar && (this._hzScrollBar.scrollPerc = 0 == this._overlapSize.x ? 0 : et.clamp(-this._container.x, 0, this._overlapSize.x) / this._overlapSize.x, this._scrollBarDisplayAuto && this.showScrollBar(!t)), t && (this._maskContainer.mouseEnabled = !0);
        }, e.__mouseDown = function () {
          if (this._touchEffect) {
            0 != this._tweening ? (this.killTween(), this.isDragged = !0) : this.isDragged = !1;
            var t = this._owner.globalToLocal(i.stage.mouseX, i.stage.mouseY, fairygui.ScrollPane.sHelperPoint);
            this._containerPos.setTo(this._container.x, this._container.y), this._beginTouchPos.setTo(t.x, t.y), this._lastTouchPos.setTo(t.x, t.y), this._lastTouchGlobalPos.setTo(i.stage.mouseX, i.stage.mouseY), this._isHoldAreaDone = !1, this._velocity.setTo(0, 0), this._velocityScale = 1, this._lastMoveTime = i.timer.currTimer / 1e3, this._owner.displayObject.stage.on("mousemove", this, this.__mouseMove), this._owner.displayObject.stage.on("mouseup", this, this.__mouseUp), this._owner.displayObject.stage.on("click", this, this.__click);
          }
        }, e.__mouseMove = function () {
          if (this._touchEffect && (null == t.draggingPane || t.draggingPane == this) && null == L.draggingObject) {
            var e = Z.touchScrollSensitivity,
              n = this._owner.globalToLocal(i.stage.mouseX, i.stage.mouseY, fairygui.ScrollPane.sHelperPoint),
              r = NaN,
              a = NaN,
              s = !1,
              o = !1;
            if (1 == this._scrollType) {
              if (!this._isHoldAreaDone) {
                if (t._gestureFlag |= 1, (r = Math.abs(this._beginTouchPos.y - n.y)) < e) return;
                if (0 != (2 & t._gestureFlag) && (a = Math.abs(this._beginTouchPos.x - n.x), r < a)) return;
              }
              s = !0;
            } else if (0 == this._scrollType) {
              if (!this._isHoldAreaDone) {
                if (t._gestureFlag |= 2, (r = Math.abs(this._beginTouchPos.x - n.x)) < e) return;
                if (0 != (1 & t._gestureFlag) && (a = Math.abs(this._beginTouchPos.y - n.y), r < a)) return;
              }
              o = !0;
            } else {
              if (t._gestureFlag = 3, !this._isHoldAreaDone && (r = Math.abs(this._beginTouchPos.y - n.y)) < e && (r = Math.abs(this._beginTouchPos.x - n.x)) < e) return;
              s = o = !0;
            }
            var h = Math.floor(this._containerPos.x + n.x - this._beginTouchPos.x),
              l = Math.floor(this._containerPos.y + n.y - this._beginTouchPos.y);
            s && (l > 0 ? this._bouncebackEffect ? null != this._header && 0 != this._header.maxHeight ? this._container.y = Math.floor(Math.min(.5 * l, this._header.maxHeight)) : this._container.y = Math.floor(Math.min(.5 * l, .5 * this._viewSize.y)) : this._container.y = 0 : l < -this._overlapSize.y ? this._bouncebackEffect ? null != this._footer && this._footer.maxHeight > 0 ? this._container.y = Math.floor(Math.max(.5 * (l + this._overlapSize.y), -this._footer.maxHeight) - this._overlapSize.y) : this._container.y = Math.floor(Math.max(.5 * (l + this._overlapSize.y), .5 * -this._viewSize.y) - this._overlapSize.y) : this._container.y = -this._overlapSize.y : this._container.y = l), o && (h > 0 ? this._bouncebackEffect ? null != this._header && 0 != this._header.maxWidth ? this._container.x = Math.floor(Math.min(.5 * h, this._header.maxWidth)) : this._container.x = Math.floor(Math.min(.5 * h, .5 * this._viewSize.x)) : this._container.x = 0 : h < 0 - this._overlapSize.x ? this._bouncebackEffect ? null != this._footer && this._footer.maxWidth > 0 ? this._container.x = Math.floor(Math.max(.5 * (h + this._overlapSize.x), -this._footer.maxWidth) - this._overlapSize.x) : this._container.x = Math.floor(Math.max(.5 * (h + this._overlapSize.x), .5 * -this._viewSize.x) - this._overlapSize.x) : this._container.x = -this._overlapSize.x : this._container.x = h);
            var u = "slow" == i.stage.frameRate ? 30 : 60,
              c = i.timer.currTimer / 1e3,
              _ = Math.max(c - this._lastMoveTime, 1 / u),
              d = n.x - this._lastTouchPos.x,
              f = n.y - this._lastTouchPos.y;
            if (o || (d = 0), s || (f = 0), 0 != _) {
              var p = _ * u - 1;
              if (p > 1) {
                var m = Math.pow(.833, p);
                this._velocity.x = this._velocity.x * m, this._velocity.y = this._velocity.y * m;
              }
              this._velocity.x = et.lerp(this._velocity.x, 60 * d / u / _, 10 * _), this._velocity.y = et.lerp(this._velocity.y, 60 * f / u / _, 10 * _);
            }
            var g = this._lastTouchGlobalPos.x - i.stage.mouseX,
              v = this._lastTouchGlobalPos.y - i.stage.mouseY;
            0 != d ? this._velocityScale = Math.abs(g / d) : 0 != f && (this._velocityScale = Math.abs(v / f)), this._lastTouchPos.setTo(n.x, n.y), this._lastTouchGlobalPos.setTo(i.stage.mouseX, i.stage.mouseY), this._lastMoveTime = c, this._overlapSize.x > 0 && (this._xPos = et.clamp(-this._container.x, 0, this._overlapSize.x)), this._overlapSize.y > 0 && (this._yPos = et.clamp(-this._container.y, 0, this._overlapSize.y)), 0 != this._loop && (h = this._container.x, l = this._container.y, this.loopCheckingCurrent() && (this._containerPos.x += this._container.x - h, this._containerPos.y += this._container.y - l)), t.draggingPane = this, this._isHoldAreaDone = !0, this.isDragged = !0, this._maskContainer.mouseEnabled = !1, this.syncScrollBar(), this.checkRefreshBar(), this._pageMode && this.updatePageController(), P.dispatch("fui_scroll", this._owner.displayObject);
          }
        }, e.__mouseUp = function () {
          if (this._owner.displayObject.stage.off("mousemove", this, this.__mouseMove), this._owner.displayObject.stage.off("mouseup", this, this.__mouseUp), this._owner.displayObject.stage.off("click", this, this.__click), t.draggingPane == this && (t.draggingPane = null), t._gestureFlag = 0, !this.isDragged || !this._touchEffect) return this.isDragged = !1, void(this._maskContainer.mouseEnabled = !0);
          this.isDragged = !1, this._maskContainer.mouseEnabled = !0, this._tweenStart.setTo(this._container.x, this._container.y), t.sEndPos.setTo(this._tweenStart.x, this._tweenStart.y);
          var e = !1;
          if (this._container.x > 0 ? (t.sEndPos.x = 0, e = !0) : this._container.x < -this._overlapSize.x && (t.sEndPos.x = -this._overlapSize.x, e = !0), this._container.y > 0 ? (t.sEndPos.y = 0, e = !0) : this._container.y < -this._overlapSize.y && (t.sEndPos.y = -this._overlapSize.y, e = !0), e) {
            if (this._tweenChange.setTo(t.sEndPos.x - this._tweenStart.x, t.sEndPos.y - this._tweenStart.y), this._tweenChange.x < -Z.touchDragSensitivity || this._tweenChange.y < -Z.touchDragSensitivity ? (this._refreshEventDispatching = !0, P.dispatch("fui_pull_down_release", this._owner.displayObject), this._refreshEventDispatching = !1) : (this._tweenChange.x > Z.touchDragSensitivity || this._tweenChange.y > Z.touchDragSensitivity) && (this._refreshEventDispatching = !0, P.dispatch("fui_pull_up_release", this._owner.displayObject), this._refreshEventDispatching = !1), this._headerLockedSize > 0 && 0 == t.sEndPos[this._refreshBarAxis]) t.sEndPos[this._refreshBarAxis] = this._headerLockedSize, this._tweenChange.x = t.sEndPos.x - this._tweenStart.x, this._tweenChange.y = t.sEndPos.y - this._tweenStart.y;
            else if (this._footerLockedSize > 0 && t.sEndPos[this._refreshBarAxis] == -this._overlapSize[this._refreshBarAxis]) {
              var n = this._overlapSize[this._refreshBarAxis];
              0 == n ? n = Math.max(this._contentSize[this._refreshBarAxis] + this._footerLockedSize - this._viewSize[this._refreshBarAxis], 0) : n += this._footerLockedSize, t.sEndPos[this._refreshBarAxis] = -n, this._tweenChange.x = t.sEndPos.x - this._tweenStart.x, this._tweenChange.y = t.sEndPos.y - this._tweenStart.y;
            }
            this._tweenDuration.setTo(.3, .3);
          } else {
            if (this._inertiaDisabled) this._tweenDuration.setTo(.3, .3);
            else {
              var r = "slow" == i.stage.frameRate ? 30 : 60,
                a = (i.timer.currTimer / 1e3 - this._lastMoveTime) * r - 1;
              if (a > 1) {
                var s = Math.pow(.833, a);
                this._velocity.x = this._velocity.x * s, this._velocity.y = this._velocity.y * s;
              }
              this.updateTargetAndDuration(this._tweenStart, t.sEndPos);
            }
            if (t.sOldChange.setTo(t.sEndPos.x - this._tweenStart.x, t.sEndPos.y - this._tweenStart.y), this.loopCheckingTarget(t.sEndPos), (this._pageMode || this._snapToItem) && this.alignPosition(t.sEndPos, !0), this._tweenChange.x = t.sEndPos.x - this._tweenStart.x, this._tweenChange.y = t.sEndPos.y - this._tweenStart.y, 0 == this._tweenChange.x && 0 == this._tweenChange.y) return void(this._scrollBarDisplayAuto && this.showScrollBar(!1));
            (this._pageMode || this._snapToItem) && (this.fixDuration("x", t.sOldChange.x), this.fixDuration("y", t.sOldChange.y));
          }
          this._tweening = 2, this._tweenTime.setTo(0, 0), i.timer.frameLoop(1, this, this.tweenUpdate);
        }, e.__click = function () {
          this.isDragged = !1;
        }, e.__mouseWheel = function (t) {
          if (this._mouseWheelEnabled) {
            this._owner.globalToLocal(i.stage.mouseX, i.stage.mouseY, fairygui.ScrollPane.sHelperPoint);
            var e = t.delta;
            e = e > 0 ? -1 : e < 0 ? 1 : 0, this._overlapSize.x > 0 && 0 == this._overlapSize.y ? this._pageMode ? this.setPosX(this._xPos + this._pageSize.x * e, !1) : this.setPosX(this._xPos + this._mouseWheelStep * e, !1) : this._pageMode ? this.setPosY(this._yPos + this._pageSize.y * e, !1) : this.setPosY(this._yPos + this._mouseWheelStep * e, !1);
          }
        }, e.__rollOver = function () {
          this.showScrollBar(!0);
        }, e.__rollOut = function () {
          this.showScrollBar(!1);
        }, e.showScrollBar = function (t) {
          t ? (this.__showScrollBar(!0), i.timer.clear(this, this.__showScrollBar)) : i.timer.once(500, this, this.__showScrollBar, [t]);
        }, e.__showScrollBar = function (t) {
          this._scrollBarVisible = t && this._viewSize.x > 0 && this._viewSize.y > 0, this._vtScrollBar && (this._vtScrollBar.displayObject.visible = this._scrollBarVisible && !this._vScrollNone), this._hzScrollBar && (this._hzScrollBar.displayObject.visible = this._scrollBarVisible && !this._hScrollNone);
        }, e.getLoopPartSize = function (t, e) {
          return (this._contentSize[e] + ("x" == e ? this._owner.columnGap : this._owner.lineGap)) / t;
        }, e.loopCheckingCurrent = function () {
          var t = !1;
          return 1 == this._loop && this._overlapSize.x > 0 ? this._xPos < .001 ? (this._xPos += this.getLoopPartSize(2, "x"), t = !0) : this._xPos >= this._overlapSize.x && (this._xPos -= this.getLoopPartSize(2, "x"), t = !0) : 2 == this._loop && this._overlapSize.y > 0 && (this._yPos < .001 ? (this._yPos += this.getLoopPartSize(2, "y"), t = !0) : this._yPos >= this._overlapSize.y && (this._yPos -= this.getLoopPartSize(2, "y"), t = !0)), t && this._container.pos(Math.floor(-this._xPos), Math.floor(-this._yPos)), t;
        }, e.loopCheckingTarget = function (t) {
          1 == this._loop && this.loopCheckingTarget2(t, "x"), 2 == this._loop && this.loopCheckingTarget2(t, "y");
        }, e.loopCheckingTarget2 = function (t, e) {
          var i = NaN,
            n = NaN;
          t[e] > 0 ? (i = this.getLoopPartSize(2, e), (n = this._tweenStart[e] - i) <= 0 && n >= -this._overlapSize[e] && (t[e] -= i, this._tweenStart[e] = n)) : t[e] < -this._overlapSize[e] && (i = this.getLoopPartSize(2, e), (n = this._tweenStart[e] + i) <= 0 && n >= -this._overlapSize[e] && (t[e] += i, this._tweenStart[e] = n));
        }, e.loopCheckingNewPos = function (t, e) {
          if (0 == this._overlapSize[e]) return t;
          var i = "x" == e ? this._xPos : this._yPos,
            n = !1,
            r = NaN;
          return t < .001 ? (t += this.getLoopPartSize(2, e)) > i && (r = this.getLoopPartSize(6, e), r = Math.ceil((t - i) / r) * r, i = et.clamp(i + r, 0, this._overlapSize[e]), n = !0) : t >= this._overlapSize[e] && (t -= this.getLoopPartSize(2, e)) < i && (r = this.getLoopPartSize(6, e), r = Math.ceil((i - t) / r) * r, i = et.clamp(i - r, 0, this._overlapSize[e]), n = !0), n && ("x" == e ? this._container.x = -Math.floor(i) : this._container.y = -Math.floor(i)), t;
        }, e.alignPosition = function (e, i) {
          if (this._pageMode) e.x = this.alignByPage(e.x, "x", i), e.y = this.alignByPage(e.y, "y", i);
          else if (this._snapToItem) {
            var n = this._owner.getSnappingPosition(-e.x, -e.y, t.sHelperPoint);
            e.x < 0 && e.x > -this._overlapSize.x && (e.x = -n.x), e.y < 0 && e.y > -this._overlapSize.y && (e.y = -n.y);
          }
        }, e.alignByPage = function (t, e, i) {
          var n = 0;
          if (t > 0) n = 0;
          else if (t < -this._overlapSize[e]) n = Math.ceil(this._contentSize[e] / this._pageSize[e]) - 1;
          else {
            n = Math.floor(-t / this._pageSize[e]);
            var r = i ? t - this._containerPos[e] : t - this._container[e],
              a = Math.min(this._pageSize[e], this._contentSize[e] - (n + 1) * this._pageSize[e]),
              s = -t - n * this._pageSize[e];
            Math.abs(r) > this._pageSize[e] ? s > .5 * a && n++ : s > a * (r < 0 ? .3 : .7) && n++, (t = -n * this._pageSize[e]) < -this._overlapSize[e] && (t = -this._overlapSize[e]);
          }
          if (i) {
            var o = this._tweenStart[e],
              h = 0;
            h = o > 0 ? 0 : o < -this._overlapSize[e] ? Math.ceil(this._contentSize[e] / this._pageSize[e]) - 1 : Math.floor(-o / this._pageSize[e]);
            var l = Math.floor(-this._containerPos[e] / this._pageSize[e]);
            Math.abs(n - l) > 1 && Math.abs(h - l) <= 1 && (t = -(n = n > l ? l + 1 : l - 1) * this._pageSize[e]);
          }
          return t;
        }, e.updateTargetAndDuration = function (t, e) {
          e.x = this.updateTargetAndDuration2(t.x, "x"), e.y = this.updateTargetAndDuration2(t.y, "y");
        }, e.updateTargetAndDuration2 = function (t, e) {
          var n = this._velocity[e],
            r = 0;
          if (t > 0) t = 0;
          else if (t < -this._overlapSize[e]) t = -this._overlapSize[e];
          else {
            var a = Math.abs(n) * this._velocityScale;
            o.onMobile && (a *= 1136 / Math.max(i.stage.width, i.stage.height));
            var s = 0;
            if (this._pageMode || !o.onMobile ? a > 500 && (s = Math.pow((a - 500) / 500, 2)) : a > 1e3 && (s = Math.pow((a - 1e3) / 1e3, 2)), 0 != s) {
              s > 1 && (s = 1), a *= s, n *= s, this._velocity[e] = n, r = Math.log(60 / a) / Math.log(this._decelerationRate) / 60;
              t += Math.floor(n * r * .4);
            }
          }
          return r < .3 && (r = .3), this._tweenDuration[e] = r, t;
        }, e.fixDuration = function (t, e) {
          if (!(0 == this._tweenChange[t] || Math.abs(this._tweenChange[t]) >= Math.abs(e))) {
            var i = Math.abs(this._tweenChange[t] / e) * this._tweenDuration[t];
            i < .3 && (i = .3), this._tweenDuration[t] = i;
          }
        }, e.killTween = function () {
          1 == this._tweening && (this._container.pos(this._tweenStart.x + this._tweenChange.x, this._tweenStart.y + this._tweenChange.y), P.dispatch("fui_scroll", this._owner.displayObject)), this._tweening = 0, i.timer.clear(this, this.tweenUpdate), P.dispatch("fui_scroll_end", this._owner.displayObject);
        }, e.checkRefreshBar = function () {
          if (null != this._header || null != this._footer) {
            var e = this._container[this._refreshBarAxis];
            if (null != this._header)
              if (e > 0) {
                null == this._header.displayObject.parent && this._maskContainer.addChildAt(this._header.displayObject, 0);
                var i = t.sHelperPoint;
                i.setTo(this._header.width, this._header.height), i[this._refreshBarAxis] = e, this._header.setSize(i.x, i.y);
              } else null != this._header.displayObject.parent && this._maskContainer.removeChild(this._header.displayObject);
            if (null != this._footer) {
              var n = this._overlapSize[this._refreshBarAxis];
              e < -n || 0 == n && this._footerLockedSize > 0 ? (null == this._footer.displayObject.parent && this._maskContainer.addChildAt(this._footer.displayObject, 0), (i = t.sHelperPoint).setTo(this._footer.x, this._footer.y), i[this._refreshBarAxis] = n > 0 ? e + this._contentSize[this._refreshBarAxis] : Math.max(Math.min(e + this._viewSize[this._refreshBarAxis], this._viewSize[this._refreshBarAxis] - this._footerLockedSize), this._viewSize[this._refreshBarAxis] - this._contentSize[this._refreshBarAxis]), this._footer.setXY(i.x, i.y), i.setTo(this._footer.width, this._footer.height), i[this._refreshBarAxis] = n > 0 ? -n - e : this._viewSize[this._refreshBarAxis] - this._footer[this._refreshBarAxis], this._footer.setSize(i.x, i.y)) : null != this._footer.displayObject.parent && this._maskContainer.removeChild(this._footer.displayObject);
            }
          }
        }, e.tweenUpdate = function () {
          var t = this.runTween("x"),
            e = this.runTween("y");
          this._container.pos(t, e), 2 == this._tweening && (this._overlapSize.x > 0 && (this._xPos = et.clamp(-t, 0, this._overlapSize.x)), this._overlapSize.y > 0 && (this._yPos = et.clamp(-e, 0, this._overlapSize.y)), this._pageMode && this.updatePageController()), 0 == this._tweenChange.x && 0 == this._tweenChange.y ? (this._tweening = 0, i.timer.clear(this, this.tweenUpdate), this.loopCheckingCurrent(), this.syncScrollBar(!0), this.checkRefreshBar(), P.dispatch("fui_scroll", this._owner.displayObject), P.dispatch("fui_scroll_end", this._owner.displayObject)) : (this.syncScrollBar(!1), this.checkRefreshBar(), P.dispatch("fui_scroll", this._owner.displayObject));
        }, e.runTween = function (e) {
          var n = NaN;
          if (0 != this._tweenChange[e]) {
            if (this._tweenTime[e] += i.timer.delta / 1e3, this._tweenTime[e] >= this._tweenDuration[e]) n = this._tweenStart[e] + this._tweenChange[e], this._tweenChange[e] = 0;
            else {
              var r = t.easeFunc(this._tweenTime[e], this._tweenDuration[e]);
              n = this._tweenStart[e] + Math.floor(this._tweenChange[e] * r);
            }
            var a = 0,
              s = -this._overlapSize[e];
            if (this._headerLockedSize > 0 && this._refreshBarAxis == e && (a = this._headerLockedSize), this._footerLockedSize > 0 && this._refreshBarAxis == e) {
              var o = this._overlapSize[this._refreshBarAxis];
              0 == o ? o = Math.max(this._contentSize[this._refreshBarAxis] + this._footerLockedSize - this._viewSize[this._refreshBarAxis], 0) : o += this._footerLockedSize, s = -o;
            }
            2 == this._tweening && this._bouncebackEffect ? n > 20 + a && this._tweenChange[e] > 0 || n > a && 0 == this._tweenChange[e] ? (this._tweenTime[e] = 0, this._tweenDuration[e] = .3, this._tweenChange[e] = -n + a, this._tweenStart[e] = n) : (n < s - 20 && this._tweenChange[e] < 0 || n < s && 0 == this._tweenChange[e]) && (this._tweenTime[e] = 0, this._tweenDuration[e] = .3, this._tweenChange[e] = s - n, this._tweenStart[e] = n) : n > a ? (n = a, this._tweenChange[e] = 0) : n < s && (n = s, this._tweenChange[e] = 0);
          } else n = this._container[e];
          return n;
        }, a(0, e, "viewWidth", function () {
          return this._viewSize.x;
        }, function (t) {
          t = t + this._owner.margin.left + this._owner.margin.right, null != this._vtScrollBar && (t += this._vtScrollBar.width), this._owner.width = t;
        }), a(0, e, "percY", function () {
          return 0 == this._overlapSize.y ? 0 : this._yPos / this._overlapSize.y;
        }, function (t) {
          this.setPercY(t, !1);
        }), a(0, e, "owner", function () {
          return this._owner;
        }), a(0, e, "bouncebackEffect", function () {
          return this._bouncebackEffect;
        }, function (t) {
          this._bouncebackEffect = t;
        }), a(0, e, "vtScrollBar", function () {
          return this._vtScrollBar;
        }), a(0, e, "hzScrollBar", function () {
          return this._hzScrollBar;
        }), a(0, e, "header", function () {
          return this._header;
        }), a(0, e, "footer", function () {
          return this._footer;
        }), a(0, e, "isBottomMost", function () {
          return this._yPos == this._overlapSize.y || 0 == this._overlapSize.y;
        }), a(0, e, "touchEffect", function () {
          return this._touchEffect;
        }, function (t) {
          this._touchEffect = t;
        }), a(0, e, "contentWidth", function () {
          return this._contentSize.x;
        }), a(0, e, "scrollStep", function () {
          return this._scrollStep;
        }, function (t) {
          this._scrollStep = t, 0 == this._scrollStep && (this._scrollStep = Z.defaultScrollStep), this._mouseWheelStep = 2 * this._scrollStep;
        }), a(0, e, "viewHeight", function () {
          return this._viewSize.y;
        }, function (t) {
          t = t + this._owner.margin.top + this._owner.margin.bottom, null != this._hzScrollBar && (t += this._hzScrollBar.height), this._owner.height = t;
        }), a(0, e, "posX", function () {
          return this._xPos;
        }, function (t) {
          this.setPosX(t, !1);
        }), a(0, e, "snapToItem", function () {
          return this._snapToItem;
        }, function (t) {
          this._snapToItem = t;
        }), a(0, e, "mouseWheelEnabled", function () {
          return this._mouseWheelEnabled;
        }, function (t) {
          this._mouseWheelEnabled = t;
        }), a(0, e, "decelerationRate", function () {
          return this._decelerationRate;
        }, function (t) {
          this._decelerationRate = t;
        }), a(0, e, "percX", function () {
          return 0 == this._overlapSize.x ? 0 : this._xPos / this._overlapSize.x;
        }, function (t) {
          this.setPercX(t, !1);
        }), a(0, e, "posY", function () {
          return this._yPos;
        }, function (t) {
          this.setPosY(t, !1);
        }), a(0, e, "contentHeight", function () {
          return this._contentSize.y;
        }), a(0, e, "currentPageX", function () {
          if (!this._pageMode) return 0;
          var t = Math.floor(this._xPos / this._pageSize.x);
          return this._xPos - t * this._pageSize.x > .5 * this._pageSize.x && t++, t;
        }, function (t) {
          this.setCurrentPageX(t, !1);
        }), a(0, e, "currentPageY", function () {
          if (!this._pageMode) return 0;
          var t = Math.floor(this._yPos / this._pageSize.y);
          return this._yPos - t * this._pageSize.y > .5 * this._pageSize.y && t++, t;
        }, function (t) {
          this.setCurrentPageY(t, !1);
        }), a(0, e, "isRightMost", function () {
          return this._xPos == this._overlapSize.x || 0 == this._overlapSize.x;
        }), a(0, e, "pageController", function () {
          return this._pageController;
        }, function (t) {
          this._pageController = t;
        }), a(0, e, "scrollingPosX", function () {
          return et.clamp(-this._container.x, 0, this._overlapSize.x);
        }), a(0, e, "scrollingPosY", function () {
          return et.clamp(-this._container.y, 0, this._overlapSize.y);
        }), t.easeFunc = function (t, e) {
          return (t = t / e - 1) * t * t + 1;
        }, t.draggingPane = null, t._gestureFlag = 0, t.TWEEN_TIME_GO = .5, t.TWEEN_TIME_DEFAULT = .3, t.PULL_RATIO = .5, n(t, ["sHelperPoint", function () {
          return this.sHelperPoint = new g();
        }, "sHelperRect", function () {
          return this.sHelperRect = new v();
        }, "sEndPos", function () {
          return this.sEndPos = new g();
        }, "sOldChange", function () {
          return this.sOldChange = new g();
        }]), t;
      }()),
      z = (function () {
        function t() {}
        r(t, "fairygui.ScrollType"), t.Horizontal = 0, t.Vertical = 1, t.Both = 2;
      }(), function () {
        function t(t) {
          this.name = null, this._owner = null, this._ownerBaseX = NaN, this._ownerBaseY = NaN, this._items = null, this._totalTimes = 0, this._totalTasks = 0, this._playing = !1, this._paused = !1, this._onComplete = null, this._options = 0, this._reversed = !1, this._totalDuration = NaN, this._autoPlay = !1, this._autoPlayTimes = 0, this._autoPlayDelay = NaN, this._timeScale = NaN, this._startTime = NaN, this._endTime = NaN, this.OPTION_IGNORE_DISPLAY_CONTROLLER = 1, this.OPTION_AUTO_STOP_DISABLED = 2, this.OPTION_AUTO_STOP_AT_END = 4, this._owner = t, this._items = [], this._totalDuration = 0, this._autoPlayTimes = 1, this._autoPlayDelay = 0, this._timeScale = 1, this._startTime = 0, this._endTime = 0;
        }
        var e, i, n, s, o, h, u, c, _, f;
        r(t, "fairygui.Transition");
        var p = t.prototype;
        return p.play = function (t, e, i, n, r) {
          void 0 === e && (e = 1), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === r && (r = -1), this._play(t, e, i, n, r, !1);
        }, p.playReverse = function (t, e, i, n, r) {
          void 0 === e && (e = 1), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === r && (r = -1), this._play(t, 1, i, n, r, !0);
        }, p.changePlayTimes = function (t) {
          this._totalTimes = t;
        }, p.setAutoPlay = function (t, e, i) {
          void 0 === e && (e = 1), void 0 === i && (i = 0), this._autoPlay != t && (this._autoPlay = t, this._autoPlayTimes = e, this._autoPlayDelay = i, this._autoPlay ? this._owner.onStage && this.play(null, null, this._autoPlayTimes, this._autoPlayDelay) : this._owner.onStage || this.stop(!1, !0));
        }, p._play = function (t, e, i, n, r, a) {
          void 0 === e && (e = 1), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === r && (r = -1), void 0 === a && (a = !1), this.stop(!0, !0), this._totalTimes = e, this._reversed = a, this._startTime = n, this._endTime = r, this._playing = !0, this._paused = !1, this._onComplete = t;
          for (var s = this._items.length, o = 0; o < s; o++) {
            var h = this._items[o];
            if (null == h.target ? h.targetId ? h.target = this._owner.getChildById(h.targetId) : h.target = this._owner : h.target != this._owner && h.target.parent != this._owner && (h.target = null), null != h.target && 10 == h.type) {
              var l = h.target.getTransition(h.value.transName);
              if (l == this && (l = null), null != l)
                if (0 == h.value.playTimes) {
                  var u = 0;
                  for (u = o - 1; u >= 0; u--) {
                    var c = this._items[u];
                    if (10 == c.type && c.value.trans == l) {
                      c.value.stopTime = h.time - c.time;
                      break;
                    }
                  }
                  u < 0 ? h.value.stopTime = 0 : l = null;
                } else h.value.stopTime = -1;
              h.value.trans = l;
            }
          }
          0 == i ? this.onDelayedPlay() : Y.delayedCall(i).onComplete(this.onDelayedPlay, this);
        }, p.stop = function (t, e) {
          if (void 0 === t && (t = !0), void 0 === e && (e = !1), this._playing) {
            this._playing = !1, this._totalTasks = 0, this._totalTimes = 0;
            var i = this._onComplete;
            this._onComplete = null, Y.kill(this);
            var n = this._items.length;
            if (this._reversed)
              for (var r = n - 1; r >= 0; r--) {
                var a = this._items[r];
                null != a.target && this.stopItem(a, t);
              } else
                for (r = 0; r < n; r++) null != (a = this._items[r]).target && this.stopItem(a, t);
            e && null != i && i.run();
          }
        }, p.stopItem = function (t, e) {
          if (0 != t.displayLockToken && (t.target.releaseDisplayLock(t.displayLockToken), t.displayLockToken = 0), null != t.tweener && (t.tweener.kill(e), t.tweener = null, 11 != t.type || e || (t.target._gearLocked = !0, t.target.setXY(t.target.x - t.value.lastOffsetX, t.target.y - t.value.lastOffsetY), t.target._gearLocked = !1)), 10 == t.type) {
            var i = t.value.trans;
            null != i && i.stop(e, !1);
          }
        }, p.setPaused = function (t) {
          if (this._playing && this._paused != t) {
            this._paused = t;
            var e = Y.getTween(this);
            null != e && e.setPaused(t);
            for (var i = this._items.length, n = 0; n < i; n++) {
              var r = this._items[n];
              null != r.target && (10 == r.type ? null != r.value.trans && r.value.trans.setPaused(t) : 7 == r.type && (t ? (r.value.flag = r.target.playing, r.target.playing = !1) : r.target.playing = r.value.flag), null != r.tweener && r.tweener.setPaused(t));
            }
          }
        }, p.dispose = function () {
          this._playing && Y.kill(this);
          for (var t = this._items.length, e = 0; e < t; e++) {
            var i = this._items[e];
            null != i.tweener && (i.tweener.kill(), i.tweener = null), i.target = null, i.hook = null, null != i.tweenConfig && (i.tweenConfig.endHook = null);
          }
          this._items.length = 0, this._playing = !1, this._onComplete = null;
        }, p.setValue = function (t, e) {
          for (var i = [], n = 1, r = arguments.length; n < r; n++) i.push(arguments[n]);
          for (var a, s = this._items.length, n = 0; n < s; n++) {
            var o = this._items[n];
            if (o.label == t) a = null != o.tweenConfig ? o.tweenConfig.startValue : o.value;
            else {
              if (null == o.tweenConfig || o.tweenConfig.endLabel != t) continue;
              a = o.tweenConfig.endValue;
            }
            switch (o.type) {
              case 0:
              case 1:
              case 3:
              case 2:
              case 13:
                a.b1 = !0, a.b2 = !0, a.f1 = parseFloat(i[0]), a.f2 = parseFloat(i[1]);
                break;
              case 4:
              case 5:
              case 6:
                a.f1 = parseFloat(i[0]);
                break;
              case 7:
                a.frame = parseInt(i[0]), i.length > 1 && (a.playing = i[1]);
                break;
              case 8:
                a.visible = i[0];
                break;
              case 9:
                a.sound = i[0], i.length > 1 && (a.volume = parseFloat(i[1]));
                break;
              case 10:
                a.transName = i[0], i.length > 1 && (a.playTimes = parseInt(i[1]));
                break;
              case 11:
                a.amplitude = parseFloat(i[0]), i.length > 1 && (a.duration = parseFloat(i[1]));
                break;
              case 12:
                a.f1 = parseFloat(i[0]), a.f2 = parseFloat(i[1]), a.f3 = parseFloat(i[2]), a.f4 = parseFloat(i[3]);
                break;
              case 14:
              case 15:
                a.text = i[0];
            }
          }
        }, p.setHook = function (t, e) {
          for (var i = this._items.length, n = 0; n < i; n++) {
            var r = this._items[n];
            if (r.label == t) {
              r.hook = e;
              break;
            }
            if (null != r.tweenConfig && r.tweenConfig.endLabel == t) {
              r.tweenConfig.endHook = e;
              break;
            }
          }
        }, p.clearHooks = function () {
          for (var t = this._items.length, e = 0; e < t; e++) {
            var i = this._items[e];
            i.hook = null, null != i.tweenConfig && (i.tweenConfig.endHook = null);
          }
        }, p.setTarget = function (t, e) {
          for (var i = this._items.length, n = 0; n < i; n++) {
            var r = this._items[n];
            r.label == t && (r.targetId = e.id, r.target = null);
          }
        }, p.setDuration = function (t, e) {
          for (var i = this._items.length, n = 0; n < i; n++) {
            var r = this._items[n];
            null != r.tweenConfig && r.label == t && (r.tweenConfig.duration = e);
          }
        }, p.getLabelTime = function (t) {
          for (var e = this._items.length, i = 0; i < e; i++) {
            var n = this._items[i];
            if (n.label == t) return n.time;
            if (null != n.tweenConfig && n.tweenConfig.endLabel == t) return n.time + n.tweenConfig.duration;
          }
          return Number.NaN;
        }, p.updateFromRelations = function (t, e, i) {
          var n = this._items.length;
          if (0 != n)
            for (var r = 0; r < n; r++) {
              var a = this._items[r];
              0 == a.type && a.targetId == t && (null != a.tweenConfig ? (a.tweenConfig.startValue.f1 += e, a.tweenConfig.startValue.f2 += i, a.tweenConfig.endValue.f1 += e, a.tweenConfig.endValue.f2 += i) : (a.value.f1 += e, a.value.f2 += i));
            }
        }, p.onOwnerAddedToStage = function () {
          this._autoPlay && !this._playing && this.play(null, this._autoPlayTimes, this._autoPlayDelay);
        }, p.onOwnerRemovedFromStage = function () {
          0 == (this._options & this.OPTION_AUTO_STOP_DISABLED) && this.stop(0 != (this._options & this.OPTION_AUTO_STOP_AT_END), !1);
        }, p.onDelayedPlay = function () {
          if (this.internalPlay(), this._playing = this._totalTasks > 0, this._playing) {
            if (0 != (this._options & this.OPTION_IGNORE_DISPLAY_CONTROLLER))
              for (var t = this._items.length, e = 0; e < t; e++) {
                var i = this._items[e];
                null != i.target && i.target != this._owner && (i.displayLockToken = i.target.addDisplayLock());
              }
          } else if (null != this._onComplete) {
            var n = this._onComplete;
            this._onComplete = null, n.run();
          }
        }, p.internalPlay = function () {
          this._ownerBaseX = this._owner.x, this._ownerBaseY = this._owner.y, this._totalTasks = 0;
          var t, e = this._items.length,
            i = !1;
          if (this._reversed)
            for (n = e - 1; n >= 0; n--) null != (t = this._items[n]).target && this.playItem(t);
          else
            for (var n = 0; n < e; n++) null != (t = this._items[n]).target && (7 == t.type && 0 != this._startTime && t.time <= this._startTime ? (i = !0, t.value.flag = !1) : this.playItem(t));
          i && this.skipAnimations();
        }, p.playItem = function (t) {
          var e = NaN;
          if (null != t.tweenConfig) {
            if (e = this._reversed ? this._totalDuration - t.time - t.tweenConfig.duration : t.time, -1 == this._endTime || e <= this._endTime) {
              var i, n;
              switch (this._reversed ? (i = t.tweenConfig.endValue, n = t.tweenConfig.startValue) : (i = t.tweenConfig.startValue, n = t.tweenConfig.endValue), t.value.b1 = i.b1 || n.b1, t.value.b2 = i.b2 || n.b2, t.type) {
                case 0:
                case 1:
                case 2:
                case 13:
                  t.tweener = Y.to2(i.f1, i.f2, n.f1, n.f2, t.tweenConfig.duration);
                  break;
                case 4:
                case 5:
                  t.tweener = Y.to(i.f1, n.f1, t.tweenConfig.duration);
                  break;
                case 6:
                  t.tweener = Y.toColor(i.f1, n.f1, t.tweenConfig.duration);
                  break;
                case 12:
                  t.tweener = Y.to4(i.f1, i.f2, i.f3, i.f4, n.f1, n.f2, n.f3, n.f4, t.tweenConfig.duration);
              }
              t.tweener.setDelay(e).setEase(t.tweenConfig.easeType).setRepeat(t.tweenConfig.repeat, t.tweenConfig.yoyo).setTimeScale(this._timeScale).setTarget(t).onStart(this.onTweenStart, this).onUpdate(this.onTweenUpdate, this).onComplete(this.onTweenComplete, this), this._endTime >= 0 && t.tweener.setBreakpoint(this._endTime - e), this._totalTasks++;
            }
          } else 11 == t.type ? (e = this._reversed ? this._totalDuration - t.time - t.value.duration : t.time, t.value.offsetX = t.value.offsetY = 0, t.value.lastOffsetX = t.value.lastOffsetY = 0, t.tweener = Y.shake(0, 0, t.value.amplitude, t.value.duration).setDelay(e).setTimeScale(this._timeScale).setTarget(t).onUpdate(this.onTweenUpdate, this).onComplete(this.onTweenComplete, this), this._endTime >= 0 && t.tweener.setBreakpoint(this._endTime - t.time), this._totalTasks++) : (e = this._reversed ? this._totalDuration - t.time : t.time) <= this._startTime ? (this.applyValue(t), this.callHook(t, !1)) : (-1 == this._endTime || e <= this._endTime) && (this._totalTasks++, t.tweener = Y.delayedCall(e).setTimeScale(this._timeScale).setTarget(t).onComplete(this.onDelayedPlayItem, this));
          null != t.tweener && t.tweener.seek(this._startTime);
        }, p.skipAnimations = function () {
          for (var t, e, i, n = 0, r = NaN, a = NaN, s = this._items.length, o = 0; o < s; o++)
            if (!(7 != (i = this._items[o]).type || i.time > this._startTime || (t = i.value).flag)) {
              n = (e = i.target).frame, r = e.playing ? 0 : -1, a = 0;
              for (var h = o; h < s; h++) 7 != (i = this._items[h]).type || i.target != e || i.time > this._startTime || ((t = i.value).flag = !0, -1 != t.frame ? (n = t.frame, r = t.playing ? i.time : -1, a = 0) : t.playing ? r < 0 && (r = i.time) : (r >= 0 && (a += i.time - r), r = -1), this.callHook(i, !1));
              r >= 0 && (a += this._startTime - r), e.playing = r >= 0, e.frame = n, a > 0 && e.advance(1e3 * a);
            }
        }, p.onDelayedPlayItem = function (t) {
          var e = t.target;
          e.tweener = null, this._totalTasks--, this.applyValue(e), this.callHook(e, !1), this.checkAllComplete();
        }, p.onTweenStart = function (t) {
          var e = t.target;
          if (0 == e.type || 1 == e.type) {
            var i, n;
            this._reversed ? (i = e.tweenConfig.endValue, n = e.tweenConfig.startValue) : (i = e.tweenConfig.startValue, n = e.tweenConfig.endValue), 0 == e.type ? e.target != this._owner ? (i.b1 || (i.f1 = e.target.x), i.b2 || (i.f2 = e.target.y)) : (i.b1 || (i.f1 = e.target.x - this._ownerBaseX), i.b2 || (i.f2 = e.target.y - this._ownerBaseY)) : (i.b1 || (i.f1 = e.target.width), i.b2 || (i.f2 = e.target.height)), n.b1 || (n.f1 = i.f1), n.b2 || (n.f2 = i.f2), t.startValue.x = i.f1, t.startValue.y = i.f2, t.endValue.x = n.f1, t.endValue.y = n.f2;
          }
          this.callHook(e, !1);
        }, p.onTweenUpdate = function (t) {
          var e = t.target;
          switch (e.type) {
            case 0:
            case 1:
            case 2:
            case 13:
              e.value.f1 = t.value.x, e.value.f2 = t.value.y;
              break;
            case 4:
            case 5:
              e.value.f1 = t.value.x;
              break;
            case 6:
              e.value.f1 = t.value.color;
              break;
            case 12:
              e.value.f1 = t.value.x, e.value.f2 = t.value.y, e.value.f3 = t.value.z, e.value.f4 = t.value.w;
              break;
            case 11:
              e.value.offsetX = t.deltaValue.x, e.value.offsetY = t.deltaValue.y;
          }
          this.applyValue(e);
        }, p.onTweenComplete = function (t) {
          var e = t.target;
          e.tweener = null, this._totalTasks--, t.allCompleted && this.callHook(e, !0), this.checkAllComplete();
        }, p.onPlayTransCompleted = function (t) {
          this._totalTasks--, this.checkAllComplete();
        }, p.callHook = function (t, e) {
          e ? null != t.tweenConfig && null != t.tweenConfig.endHook && t.tweenConfig.endHook.run() : t.time >= this._startTime && null != t.hook && t.hook.run();
        }, p.checkAllComplete = function () {
          if (this._playing && 0 == this._totalTasks)
            if (this._totalTimes < 0) this.internalPlay();
            else if (this._totalTimes--, this._totalTimes > 0) this.internalPlay();
          else {
            this._playing = !1;
            for (var t = this._items.length, e = 0; e < t; e++) {
              var i = this._items[e];
              null != i.target && 0 != i.displayLockToken && (i.target.releaseDisplayLock(i.displayLockToken), i.displayLockToken = 0);
            }
            if (null != this._onComplete) {
              var n = this._onComplete;
              this._onComplete = null, n.run();
            }
          }
        }, p.applyValue = function (t) {
          switch (t.target._gearLocked = !0, t.type) {
            case 0:
              if (t.target == this._owner) {
                var e = NaN,
                  i = NaN;
                e = t.value.b1 ? t.value.f1 + this._ownerBaseX : t.target.x, i = t.value.b2 ? t.value.f2 + this._ownerBaseY : t.target.y, t.target.setXY(e, i);
              } else t.value.b1 || (t.value.f1 = t.target.x), t.value.b2 || (t.value.f2 = t.target.y), t.target.setXY(t.value.f1, t.value.f2);
              break;
            case 1:
              t.value.b1 || (t.value.f1 = t.target.width), t.value.b2 || (t.value.f2 = t.target.height), t.target.setSize(t.value.f1, t.value.f2);
              break;
            case 3:
              t.target.setPivot(t.value.f1, t.value.f2, t.target.pivotAsAnchor);
              break;
            case 4:
              t.target.alpha = t.value.f1;
              break;
            case 5:
              t.target.rotation = t.value.f1;
              break;
            case 2:
              t.target.setScale(t.value.f1, t.value.f2);
              break;
            case 13:
              t.target.setSkew(t.value.f1, t.value.f2);
              break;
            case 6:
              t.target.color = et.convertToHtmlColor(t.value.f1, !1);
              break;
            case 7:
              t.value.frame >= 0 && (t.target.frame = t.value.frame), t.target.playing = t.value.playing, t.target.timeScale = this._timeScale;
              break;
            case 8:
              t.target.visible = t.value.visible;
              break;
            case 10:
              if (this._playing) {
                var n = t.value.trans;
                if (null != n) {
                  this._totalTasks++;
                  var r = this._startTime > t.time ? this._startTime - t.time : 0,
                    a = this._endTime >= 0 ? this._endTime - t.time : -1;
                  t.value.stopTime >= 0 && (a < 0 || a > t.value.stopTime) && (a = t.value.stopTime), n.timeScale = this._timeScale, n._play(d.create(this, this.onPlayTransCompleted, [t]), t.value.playTimes, 0, r, a, this._reversed);
                }
              }
              break;
            case 9:
              if (this._playing && t.time >= this._startTime) {
                if (null == t.value.audioClip) {
                  var s = J.getItemByURL(t.value.sound);
                  t.value.audioClip = s ? s.file : t.value.sound;
                }
                t.value.audioClip && Rt.inst.playOneShotSound(t.value.audioClip, t.value.volume);
              }
              break;
            case 11:
              t.target.setXY(t.target.x - t.value.lastOffsetX + t.value.offsetX, t.target.y - t.value.lastOffsetY + t.value.offsetY), t.value.lastOffsetX = t.value.offsetX, t.value.lastOffsetY = t.value.offsetY;
              break;
            case 12:
              var o = t.target.filters,
                h = new nt();
              h.adjustBrightness(t.value.f1), h.adjustContrast(t.value.f2), h.adjustSaturation(t.value.f3), h.adjustHue(t.value.f4), o = [new l(h)], t.target.filters = o;
              break;
            case 14:
              t.target.text = t.value.text;
              break;
            case 15:
              t.target.icon = t.value.text;
          }
          t.target._gearLocked = !1;
        }, p.setup = function (t) {
          this.name = t.readS(), this._options = t.getInt32(), this._autoPlay = t.readBool(), this._autoPlayTimes = t.getInt32(), this._autoPlayDelay = t.getFloat32();
          for (var e = t.getInt16(), r = 0; r < e; r++) {
            var a = t.getInt16(),
              s = t.pos;
            t.seek(s, 0);
            var o = new i(t.readByte());
            this._items[r] = o, o.time = t.getFloat32();
            var h = t.getInt16();
            o.targetId = h < 0 ? "" : this._owner.getChildAt(h).id, o.label = t.readS(), t.readBool() ? (t.seek(s, 1), o.tweenConfig = new n(), o.tweenConfig.duration = t.getFloat32(), o.time + o.tweenConfig.duration > this._totalDuration && (this._totalDuration = o.time + o.tweenConfig.duration), o.tweenConfig.easeType = t.readByte(), o.tweenConfig.repeat = t.getInt32(), o.tweenConfig.yoyo = t.readBool(), o.tweenConfig.endLabel = t.readS(), t.seek(s, 2), this.decodeValue(o, t, o.tweenConfig.startValue), t.seek(s, 3), this.decodeValue(o, t, o.tweenConfig.endValue)) : (o.time > this._totalDuration && (this._totalDuration = o.time), t.seek(s, 2), this.decodeValue(o, t, o.value)), t.pos = s + a;
          }
        }, p.decodeValue = function (t, e, i) {
          switch (t.type) {
            case 0:
            case 1:
            case 3:
            case 13:
              i.b1 = e.readBool(), i.b2 = e.readBool(), i.f1 = e.getFloat32(), i.f2 = e.getFloat32();
              break;
            case 4:
            case 5:
              i.f1 = e.getFloat32();
              break;
            case 2:
              i.f1 = e.getFloat32(), i.f2 = e.getFloat32();
              break;
            case 6:
              i.f1 = e.readColor();
              break;
            case 7:
              i.playing = e.readBool(), i.frame = e.getInt32();
              break;
            case 8:
              i.visible = e.readBool();
              break;
            case 9:
              i.sound = e.readS(), i.volume = e.getFloat32();
              break;
            case 10:
              i.transName = e.readS(), i.playTimes = e.getInt32();
              break;
            case 11:
              i.amplitude = e.getFloat32(), i.duration = e.getFloat32();
              break;
            case 12:
              i.f1 = e.getFloat32(), i.f2 = e.getFloat32(), i.f3 = e.getFloat32(), i.f4 = e.getFloat32();
              break;
            case 14:
            case 15:
              i.text = e.readS();
          }
        }, a(0, p, "playing", function () {
          return this._playing;
        }), a(0, p, "timeScale", function () {
          return this._timeScale;
        }, function (t) {
          if (this._timeScale != t && (this._timeScale = t, this._playing))
            for (var e = this._items.length, i = 0; i < e; i++) {
              var n = this._items[i];
              null != n.tweener ? n.tweener.setTimeScale(t) : 10 == n.type ? null != n.value.trans && (n.value.trans.timeScale = t) : 7 == n.type && null != n.target && (n.target.timeScale = t);
            }
        }), t.__init$ = function () {
          e = function () {
            function t() {}
            return r(t, ""), t.XY = 0, t.Size = 1, t.Scale = 2, t.Pivot = 3, t.Alpha = 4, t.Rotation = 5, t.Color = 6, t.Animation = 7, t.Visible = 8, t.Sound = 9, t.Transition = 10, t.Shake = 11, t.ColorFilter = 12, t.Skew = 13, t.Text = 14, t.Icon = 15, t.Unknown = 16, t;
          }(), i = function () {
            function t(t) {
              switch (this.time = NaN, this.targetId = null, this.type = 0, this.tweenConfig = null, this.label = null, this.value = null, this.hook = null, this.tweener = null, this.target = null, this.displayLockToken = 0, this.type = t, t) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 13:
                case 4:
                case 5:
                case 6:
                case 12:
                  this.value = new f();
                  break;
                case 7:
                  this.value = new o();
                  break;
                case 11:
                  this.value = new c();
                  break;
                case 9:
                  this.value = new h();
                  break;
                case 10:
                  this.value = new u();
                  break;
                case 8:
                  this.value = new s();
                  break;
                case 14:
                case 15:
                  this.value = new _();
              }
            }
            return r(t, ""), t;
          }(), n = function () {
            function t() {
              this.duration = NaN, this.easeType = 0, this.repeat = 0, this.yoyo = !1, this.startValue = null, this.endValue = null, this.endLabel = null, this.endHook = null, this.easeType = 5, this.startValue = new f(), this.endValue = new f();
            }
            return r(t, ""), t;
          }(), s = function () {
            function t() {
              this.visible = !1;
            }
            return r(t, ""), t;
          }(), o = function () {
            function t() {
              this.frame = 0, this.playing = !1, this.flag = !1;
            }
            return r(t, ""), t;
          }(), h = function () {
            function t() {
              this.sound = null, this.volume = NaN, this.audioClip = null;
            }
            return r(t, ""), t;
          }(), u = function () {
            function t() {
              this.transName = null, this.playTimes = 0, this.trans = null, this.stopTime = NaN;
            }
            return r(t, ""), t;
          }(), c = function () {
            function t() {
              this.amplitude = NaN, this.duration = NaN, this.offsetX = NaN, this.offsetY = NaN, this.lastOffsetX = NaN, this.lastOffsetY = NaN;
            }
            return r(t, ""), t;
          }(), _ = function () {
            function t() {
              this.text = null;
            }
            return r(t, ""), t;
          }(), f = function () {
            function t() {
              this.f1 = NaN, this.f2 = NaN, this.f3 = NaN, this.f4 = NaN, this.b1 = !1, this.b2 = !1, this.b1 = this.b2 = !0;
            }
            return r(t, ""), t;
          }();
        }, t;
      }()),
      W = function () {
        function t() {}
        return r(t, "fairygui.TranslationHelper"), t.loadFromXML = function (e) {
          t.strings = {};
          for (var i = E.parseXMLFromString(e), n = t.findChildNode(i, "resources").childNodes, r = n.length, a = 0; a < r; a++) {
            var s = n[a];
            if ("string" == s.nodeName) {
              var o = s.getAttribute("name"),
                h = s.textContent,
                l = o.indexOf("-");
              if (-1 == l) continue;
              var u = o.substr(0, l),
                c = o.substr(l + 1),
                _ = t.strings[u];
              _ || (_ = {}, t.strings[u] = _), _[c] = h;
            }
          }
        }, t.translateComponent = function (t) {
          if (null != e) {
            var e = e[t.owner.id + t.id];
            if (null != e) {
              var i, n, r = t.rawData,
                a = 0,
                s = 0,
                o = 0,
                h = 0,
                l = 0,
                u = 0,
                c = 0,
                _ = 0;
              r.seek(0, 2);
              var d = r.getInt16();
              for (o = 0; o < d; o++) {
                u = r.getInt16(), c = r.pos, r.seek(c, 0);
                var f = r.readByte();
                r.skip(4), i = r.readS(), 9 == f && r.seek(c, 6) && (f = r.readByte()), r.seek(c, 1), null != (n = e[i + "-tips"]) && r.writeS(n), r.seek(c, 2);
                var p = r.getInt16();
                for (h = 0; h < p; h++) {
                  if (a = r.getInt16(), a += r.pos, 6 == r.readByte()) {
                    for (r.skip(2), _ = r.getInt16(), l = 0; l < _; l++) null != r.readS() && (null != (n = e[i + "-texts_" + l]) ? r.writeS(n) : r.skip(2));
                    r.readBool() && null != (n = e[i + "-texts_def"]) && r.writeS(n);
                  }
                  r.pos = a;
                }
                switch (f) {
                  case 6:
                  case 7:
                  case 8:
                    null != (n = e[i]) && (r.seek(c, 6), r.writeS(n)), null != (n = e[i + "-prompt"]) && (r.seek(c, 4), r.writeS(n));
                    break;
                  case 10:
                    for (r.seek(c, 8), r.skip(2), s = r.getInt16(), h = 0; h < s; h++) a = r.getInt16(), a += r.pos, r.skip(2), null != (n = e[i + "-" + h]) ? r.writeS(n) : r.skip(2), null != (n = e[i + "-" + h + "-0"]) && r.writeS(n), r.pos = a;
                    break;
                  case 11:
                    r.seek(c, 6) && r.readByte() == f && (null != (n = e[i]) ? r.writeS(n) : r.skip(2), r.skip(2), r.readBool() && r.skip(4), r.skip(4), r.readBool() && null != (n = e[i + "-prompt"]) && r.writeS(n));
                    break;
                  case 12:
                    r.seek(c, 6) && r.readByte() == f && (null != (n = e[i]) ? r.writeS(n) : r.skip(2), null != (n = e[i + "-0"]) && r.writeS(n));
                    break;
                  case 13:
                    if (r.seek(c, 6) && r.readByte() == f) {
                      for (s = r.getInt16(), h = 0; h < s; h++) a = r.getInt16(), a += r.pos, null != (n = e[i + "-" + h]) && r.writeS(n), r.pos = a;
                      null != (n = e[i]) && r.writeS(n);
                    }
                }
                r.pos = c + u;
              }
            }
          }
        }, t.findChildNode = function (t, e) {
          var i = t.childNodes,
            n = i.length;
          if (n > 0)
            for (var r = 0; r < n; r++) {
              var a = i[r];
              if (a.nodeName == e) return a;
            }
          return null;
        }, t.strings = null, t;
      }(),
      j = function () {
        function t(t) {
          this._data = null, this._parent = null, this._children = null, this._expanded = !1, this._tree = null, this._cell = null, this._level = 0, t && (this._children = []);
        }
        r(t, "fairygui.tree.TreeNode");
        var e = t.prototype;
        return e.setCell = function (t) {
          this._cell = t;
        }, e.setLevel = function (t) {
          this._level = t;
        }, e.addChild = function (t) {
          return this.addChildAt(t, this._children.length), t;
        }, e.addChildAt = function (t, e) {
          if (!t) throw new Error("child is null");
          var i = this._children.length;
          if (e >= 0 && e <= i) {
            if (t._parent == this) this.setChildIndex(t, e);
            else {
              t._parent && t._parent.removeChild(t);
              e == this._children.length ? this._children.push(t) : this._children.splice(e, 0, t), t._parent = this, t._level = this._level + 1, t.setTree(this._tree), null != this._cell && null != this._cell.parent && this._expanded && this._tree.afterInserted(t);
            }
            return t;
          }
          throw new Error("Invalid child index");
        }, e.removeChild = function (t) {
          var e = this._children.indexOf(t);
          return -1 != e && this.removeChildAt(e), t;
        }, e.removeChildAt = function (t) {
          if (t >= 0 && t < this.numChildren) {
            var e = this._children[t];
            return this._children.splice(t, 1), e._parent = null, null != this._tree && (e.setTree(null), this._tree.afterRemoved(e)), e;
          }
          throw new Error("Invalid child index");
        }, e.removeChildren = function (t, e) {
          void 0 === t && (t = 0), void 0 === e && (e = -1), (e < 0 || e >= this.numChildren) && (e = this.numChildren - 1);
          for (var i = t; i <= e; ++i) this.removeChildAt(t);
        }, e.getChildAt = function (t) {
          if (t >= 0 && t < this.numChildren) return this._children[t];
          throw new Error("Invalid child index");
        }, e.getChildIndex = function (t) {
          return this._children.indexOf(t);
        }, e.getPrevSibling = function () {
          if (null == this._parent) return null;
          var t = this._parent._children.indexOf(this);
          return t <= 0 ? null : this._parent._children[t - 1];
        }, e.getNextSibling = function () {
          if (null == this._parent) return null;
          var t = this._parent._children.indexOf(this);
          return t < 0 || t >= this._parent._children.length - 1 ? null : this._parent._children[t + 1];
        }, e.setChildIndex = function (t, e) {
          var i = this._children.indexOf(t);
          if (-1 == i) throw new Error("Not a child of this container");
          var n = this._children.length;
          e < 0 ? e = 0 : e > n && (e = n), i != e && (this._children.splice(i, 1), this._children.splice(e, 0, t), null != this._cell && null != this._cell.parent && this._expanded && this._tree.afterMoved(t));
        }, e.swapChildren = function (t, e) {
          var i = this._children.indexOf(t),
            n = this._children.indexOf(e);
          if (-1 == i || -1 == n) throw new Error("Not a child of this container");
          this.swapChildrenAt(i, n);
        }, e.swapChildrenAt = function (t, e) {
          var i = this._children[t],
            n = this._children[e];
          this.setChildIndex(i, e), this.setChildIndex(n, t);
        }, e.setTree = function (t) {
          if (this._tree = t, null != this._tree && this._tree.treeNodeWillExpand && this._expanded && this._tree.treeNodeWillExpand.runWith(this), null != this._children)
            for (var e = this._children.length, i = 0; i < e; i++) {
              var n = this._children[i];
              n._level = this._level + 1, n.setTree(t);
            }
        }, a(0, e, "expanded", function () {
          return this._expanded;
        }, function (t) {
          null != this._children && this._expanded != t && (this._expanded = t, null != this._tree && (this._expanded ? this._tree.afterExpanded(this) : this._tree.afterCollapsed(this)));
        }), a(0, e, "tree", function () {
          return this._tree;
        }), a(0, e, "level", function () {
          return this._level;
        }), a(0, e, "cell", function () {
          return this._cell;
        }), a(0, e, "data", function () {
          return this._data;
        }, function (t) {
          this._data = t;
        }), a(0, e, "parent", function () {
          return this._parent;
        }), a(0, e, "isFolder", function () {
          return null != this._children;
        }), a(0, e, "text", function () {
          return null != this._cell ? this._cell.text : null;
        }), a(0, e, "numChildren", function () {
          return this._children.length;
        }), t;
      }(),
      X = (function () {
        function t(t) {
          this._list = null, this._root = null, this._indent = 0, this.treeNodeCreateCell = null, this.treeNodeRender = null, this.treeNodeWillExpand = null, this.treeNodeClick = null, this._list = t, this._list.removeChildrenToPool(), this._list.on("fui_click_item", this, this.__clickItem), this._root = new j(!0), this._root.setTree(this), this._root.setCell(this._list), this._root.expanded = !0, this._indent = 15;
        }
        r(t, "fairygui.tree.TreeView");
        var e = t.prototype;
        e.getSelectedNode = function () {
          return -1 != this._list.selectedIndex ? this._list.getChildAt(this._list.selectedIndex).data : null;
        }, e.getSelection = function () {
          for (var t = this._list.getSelection(), e = t.length, i = [], n = 0; n < e; n++) {
            var r = this._list.getChildAt(t[n]).data;
            i.push(r);
          }
          return i;
        }, e.addSelection = function (t, e) {
          void 0 === e && (e = !1);
          for (var i = t.parent; null != i && i != this._root;) i.expanded = !0, i = i.parent;
          t.cell && this._list.addSelection(this._list.getChildIndex(t.cell), e);
        }, e.removeSelection = function (t) {
          t.cell && this._list.removeSelection(this._list.getChildIndex(t.cell));
        }, e.clearSelection = function () {
          this._list.clearSelection();
        }, e.getNodeIndex = function (t) {
          return this._list.getChildIndex(t.cell);
        }, e.updateNode = function (t) {
          null != t.cell && this.treeNodeRender && this.treeNodeRender.runWith(t);
        }, e.updateNodes = function (t) {
          for (var e = t.length, i = 0; i < e; i++) {
            var n = t[i];
            if (null == n.cell) return;
            this.treeNodeRender && this.treeNodeRender.runWith(n);
          }
        }, e.expandAll = function (t) {
          t.expanded = !0;
          for (var e = t.numChildren, i = 0; i < e; i++) {
            var n = t.getChildAt(i);
            n.isFolder && this.expandAll(n);
          }
        }, e.collapseAll = function (t) {
          t != this._root && (t.expanded = !1);
          for (var e = t.numChildren, i = 0; i < e; i++) {
            var n = t.getChildAt(i);
            n.isFolder && this.collapseAll(n);
          }
        }, e.createCell = function (t) {
          this.treeNodeCreateCell ? t.setCell(this.treeNodeCreateCell.runWith(t)) : t.setCell(this._list.itemPool.getObject(this._list.defaultItem)), t.cell.data = t;
          var e = t.cell.getChild("indent");
          null != e && (e.width = (t.level - 1) * this._indent);
          var i = t.cell.getChild("expandButton");
          i && (t.isFolder ? (i.visible = !0, i.onClick(this, this.__clickExpandButton), i.data = t, i.selected = t.expanded) : i.visible = !1), this.treeNodeRender && this.treeNodeRender.runWith(t);
        }, e.afterInserted = function (t) {
          this.createCell(t);
          var e = this.getInsertIndexForNode(t);
          this._list.addChildAt(t.cell, e), this.treeNodeRender && this.treeNodeRender.runWith(t), t.isFolder && t.expanded && this.checkChildren(t, e);
        }, e.getInsertIndexForNode = function (t) {
          var e = t.getPrevSibling();
          null == e && (e = t.parent);
          for (var i = this._list.getChildIndex(e.cell) + 1, n = t.level, r = this._list.numChildren, a = i; a < r; a++) {
            if (this._list.getChildAt(a).data.level <= n) break;
            i++;
          }
          return i;
        }, e.afterRemoved = function (t) {
          this.removeNode(t);
        }, e.afterExpanded = function (t) {
          if (t != this._root && this.treeNodeWillExpand && this.treeNodeWillExpand(t), null != t.cell) {
            if (t != this._root) {
              this.treeNodeRender && this.treeNodeRender.runWith(t);
              var e = t.cell.getChild("expandButton");
              e && (e.selected = !0);
            }
            null != t.cell.parent && this.checkChildren(t, this._list.getChildIndex(t.cell));
          }
        }, e.afterCollapsed = function (t) {
          if (t != this._root && this.treeNodeWillExpand && this.treeNodeWillExpand(t), null != t.cell) {
            if (t != this._root) {
              this.treeNodeRender && this.treeNodeRender.runWith(t);
              var e = t.cell.getChild("expandButton");
              e && (e.selected = !1);
            }
            null != t.cell.parent && this.hideFolderNode(t);
          }
        }, e.afterMoved = function (t) {
          t.isFolder ? this.hideFolderNode(t) : this._list.removeChild(t.cell);
          var e = this.getInsertIndexForNode(t);
          this._list.addChildAt(t.cell, e), t.isFolder && t.expanded && this.checkChildren(t, e);
        }, e.checkChildren = function (t, e) {
          for (var i = t.numChildren, n = 0; n < i; n++) {
            e++;
            var r = t.getChildAt(n);
            null == r.cell && this.createCell(r), r.cell.parent || this._list.addChildAt(r.cell, e), r.isFolder && r.expanded && (e = this.checkChildren(r, e));
          }
          return e;
        }, e.hideFolderNode = function (t) {
          for (var e = t.numChildren, i = 0; i < e; i++) {
            var n = t.getChildAt(i);
            n.cell && null != n.cell.parent && this._list.removeChild(n.cell), n.isFolder && n.expanded && this.hideFolderNode(n);
          }
        }, e.removeNode = function (t) {
          if (null != t.cell && (null != t.cell.parent && this._list.removeChild(t.cell), this._list.returnToPool(t.cell), t.cell.data = null, t.setCell(null)), t.isFolder)
            for (var e = t.numChildren, i = 0; i < e; i++) {
              var n = t.getChildAt(i);
              this.removeNode(n);
            }
        }, e.__clickExpandButton = function (t) {
          t.stopPropagation();
          var e = L.cast(t.currentTarget),
            i = e.parent.data;
          if (null != this._list.scrollPane) {
            var n = this._list.scrollPane.posY;
            e.selected ? i.expanded = !0 : i.expanded = !1, this._list.scrollPane.posY = n, this._list.scrollPane.scrollToView(i.cell);
          } else e.selected ? i.expanded = !0 : i.expanded = !1;
        }, e.__clickItem = function (t, e) {
          if (null != this._list.scrollPane) var i = this._list.scrollPane.posY;
          var n = t.data;
          this.treeNodeClick && this.treeNodeClick.runWith([n, e]), null != this._list.scrollPane && (this._list.scrollPane.posY = i, n.cell && this._list.scrollPane.scrollToView(n.cell));
        }, a(0, e, "list", function () {
          return this._list;
        }), a(0, e, "root", function () {
          return this._root;
        }), a(0, e, "indent", function () {
          return this._indent;
        }, function (t) {
          this._indent = t;
        });
      }(), function () {
        function t() {}
        var e;
        return r(t, "fairygui.tween.EaseManager"), t.evaluate = function (i, n, r, a, s) {
          switch (i) {
            case 0:
              return n / r;
            case 1:
              return 1 - Math.cos(n / r * t._PiOver2);
            case 2:
              return Math.sin(n / r * t._PiOver2);
            case 3:
              return -.5 * (Math.cos(Math.PI * n / r) - 1);
            case 4:
              return (n /= r) * n;
            case 5:
              return -(n /= r) * (n - 2);
            case 6:
              return (n /= .5 * r) < 1 ? .5 * n * n : -.5 * (--n * (n - 2) - 1);
            case 7:
              return (n /= r) * n * n;
            case 8:
              return (n = n / r - 1) * n * n + 1;
            case 9:
              return (n /= .5 * r) < 1 ? .5 * n * n * n : .5 * ((n -= 2) * n * n + 2);
            case 10:
              return (n /= r) * n * n * n;
            case 11:
              return -((n = n / r - 1) * n * n * n - 1);
            case 12:
              return (n /= .5 * r) < 1 ? .5 * n * n * n * n : -.5 * ((n -= 2) * n * n * n - 2);
            case 13:
              return (n /= r) * n * n * n * n;
            case 14:
              return (n = n / r - 1) * n * n * n * n + 1;
            case 15:
              return (n /= .5 * r) < 1 ? .5 * n * n * n * n * n : .5 * ((n -= 2) * n * n * n * n + 2);
            case 16:
              return 0 == n ? 0 : Math.pow(2, 10 * (n / r - 1));
            case 17:
              return n == r ? 1 : 1 - Math.pow(2, -10 * n / r);
            case 18:
              return 0 == n ? 0 : n == r ? 1 : (n /= .5 * r) < 1 ? .5 * Math.pow(2, 10 * (n - 1)) : .5 * (2 - Math.pow(2, -10 * --n));
            case 19:
              return -(Math.sqrt(1 - (n /= r) * n) - 1);
            case 20:
              return Math.sqrt(1 - (n = n / r - 1) * n);
            case 21:
              return (n /= .5 * r) < 1 ? -.5 * (Math.sqrt(1 - n * n) - 1) : .5 * (Math.sqrt(1 - (n -= 2) * n) + 1);
            case 22:
              var o = NaN;
              return 0 == n ? 0 : 1 == (n /= r) ? 1 : (0 == s && (s = .3 * r), a < 1 ? (a = 1, o = s / 4) : o = s / t._TwoPi * Math.asin(1 / a), -a * Math.pow(2, 10 * (n -= 1)) * Math.sin((n * r - o) * t._TwoPi / s));
            case 23:
              var h = NaN;
              return 0 == n ? 0 : 1 == (n /= r) ? 1 : (0 == s && (s = .3 * r), a < 1 ? (a = 1, h = s / 4) : h = s / t._TwoPi * Math.asin(1 / a), a * Math.pow(2, -10 * n) * Math.sin((n * r - h) * t._TwoPi / s) + 1);
            case 24:
              var l = NaN;
              return 0 == n ? 0 : 2 == (n /= .5 * r) ? 1 : (0 == s && (s = r * (.3 * 1.5)), a < 1 ? (a = 1, l = s / 4) : l = s / t._TwoPi * Math.asin(1 / a), n < 1 ? a * Math.pow(2, 10 * (n -= 1)) * Math.sin((n * r - l) * t._TwoPi / s) * -.5 : a * Math.pow(2, -10 * (n -= 1)) * Math.sin((n * r - l) * t._TwoPi / s) * .5 + 1);
            case 25:
              return (n /= r) * n * ((a + 1) * n - a);
            case 26:
              return (n = n / r - 1) * n * ((a + 1) * n + a) + 1;
            case 27:
              return (n /= .5 * r) < 1 ? n * n * ((1 + (a *= 1.525)) * n - a) * .5 : .5 * ((n -= 2) * n * ((1 + (a *= 1.525)) * n + a) + 2);
            case 28:
              return e.easeIn(n, r);
            case 29:
              return e.easeOut(n, r);
            case 30:
              return e.easeInOut(n, r);
            default:
              return -(n /= r) * (n - 2);
          }
        }, n(t, ["_PiOver2", function () {
          return this._PiOver2 = .5 * Math.PI;
        }, "_TwoPi", function () {
          return this._TwoPi = 2 * Math.PI;
        }]), t.__init$ = function () {
          e = function () {
            function t() {}
            return r(t, ""), t.easeIn = function (e, i) {
              return 1 - t.easeOut(i - e, i);
            }, t.easeOut = function (t, e) {
              return (t /= e) < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
            }, t.easeInOut = function (e, i) {
              return e < .5 * i ? .5 * t.easeIn(2 * e, i) : .5 * t.easeOut(2 * e - i, i) + .5;
            }, t;
          }();
        }, t;
      }()),
      Y = (function () {
        function t() {}
        r(t, "fairygui.tween.EaseType"), t.Linear = 0, t.SineIn = 1, t.SineOut = 2, t.SineInOut = 3, t.QuadIn = 4, t.QuadOut = 5, t.QuadInOut = 6, t.CubicIn = 7, t.CubicOut = 8, t.CubicInOut = 9, t.QuartIn = 10, t.QuartOut = 11, t.QuartInOut = 12, t.QuintIn = 13, t.QuintOut = 14, t.QuintInOut = 15, t.ExpoIn = 16, t.ExpoOut = 17, t.ExpoInOut = 18, t.CircIn = 19, t.CircOut = 20, t.CircInOut = 21, t.ElasticIn = 22, t.ElasticOut = 23, t.ElasticInOut = 24, t.BackIn = 25, t.BackOut = 26, t.BackInOut = 27, t.BounceIn = 28, t.BounceOut = 29, t.BounceInOut = 30, t.Custom = 31;
      }(), function () {
        function t() {}
        return r(t, "fairygui.tween.GTween"), t.to = function (t, e, i) {
          return Q.createTween()._to(t, e, i);
        }, t.to2 = function (t, e, i, n, r) {
          return Q.createTween()._to2(t, e, i, n, r);
        }, t.to3 = function (t, e, i, n, r, a, s) {
          return Q.createTween()._to3(t, e, i, n, r, a, s);
        }, t.to4 = function (t, e, i, n, r, a, s, o, h) {
          return Q.createTween()._to4(t, e, i, n, r, a, s, o, h);
        }, t.toColor = function (t, e, i) {
          return Q.createTween()._toColor(t, e, i);
        }, t.delayedCall = function (t) {
          return Q.createTween().setDelay(t);
        }, t.shake = function (t, e, i, n) {
          return Q.createTween()._shake(t, e, i, n);
        }, t.isTweening = function (t, e) {
          return Q.isTweening(t, e);
        }, t.kill = function (t, e, i) {
          void 0 === e && (e = !1), Q.killTweens(t, !1, null);
        }, t.getTween = function (t, e) {
          return Q.getTween(t, e);
        }, t.catchCallbackExceptions = !0, t;
      }()),
      q = function () {
        function t() {
          this._target = null, this._propType = null, this._killed = !1, this._paused = !1, this._delay = NaN, this._duration = NaN, this._breakpoint = NaN, this._easeType = 0, this._easeOvershootOrAmplitude = NaN, this._easePeriod = NaN, this._repeat = 0, this._yoyo = !1, this._timeScale = NaN, this._snapping = !1, this._userData = null, this._onUpdate = null, this._onUpdateCaller = null, this._onStart = null, this._onStartCaller = null, this._onComplete = null, this._onCompleteCaller = null, this._startValue = null, this._endValue = null, this._value = null, this._deltaValue = null, this._valueSize = 0, this._started = !1, this._ended = 0, this._elapsedTime = NaN, this._normalizedTime = NaN, this._startValue = new K(), this._endValue = new K(), this._value = new K(), this._deltaValue = new K(), this._reset();
        }
        r(t, "fairygui.tween.GTweener");
        var e = t.prototype;
        return e.setDelay = function (t) {
          return this._delay = t, this;
        }, e.setDuration = function (t) {
          return this._duration = t, this;
        }, e.setBreakpoint = function (t) {
          return this._breakpoint = t, this;
        }, e.setEase = function (t) {
          return this._easeType = t, this;
        }, e.setEasePeriod = function (t) {
          return this._easePeriod = t, this;
        }, e.setEaseOvershootOrAmplitude = function (t) {
          return this._easeOvershootOrAmplitude = t, this;
        }, e.setRepeat = function (t, e) {
          return void 0 === e && (e = !1), this._repeat = t, this._yoyo = e, this;
        }, e.setTimeScale = function (t) {
          return this._timeScale = t, this;
        }, e.setSnapping = function (t) {
          return this._snapping = t, this;
        }, e.setTarget = function (t, e) {
          return this._target = t, this._propType = e, this;
        }, e.setUserData = function (t) {
          return this._userData = t, this;
        }, e.onUpdate = function (t, e) {
          return this._onUpdate = t, this._onUpdateCaller = e, this;
        }, e.onStart = function (t, e) {
          return this._onStart = t, this._onStartCaller = e, this;
        }, e.onComplete = function (t, e) {
          return this._onComplete = t, this._onCompleteCaller = e, this;
        }, e.setPaused = function (t) {
          return this._paused = t, this;
        }, e.seek = function (t) {
          if (!this._killed) {
            if (this._elapsedTime = t, this._elapsedTime < this._delay) {
              if (!this._started) return;
              this._elapsedTime = this._delay;
            }
            this.update();
          }
        }, e.kill = function (t) {
          void 0 === t && (t = !1), this._killed || (t && (0 == this._ended && (this._breakpoint >= 0 ? this._elapsedTime = this._delay + this._breakpoint : this._repeat >= 0 ? this._elapsedTime = this._delay + this._duration * (this._repeat + 1) : this._elapsedTime = this._delay + 2 * this._duration, this.update()), this.callCompleteCallback()), this._killed = !0);
        }, e._to = function (t, e, i) {
          return this._valueSize = 1, this._startValue.x = t, this._endValue.x = e, this._duration = i, this;
        }, e._to2 = function (t, e, i, n, r) {
          return this._valueSize = 2, this._startValue.x = t, this._endValue.x = i, this._startValue.y = e, this._endValue.y = n, this._duration = r, this;
        }, e._to3 = function (t, e, i, n, r, a, s) {
          return this._valueSize = 3, this._startValue.x = t, this._endValue.x = n, this._startValue.y = e, this._endValue.y = r, this._startValue.z = i, this._endValue.z = a, this._duration = s, this;
        }, e._to4 = function (t, e, i, n, r, a, s, o, h) {
          return this._valueSize = 4, this._startValue.x = t, this._endValue.x = r, this._startValue.y = e, this._endValue.y = a, this._startValue.z = i, this._endValue.z = s, this._startValue.w = n, this._endValue.w = o, this._duration = h, this;
        }, e._toColor = function (t, e, i) {
          return this._valueSize = 4, this._startValue.color = t, this._endValue.color = e, this._duration = i, this;
        }, e._shake = function (t, e, i, n) {
          return this._valueSize = 5, this._startValue.x = t, this._startValue.y = e, this._startValue.w = i, this._duration = n, this._easeType = 0, this;
        }, e._init = function () {
          this._delay = 0, this._duration = 0, this._breakpoint = -1, this._easeType = 5, this._timeScale = 1, this._easePeriod = 0, this._easeOvershootOrAmplitude = 1.70158, this._snapping = !1, this._repeat = 0, this._yoyo = !1, this._valueSize = 0, this._started = !1, this._paused = !1, this._killed = !1, this._elapsedTime = 0, this._normalizedTime = 0, this._ended = 0;
        }, e._reset = function () {
          this._target = null, this._userData = null, this._onStart = this._onUpdate = this._onComplete = null, this._onStartCaller = this._onUpdateCaller = this._onCompleteCaller = null;
        }, e._update = function (t) {
          if (1 != this._timeScale && (t *= this._timeScale), 0 != t) {
            if (0 != this._ended) return this.callCompleteCallback(), void(this._killed = !0);
            this._elapsedTime += t, this.update(), 0 != this._ended && (this._killed || (this.callCompleteCallback(), this._killed = !0));
          }
        }, e.update = function () {
          if (this._ended = 0, 0 != this._valueSize) {
            if (!this._started) {
              if (this._elapsedTime < this._delay) return;
              if (this._started = !0, this.callStartCallback(), this._killed) return;
            }
            var t = !1,
              e = this._elapsedTime - this._delay;
            if (this._breakpoint >= 0 && e >= this._breakpoint && (e = this._breakpoint, this._ended = 2), 0 != this._repeat) {
              var i = Math.floor(e / this._duration);
              e -= this._duration * i, this._yoyo && (t = i % 2 == 1), this._repeat > 0 && this._repeat - i < 0 && (this._yoyo && (t = this._repeat % 2 == 1), e = this._duration, this._ended = 1);
            } else e >= this._duration && (e = this._duration, this._ended = 1);
            if (this._normalizedTime = X.evaluate(this._easeType, t ? this._duration - e : e, this._duration, this._easeOvershootOrAmplitude, this._easePeriod), this._value.setZero(), this._deltaValue.setZero(), 5 == this._valueSize)
              if (0 == this._ended) {
                var n = this._startValue.w * (1 - this._normalizedTime),
                  r = (2 * Math.random() - 1) * n,
                  a = (2 * Math.random() - 1) * n;
                r = r > 0 ? Math.ceil(r) : Math.floor(r), a = a > 0 ? Math.ceil(a) : Math.floor(a), this._deltaValue.x = r, this._deltaValue.y = a, this._value.x = this._startValue.x + r, this._value.y = this._startValue.y + a;
              } else this._value.x = this._startValue.x, this._value.y = this._startValue.y;
            else
              for (var s = 0; s < this._valueSize; s++) {
                var o = this._startValue.getField(s),
                  h = o + (this._endValue.getField(s) - o) * this._normalizedTime;
                this._snapping && (h = Math.round(h)), this._deltaValue.setField(s, h - this._value.getField(s)), this._value.setField(s, h);
              }
            if (null != this._target && null != this._propType)
              if ("function" == typeof this._propType) switch (this._valueSize) {
                case 1:
                  this._propType.call(this._target, this._value.x);
                  break;
                case 2:
                  this._propType.call(this._target, this._value.x, this._value.y);
                  break;
                case 3:
                  this._propType.call(this._target, this._value.x, this._value.y, this._value.z);
                  break;
                case 4:
                  this._propType.call(this._target, this._value.x, this._value.y, this._value.z, this._value.w);
                  break;
                case 5:
                  this._propType.call(this._target, this._value.color);
                  break;
                case 6:
                  this._propType.call(this._target, this._value.x, this._value.y);
              } else 5 == this._valueSize ? this._target[this._propType] = this._value.color : this._target[this._propType] = this._value.x;
            this.callUpdateCallback();
          } else this._elapsedTime >= this._delay + this._duration && (this._ended = 1);
        }, e.callStartCallback = function () {
          if (null != this._onStart)
            if (Y.catchCallbackExceptions) try {
              this._onStart.call(this._onStartCaller, this);
            } catch (t) {
              console.log("FairyGUI: error in start callback > " + t.message);
            } else this._onStart.call(this._onStartCaller, this);
        }, e.callUpdateCallback = function () {
          if (null != this._onUpdate)
            if (Y.catchCallbackExceptions) try {
              this._onUpdate.call(this._onUpdateCaller, this);
            } catch (t) {
              console.log("FairyGUI: error in update callback > " + t.message);
            } else this._onUpdate.call(this._onUpdateCaller, this);
        }, e.callCompleteCallback = function () {
          if (null != this._onComplete)
            if (Y.catchCallbackExceptions) try {
              this._onComplete.call(this._onCompleteCaller, this);
            } catch (t) {
              console.log("FairyGUI: error in complete callback > " + t.message);
            } else this._onComplete.call(this._onCompleteCaller, this);
        }, a(0, e, "target", function () {
          return this._target;
        }), a(0, e, "delay", function () {
          return this._delay;
        }), a(0, e, "duration", function () {
          return this._duration;
        }), a(0, e, "value", function () {
          return this._value;
        }), a(0, e, "userData", function () {
          return this._userData;
        }), a(0, e, "repeat", function () {
          return this._repeat;
        }), a(0, e, "startValue", function () {
          return this._startValue;
        }), a(0, e, "endValue", function () {
          return this._endValue;
        }), a(0, e, "deltaValue", function () {
          return this._deltaValue;
        }), a(0, e, "normalizedTime", function () {
          return this._normalizedTime;
        }), a(0, e, "completed", function () {
          return 0 != this._ended;
        }), a(0, e, "allCompleted", function () {
          return 1 == this._ended;
        }), t;
      }(),
      Q = function () {
        function t() {}
        return r(t, "fairygui.tween.TweenManager"), t.createTween = function () {
          t._inited || (i.timer.frameLoop(1, null, t.update), t._inited = !0);
          var e;
          return (e = t._tweenerPool.length > 0 ? t._tweenerPool.pop() : new q())._init(), t._activeTweens[t._totalActiveTweens++] = e, t._totalActiveTweens == t._activeTweens.length && (t._activeTweens.length = t._activeTweens.length + Math.ceil(.5 * t._activeTweens.length)), e;
        }, t.isTweening = function (e, i) {
          if (null == e) return !1;
          for (var n = null == i, r = 0; r < t._totalActiveTweens; r++) {
            var a = t._activeTweens[r];
            if (null != a && a.target == e && !a._killed && (n || a._propType == i)) return !0;
          }
          return !1;
        }, t.killTweens = function (e, i, n) {
          if (null == e) return !1;
          for (var r = !1, a = t._totalActiveTweens, s = null == n, o = 0; o < a; o++) {
            var h = t._activeTweens[o];
            null == h || h.target != e || h._killed || !s && h._propType != n || (h.kill(i), r = !0);
          }
          return r;
        }, t.getTween = function (e, i) {
          if (null == e) return null;
          for (var n = t._totalActiveTweens, r = null == i, a = 0; a < n; a++) {
            var s = t._activeTweens[a];
            if (null != s && s.target == e && !s._killed && (r || s._propType == i)) return s;
          }
          return null;
        }, t.update = function () {
          for (var e = i.timer.delta / 1e3, n = t._totalActiveTweens, r = -1, a = 0; a < n; a++) {
            var s = t._activeTweens[a];
            null == s ? (-1 == r && (r = a), 0) : s._killed ? (s._reset(), t._tweenerPool.push(s), t._activeTweens[a] = null, -1 == r && (r = a), 0) : (s._paused || s._update(e), -1 != r && (t._activeTweens[r] = s, t._activeTweens[a] = null, r++));
          }
          if (r >= 0) {
            if (t._totalActiveTweens != n) {
              var o = n;
              for (n = t._totalActiveTweens - n, a = 0; a < n; a++) t._activeTweens[r++] = t._activeTweens[o++];
            }
            t._totalActiveTweens = r;
          }
        }, t._tweenerPool = [], t._totalActiveTweens = 0, t._inited = !1, n(t, ["_activeTweens", function () {
          return this._activeTweens = new Array(30);
        }]), t;
      }(),
      K = function () {
        function t() {
          this.x = NaN, this.y = NaN, this.z = NaN, this.w = NaN, this.x = this.y = this.z = this.w = 0;
        }
        r(t, "fairygui.tween.TweenValue");
        var e = t.prototype;
        return e.getField = function (t) {
          switch (t) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            case 3:
              return this.w;
            default:
              throw new Error("Index out of bounds: " + t);
          }
        }, e.setField = function (t, e) {
          switch (t) {
            case 0:
              this.x = e;
              break;
            case 1:
              this.y = e;
              break;
            case 2:
              this.z = e;
              break;
            case 3:
              this.w = e;
              break;
            default:
              throw new Error("Index out of bounds: " + t);
          }
        }, e.setZero = function () {
          this.x = this.y = this.z = this.w = 0;
        }, a(0, e, "color", function () {
          return (this.w << 24) + (this.x << 16) + (this.y << 8) + this.z;
        }, function (t) {
          this.x = (16711680 & t) >> 16, this.y = (65280 & t) >> 8, this.z = 255 & t, this.w = (4278190080 & t) >> 24;
        }), t;
      }(),
      Z = function () {
        function t() {}
        return r(t, "fairygui.UIConfig", null, "UIConfig$1"), t.defaultFont = "SimSun", t.windowModalWaiting = null, t.globalModalWaiting = null, t.modalLayerColor = "rgba(33,33,33,0.2)", t.buttonSound = null, t.buttonSoundVolumeScale = 1, t.horizontalScrollBar = null, t.verticalScrollBar = null, t.defaultScrollStep = 25, t.defaultScrollDecelerationRate = .967, t.defaultScrollBarDisplay = 1, t.defaultScrollTouchEffect = !0, t.defaultScrollBounceEffect = !0, t.popupMenu = null, t.popupMenu_seperator = null, t.loaderErrorSign = null, t.tooltipsWin = null, t.defaultComboBoxVisibleItemCount = 10, t.touchScrollSensitivity = 20, t.touchDragSensitivity = 10, t.clickDragSensitivity = 2, t.bringWindowToFrontOnClick = !0, t.frameTimeForAsyncUIConstruction = 2, t.textureLinearSampling = !0, t.packageFileExtension = "fui", t.versions = "", t.resourceurl = "", t.equipPlatform = "", t.gameWidth = 0, t.gameHeight = 0, t.disTips = 3e3, t.gameBgResousedict = null, t.maskLayer = null, t.gameEffectDict = null, t.gameLoaderManager = null, t;
      }(),
      $ = function () {
        function t() {}
        return r(t, "fairygui.UIObjectFactory"), t.setPackageItemExtension = function (e, i) {
          if (null == e) throw new Error("Invaild url: " + e);
          var n = J.getItemByURL(e);
          null != n && (n.extensionType = i), t.packageItemExtensions[e] = i;
        }, t.setLoaderExtension = function (t) {
          fairygui.UIObjectFactory.loaderType = t;
        }, t.resolvePackageItemExtension = function (e) {
          e.extensionType = t.packageItemExtensions["ui://" + e.owner.id + e.id], e.extensionType || (e.extensionType = t.packageItemExtensions["ui://" + e.owner.name + "/" + e.name]);
        }, t.newObject = function (e) {
          return null != e.extensionType ? new e.extensionType() : t.newObject2(e.objectType);
        }, t.newObject2 = function (t) {
          switch (t) {
            case 0:
              return new xt();
            case 1:
              return new wt();
            case 9:
              return new ut();
            case 6:
              return new Et();
            case 7:
              return new Dt();
            case 8:
              return new Pt();
            case 5:
              return new yt();
            case 10:
              return new It();
            case 3:
              return new gt();
            case 4:
              return null != fairygui.UIObjectFactory.loaderType ? new fairygui.UIObjectFactory.loaderType() : new St();
            case 12:
              return new bt();
            case 11:
              return new Mt();
            case 14:
              return new At();
            case 15:
              return new Ot();
            case 16:
              return new Lt();
            case 13:
              return new Ct();
            default:
              return null;
          }
        }, t.packageItemExtensions = {}, t.loaderType = null, t;
      }(),
      J = function () {
        function t() {
          this._id = null, this._name = null, this._items = null, this._itemsById = null, this._itemsByName = null, this._customId = null, this._sprites = null, this._items = [], this._itemsById = {}, this._itemsByName = {}, this._sprites = {};
        }
        var e;
        r(t, "fairygui.UIPackage");
        var n = t.prototype;
        return n.loadPackage = function (t, i) {
          if (1179080009 != t.getUint32()) throw new Error("FairyGUI: old package format found in '" + i + "'");
          t.version = t.getInt32();
          var n = t.readBool();
          if (this._id = t.readUTFString(), this._name = t.readUTFString(), t.skip(20), n) {
            var r = new Uint8Array(t.buffer, t.pos, t.length - t.pos);
            r = new Zlib.RawInflate(r).decompress(), t = new at(r);
          }
          var a = t.pos,
            o = 0,
            h = 0,
            l = 0;
          t.seek(a, 4), o = t.getInt32();
          var u = s(o);
          for (h = 0; h < o; h++) u[h] = t.readUTFString();
          t.stringTable = u, t.seek(a, 1);
          var c;
          for (i += "_", o = t.getUint16(), h = 0; h < o; h++) {
            switch (l = t.getInt32(), l += t.pos, c = new B(), c.owner = this, c.type = t.readByte(), c.id = t.readS(), c.name = t.readS(), t.readS(), c.file = t.readS(), t.readBool(), c.width = t.getInt32(), c.height = t.getInt32(), c.type) {
              case 0:
                c.objectType = 0;
                var _ = t.readByte();
                1 == _ ? (c.scale9Grid = new laya.maths.Rectangle(), c.scale9Grid.x = t.getInt32(), c.scale9Grid.y = t.getInt32(), c.scale9Grid.width = t.getInt32(), c.scale9Grid.height = t.getInt32(), c.tileGridIndice = t.getInt32()) : 2 == _ && (c.scaleByTile = !0), c.smoothing = t.readBool();
                break;
              case 1:
                c.smoothing = t.readBool(), c.objectType = 1, c.rawData = t.readBuffer();
                break;
              case 5:
                c.rawData = t.readBuffer();
                break;
              case 3:
                var d = t.readByte();
                c.objectType = d > 0 ? d : 9, c.rawData = t.readBuffer(), $.resolvePackageItemExtension(c);
                break;
              case 4:
              case 2:
              case 7:
                c.file = i + c.file;
            }
            this._items.push(c), this._itemsById[c.id] = c, null != c.name && (this._itemsByName[c.name] = c), t.pos = l;
          }
          for (t.seek(a, 2), o = t.getUint16(), h = 0; h < o; h++) {
            l = t.getUint16(), l += t.pos;
            var f = t.readS();
            c = this._itemsById[t.readS()];
            var p = new e();
            p.atlas = c, p.rect.x = t.getInt32(), p.rect.y = t.getInt32(), p.rect.width = t.getInt32(), p.rect.height = t.getInt32(), p.rotated = t.readBool(), this._sprites[f] = p, t.pos = l;
          }
          if (t.seek(a, 3))
            for (o = t.getUint16(), h = 0; h < o; h++) l = t.getInt32(), l += t.pos, (c = this._itemsById[t.readS()]) && 0 == c.type && (c.pixelHitTestData = new tt(), c.pixelHitTestData.load(t)), t.pos = l;
        }, n.loadAllAssets = function () {
          for (var t = this._items.length, e = 0; e < t; e++) {
            var i = this._items[e];
            this.getItemAsset(i);
          }
        }, n.unloadAssets = function () {
          for (var t = this._items.length, e = 0; e < t; e++) {
            var n = this._items[e];
            4 == n.type && null != n.texture && i.loader.clearTextureRes(n.texture.url);
          }
        }, n.dispose = function () {
          for (var t = this._items.length, e = 0; e < t; e++) {
            var i = this._items[e];
            4 == i.type ? null != i.texture && (i.texture.destroy(!0), i.texture = null) : 2 == i.type && x.destroySound(i.file);
          }
        }, n.createObject = function (t, e) {
          var i = this._itemsByName[t];
          return i ? this.internalCreateObject(i, e) : null;
        }, n.internalCreateObject = function (t, e) {
          var i;
          return null == (i = 3 == t.type && null != e ? new e() : $.newObject(t)) ? null : (fairygui.UIPackage._constructing++, i.packageItem = t, i.constructFromResource(), fairygui.UIPackage._constructing--, i);
        }, n.getItemById = function (t) {
          return this._itemsById[t];
        }, n.getItemByName = function (t) {
          return this._itemsByName[t];
        }, n.getItemAssetByName = function (t) {
          var e = this._itemsByName[t];
          if (null == e) throw "Resource not found -" + t;
          return this.getItemAsset(e);
        }, n.getItemAsset = function (t) {
          switch (t.type) {
            case 0:
              if (!t.decoded) {
                t.decoded = !0;
                var e = this._sprites[t.id];
                t.texture = null != e ? this.createSpriteTexture(e) : null;
              }
              return t.texture;
            case 4:
              return t.decoded || (t.decoded = !0, t.texture = M.inst.getRes(t.file), Z.textureLinearSampling || (t.texture.isLinearSampling = !1)), t.texture;
            case 5:
              return t.decoded || (t.decoded = !0, this.loadFont(t)), t.bitmapFont;
            case 1:
              return t.decoded || (t.decoded = !0, this.loadMovieClip(t)), t.frames;
            case 3:
              return t.rawData;
            case 7:
              return t.file ? M.inst.getRes(t.file) : null;
            default:
              return null;
          }
        }, n.createSpriteTexture = function (t) {
          var e = this.getItemAsset(t.atlas);
          return w.createFromTexture(e, t.rect.x, t.rect.y, t.rect.width, t.rect.height);
        }, n.loadMovieClip = function (t) {
          var e = t.rawData;
          e.seek(0, 0), t.interval = e.getInt32(), t.swing = e.readBool(), t.repeatDelay = e.getInt32(), e.seek(0, 1);
          var i = e.getInt16();
          t.frames = s(i);
          for (var n, r, a, o = 0; o < i; o++) {
            var h = e.getInt16();
            h += e.pos, (r = new R()).rect.x = e.getInt32(), r.rect.y = e.getInt32(), r.rect.width = e.getInt32(), r.rect.height = e.getInt32(), r.addDelay = e.getInt32(), null != (n = e.readS()) && null != (a = this._sprites[n]) && (r.texture = this.createSpriteTexture(a)), t.frames[o] = r, e.pos = h;
          }
        }, n.loadFont = function (t) {
          var e = new D();
          t.bitmapFont = e;
          var i = t.rawData;
          i.seek(0, 0), e.ttf = i.readBool(), i.readBool(), e.resizable = i.readBool(), i.readBool(), e.size = i.getInt32();
          var n = i.getInt32(),
            r = i.getInt32(),
            a = null,
            s = this._sprites[t.id];
          null != s && (a = this.getItemAsset(s.atlas)), i.seek(0, 1);
          for (var o = null, h = i.getInt32(), l = 0; l < h; l++) {
            var u = i.getInt16();
            u += i.pos, o = new A();
            var c = i.readChar();
            e.glyphs[c] = o;
            var _ = i.readS(),
              d = i.getInt32(),
              f = i.getInt32();
            if (o.offsetX = i.getInt32(), o.offsetY = i.getInt32(), o.width = i.getInt32(), o.height = i.getInt32(), o.advance = i.getInt32(), o.channel = i.readByte(), 1 == o.channel ? o.channel = 3 : 2 == o.channel ? o.channel = 2 : 3 == o.channel && (o.channel = 1), e.ttf) o.texture = w.createFromTexture(a, d + s.rect.x, f + s.rect.y, o.width, o.height);
            else {
              var p = this._itemsById[_];
              p && (this.getItemAsset(p), o.width = p.width, o.height = p.height, o.texture = p.texture);
            }
            e.ttf ? o.lineHeight = r : (0 == o.advance && (o.advance = 0 == n ? o.offsetX + o.width : n), o.lineHeight = o.offsetY < 0 ? o.height : o.offsetY + o.height, o.lineHeight < e.size && (o.lineHeight = e.size)), i.pos = u;
          }
        }, a(0, n, "id", function () {
          return this._id;
        }), a(0, n, "name", function () {
          return this._name;
        }), a(0, n, "customId", function () {
          return this._customId;
        }, function (t) {
          null != this._customId && delete fairygui.UIPackage._packageInstById[this._customId], this._customId = t, null != this._customId && (fairygui.UIPackage._packageInstById[this._customId] = this);
        }), t.getById = function (t) {
          return fairygui.UIPackage._packageInstById[t];
        }, t.getByName = function (t) {
          return fairygui.UIPackage._packageInstByName[t];
        }, t.addPackage = function (e, i, n) {
          r = fairygui.UIPackage._packageInstByName[i];
          if (!r) {
            if (!(n || (n = M.inst.getRes(e + "." + Z.packageFileExtension)) && 0 != n.length)) throw new Error("package resource not ready: " + e);
            var r, a = new at(n);
            (r = new t()).loadPackage(a, e), fairygui.UIPackage._packageInstById[r.id] = r, fairygui.UIPackage._packageInstByName[r.name] = r, r.customId = e;
          }
          return r;
        }, t.removePackage = function (t) {
          var e = fairygui.UIPackage._packageInstById[t];
          e || (e = fairygui.UIPackage._packageInstByName[t]), e && (e.dispose(), delete fairygui.UIPackage._packageInstById[e.id], null != e._customId && delete fairygui.UIPackage._packageInstById[e._customId], delete fairygui.UIPackage._packageInstByName[e.name]);
        }, t.createObject = function (t, e, i) {
          var n = fairygui.UIPackage.getByName(t);
          return n ? n.createObject(e, i) : null;
        }, t.createObjectFromURL = function (t, e) {
          var i = fairygui.UIPackage.getItemByURL(t);
          return i ? i.owner.internalCreateObject(i, e) : null;
        }, t.getItemURL = function (t, e) {
          var i = fairygui.UIPackage.getByName(t);
          if (!i) return null;
          var n = i._itemsByName[e];
          return n ? "ui://" + i.id + n.id : null;
        }, t.getItemByURL = function (e) {
          var i = e.indexOf("//");
          if (-1 == i) return null;
          var n = e.indexOf("/", i + 2);
          if (-1 == n) {
            if (e.length > 13) {
              var r = e.substr(5, 8),
                a = t.getById(r);
              if (null != a) {
                var s = e.substr(13);
                return a.getItemById(s);
              }
            }
          } else {
            var o = e.substr(i + 2, n - i - 2);
            if (null != (a = t.getByName(o))) {
              var h = e.substr(n + 1);
              return a.getItemByName(h);
            }
          }
          return null;
        }, t.getItemAssetByURL = function (e) {
          var i = t.getItemByURL(e);
          return null == i ? null : i.owner.getItemAsset(i);
        }, t.normalizeURL = function (e) {
          if (null == e) return null;
          var i = e.indexOf("//");
          if (-1 == i) return null;
          var n = e.indexOf("/", i + 2);
          if (-1 == n) return e;
          var r = e.substr(i + 2, n - i - 2),
            a = e.substr(n + 1);
          return t.getItemURL(r, a);
        }, t.setStringsSource = function (t) {
          W.loadFromXML(t);
        }, t._constructing = 0, t._packageInstById = {}, t._packageInstByName = {}, t.__init$ = function () {
          e = function () {
            function t() {
              this.atlas = null, this.rect = null, this.rotated = !1, this.rect = new v();
            }
            return r(t, ""), t;
          }();
        }, t;
      }(),
      tt = function () {
        function t() {
          this.pixelWidth = 0, this.scale = NaN, this.pixels = null;
        }
        r(t, "fairygui.utils.PixelHitTestData");
        return t.prototype.load = function (t) {
          t.getInt32(), this.pixelWidth = t.getInt32(), this.scale = 1 / t.readByte();
          var e = t.getInt32();
          this.pixels = s(e);
          for (var i = 0; i < e; i++) {
            var n = t.readByte();
            n < 0 && (n += 256), this.pixels[i] = n;
          }
        }, t;
      }(),
      et = function () {
        function t() {}
        return r(t, "fairygui.utils.ToolSet"), t.getFileName = function (t) {
          var e = t.lastIndexOf("/");
          return -1 != e && (t = t.substr(e + 1)), -1 != (e = t.lastIndexOf("\\")) && (t = t.substr(e + 1)), -1 != (e = t.lastIndexOf(".")) ? t.substring(0, e) : t;
        }, t.startsWith = function (t, e, i) {
          return void 0 === i && (i = !1), !!t && (!(t.length < e.length) && (t = t.substring(0, e.length), i ? t.toLowerCase() == e.toLowerCase() : t == e));
        }, t.endsWith = function (t, e, i) {
          return void 0 === i && (i = !1), !!t && (!(t.length < e.length) && (t = t.substring(t.length - e.length), i ? t.toLowerCase() == e.toLowerCase() : t == e));
        }, t.trim = function (t) {
          return fairygui.utils.ToolSet.trimLeft(fairygui.utils.ToolSet.trimRight(t));
        }, t.trimLeft = function (t) {
          for (var e = "", i = 0; i < t.length && (" " == (e = t.charAt(i)) || "\n" == e || "\r" == e); i++);
          return t.substr(i);
        }, t.trimRight = function (t) {
          for (var e = "", i = t.length - 1; i >= 0 && (" " == (e = t.charAt(i)) || "\n" == e || "\r" == e); i--);
          return t.substring(0, i + 1);
        }, t.convertToHtmlColor = function (t, e) {
          void 0 === e && (e = !1);
          var i;
          i = e ? (t >> 24 & 255).toString(16) : "";
          var n = (t >> 16 & 255).toString(16),
            r = (t >> 8 & 255).toString(16),
            a = (255 & t).toString(16);
          return 1 == i.length && (i = "0" + i), 1 == n.length && (n = "0" + n), 1 == r.length && (r = "0" + r), 1 == a.length && (a = "0" + a), "#" + i + n + r + a;
        }, t.convertFromHtmlColor = function (t, e) {
          return void 0 === e && (e = !1), t.length < 1 ? 0 : ("#" == t.charAt(0) && (t = t.substr(1)), 8 == t.length ? (parseInt(t.substr(0, 2), 16) << 24) + parseInt(t.substr(2), 16) : e ? 4278190080 + parseInt(t, 16) : parseInt(t, 16));
        }, t.displayObjectToGObject = function (t) {
          for (; null != t && !(t instanceof laya.display.Stage);) {
            if (t.$owner) return t.$owner;
            t = t.parent;
          }
          return null;
        }, t.encodeHTML = function (t) {
          return t ? t.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;").replace("'", "&apos;") : "";
        }, t.parseUBB = function (t) {
          return fairygui.utils.ToolSet.defaultUBBParser.parse(t);
        }, t.removeUBB = function (t) {
          return fairygui.utils.ToolSet.defaultUBBParser.parse(t, !0);
        }, t.clamp = function (t, e, i) {
          return t < e ? t = e : t > i && (t = i), t;
        }, t.clamp01 = function (t) {
          return t > 1 ? t = 1 : t < 0 && (t = 0), t;
        }, t.lerp = function (t, e, i) {
          return t + i * (e - t);
        }, n(t, ["defaultUBBParser", function () {
          return this.defaultUBBParser = new it();
        }]), t;
      }(),
      it = function () {
        function t() {
          this._text = null, this._readPos = 0, this._handlers = null, this.smallFontSize = 12, this.normalFontSize = 14, this.largeFontSize = 16, this.defaultImgWidth = 0, this.defaultImgHeight = 0, this._handlers = {}, this._handlers.url = this.onTag_URL, this._handlers.img = this.onTag_IMG, this._handlers.b = this.onTag_Simple, this._handlers.i = this.onTag_Simple, this._handlers.u = this.onTag_Simple, this._handlers.sup = this.onTag_Simple, this._handlers.sub = this.onTag_Simple, this._handlers.color = this.onTag_COLOR, this._handlers.font = this.onTag_FONT, this._handlers.size = this.onTag_SIZE;
        }
        r(t, "fairygui.utils.UBBParser");
        var e = t.prototype;
        return e.onTag_URL = function (t, e, i) {
          if (e) return "</a>";
          if (null != i) return '<a href="' + i + '" target="_blank">';
          return '<a href="' + this.getTagText() + '" target="_blank">';
        }, e.onTag_IMG = function (t, e, i) {
          if (e) return null;
          var n = this.getTagText(!0);
          return n ? this.defaultImgWidth ? '<img src="' + n + '" width="' + this.defaultImgWidth + '" height="' + this.defaultImgHeight + '"/>' : '<img src="' + n + '"/>' : null;
        }, e.onTag_Simple = function (t, e, i) {
          return e ? "</" + t + ">" : "<" + t + ">";
        }, e.onTag_COLOR = function (t, e, i) {
          return e ? "</font>" : '<font color="' + i + '">';
        }, e.onTag_FONT = function (t, e, i) {
          return e ? "</font>" : '<font face="' + i + '">';
        }, e.onTag_SIZE = function (t, e, i) {
          return e ? "</font>" : ("normal" == i ? i = "" + this.normalFontSize : "small" == i ? i = "" + this.smallFontSize : "large" == i ? i = "" + this.largeFontSize : i.length && "+" == i.charAt(0) ? i = "" + (this.smallFontSize + parseInt(i.substr(1))) : i.length && "-" == i.charAt(0) && (i = "" + (this.smallFontSize - parseInt(i.substr(1)))), '<font size="' + i + '">');
        }, e.getTagText = function (t) {
          void 0 === t && (t = !1);
          for (var e = this._readPos, i = 0, n = ""; - 1 != (i = this._text.indexOf("[", e));) {
            if (92 != this._text.charCodeAt(i - 1)) {
              n += this._text.substring(e, i);
              break;
            }
            n += this._text.substring(e, i - 1), n += "[", e = i + 1;
          }
          return -1 == i ? null : (t && (this._readPos = i), n);
        }, e.parse = function (t, e) {
          void 0 === e && (e = !1), this._text = t;
          for (var i, n, r, a, s = 0, o = 0, h = 0, l = !1, u = ""; - 1 != (o = this._text.indexOf("[", s));)
            if (o > 0 && 92 == this._text.charCodeAt(o - 1)) u += this._text.substring(s, o - 1), u += "[", s = o + 1;
            else {
              if (u += this._text.substring(s, o), s = o, -1 == (o = this._text.indexOf("]", s))) break;
              l = "/" == this._text.charAt(s + 1), i = this._text.substring(l ? s + 2 : s + 1, o), this._readPos = o + 1, n = null, r = null, -1 != (h = i.indexOf("=")) && (n = i.substring(h + 1), i = i.substring(0, h)), i = i.toLowerCase(), null != (a = this._handlers[i]) ? e || null != (r = a.call(this, i, l, n)) && (u += r) : u += this._text.substring(s, this._readPos), s = this._readPos;
            }
          return s < this._text.length && (u += this._text.substr(s)), this._text = null, u;
        }, n(t, ["inst", function () {
          return this.inst = new t();
        }]), t;
      }(),
      nt = function (t) {
        function e() {
          e.__super.call(this), this.reset();
        }
        r(e, "fairygui.utils.ColorMatrix", Array);
        var i = e.prototype;
        return i.reset = function () {
          for (var t = 0; t < e.LENGTH; t++) this[t] = e.IDENTITY_MATRIX[t];
        }, i.invert = function () {
          this.multiplyMatrix([-1, 0, 0, 0, 255, 0, -1, 0, 0, 255, 0, 0, -1, 0, 255, 0, 0, 0, 1, 0]);
        }, i.adjustColor = function (t, e, i, n) {
          this.adjustHue(n), this.adjustContrast(e), this.adjustBrightness(t), this.adjustSaturation(i);
        }, i.adjustBrightness = function (t) {
          t = 255 * this.cleanValue(t, 1), this.multiplyMatrix([1, 0, 0, 0, t, 0, 1, 0, 0, t, 0, 0, 1, 0, t, 0, 0, 0, 1, 0]);
        }, i.adjustContrast = function (t) {
          var e = (t = this.cleanValue(t, 1)) + 1,
            i = 128 * (1 - e);
          this.multiplyMatrix([e, 0, 0, 0, i, 0, e, 0, 0, i, 0, 0, e, 0, i, 0, 0, 0, 1, 0]);
        }, i.adjustSaturation = function (t) {
          t = this.cleanValue(t, 1);
          var e = 1 - (t += 1),
            i = .299 * e,
            n = .587 * e,
            r = .114 * e;
          this.multiplyMatrix([i + t, n, r, 0, 0, i, n + t, r, 0, 0, i, n, r + t, 0, 0, 0, 0, 0, 1, 0]);
        }, i.adjustHue = function (t) {
          t = this.cleanValue(t, 1), t *= Math.PI;
          var e = Math.cos(t),
            i = Math.sin(t);
          this.multiplyMatrix([.299 + e * (1 - .299) + -.299 * i, .587 + -.587 * e + -.587 * i, .114 + -.114 * e + .886 * i, 0, 0, .299 + -.299 * e + .143 * i, .587 + e * (1 - .587) + .14 * i, .114 + -.114 * e + -.283 * i, 0, 0, .299 + -.299 * e + i * -(1 - .299), .587 + -.587 * e + .587 * i, .114 + .886 * e + .114 * i, 0, 0, 0, 0, 0, 1, 0]);
        }, i.concat = function (t) {
          t.length == e.LENGTH && this.multiplyMatrix(t);
        }, i.clone = function () {
          var t = new e();
          return t.copyMatrix(this), t;
        }, i.copyMatrix = function (t) {
          for (var i = e.LENGTH, n = 0; n < i; n++) this[n] = t[n];
        }, i.multiplyMatrix = function (t) {
          for (var e = [], i = 0, n = 0; n < 4; ++n) {
            for (var r = 0; r < 5; ++r) e[i + r] = t[i] * this[r] + t[i + 1] * this[r + 5] + t[i + 2] * this[r + 10] + t[i + 3] * this[r + 15] + (4 == r ? t[i + 4] : 0);
            i += 5;
          }
          this.copyMatrix(e);
        }, i.cleanValue = function (t, e) {
          return Math.min(e, Math.max(-e, t));
        }, e.create = function (t, i, n, r) {
          var a = new e();
          return a.adjustColor(t, i, n, r), a;
        }, e.LUMA_R = .299, e.LUMA_G = .587, e.LUMA_B = .114, n(e, ["IDENTITY_MATRIX", function () {
          return this.IDENTITY_MATRIX = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];
        }, "LENGTH", function () {
          return this.LENGTH = e.IDENTITY_MATRIX.length;
        }]), e;
      }(Array),
      rt = function (t) {
        function e() {
          this._selectedIndex = 0, this._previousIndex = 0, this._pageIds = null, this._pageNames = null, this._actions = null, this.name = null, this.parent = null, this.autoRadioGroupDepth = !1, this.changing = !1, e.__super.call(this), this._pageIds = [], this._pageNames = [], this._selectedIndex = -1, this._previousIndex = -1;
        }
        r(e, "fairygui.Controller", c);
        var i = e.prototype;
        return i.dispose = function () {
          this.offAll();
        }, i.setSelectedIndex = function (t) {
          if (void 0 === t && (t = 0), this._selectedIndex != t) {
            if (t > this._pageIds.length - 1) throw "index out of bounds: " + t;
            this.changing = !0, this._previousIndex = this._selectedIndex, this._selectedIndex = t, this.parent.applyController(this), this.changing = !1;
          }
        }, i.setSelectedPage = function (t) {
          var e = this._pageNames.indexOf(t); - 1 == e && (e = 0), this.setSelectedIndex(e);
        }, i.getPageName = function (t) {
          return void 0 === t && (t = 0), this._pageNames[t];
        }, i.addPage = function (t) {
          void 0 === t && (t = ""), this.addPageAt(t, this._pageIds.length);
        }, i.addPageAt = function (t, e) {
          void 0 === e && (e = 0);
          var i = "" + fairygui.Controller._nextPageId++;
          e == this._pageIds.length ? (this._pageIds.push(i), this._pageNames.push(t)) : (this._pageIds.splice(e, 0, i), this._pageNames.splice(e, 0, t));
        }, i.removePage = function (t) {
          var e = this._pageNames.indexOf(t); - 1 != e && (this._pageIds.splice(e, 1), this._pageNames.splice(e, 1), this._selectedIndex >= this._pageIds.length ? this.selectedIndex = this._selectedIndex - 1 : this.parent.applyController(this));
        }, i.removePageAt = function (t) {
          void 0 === t && (t = 0), this._pageIds.splice(t, 1), this._pageNames.splice(t, 1), this._selectedIndex >= this._pageIds.length ? this.selectedIndex = this._selectedIndex - 1 : this.parent.applyController(this);
        }, i.clearPages = function () {
          this._pageIds.length = 0, this._pageNames.length = 0, -1 != this._selectedIndex ? this.selectedIndex = -1 : this.parent.applyController(this);
        }, i.hasPage = function (t) {
          return -1 != this._pageNames.indexOf(t);
        }, i.getPageIndexById = function (t) {
          return this._pageIds.indexOf(t);
        }, i.getPageIdByName = function (t) {
          var e = this._pageNames.indexOf(t);
          return -1 != e ? this._pageIds[e] : null;
        }, i.getPageNameById = function (t) {
          var e = this._pageIds.indexOf(t);
          return -1 != e ? this._pageNames[e] : null;
        }, i.getPageId = function (t) {
          return void 0 === t && (t = 0), this._pageIds[t];
        }, i.runActions = function () {
          if (this._actions)
            for (var t = this._actions.length, e = 0; e < t; e++) this._actions[e].run(this, this.previousPageId, this.selectedPageId);
        }, i.setup = function (t) {
          var e = t.pos;
          t.seek(e, 0), this.name = t.readS(), this.autoRadioGroupDepth = t.readBool(), t.seek(e, 1);
          var i = 0,
            n = 0,
            r = t.getInt16();
          for (i = 0; i < r; i++) this._pageIds.push(t.readS()), this._pageNames.push(t.readS());
          if (t.seek(e, 2), (r = t.getInt16()) > 0)
            for (null == this._actions && (this._actions = []), i = 0; i < r; i++) {
              n = t.getInt16(), n += t.pos;
              var a = C.createAction(t.readByte());
              a.setup(t), this._actions.push(a), t.pos = n;
            }
          null != this.parent && this._pageIds.length > 0 ? this._selectedIndex = 0 : this._selectedIndex = -1;
        }, a(0, i, "selectedIndex", function () {
          return this._selectedIndex;
        }, function (t) {
          if (this._selectedIndex != t) {
            if (t > this._pageIds.length - 1) throw "index out of bounds: " + t;
            this.changing = !0, this._previousIndex = this._selectedIndex, this._selectedIndex = t, this.parent.applyController(this), this.event("fui_state_changed"), this.changing = !1;
          }
        }), a(0, i, "selectedPage", function () {
          return -1 == this._selectedIndex ? null : this._pageNames[this._selectedIndex];
        }, function (t) {
          var e = this._pageNames.indexOf(t); - 1 == e && (e = 0), this.selectedIndex = e;
        }), a(0, i, "previsousIndex", function () {
          return this._previousIndex;
        }), a(0, i, "previousPage", function () {
          return -1 == this._previousIndex ? null : this._pageNames[this._previousIndex];
        }), a(0, i, "pageCount", function () {
          return this._pageIds.length;
        }), a(0, i, "selectedPageId", function () {
          return -1 == this._selectedIndex ? null : this._pageIds[this._selectedIndex];
        }, function (t) {
          var e = this._pageIds.indexOf(t);
          this.selectedIndex = e;
        }), a(0, i, "previousPageId", function () {
          return -1 == this._previousIndex ? null : this._pageIds[this._previousIndex];
        }), a(0, i, "oppositePageId", null, function (t) {
          this._pageIds.indexOf(t) > 0 ? this.selectedIndex = 0 : this._pageIds.length > 1 && (this.selectedIndex = 1);
        }), e._nextPageId = 0, e;
      }(),
      at = function (t) {
        function e(t, i, n) {
          this.stringTable = null, this.version = 0, void 0 === i && (i = 0), void 0 === n && (n = -1), -1 == n && (n = t.byteLength - i), 0 == i && n == t.byteLength ? e.__super.call(this, t) : (this._u8d_ = new Uint8Array(t, i, n), this._d_ = new DataView(this._u8d_.buffer, i, n), this._length = n), this.endian = "bigEndian";
        }
        r(e, "fairygui.utils.ByteBuffer", h);
        var i = e.prototype;
        return i.skip = function (t) {
          this.pos += t;
        }, i.readBool = function () {
          return 1 == this.getUint8();
        }, i.readS = function () {
          var t = this.getUint16();
          return 65534 == t ? null : 65533 == t ? "" : this.stringTable[t];
        }, i.writeS = function (t) {
          var e = this.getUint16();
          65534 != e && 65533 != e && (this.stringTable[e] = t);
        }, i.readColor = function (t) {
          void 0 === t && (t = !1);
          var e = this.getUint8(),
            i = this.getUint8(),
            n = this.getUint8(),
            r = this.getUint8();
          return (t ? r << 24 : 0) + (e << 16) + (i << 8) + n;
        }, i.readColorS = function (t) {
          void 0 === t && (t = !1);
          var e = this.getUint8(),
            i = this.getUint8(),
            n = this.getUint8(),
            r = this.getUint8();
          if (t && 255 != r) return "rgba(" + e + "," + i + "," + n + "," + r / 255 + ")";
          var a = e.toString(16),
            s = i.toString(16),
            o = n.toString(16);
          return 1 == a.length && (a = "0" + a), 1 == s.length && (s = "0" + s), 1 == o.length && (o = "0" + o), "#" + a + s + o;
        }, i.readChar = function () {
          var t = this.getUint16();
          return String.fromCharCode(t);
        }, i.readBuffer = function () {
          var t = this.getUint32(),
            i = new e(this.buffer, this._pos_, t);
          return i.stringTable = this.stringTable, i.version = this.version, i;
        }, i.seek = function (t, e) {
          var i = this._pos_;
          this.pos = t;
          if (e < this.getUint8()) {
            var n = 0;
            return 1 == this.getUint8() ? (this.pos += 2 * e, n = this.getUint16()) : (this.pos += 4 * e, n = this.getUint32()), n > 0 ? (this.pos = t + n, !0) : (this.pos = i, !1);
          }
          return this.pos = i, !1;
        }, e;
      }(),
      st = function (t) {
        function e(t, i, n) {
          this._data = null, this.offsetX = 0, this.offsetY = 0, this.scaleX = NaN, this.scaleY = NaN, e.__super.call(this), void 0 === i && (i = 0), void 0 === n && (n = 0), this._data = t, this.offsetX = i, this.offsetY = n, this.scaleX = 1, this.scaleY = 1;
        }
        r(e, "fairygui.utils.PixelHitTest", f);
        return e.prototype.isHit = function (t, e) {
          if (t = Math.floor((t / this.scaleX - this.offsetX) * this._data.scale), e = Math.floor((e / this.scaleY - this.offsetY) * this._data.scale), t < 0 || e < 0 || t >= this._data.pixelWidth) return !1;
          var i = e * this._data.pixelWidth + t,
            n = Math.floor(i / 8),
            r = i % 8;
          return n >= 0 && n < this._data.pixels.length && 1 == (this._data.pixels[n] >> r & 1);
        }, e;
      }(),
      ot = function (t) {
        function e() {
          this.objectId = null, this.controllerName = null, this.targetPage = null, e.__super.call(this);
        }
        r(e, "fairygui.action.ChangePageAction", t);
        var i = e.prototype;
        return i.enter = function (t) {
          if (this.controllerName) {
            var e;
            if (e = this.objectId ? t.parent.getChildById(this.objectId) : t.parent) {
              var i = e.getController(this.controllerName);
              i && i != t && !i.changing && (i.selectedPageId = this.targetPage);
            }
          }
        }, i.setup = function (e) {
          t.prototype.setup.call(this, e), this.objectId = e.readS(), this.controllerName = e.readS(), this.targetPage = e.readS();
        }, e;
      }(C),
      ht = function (t) {
        function e() {
          this.transitionName = null, this.playTimes = 1, this.delay = 0, this.stopOnExit = !1, this._currentTransition = null, e.__super.call(this);
        }
        r(e, "fairygui.action.PlayTransitionAction", t);
        var i = e.prototype;
        return i.enter = function (t) {
          var e = t.parent.getTransition(this.transitionName);
          e && (this._currentTransition && this._currentTransition.playing ? e.changePlayTimes(this.playTimes) : e.play(null, this.playTimes, this.delay), this._currentTransition = e);
        }, i.leave = function (t) {
          this.stopOnExit && this._currentTransition && (this._currentTransition.stop(), this._currentTransition = null);
        }, i.setup = function (e) {
          t.prototype.setup.call(this, e), this.transitionName = e.readS(), this.playTimes = e.getInt32(), this.delay = e.getFloat32(), this.stopOnExit = e.readBool();
        }, e;
      }(C),
      lt = function (t) {
        function e() {
          this._gearColor = null, this._templateVars = null, this._text = null, e.__super.call(this), this._gearColor = new _t(this);
        }
        r(e, "fairygui.GTextField", t);
        var n = e.prototype;
        return i.imps(n, {
          "fairygui.gears.IColorGear": !0
        }), n.parseTemplate = function (t) {
          for (var e, i, n = 0, r = 0, a = 0, s = ""; - 1 != (r = t.indexOf("{", n));)
            if (r > 0 && 92 == t.charCodeAt(r - 1)) s += t.substring(n, r - 1), s += "{", n = r + 1;
            else {
              if (s += t.substring(n, r), n = r, -1 == (r = t.indexOf("}", n))) break;
              r != n + 1 ? (-1 != (a = (e = t.substring(n + 1, r)).indexOf("=")) ? s += null == (i = this._templateVars[e.substring(0, a)]) ? e.substring(a + 1) : i : null != (i = this._templateVars[e]) && (s += i), n = r + 1) : (s += t.substr(n, 2), n = r + 1);
            }
          return n < t.length && (s += t.substr(n)), s;
        }, n.setVar = function (t, e) {
          return this._templateVars || (this._templateVars = {}), this._templateVars[t] = e, this;
        }, n.flushVars = function () {
          this.text = this._text;
        }, n.handleControllerChanged = function (e) {
          t.prototype.handleControllerChanged.call(this, e), this._gearColor.controller == e && this._gearColor.apply();
        }, n.setup_beforeAdd = function (e, i) {
          t.prototype.setup_beforeAdd.call(this, e, i), e.seek(i, 5);
          var n = 0;
          this.font = e.readS(), this.fontSize = e.getInt16(), this.color = e.readColorS(), n = e.readByte(), this.align = 0 == n ? "left" : 1 == n ? "center" : "right", n = e.readByte(), this.valign = 0 == n ? "top" : 1 == n ? "middle" : "bottom", this.leading = e.getInt16(), this.letterSpacing = e.getInt16(), this.ubbEnabled = e.readBool(), this.autoSize = e.readByte(), this.underline = e.readBool(), this.italic = e.readBool(), this.bold = e.readBool(), this.singleLine = e.readBool(), e.readBool() && (this.strokeColor = e.readColorS(), this.stroke = e.getFloat32() + 1), e.readBool() && e.skip(12), e.readBool() && (this._templateVars = {});
        }, n.setup_afterAdd = function (e, i) {
          t.prototype.setup_afterAdd.call(this, e, i), e.seek(i, 6);
          var n = e.readS();
          null != n && (this.text = n);
        }, a(0, n, "color", function () {
          return null;
        }, function (t) {}), a(0, n, "font", function () {
          return null;
        }, function (t) {}), a(0, n, "templateVars", function () {
          return this._templateVars;
        }, function (t) {
          null == this._templateVars && null == t || (this._templateVars = t, this.flushVars());
        }), a(0, n, "leading", function () {
          return 0;
        }, function (t) {}), a(0, n, "fontSize", function () {
          return 0;
        }, function (t) {}), a(0, n, "bold", function () {
          return !1;
        }, function (t) {}), a(0, n, "letterSpacing", function () {
          return 0;
        }, function (t) {}), a(0, n, "align", function () {
          return null;
        }, function (t) {}), a(0, n, "valign", function () {
          return null;
        }, function (t) {}), a(0, n, "italic", function () {
          return !1;
        }, function (t) {}), a(0, n, "underline", function () {
          return !1;
        }, function (t) {}), a(0, n, "singleLine", function () {
          return !1;
        }, function (t) {}), a(0, n, "stroke", function () {
          return 0;
        }, function (t) {}), a(0, n, "strokeColor", function () {
          return null;
        }, function (t) {}), a(0, n, "ubbEnabled", function () {
          return !1;
        }, function (t) {}), a(0, n, "autoSize", function () {
          return 0;
        }, function (t) {}), a(0, n, "textWidth", function () {
          return 0;
        }), e;
      }(L),
      ut = function (t) {
        function e() {
          this._sortingChildCount = 0, this._opaque = !1, this._applyingController = null, this._margin = null, this._trackBounds = !1, this._boundsChanged = !1, this._childrenRenderOrder = 0, this._apexIndex = 0, this._buildingDisplayList = !1, this._children = null, this._controllers = null, this._transitions = null, this._container = null, this._scrollPane = null, this._alignOffset = null, e.__super.call(this), this._children = [], this._controllers = [], this._transitions = [], this._margin = new F(), this._alignOffset = new g();
        }
        r(e, "fairygui.GComponent", t);
        var n = e.prototype;
        return n.createDisplayObject = function () {
          t.prototype.createDisplayObject.call(this), this._displayObject.mouseEnabled = !0, this._displayObject.mouseThrough = !0, this._container = this._displayObject;
        }, n.dispose = function () {
          var e = 0,
            i = 0;
          for (i = this._transitions.length, e = 0; e < i; ++e) {
            this._transitions[e].dispose();
          }
          for (i = this._controllers.length, e = 0; e < i; ++e) {
            this._controllers[e].dispose();
          }
          for (null != this.scrollPane && this.scrollPane.dispose(), e = (i = this._children.length) - 1; e >= 0; --e) {
            var n = this._children[e];
            n.parent = null, n.dispose();
          }
          this._boundsChanged = !1, t.prototype.dispose.call(this);
        }, n.addChild = function (t) {
          return this.addChildAt(t, this._children.length), t;
        }, n.addChildAt = function (t, e) {
          if (void 0 === e && (e = 0), !t) throw "child is null";
          var i = this._children.length;
          if (e >= 0 && e <= i) {
            if (t.parent == this) this.setChildIndex(t, e);
            else {
              t.removeFromParent(), t.parent = this;
              var n = this._children.length;
              0 != t.sortingOrder ? (this._sortingChildCount++, e = this.getInsertPosForSortingChild(t)) : this._sortingChildCount > 0 && e > n - this._sortingChildCount && (e = n - this._sortingChildCount), e == n ? this._children.push(t) : this._children.splice(e, 0, t), this.childStateChanged(t), this.setBoundsChangedFlag();
            }
            return t;
          }
          throw "Invalid child index";
        }, n.getInsertPosForSortingChild = function (t) {
          var e = this._children.length,
            i = 0;
          for (i = 0; i < e; i++) {
            var n = this._children[i];
            if (n != t && t.sortingOrder < n.sortingOrder) break;
          }
          return i;
        }, n.removeChild = function (t, e) {
          void 0 === e && (e = !1);
          var i = this._children.indexOf(t);
          return -1 != i && this.removeChildAt(i, e), t;
        }, n.removeChildAt = function (t, e) {
          if (void 0 === e && (e = !1), t >= 0 && t < this.numChildren) {
            var n = this._children[t];
            return n.parent = null, 0 != n.sortingOrder && this._sortingChildCount--, this._children.splice(t, 1), n.group = null, n.inContainer && (this._container.removeChild(n.displayObject), 2 == this._childrenRenderOrder && i.timer.callLater(this, this.buildNativeDisplayList)), e && n.dispose(), this.setBoundsChangedFlag(), n;
          }
          throw "Invalid child index";
        }, n.removeChildren = function (t, e, i) {
          void 0 === t && (t = 0), void 0 === e && (e = -1), void 0 === i && (i = !1), (e < 0 || e >= this.numChildren) && (e = this.numChildren - 1);
          for (var n = t; n <= e; ++n) this.removeChildAt(t, i);
        }, n.getChildAt = function (t) {
          if (void 0 === t && (t = 0), t >= 0 && t < this.numChildren) return this._children[t];
          throw "Invalid child index";
        }, n.getChild = function (t) {
          for (var e = this._children.length, i = 0; i < e; ++i)
            if (this._children[i].name == t) return this._children[i];
          return null;
        }, n.getVisibleChild = function (t) {
          for (var e = this._children.length, i = 0; i < e; ++i) {
            var n = this._children[i];
            if (n.internalVisible && n.internalVisible2 && n.name == t) return n;
          }
          return null;
        }, n.getChildInGroup = function (t, e) {
          for (var i = this._children.length, n = 0; n < i; ++n) {
            var r = this._children[n];
            if (r.group == e && r.name == t) return r;
          }
          return null;
        }, n.getChildById = function (t) {
          for (var e = this._children.length, i = 0; i < e; ++i)
            if (this._children[i]._id == t) return this._children[i];
          return null;
        }, n.getChildIndex = function (t) {
          return this._children.indexOf(t);
        }, n.setChildIndex = function (t, e) {
          void 0 === e && (e = 0);
          var i = this._children.indexOf(t);
          if (-1 == i) throw "Not a child of this container";
          if (0 == t.sortingOrder) {
            var n = this._children.length;
            this._sortingChildCount > 0 && e > n - this._sortingChildCount - 1 && (e = n - this._sortingChildCount - 1), this._setChildIndex(t, i, e);
          }
        }, n.setChildIndexBefore = function (t, e) {
          var i = this._children.indexOf(t);
          if (-1 == i) throw "Not a child of this container";
          if (0 != t.sortingOrder) return i;
          var n = this._children.length;
          return this._sortingChildCount > 0 && e > n - this._sortingChildCount - 1 && (e = n - this._sortingChildCount - 1), i < e ? this._setChildIndex(t, i, e - 1) : this._setChildIndex(t, i, e);
        }, n._setChildIndex = function (t, e, n) {
          var r = this._children.length;
          if (n > r && (n = r), e == n) return e;
          if (this._children.splice(e, 1), this._children.splice(n, 0, t), t.inContainer) {
            var a = 0,
              s = 0;
            if (0 == this._childrenRenderOrder) {
              for (s = 0; s < n; s++) this._children[s].inContainer && a++;
              a == this._container.numChildren && a--, this._container.setChildIndex(t.displayObject, a);
            } else if (1 == this._childrenRenderOrder) {
              for (s = r - 1; s > n; s--) this._children[s].inContainer && a++;
              a == this._container.numChildren && a--, this._container.setChildIndex(t.displayObject, a);
            } else i.timer.callLater(this, this.buildNativeDisplayList);
            this.setBoundsChangedFlag();
          }
          return n;
        }, n.swapChildren = function (t, e) {
          var i = this._children.indexOf(t),
            n = this._children.indexOf(e);
          if (-1 == i || -1 == n) throw "Not a child of this container";
          this.swapChildrenAt(i, n);
        }, n.swapChildrenAt = function (t, e) {
          void 0 === e && (e = 0);
          var i = this._children[t],
            n = this._children[e];
          this.setChildIndex(i, e), this.setChildIndex(n, t);
        }, n.isAncestorOf = function (t) {
          if (null == t) return !1;
          for (var e = t.parent; e;) {
            if (e == this) return !0;
            e = e.parent;
          }
          return !1;
        }, n.addController = function (t) {
          this._controllers.push(t), t.parent = this, this.applyController(t);
        }, n.getControllerAt = function (t) {
          return this._controllers[t];
        }, n.getController = function (t) {
          for (var e = this._controllers.length, i = 0; i < e; ++i) {
            var n = this._controllers[i];
            if (n.name == t) return n;
          }
          return null;
        }, n.removeController = function (t) {
          var e = this._controllers.indexOf(t);
          if (-1 == e) throw new Error("controller not exists");
          t.parent = null, this._controllers.splice(e, 1);
          for (var i = this._children.length, n = 0; n < i; n++) {
            this._children[n].handleControllerChanged(t);
          }
        }, n.childStateChanged = function (t) {
          if (!this._buildingDisplayList) {
            var e = this._children.length;
            if (t instanceof fairygui.GGroup)
              for (var n = 0; n < e; n++) {
                var r = this._children[n];
                r.group == t && this.childStateChanged(r);
              } else if (t.displayObject)
                if (t.internalVisible && t.displayObject != this._displayObject.mask) {
                  if (!t.displayObject.parent) {
                    var a = 0;
                    if (0 == this._childrenRenderOrder) {
                      for (n = 0; n < e && (r = this._children[n]) != t; n++) null != r.displayObject && null != r.displayObject.parent && a++;
                      this._container.addChildAt(t.displayObject, a);
                    } else if (1 == this._childrenRenderOrder) {
                      for (n = e - 1; n >= 0 && (r = this._children[n]) != t; n--) null != r.displayObject && null != r.displayObject.parent && a++;
                      this._container.addChildAt(t.displayObject, a);
                    } else this._container.addChild(t.displayObject), i.timer.callLater(this, this.buildNativeDisplayList);
                  }
                } else t.displayObject.parent && (this._container.removeChild(t.displayObject), 2 == this._childrenRenderOrder && i.timer.callLater(this, this.buildNativeDisplayList));
          }
        }, n.buildNativeDisplayList = function () {
          var t = this._children.length;
          if (0 != t) {
            var e, i = 0;
            switch (this._childrenRenderOrder) {
              case 0:
                for (i = 0; i < t; i++) null != (e = this._children[i]).displayObject && e.internalVisible && this._container.addChild(e.displayObject);
                break;
              case 1:
                for (i = t - 1; i >= 0; i--) null != (e = this._children[i]).displayObject && e.internalVisible && this._container.addChild(e.displayObject);
                break;
              case 2:
                for (i = 0; i < this._apexIndex; i++) null != (e = this._children[i]).displayObject && e.internalVisible && this._container.addChild(e.displayObject);
                for (i = t - 1; i >= this._apexIndex; i--) null != (e = this._children[i]).displayObject && e.internalVisible && this._container.addChild(e.displayObject);
            }
          }
        }, n.applyController = function (t) {
          this._applyingController = t;
          for (var e = this._children.length, i = 0; i < e; i++) this._children[i].handleControllerChanged(t);
          this._applyingController = null, t.runActions();
        }, n.applyAllControllers = function () {
          for (var t = this._controllers.length, e = 0; e < t; ++e) this.applyController(this._controllers[e]);
        }, n.adjustRadioGroupDepth = function (t, e) {
          var i, n = this._children.length,
            r = NaN,
            a = -1,
            s = -1;
          for (r = 0; r < n; r++)(i = this._children[r]) == t ? a = r : i instanceof fairygui.GButton && i.relatedController == e && r > s && (s = r);
          a < s && (null != this._applyingController && this._children[s].handleControllerChanged(this._applyingController), this.swapChildrenAt(a, s));
        }, n.getTransitionAt = function (t) {
          return this._transitions[t];
        }, n.getTransition = function (t) {
          for (var e = this._transitions.length, i = 0; i < e; ++i) {
            var n = this._transitions[i];
            if (n.name == t) return n;
          }
          return null;
        }, n.isChildInView = function (t) {
          return null != this._displayObject.scrollRect ? t.x + t.width >= 0 && t.x <= this.width && t.y + t.height >= 0 && t.y <= this.height : null == this._scrollPane || this._scrollPane.isChildInView(t);
        }, n.getFirstChildInView = function () {
          for (var t = this._children.length, e = 0; e < t; ++e) {
            var i = this._children[e];
            if (this.isChildInView(i)) return e;
          }
          return -1;
        }, n.updateHitArea = function () {
          if (this._displayObject.hitArea instanceof fairygui.utils.PixelHitTest) {
            var t = this._displayObject.hitArea;
            0 != this.sourceWidth && (t.scaleX = this.width / this.sourceWidth), 0 != this.sourceHeight && (t.scaleY = this.height / this.sourceHeight);
          } else null == this._displayObject.hitArea && (this._displayObject.hitArea = new v()), this._displayObject.hitArea.setTo(0, 0, this.width, this.height);
        }, n.updateMask = function () {
          var t = this._displayObject.scrollRect;
          null == t && (t = new v()), t.x = this._margin.left, t.y = this._margin.top, t.width = this.width - this._margin.right, t.height = this.height - this._margin.bottom, this._displayObject.scrollRect = t;
        }, n.setupScroll = function (t) {
          this._displayObject == this._container && (this._container = new T(), this._displayObject.addChild(this._container)), this._scrollPane = new H(this), this._scrollPane.setup(t);
        }, n.setupOverflow = function (t) {
          1 == t ? (this._displayObject == this._container && (this._container = new T(), this._displayObject.addChild(this._container)), this.updateMask(), this._container.pos(this._margin.left, this._margin.top)) : 0 == this._margin.left && 0 == this._margin.top || (this._displayObject == this._container && (this._container = new T(), this._displayObject.addChild(this._container)), this._container.pos(this._margin.left, this._margin.top));
        }, n.handleSizeChanged = function () {
          t.prototype.handleSizeChanged.call(this), this._scrollPane ? this._scrollPane.onOwnerSizeChanged() : null != this._displayObject.scrollRect && this.updateMask(), null != this._displayObject.hitArea && this.updateHitArea();
        }, n.handleGrayedChanged = function () {
          var t = this.getController("grayed");
          if (null == t)
            for (var e = this.grayed, i = this._children.length, n = 0; n < i; ++n) this._children[n].grayed = e;
          else t.selectedIndex = this.grayed ? 1 : 0;
        }, n.handleControllerChanged = function (e) {
          t.prototype.handleControllerChanged.call(this, e), null != this._scrollPane && this._scrollPane.handleControllerChanged(e);
        }, n.setBoundsChangedFlag = function () {
          (this._scrollPane || this._trackBounds) && (this._boundsChanged || (this._boundsChanged = !0, i.timer.callLater(this, this.__render)));
        }, n.__render = function () {
          if (this._boundsChanged) {
            var t = 0,
              e = this._children.length;
            for (t = 0; t < e; t++) this._children[t].ensureSizeCorrect();
            this.updateBounds();
          }
        }, n.ensureBoundsCorrect = function () {
          var t = 0,
            e = this._children.length;
          for (t = 0; t < e; t++) this._children[t].ensureSizeCorrect();
          this._boundsChanged && this.updateBounds();
        }, n.updateBounds = function () {
          var t = 0,
            e = 0,
            i = 0,
            n = 0,
            r = this._children.length;
          if (r > 0) {
            t = Number.POSITIVE_INFINITY, e = Number.POSITIVE_INFINITY;
            var a = Number.NEGATIVE_INFINITY,
              s = Number.NEGATIVE_INFINITY,
              o = 0,
              h = 0;
            for (h = 0; h < r; h++) {
              var l = this._children[h];
              (o = l.x) < t && (t = o), (o = l.y) < e && (e = o), (o = l.x + l.actualWidth) > a && (a = o), (o = l.y + l.actualHeight) > s && (s = o);
            }
            i = a - t, n = s - e;
          }
          this.setBounds(t, e, i, n);
        }, n.setBounds = function (t, e, i, n) {
          this._boundsChanged = !1, this._scrollPane && this._scrollPane.setContentSize(Math.round(t + i), Math.round(e + n));
        }, n.getSnappingPosition = function (t, e, i) {
          i || (i = new g());
          var n = this._children.length;
          if (0 == n) return i.x = 0, i.y = 0, i;
          this.ensureBoundsCorrect();
          var r = null,
            a = null,
            s = 0;
          if (0 != e) {
            for (; s < n; s++)
              if (r = this._children[s], e < r.y) {
                if (0 == s) {
                  e = 0;
                  break;
                }
                e = e < (a = this._children[s - 1]).y + a.actualHeight / 2 ? a.y : r.y;
                break;
              }
            s == n && (e = r.y);
          }
          if (0 != t) {
            for (s > 0 && s--; s < n; s++)
              if (r = this._children[s], t < r.x) {
                if (0 == s) {
                  t = 0;
                  break;
                }
                t = t < (a = this._children[s - 1]).x + a.actualWidth / 2 ? a.x : r.x;
                break;
              }
            s == n && (t = r.x);
          }
          return i.x = t, i.y = e, i;
        }, n.childSortingOrderChanged = function (t, e, i) {
          if (void 0 === i && (i = 0), 0 == i) this._sortingChildCount--, this.setChildIndex(t, this._children.length);
          else {
            0 == e && this._sortingChildCount++;
            var n = this._children.indexOf(t),
              r = this.getInsertPosForSortingChild(t);
            n < r ? this._setChildIndex(t, n, r - 1) : this._setChildIndex(t, n, r);
          }
        }, n.constructFromResource = function () {
          this.constructFromResource2(null, 0);
        }, n.constructFromResource2 = function (t, e) {
          this.packageItem.decoded || (this.packageItem.decoded = !0, W.translateComponent(this.packageItem));
          var i = 0,
            n = 0,
            r = 0,
            a = 0,
            s = NaN,
            o = NaN,
            h = 0,
            l = 0,
            u = this.packageItem.rawData;
          u.seek(0, 0), this._underConstruct = !0, this.sourceWidth = u.getInt32(), this.sourceHeight = u.getInt32(), this.initWidth = this.sourceWidth, this.initHeight = this.sourceHeight, this.setSize(this.sourceWidth, this.sourceHeight), u.readBool() && (this.minWidth = u.getInt32(), this.maxWidth = u.getInt32(), this.minHeight = u.getInt32(), this.maxHeight = u.getInt32()), u.readBool() && (s = u.getFloat32(), o = u.getFloat32(), this.internalSetPivot(s, o, u.readBool())), u.readBool() && (this._margin.top = u.getInt32(), this._margin.bottom = u.getInt32(), this._margin.left = u.getInt32(), this._margin.right = u.getInt32());
          var c = u.readByte();
          if (2 == c) {
            var _ = u.pos;
            u.seek(0, 7), this.setupScroll(u), u.pos = _;
          } else this.setupOverflow(c);
          u.readBool() && u.skip(8), this._buildingDisplayList = !0, u.seek(0, 1);
          var d = u.getInt16();
          for (i = 0; i < d; i++) {
            a = u.getInt16(), a += u.pos;
            var f = new rt();
            this._controllers.push(f), f.parent = this, f.setup(u), u.pos = a;
          }
          u.seek(0, 2);
          var p, m = u.getInt16();
          for (i = 0; i < m; i++) {
            if (n = u.getInt16(), r = u.pos, null != t) p = t[e + i];
            else {
              u.seek(r, 0);
              var g = u.readByte(),
                v = u.readS(),
                y = u.readS(),
                x = null;
              if (null != v) {
                var T;
                x = null != (T = null != y ? J.getById(y) : this.packageItem.owner) ? T.getItemById(v) : null;
              }
              null != x ? ((p = $.newObject(x)).packageItem = x, p.constructFromResource()) : p = $.newObject2(g);
            }
            p._underConstruct = !0, p.setup_beforeAdd(u, r), p.parent = this, this._children.push(p), u.pos = r + n;
          }
          for (u.seek(0, 3), this.relations.setup(u, !0), u.seek(0, 2), u.skip(2), i = 0; i < m; i++) a = u.getInt16(), a += u.pos, u.seek(u.pos, 3), this._children[i].relations.setup(u, !1), u.pos = a;
          for (u.seek(0, 2), u.skip(2), i = 0; i < m; i++) a = u.getInt16(), a += u.pos, (p = this._children[i]).setup_afterAdd(u, u.pos), p._underConstruct = !1, u.pos = a;
          u.seek(0, 4), u.skip(2), this.opaque = u.readBool();
          var S = u.getInt16(); - 1 != S && (this.mask = this.getChildAt(S).displayObject, u.readBool());
          var w = u.readS();
          null != w && null != (x = this.packageItem.owner.getItemById(w)) && null != x.pixelHitTestData && (h = u.getInt32(), l = u.getInt32(), this._displayObject.hitArea = new st(x.pixelHitTestData, h, l), this._displayObject.mouseThrough = !1, this._displayObject.hitTestPrior = !0), u.seek(0, 5);
          var E = u.getInt16();
          for (i = 0; i < E; i++) {
            a = u.getInt16(), a += u.pos;
            var b = new z(this);
            b.setup(u), this._transitions.push(b), u.pos = a;
          }
          this._transitions.length > 0 && (this.displayObject.on("display", this, this.___added), this.displayObject.on("undisplay", this, this.___removed)), this.applyAllControllers(), this._buildingDisplayList = !1, this._underConstruct = !1, this.buildNativeDisplayList(), this.setBoundsChangedFlag(), 9 != this.packageItem.objectType && this.constructExtension(u), this.constructFromXML(null);
        }, n.constructExtension = function (t) {}, n.constructFromXML = function (t) {}, n.setup_afterAdd = function (e, i) {
          t.prototype.setup_afterAdd.call(this, e, i), e.seek(i, 4);
          var n = e.getInt16(); - 1 != n && null != this._scrollPane && (this._scrollPane.pageController = this._parent.getControllerAt(n));
          for (var r = e.getInt16(), a = 0; a < r; a++) {
            var s = this.getController(e.readS()),
              o = e.readS();
            s && (s.selectedPageId = o);
          }
        }, n.___added = function () {
          for (var t = this._transitions.length, e = 0; e < t; ++e) this._transitions[e].onOwnerAddedToStage();
        }, n.___removed = function () {
          for (var t = this._transitions.length, e = 0; e < t; ++e) this._transitions[e].onOwnerRemovedFromStage();
        }, a(0, n, "numChildren", function () {
          return this._children.length;
        }), a(0, n, "displayListContainer", function () {
          return this._container;
        }), a(0, n, "childrenRenderOrder", function () {
          return this._childrenRenderOrder;
        }, function (t) {
          this._childrenRenderOrder != t && (this._childrenRenderOrder = t, this.buildNativeDisplayList());
        }), a(0, n, "opaque", function () {
          return null != this._displayObject.hitArea;
        }, function (t) {
          t ? (this.updateHitArea(), this._displayObject.mouseThrough = !1) : (this._displayObject.hitArea = null, this._displayObject.mouseThrough = !0);
        }), a(0, n, "controllers", function () {
          return this._controllers;
        }), a(0, n, "scrollPane", function () {
          return this._scrollPane;
        }), a(0, n, "margin", function () {
          return this._margin;
        }, function (t) {
          this._margin.copy(t), null != this._displayObject.scrollRect && this._container.pos(this._margin.left + this._alignOffset.x, this._margin.top + this._alignOffset.y), this.handleSizeChanged();
        }), a(0, n, "apexIndex", function () {
          return this._apexIndex;
        }, function (t) {
          this._apexIndex != t && (this._apexIndex = t, 2 == this._childrenRenderOrder && this.buildNativeDisplayList());
        }), a(0, n, "mask", function () {
          return this._displayObject.mask;
        }, function (t) {
          this._displayObject.mask = t;
        }), a(0, n, "viewHeight", function () {
          return null != this._scrollPane ? this._scrollPane.viewHeight : this.height - this._margin.top - this._margin.bottom;
        }, function (t) {
          null != this._scrollPane ? this._scrollPane.viewHeight = t : this.height = t + this._margin.top + this._margin.bottom;
        }), a(0, n, "baseUserData", function () {
          var t = this.packageItem.rawData;
          return t.seek(0, 4), t.readS();
        }), a(0, n, "viewWidth", function () {
          return null != this._scrollPane ? this._scrollPane.viewWidth : this.width - this._margin.left - this._margin.right;
        }, function (t) {
          null != this._scrollPane ? this._scrollPane.viewWidth = t : this.width = t + this._margin.left + this._margin.right;
        }), e;
      }(L),
      ct = function (t) {
        function e(t) {
          this._storage = null, this._default = null, e.__super.call(this, t);
        }
        var i;
        r(e, "fairygui.gears.GearAnimation", O);
        var n = e.prototype;
        return n.init = function () {
          this._default = new i(this._owner.playing, this._owner.frame), this._storage = {};
        }, n.addStatus = function (t, e) {
          var n;
          null == t ? n = this._default : (n = new i(), this._storage[t] = n), n.playing = e.readBool(), n.frame = e.getInt32();
        }, n.apply = function () {
          this._owner._gearLocked = !0;
          var t = this._storage[this._controller.selectedPageId];
          t || (t = this._default), this._owner.frame = t.frame, this._owner.playing = t.playing, this._owner._gearLocked = !1;
        }, n.updateState = function () {
          var t = this._owner,
            e = this._storage[this._controller.selectedPageId];
          e || (e = new i(), this._storage[this._controller.selectedPageId] = e), e.frame = t.frame, e.playing = t.playing;
        }, e.__init$ = function () {
          i = function () {
            function t(t, e) {
              this.playing = !1, this.frame = NaN, void 0 === t && (t = !0), void 0 === e && (e = 0), this.playing = t, this.frame = e;
            }
            return r(t, ""), t;
          }();
        }, e;
      }(),
      _t = function (t) {
        function e(t) {
          this._storage = null, this._default = null, e.__super.call(this, t);
        }
        var i;
        r(e, "fairygui.gears.GearColor", O);
        var n = e.prototype;
        return n.init = function () {
          void 0 != this._owner.strokeColor ? this._default = new i(this._owner.color, this._owner.strokeColor) : this._default = new i(this._owner.color, null), this._storage = {};
        }, n.addStatus = function (t, e) {
          var n;
          null == t ? n = this._default : (n = new i(), this._storage[t] = n), n.color = e.readColorS(), n.strokeColor = e.readColorS();
        }, n.apply = function () {
          this._owner._gearLocked = !0;
          var t = this._storage[this._controller.selectedPageId];
          t || (t = this._default), this._owner.color = t.color, void 0 != this._owner.strokeColor && null != t.strokeColor && (this._owner.strokeColor = t.strokeColor), this._owner._gearLocked = !1;
        }, n.updateState = function () {
          var t = this._storage[this._controller.selectedPageId];
          t || (t = new i(null, null), this._storage[this._controller.selectedPageId] = t), t.color = this._owner.color, void 0 != this._owner.strokeColor && (t.strokeColor = this._owner.strokeColor);
        }, e.__init$ = function () {
          i = function () {
            function t(t, e) {
              this.color = null, this.strokeColor = null, this.color = t, this.strokeColor = e;
            }
            return r(t, ""), t;
          }();
        }, e;
      }(),
      dt = function (t) {
        function e(t) {
          this.pages = null, this._visible = 0, this._displayLockToken = 0, e.__super.call(this, t), this._displayLockToken = 1;
        }
        r(e, "fairygui.gears.GearDisplay", O);
        var i = e.prototype;
        return i.init = function () {
          this.pages = null;
        }, i.addLock = function () {
          return this._visible++, this._displayLockToken;
        }, i.releaseLock = function (t) {
          t == this._displayLockToken && this._visible--;
        }, i.apply = function () {
          this._displayLockToken++, this._displayLockToken <= 0 && (this._displayLockToken = 1), null == this.pages || 0 == this.pages.length || -1 != this.pages.indexOf(this._controller.selectedPageId) ? this._visible = 1 : this._visible = 0;
        }, a(0, i, "connected", function () {
          return null == this._controller || this._visible > 0;
        }), e;
      }(),
      ft = function (t) {
        function e(t) {
          this._storage = null, this._default = null, e.__super.call(this, t);
        }
        r(e, "fairygui.gears.GearIcon", O);
        var i = e.prototype;
        return i.init = function () {
          this._default = this._owner.icon, this._storage = {};
        }, i.addStatus = function (t, e) {
          null == t ? this._default = e.readS() : this._storage[t] = e.readS();
        }, i.apply = function () {
          this._owner._gearLocked = !0;
          var t = this._storage[this._controller.selectedPageId];
          this._owner.icon = void 0 !== t ? t : this._default, this._owner._gearLocked = !1;
        }, i.updateState = function () {
          this._storage[this._controller.selectedPageId] = this._owner.icon;
        }, e;
      }(),
      pt = function (t) {
        function e(t) {
          this._storage = null, this._default = null, e.__super.call(this, t);
        }
        var i;
        r(e, "fairygui.gears.GearLook", O);
        var n = e.prototype;
        return n.init = function () {
          this._default = new i(this._owner.alpha, this._owner.rotation, this._owner.grayed, this._owner.touchable), this._storage = {};
        }, n.addStatus = function (t, e) {
          var n;
          null == t ? n = this._default : (n = new i(), this._storage[t] = n), n.alpha = e.getFloat32(), n.rotation = e.getFloat32(), n.grayed = e.readBool(), n.touchable = e.readBool();
        }, n.apply = function () {
          var t = this._storage[this._controller.selectedPageId];
          if (t || (t = this._default), null == this._tweenConfig || !this._tweenConfig.tween || J._constructing || O.disableAllTweenEffect) this._owner._gearLocked = !0, this._owner.grayed = t.grayed, this._owner.alpha = t.alpha, this._owner.rotation = t.rotation, this._owner.touchable = t.touchable, this._owner._gearLocked = !1;
          else {
            if (this._owner._gearLocked = !0, this._owner.grayed = t.grayed, this._owner.touchable = t.touchable, this._owner._gearLocked = !1, null != this._tweenConfig._tweener) {
              if (this._tweenConfig._tweener.endValue.x == t.alpha && this._tweenConfig._tweener.endValue.y == t.rotation) return;
              this._tweenConfig._tweener.kill(!0), this._tweenConfig._tweener = null;
            }
            var e = t.alpha != this._owner.alpha,
              i = t.rotation != this._owner.rotation;
            (e || i) && (this._owner.checkGearController(0, this._controller) && (this._tweenConfig._displayLockToken = this._owner.addDisplayLock()), this._tweenConfig._tweener = Y.to2(this._owner.alpha, this._owner.rotation, t.alpha, t.rotation, this._tweenConfig.duration).setDelay(this._tweenConfig.delay).setEase(this._tweenConfig.easeType).setUserData((e ? 1 : 0) + (i ? 2 : 0)).setTarget(this).onUpdate(this.__tweenUpdate, this).onComplete(this.__tweenComplete, this));
          }
        }, n.__tweenUpdate = function (t) {
          var e = t.userData;
          this._owner._gearLocked = !0, 0 != (1 & e) && (this._owner.alpha = t.value.x), 0 != (2 & e) && (this._owner.rotation = t.value.y), this._owner._gearLocked = !1;
        }, n.__tweenComplete = function () {
          0 != this._tweenConfig._displayLockToken && (this._owner.releaseDisplayLock(this._tweenConfig._displayLockToken), this._tweenConfig._displayLockToken = 0), this._tweenConfig._tweener = null;
        }, n.updateState = function () {
          var t = this._storage[this._controller.selectedPageId];
          t || (t = new i(), this._storage[this._controller.selectedPageId] = t), t.alpha = this._owner.alpha, t.rotation = this._owner.rotation, t.grayed = this._owner.grayed, t.touchable = this._owner.touchable;
        }, e.__init$ = function () {
          i = function () {
            function t(t, e, i, n) {
              this.alpha = NaN, this.rotation = NaN, this.grayed = !1, this.touchable = !1, void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = !1), void 0 === n && (n = !0), this.alpha = t, this.rotation = e, this.grayed = i, this.touchable = n;
            }
            return r(t, ""), t;
          }();
        }, e;
      }(),
      mt = function (t) {
        function e(t) {
          this._storage = null, this._default = null, e.__super.call(this, t);
        }
        var i;
        r(e, "fairygui.gears.GearSize", O);
        var n = e.prototype;
        return n.init = function () {
          this._default = new i(this._owner.width, this._owner.height, this._owner.scaleX, this._owner.scaleY), this._storage = {};
        }, n.addStatus = function (t, e) {
          var n;
          null == t ? n = this._default : (n = new i(), this._storage[t] = n), n.width = e.getInt32(), n.height = e.getInt32(), n.scaleX = e.getFloat32(), n.scaleY = e.getFloat32();
        }, n.apply = function () {
          var t = this._storage[this._controller.selectedPageId];
          if (t || (t = this._default), null == this._tweenConfig || !this._tweenConfig.tween || J._constructing || O.disableAllTweenEffect) this._owner._gearLocked = !0, this._owner.setSize(t.width, t.height, this._owner.checkGearController(1, this._controller)), this._owner.setScale(t.scaleX, t.scaleY), this._owner._gearLocked = !1;
          else {
            if (null != this._tweenConfig._tweener) {
              if (this._tweenConfig._tweener.endValue.x == t.width && this._tweenConfig._tweener.endValue.y == t.height && this._tweenConfig._tweener.endValue.z == t.scaleX && this._tweenConfig._tweener.endValue.w == t.scaleY) return;
              this._tweenConfig._tweener.kill(!0), this._tweenConfig._tweener = null;
            }
            var e = t.width != this._owner.width || t.height != this._owner.height,
              i = t.scaleX != this._owner.scaleX || t.scaleY != this._owner.scaleY;
            (e || i) && (this._owner.checkGearController(0, this._controller) && (this._tweenConfig._displayLockToken = this._owner.addDisplayLock()), this._tweenConfig._tweener = Y.to4(this._owner.width, this._owner.height, this._owner.scaleX, this._owner.scaleY, t.width, t.height, t.scaleX, t.scaleY, this._tweenConfig.duration).setDelay(this._tweenConfig.delay).setEase(this._tweenConfig.easeType).setUserData((e ? 1 : 0) + (i ? 2 : 0)).setTarget(this).onUpdate(this.__tweenUpdate, this).onComplete(this.__tweenComplete, this));
          }
        }, n.__tweenUpdate = function (t) {
          var e = t.userData;
          this._owner._gearLocked = !0, 0 != (1 & e) && this._owner.setSize(t.value.x, t.value.y, this._owner.checkGearController(1, this._controller)), 0 != (2 & e) && this._owner.setScale(t.value.z, t.value.w), this._owner._gearLocked = !1;
        }, n.__tweenComplete = function () {
          0 != this._tweenConfig._displayLockToken && (this._owner.releaseDisplayLock(this._tweenConfig._displayLockToken), this._tweenConfig._displayLockToken = 0), this._tweenConfig._tweener = null;
        }, n.updateState = function () {
          var t = this._storage[this._controller.selectedPageId];
          t || (t = new i(), this._storage[this._controller.selectedPageId] = t), t.width = this._owner.width, t.height = this._owner.height, t.scaleX = this._owner.scaleX, t.scaleY = this._owner.scaleY;
        }, n.updateFromRelations = function (t, e) {
          if (null != this._controller && null != this._storage) {
            for (var i in this._storage) {
              var n = this._storage[i];
              n.width += t, n.height += e;
            }
            this._default.width += t, this._default.height += e, this.updateState();
          }
        }, e.__init$ = function () {
          i = function () {
            function t(t, e, i, n) {
              this.width = NaN, this.height = NaN, this.scaleX = NaN, this.scaleY = NaN, void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), this.width = t, this.height = e, this.scaleX = i, this.scaleY = n;
            }
            return r(t, ""), t;
          }();
        }, e;
      }(),
      gt = function (t) {
        function e() {
          this._type = 0, this._lineSize = NaN, this._lineColor = null, this._fillColor = null, this._cornerRadius = null, e.__super.call(this), this._type = 0, this._lineSize = 1, this._lineColor = "#000000", this._fillColor = "#FFFFFF", this._cornerRadius = null;
        }
        r(e, "fairygui.GGraph", t);
        var n = e.prototype;
        return i.imps(n, {
          "fairygui.gears.IColorGear": !0
        }), n.drawRect = function (t, e, i, n) {
          this._type = 1, this._lineSize = t, this._lineColor = e, this._fillColor = i, this._cornerRadius = n, this.drawCommon();
        }, n.drawEllipse = function (t, e, i) {
          this._type = 2, this._lineSize = t, this._lineColor = e, this._fillColor = i, this.drawCommon();
        }, n.drawCommon = function () {
          this._displayObject.mouseEnabled = this.touchable;
          var t = this._displayObject.graphics;
          t.clear();
          var e = this.width,
            i = this.height;
          if (0 != e && 0 != i) {
            var n = this._fillColor,
              r = this._lineColor;
            if (y.isWebGL && et.startsWith(n, "rgba")) {
              var a = n.substring(5, n.lastIndexOf(")")).split(","),
                s = parseFloat(a[3]);
              0 == s ? n = null : (n = E.toHexColor((parseInt(a[0]) << 16) + (parseInt(a[1]) << 8) + parseInt(a[2])), this.alpha = s);
            }
            if (1 == this._type)
              if (null != this._cornerRadius) {
                var o = [
                  ["moveTo", this._cornerRadius[0], 0],
                  ["lineTo", e - this._cornerRadius[1], 0],
                  ["arcTo", e, 0, e, this._cornerRadius[1], this._cornerRadius[1]],
                  ["lineTo", e, i - this._cornerRadius[3]],
                  ["arcTo", e, i, e - this._cornerRadius[3], i, this._cornerRadius[3]],
                  ["lineTo", this._cornerRadius[2], i],
                  ["arcTo", 0, i, 0, i - this._cornerRadius[2], this._cornerRadius[2]],
                  ["lineTo", 0, this._cornerRadius[0]],
                  ["arcTo", 0, 0, this._cornerRadius[0], 0, this._cornerRadius[0]],
                  ["closePath"]
                ];
                t.drawPath(0, 0, o, {
                  fillStyle: n
                }, this._lineSize > 0 ? {
                  strokeStyle: r,
                  lineWidth: this._lineSize
                } : null);
              } else t.drawRect(0, 0, e, i, n, this._lineSize > 0 ? r : null, this._lineSize);
            else t.drawCircle(e / 2, i / 2, e / 2, n, this._lineSize > 0 ? r : null, this._lineSize);
            this._displayObject.repaint();
          }
        }, n.replaceMe = function (t) {
          if (!this._parent) throw "parent not set";
          t.name = this.name, t.alpha = this.alpha, t.rotation = this.rotation, t.visible = this.visible, t.touchable = this.touchable, t.grayed = this.grayed, t.setXY(this.x, this.y), t.setSize(this.width, this.height);
          var e = this._parent.getChildIndex(this);
          this._parent.addChildAt(t, e), t.relations.copyFrom(this.relations), this._parent.removeChild(this, !0);
        }, n.addBeforeMe = function (t) {
          if (null == this._parent) throw "parent not set";
          var e = this._parent.getChildIndex(this);
          this._parent.addChildAt(t, e);
        }, n.addAfterMe = function (t) {
          if (null == this._parent) throw "parent not set";
          var e = this._parent.getChildIndex(this);
          e++, this._parent.addChildAt(t, e);
        }, n.setNativeObject = function (t) {
          this._type = 0, this._displayObject.mouseEnabled = this.touchable, this._displayObject.graphics.clear(), this._displayObject.addChild(t);
        }, n.createDisplayObject = function () {
          t.prototype.createDisplayObject.call(this), this._displayObject.mouseEnabled = !1;
        }, n.handleSizeChanged = function () {
          t.prototype.handleSizeChanged.call(this), 0 != this._type && this.drawCommon();
        }, n.setup_beforeAdd = function (e, i) {
          if (t.prototype.setup_beforeAdd.call(this, e, i), e.seek(i, 5), this._type = e.readByte(), 0 != this._type) {
            if (this._lineSize = e.getInt32(), this._lineColor = e.readColorS(!0), this._fillColor = e.readColorS(!0), e.readBool()) {
              this._cornerRadius = [];
              for (var n = 0; n < 4; n++) this._cornerRadius[n] = e.getFloat32();
            }
            this.drawCommon();
          }
        }, a(0, n, "color", function () {
          return this._fillColor;
        }, function (t) {
          this._fillColor = t, 0 != this._type && this.drawCommon();
        }), e;
      }(L),
      vt = function (t) {
        function e(t) {
          this._storage = null, this._default = null, e.__super.call(this, t);
        }
        r(e, "fairygui.gears.GearText", O);
        var i = e.prototype;
        return i.init = function () {
          this._default = this._owner.text, this._storage = {};
        }, i.addStatus = function (t, e) {
          null == t ? this._default = e.readS() : this._storage[t] = e.readS();
        }, i.apply = function () {
          this._owner._gearLocked = !0;
          var t = this._storage[this._controller.selectedPageId];
          this._owner.text = void 0 !== t ? t : this._default, this._owner._gearLocked = !1;
        }, i.updateState = function () {
          this._storage[this._controller.selectedPageId] = this._owner.text;
        }, e;
      }(),
      yt = function (t) {
        function e() {
          this._layout = 0, this._lineGap = 0, this._columnGap = 0, this._percentReady = !1, this._boundsChanged = !1, this._updating = 0, e.__super.call(this);
        }
        r(e, "fairygui.GGroup", t);
        var n = e.prototype;
        return n.setBoundsChangedFlag = function (t) {
          void 0 === t && (t = !1), 0 == this._updating && null != this.parent && (t && (this._percentReady = !1), this._boundsChanged || (this._boundsChanged = !0, 0 != this._layout && i.timer.callLater(this, this.ensureBoundsCorrect)));
        }, n.ensureBoundsCorrect = function () {
          this._boundsChanged && this.updateBounds();
        }, n.updateBounds = function () {
          if (i.timer.clear(this, this.ensureBoundsCorrect), this._boundsChanged = !1, null != this.parent) {
            this.handleLayout();
            var t, e = this._parent.numChildren,
              n = 0,
              r = Number.POSITIVE_INFINITY,
              a = Number.POSITIVE_INFINITY,
              s = Number.NEGATIVE_INFINITY,
              o = Number.NEGATIVE_INFINITY,
              h = 0,
              l = !0;
            for (n = 0; n < e; n++)(t = this._parent.getChildAt(n)).group == this && ((h = t.x) < r && (r = h), (h = t.y) < a && (a = h), (h = t.x + t.width) > s && (s = h), (h = t.y + t.height) > o && (o = h), l = !1);
            l ? (this._updating = 2, this.setSize(0, 0)) : (this._updating = 1, this.setXY(r, a), this._updating = 2, this.setSize(s - r, o - a)), this._updating = 0;
          }
        }, n.handleLayout = function () {
          this._updating |= 1;
          var t, e = 0,
            i = 0;
          if (1 == this._layout) {
            var n = NaN;
            for (i = this.parent.numChildren, e = 0; e < i; e++)(t = this.parent.getChildAt(e)).group == this && (isNaN(n) ? n = Math.floor(t.x) : t.x = n, 0 != t.width && (n += Math.floor(t.width + this._columnGap)));
            this._percentReady || this.updatePercent();
          } else if (2 == this._layout) {
            var r = NaN;
            for (i = this.parent.numChildren, e = 0; e < i; e++)(t = this.parent.getChildAt(e)).group == this && (isNaN(r) ? r = Math.floor(t.y) : t.y = r, 0 != t.height && (r += Math.floor(t.height + this._lineGap)));
            this._percentReady || this.updatePercent();
          }
          this._updating &= 2;
        }, n.updatePercent = function () {
          this._percentReady = !0;
          var t, e = this.parent.numChildren,
            i = 0,
            n = 0;
          if (1 == this._layout) {
            for (i = 0; i < e; i++)(t = this.parent.getChildAt(i)).group == this && (n += t.width);
            for (i = 0; i < e; i++)(t = this.parent.getChildAt(i)).group == this && (t._sizePercentInGroup = n > 0 ? t.width / n : 0);
          } else {
            for (i = 0; i < e; i++)(t = this.parent.getChildAt(i)).group == this && (n += t.height);
            for (i = 0; i < e; i++)(t = this.parent.getChildAt(i)).group == this && (t._sizePercentInGroup = n > 0 ? t.height / n : 0);
          }
        }, n.moveChildren = function (t, e) {
          if (0 == (1 & this._updating) && null != this.parent) {
            this._updating |= 1;
            var i, n = this.parent.numChildren,
              r = 0;
            for (r = 0; r < n; r++)(i = this.parent.getChildAt(r)).group == this && i.setXY(i.x + t, i.y + e);
            this._updating &= 2;
          }
        }, n.resizeChildren = function (t, e) {
          if (0 != this._layout && 0 == (2 & this._updating) && null != this.parent) {
            this._updating |= 2, this._percentReady || this.updatePercent();
            var i, n = this.parent.numChildren,
              r = 0,
              a = 0,
              s = -1,
              o = 0,
              h = 0,
              l = 0,
              u = !1;
            for (r = 0; r < n; r++)(i = this.parent.getChildAt(r)).group == this && (s = r, o++);
            if (1 == this._layout) {
              l = h = this.width - (o - 1) * this._columnGap;
              var c = NaN,
                _ = NaN;
              for (r = 0; r < n; r++)
                if ((i = this.parent.getChildAt(r)).group == this)
                  if (isNaN(c) ? c = Math.floor(i.x) : i.x = c, _ = s == r ? l : Math.round(i._sizePercentInGroup * h), i.setSize(_, i._rawHeight + e, !0), l -= i.width, s == r) {
                    if (l >= 1)
                      for (a = 0; a <= r; a++)(i = this.parent.getChildAt(a)).group == this && (u ? i.x += l : (_ = i.width + l, (0 == i.maxWidth || _ < i.maxWidth) && (0 == i.minWidth || _ > i.minWidth) && (i.setSize(_, i.height, !0), u = !0)));
                  } else c += i.width + this._columnGap;
            } else if (2 == this._layout) {
              l = h = this.height - (o - 1) * this._lineGap;
              var d = NaN,
                f = NaN;
              for (r = 0; r < n; r++)
                if ((i = this.parent.getChildAt(r)).group == this)
                  if (isNaN(d) ? d = Math.floor(i.y) : i.y = d, f = s == r ? l : Math.round(i._sizePercentInGroup * h), i.setSize(i._rawWidth + t, f, !0), l -= i.height, s == r) {
                    if (l >= 1)
                      for (a = 0; a <= r; a++)(i = this.parent.getChildAt(a)).group == this && (u ? i.y += l : (f = i.height + l, (0 == i.maxHeight || f < i.maxHeight) && (0 == i.minHeight || f > i.minHeight) && (i.setSize(i.width, f, !0), u = !0)));
                  } else d += i.height + this._lineGap;
            }
            this._updating &= 1;
          }
        }, n.handleAlphaChanged = function () {
          if (!this._underConstruct && null != this._parent)
            for (var t = this._parent.numChildren, e = 0; e < t; e++) {
              var i = this._parent.getChildAt(e);
              i.group == this && (i.alpha = this.alpha);
            }
        }, n.handleVisibleChanged = function () {
          if (this._parent)
            for (var t = this._parent.numChildren, e = 0; e < t; e++) {
              var i = this._parent.getChildAt(e);
              i.group == this && i.handleVisibleChanged();
            }
        }, n.setup_beforeAdd = function (e, i) {
          t.prototype.setup_beforeAdd.call(this, e, i), e.seek(i, 5), this._layout = e.readByte(), this._lineGap = e.getInt32(), this._columnGap = e.getInt32();
        }, n.setup_afterAdd = function (e, i) {
          t.prototype.setup_afterAdd.call(this, e, i), this.visible || this.handleVisibleChanged();
        }, a(0, n, "layout", function () {
          return this._layout;
        }, function (t) {
          this._layout != t && (this._layout = t, this.setBoundsChangedFlag(!0));
        }), a(0, n, "columnGap", function () {
          return this._columnGap;
        }, function (t) {
          this._columnGap != t && (this._columnGap = t, this.setBoundsChangedFlag());
        }), a(0, n, "lineGap", function () {
          return this._lineGap;
        }, function (t) {
          this._lineGap != t && (this._lineGap = t, this.setBoundsChangedFlag());
        }), e;
      }(L),
      xt = function (t) {
        function e() {
          this.image = null, this._color = null, this._flip = 0, e.__super.call(this), this._color = "#FFFFFF";
        }
        r(e, "fairygui.GImage", t);
        var n = e.prototype;
        return i.imps(n, {
          "fairygui.gears.IColorGear": !0
        }), n.applyColor = function () {}, n.createDisplayObject = function () {
          this._displayObject = this.image = new Nt(), this.image.mouseEnabled = !1, this._displayObject.$owner = this;
        }, n.constructFromResource = function () {
          this.packageItem.load(), this.sourceWidth = this.packageItem.width, this.sourceHeight = this.packageItem.height, this.initWidth = this.sourceWidth, this.initHeight = this.sourceHeight, this.image.scale9Grid = this.packageItem.scale9Grid, this.image.scaleByTile = this.packageItem.scaleByTile, this.image.tileGridIndice = this.packageItem.tileGridIndice, this.image.tex = this.packageItem.texture, this.setSize(this.sourceWidth, this.sourceHeight);
        }, n.handleXYChanged = function () {
          t.prototype.handleXYChanged.call(this), 0 != this._flip && (-1 == this.scaleX && (this.image.x += this.width), -1 == this.scaleY && (this.image.y += this.height));
        }, n.handleSizeChanged = function () {
          null != this.image.tex && this.image.scaleTexture(this.width / this.sourceWidth, this.height / this.sourceHeight);
        }, n.setup_beforeAdd = function (e, i) {
          t.prototype.setup_beforeAdd.call(this, e, i), e.seek(i, 5), e.readBool() && (this.color = e.readColorS()), this.flip = e.readByte();
        }, a(0, n, "color", function () {
          return this._color;
        }, function (t) {
          this._color != t && (this._color = t, this.updateGear(4), this.applyColor());
        }), a(0, n, "flip", function () {
          return this._flip;
        }, function (t) {
          if (this._flip != t) {
            this._flip = t;
            var e = 1,
              i = 1;
            1 != this._flip && 3 != this._flip || (e = -1), 2 != this._flip && 3 != this._flip || (i = -1), this.setScale(e, i), this.handleXYChanged();
          }
        }), e;
      }(L),
      Tt = function (t) {
        function e(t) {
          this._storage = null, this._default = null, e.__super.call(this, t);
        }
        r(e, "fairygui.gears.GearXY", O);
        var i = e.prototype;
        return i.init = function () {
          this._default = new g(this._owner.x, this._owner.y), this._storage = {};
        }, i.addStatus = function (t, e) {
          var i;
          null == t ? i = this._default : (i = new g(), this._storage[t] = i), i.x = e.getInt32(), i.y = e.getInt32();
        }, i.apply = function () {
          var t = this._storage[this._controller.selectedPageId];
          if (t || (t = this._default), null == this._tweenConfig || !this._tweenConfig.tween || J._constructing || O.disableAllTweenEffect) this._owner._gearLocked = !0, this._owner.setXY(t.x, t.y), this._owner._gearLocked = !1;
          else {
            if (null != this._tweenConfig._tweener) {
              if (this._tweenConfig._tweener.endValue.x == t.x && this._tweenConfig._tweener.endValue.y == t.y) return;
              this._tweenConfig._tweener.kill(!0), this._tweenConfig._tweener = null;
            }
            this._owner.x == t.x && this._owner.y == t.y || (this._owner.checkGearController(0, this._controller) && (this._tweenConfig._displayLockToken = this._owner.addDisplayLock()), this._tweenConfig._tweener = Y.to2(this._owner.x, this._owner.y, t.x, t.y, this._tweenConfig.duration).setDelay(this._tweenConfig.delay).setEase(this._tweenConfig.easeType).setTarget(this).onUpdate(this.__tweenUpdate, this).onComplete(this.__tweenComplete, this));
          }
        }, i.__tweenUpdate = function (t) {
          this._owner._gearLocked = !0, this._owner.setXY(t.value.x, t.value.y), this._owner._gearLocked = !1;
        }, i.__tweenComplete = function () {
          0 != this._tweenConfig._displayLockToken && (this._owner.releaseDisplayLock(this._tweenConfig._displayLockToken), this._tweenConfig._displayLockToken = 0), this._tweenConfig._tweener = null;
        }, i.updateState = function () {
          var t = this._storage[this._controller.selectedPageId];
          t || (t = new g(), this._storage[this._controller.selectedPageId] = t), t.x = this._owner.x, t.y = this._owner.y;
        }, i.updateFromRelations = function (t, e) {
          if (null != this._controller && null != this._storage) {
            for (var i in this._storage) {
              var n = this._storage[i];
              n.x += t, n.y += e;
            }
            this._default.x += t, this._default.y += e, this.updateState();
          }
        }, e;
      }(),
      St = function (t) {
        function e() {
          this._url = null, this._align = null, this._valign = null, this._autoSize = !1, this._fill = 0, this._shrinkOnly = !1, this._showErrorSign = !1, this._playing = !1, this._frame = 0, this._color = null, this._contentItem = null, this._contentSourceWidth = 0, this._contentSourceHeight = 0, this._contentWidth = 0, this._contentHeight = 0, this._content = null, this._errorSign = null, this._content2 = null, this._updatingLayout = !1, e.__super.call(this), this._playing = !0, this._url = "", this._fill = 0, this._align = "left", this._valign = "top", this._showErrorSign = !0, this._color = "#FFFFFF", this.isdispose = !1, this.effectpkgdict = null;
        }
        r(e, "fairygui.GLoader", t);
        var s = e.prototype;
        return i.imps(s, {
          "fairygui.gears.IAnimationGear": !0,
          "fairygui.gears.IColorGear": !0
        }), s.createDisplayObject = function () {
          t.prototype.createDisplayObject.call(this), this._displayObject.mouseEnabled = !0;
        }, s.dispose = function () {
          if (null == this._contentItem && this._content instanceof fairygui.display.Image) {
            var e = this._content.tex;
            null != e && this.freeExternal(e);
          }
          null != this._content2 && this._content2.dispose(), this.isdispose = !0, this.clearEffectDict(), this.effectpkgdict = null, t.prototype.dispose.call(this);
        }, s.advance = function (t) {
          this._content instanceof fairygui.display.MovieClip && this._content.advance(t);
        }, s.applyColor = function () {}, s.loadContent = function () {
          this.clearContent(), this.clearEffectDict(), this._url && (Z.gameEffectDict && null != Z.gameEffectDict[this._url] ? "1" == Z.gameEffectDict[this._url] ? Z.gameLoaderManager.loadEffect(this._url, this, this.effectComplete, this._url) : Z.gameLoaderManager.loadEffect(Z.gameEffectDict[this._url], this, this.effectComplete, this._url) : et.startsWith(this._url, "ui://") ? this.loadFromPackage(this._url) : this.loadExternal());
        }, s.clearEffectDict = function () {
          if (this.effectpkgdict)
            for (var t in this.effectpkgdict) Z.gameLoaderManager.removeeffectpackage(this.effectpkgdict[t]), delete this.effectpkgdict[t];
        }, s.effectComplete = function (t) {
          if (t == this._url && !this.isdispose) {
            var e, i = Z.gameEffectDict[this._url];
            "1" == i ? (i = t, Z.gameLoaderManager.addeffectPackage(i), e = fairygui.UIPackage.getItemURL(i, i)) : (Z.gameLoaderManager.addeffectPackage(i), e = this._url), this.effectpkgdict || (this.effectpkgdict = {}), this.effectpkgdict[t] = i, this.loadFromPackage(e);
          }
        }, s.loadFromPackage = function (t) {
          if (this._contentItem = J.getItemByURL(t), null != this._contentItem)
            if (this._contentItem.load(), this._autoSize && this.setSize(this._contentItem.width, this._contentItem.height), 0 == this._contentItem.type) null == this._contentItem.texture ? Z.gameBgResousedict && null != Z.gameBgResousedict[this._url] ? (this._url = Z.gameBgResousedict[this._url], this.loadExternal()) : this.setErrorState() : (this._content instanceof fairygui.display.Image ? this._displayObject.addChild(this._content) : (this._content = new Nt(), this._displayObject.addChild(this._content)), this._content.tex = this._contentItem.texture, this._content.scale9Grid = this._contentItem.scale9Grid, this._content.scaleByTile = this._contentItem.scaleByTile, this._content.tileGridIndice = this._contentItem.tileGridIndice, this._contentSourceWidth = this._contentItem.width, this._contentSourceHeight = this._contentItem.height, this.updateLayout());
            else if (1 == this._contentItem.type) this._content instanceof fairygui.display.MovieClip ? this._displayObject.addChild(this._content) : (this._content = new Vt(), this._displayObject.addChild(this._content)), this._contentSourceWidth = this._contentItem.width, this._contentSourceHeight = this._contentItem.height, this._content.interval = this._contentItem.interval, this._content.swing = this._contentItem.swing, this._content.repeatDelay = this._contentItem.repeatDelay, this._content.frames = this._contentItem.frames, this._content.boundsRect = new v(0, 0, this._contentSourceWidth, this._contentSourceHeight), this.updateLayout();
          else if (3 == this._contentItem.type) {
            var e = J.createObjectFromURL(t);
            e ? e instanceof fairygui.GComponent ? (this._content2 = e.asCom, this._displayObject.addChild(this._content2.displayObject), this._contentSourceWidth = this._contentItem.width, this._contentSourceHeight = this._contentItem.height, this.updateLayout()) : (e.dispose(), this.setErrorState()) : this.setErrorState();
          } else this.setErrorState();
          else Z.gameBgResousedict && null != Z.gameBgResousedict[this._url] ? (this._url = Z.gameBgResousedict[this._url], this.loadExternal()) : this.setErrorState();
        }, s.loadFromContentItem = function (t) {
          this._contentItem = null, this._contentItem = t, this._contentItem && (this._content || (this._content = new Vt(), this._displayObject.addChild(this._content), this._content.playing = !1), this._contentSourceWidth = this._contentItem.width, this._contentSourceHeight = this._contentItem.height, this._content.interval = this._contentItem.interval, this._content.swing = this._contentItem.swing, this._content.repeatDelay = this._contentItem.repeatDelay, this._content.frames = this._contentItem.frames, this.updateLayout());
        }, s.loadExternal = function () {
          M.inst.getRes(this._url) ? this.onExternalLoadSuccess(this._url) : M.inst.load([{
            url: this._url,
            type: "image"
          }], d.create(this, this.__getResCompleted, [this._url]));
        }, s.freeExternal = function (t) {}, s.onExternalLoadSuccess = function (t) {
          if (this._displayObject) {
            this._content instanceof fairygui.display.Image ? this._displayObject.addChild(this._content) : (this._content = new Nt(), this._displayObject.addChild(this._content));
            var e = M.inst.getRes(t);
            this._content.tex = e, this._content.scale9Grid = null, this._content.scaleByTile = !1, e && (this._contentSourceWidth = e.width, this._contentSourceHeight = e.height, this.updateLayout());
          }
        }, s.onExternalLoadFailed = function () {
          this.setErrorState();
        }, s.__getResCompleted = function (t) {
          null != t ? this.onExternalLoadSuccess(t) : this.onExternalLoadFailed();
        }, s.setErrorState = function () {
          this._showErrorSign && (null == this._errorSign && null != Z.loaderErrorSign && (this._errorSign = fairygui.GLoader._errorSignPool.getObject(Z.loaderErrorSign)), null != this._errorSign && (this._errorSign.setSize(this.width, this.height), this._displayObject.addChild(this._errorSign.displayObject)));
        }, s.clearErrorState = function () {
          null != this._errorSign && (this._displayObject.removeChild(this._errorSign.displayObject), fairygui.GLoader._errorSignPool.returnObject(this._errorSign), this._errorSign = null);
        }, s.updateLayout = function () {
          if (null != this._content2 || null != this._content)
            if (this._contentWidth = this._contentSourceWidth, this._contentHeight = this._contentSourceHeight, this._autoSize && (this._updatingLayout = !0, 0 == this._contentWidth && (this._contentWidth = 50), 0 == this._contentHeight && (this._contentHeight = 30), this.setSize(this._contentWidth, this._contentHeight), this._updatingLayout = !1, this._contentWidth == this._width && this._contentHeight == this._height)) null != this._content2 ? (this._content2.setXY(0, 0), this._content2.setScale(1, 1)) : (this._content.x = 0, this._content.y = 0, this._content.scaleX = 1, this._content.scaleY = 1);
            else {
              var t = 1,
                e = 1;
              0 != this._fill && (t = this.width / this._contentSourceWidth, e = this.height / this._contentSourceHeight, 1 == t && 1 == e || (2 == this._fill ? t = e : 3 == this._fill ? e = t : 1 == this._fill ? t > e ? t = e : e = t : 5 == this._fill && (t > e ? e = t : t = e), this._shrinkOnly && (t > 1 && (t = 1), e > 1 && (e = 1)), this._contentWidth = this._contentSourceWidth * t, this._contentHeight = this._contentSourceHeight * e)), null != this._content2 ? this._content2.setScale(t, e) : this._content instanceof fairygui.display.Image ? this._content.scaleTexture(t, e) : this._content.scale(t, e);
              var i = NaN,
                n = NaN;
              i = "center" == this._align ? Math.floor((this.width - this._contentWidth) / 2) : "right" == this._align ? this.width - this._contentWidth : 0, n = "middle" == this._valign ? Math.floor((this.height - this._contentHeight) / 2) : "bottom" == this._valign ? this.height - this._contentHeight : 0, null != this._content2 ? this._content2.setXY(i, n) : (this._content.x = i, this._content.y = n);
            }
          else this._autoSize && (this._updatingLayout = !0, this.setSize(50, 30), this._updatingLayout = !1);
        }, s.clearContent = function () {
          if (this.clearErrorState(), null != this._content && null != this._content.parent && this._displayObject.removeChild(this._content), null == this._contentItem && this._content instanceof fairygui.display.Image) {
            var t = this._content.tex;
            null != t && this.freeExternal(t);
          }
          null != this._content2 && (this._content2.dispose(), this._content2 = null), this._contentItem = null;
        }, s.handleSizeChanged = function () {
          t.prototype.handleSizeChanged.call(this), this._updatingLayout || this.updateLayout();
        }, s.setup_beforeAdd = function (e, i) {
          t.prototype.setup_beforeAdd.call(this, e, i), e.seek(i, 5);
          var n = 0;
          this._url = e.readS(), n = e.readByte(), this._align = 0 == n ? "left" : 1 == n ? "center" : "right", n = e.readByte(), this._valign = 0 == n ? "top" : 1 == n ? "middle" : "bottom", this._fill = e.readByte(), this._shrinkOnly = e.readBool(), this._autoSize = e.readBool(), this._showErrorSign = e.readBool(), this._playing = e.readBool(), this._frame = e.getInt32(), e.readBool() && (this.color = e.readColorS());
          0 != e.readByte() && e.skip(6), this._url && this.loadContent();
        }, a(0, s, "frame", function () {
          return this._frame;
        }, function (t) {
          this._frame != t && (this._frame = t, this._content instanceof fairygui.display.MovieClip && (this._content.frame = t), this.updateGear(5));
        }), a(0, s, "url", function () {
          return this._url;
        }, function (t) {
          this._url != t && (this._url = t, this.loadContent(), this.updateGear(7));
        }), a(0, s, "align", function () {
          return this._align;
        }, function (t) {
          this._align != t && (this._align = t, this.updateLayout());
        }), a(0, s, "fill", function () {
          return this._fill;
        }, function (t) {
          this._fill != t && (this._fill = t, this.updateLayout());
        }), a(0, s, "verticalAlign", function () {
          return this._valign;
        }, function (t) {
          this._valign != t && (this._valign = t, this.updateLayout());
        }), a(0, s, "icon", function () {
          return this._url;
        }, function (t) {
          this.url = t;
        }), a(0, s, "content", function () {
          return this._content;
        }), a(0, s, "shrinkOnly", function () {
          return this._shrinkOnly;
        }, function (t) {
          this._shrinkOnly != t && (this._shrinkOnly = t, this.updateLayout());
        }), a(0, s, "showErrorSign", function () {
          return this._showErrorSign;
        }, function (t) {
          this._showErrorSign = t;
        }), a(0, s, "autoSize", function () {
          return this._autoSize;
        }, function (t) {
          this._autoSize != t && (this._autoSize = t, this.updateLayout());
        }), a(0, s, "playing", function () {
          return this._playing;
        }, function (t) {
          this._playing != t && (this._playing = t, this._content instanceof fairygui.display.MovieClip && (this._content.playing = t), this.updateGear(5));
        }), s.setPlaySettings = function (t, e, i, n, r) {
          void 0 === t && (t = 0), void 0 === e && (e = -1), void 0 === i && (i = 0), void 0 === n && (n = -1), this._content instanceof fairygui.display.MovieClip && this._content.setPlaySettings(t, e, i, n, r);
        }, a(0, s, "content", function () {
          return this._content;
        }), a(0, s, "timeScale", function () {
          return this._content instanceof fairygui.display.MovieClip ? this._content.timeScale : 1;
        }, function (t) {
          this._content instanceof fairygui.display.MovieClip && (this._content.timeScale = t);
        }), a(0, s, "color", function () {
          return this._color;
        }, function (t) {
          this._color != t && (this._color = t, this.updateGear(4), this.applyColor());
        }), a(0, s, "component", function () {
          return this._content2;
        }), n(e, ["_errorSignPool", function () {
          return this._errorSignPool = new V();
        }]), e;
      }(L),
      wt = function (t) {
        function e() {
          this._movieClip = null, e.__super.call(this), this._sizeImplType = 1;
        }
        r(e, "fairygui.GMovieClip", t);
        var n = e.prototype;
        return i.imps(n, {
          "fairygui.gears.IAnimationGear": !0,
          "fairygui.gears.IColorGear": !0
        }), n.createDisplayObject = function () {
          this._displayObject = this._movieClip = new Vt(), this._movieClip.mouseEnabled = !1, this._displayObject.$owner = this;
        }, n.rewind = function () {
          this._movieClip.rewind();
        }, n.syncStatus = function (t) {
          this._movieClip.syncStatus(t._movieClip);
        }, n.advance = function (t) {
          this._movieClip.advance(t);
        }, n.setPlaySettings = function (t, e, i, n, r) {
          void 0 === t && (t = 0), void 0 === e && (e = -1), void 0 === i && (i = 0), void 0 === n && (n = -1), this._movieClip.setPlaySettings(t, e, i, n, r);
        }, n.constructFromResource = function () {
          this.sourceWidth = this.packageItem.width, this.sourceHeight = this.packageItem.height, this.initWidth = this.sourceWidth, this.initHeight = this.sourceHeight, this.setSize(this.sourceWidth, this.sourceHeight), this.packageItem.load(), this._movieClip.interval = this.packageItem.interval, this._movieClip.swing = this.packageItem.swing, this._movieClip.repeatDelay = this.packageItem.repeatDelay, this._movieClip.frames = this.packageItem.frames, this._movieClip.boundsRect = new v(0, 0, this.sourceWidth, this.sourceHeight);
        }, n.setinterval = function (t) {
          this._movieClip && (this._movieClip.interval = t);
        }, n.setup_beforeAdd = function (e, i) {
          t.prototype.setup_beforeAdd.call(this, e, i), e.seek(i, 5), e.readBool() && (this.color = e.readColorS()), e.readByte(), this._movieClip.frame = e.getInt32(), this._movieClip.playing = e.readBool();
        }, a(0, n, "color", function () {
          return "#FFFFFF";
        }, function (t) {}), a(0, n, "playing", function () {
          return this._movieClip.playing;
        }, function (t) {
          this._movieClip.playing != t && (this._movieClip.playing = t, this.updateGear(5));
        }), a(0, n, "timeScale", function () {
          return this._movieClip.timeScale;
        }, function (t) {
          this._movieClip.timeScale = t;
        }), a(0, n, "frame", function () {
          return this._movieClip.frame;
        }, function (t) {
          this._movieClip.frame != t && (this._movieClip.frame = t, this.updateGear(5));
        }), e;
      }(L),
      Et = function (t) {
        function e() {
          this.textField = null, this._font = null, this._color = null, this._ubbEnabled = !1, this._singleLine = !1, this._letterSpacing = 0, this._autoSize = 0, this._widthAutoSize = !1, this._heightAutoSize = !1, this._updatingSize = !1, this._textWidth = 0, this._textHeight = 0, this._bitmapFont = null, this._lines = null, e.__super.call(this), this._text = "", this._color = "#000000", this.textField.align = "left", this.textField.font = Z.defaultFont, this._autoSize = 1, this._widthAutoSize = this._heightAutoSize = !0, this.textField._sizeDirty = !1;
        }
        var n, s;
        r(e, "fairygui.GBasicTextField", lt);
        var o = e.prototype;
        return o.createDisplayObject = function () {
          this._displayObject = this.textField = new s(this), this._displayObject.$owner = this, this._displayObject.mouseEnabled = !1;
        }, o.setAutoSize = function (t) {
          this._autoSize = t, this._widthAutoSize = 1 == t, this._heightAutoSize = 1 == t || 2 == t, this.textField.wordWrap = !this._widthAutoSize && !this._singleLine, this._underConstruct || (this._heightAutoSize ? this._widthAutoSize || (this.textField.width = this.width) : this.textField.size(this.width, this.height));
        }, o.ensureSizeCorrect = function () {
          !this._underConstruct && this.textField._isChanged && this.textField.typeset();
        }, o.typeset = function () {
          null != this._bitmapFont ? this.renderWithBitmapFont() : (this._widthAutoSize || this._heightAutoSize) && this.updateSize();
        }, o.updateSize = function () {
          this._textWidth = Math.ceil(this.textField.textWidth), this._textHeight = Math.ceil(this.textField.textHeight);
          var t = NaN,
            e = 0;
          this._widthAutoSize ? (t = this._textWidth, this.textField.width != t && (this.textField.width = t, "left" != this.textField.align && this.textField.baseTypeset())) : t = this.width, this._heightAutoSize ? (e = this._textHeight, this._widthAutoSize || this.textField.height != this._textHeight && (this.textField.height = this._textHeight)) : (e = this.height, this._textHeight > e && (this._textHeight = e), this.textField.height != this._textHeight && (this.textField.height = this._textHeight)), this._updatingSize = !0, this.setSize(t, e), this._updatingSize = !1;
        }, o.renderWithBitmapFont = function () {
          var t = this._displayObject.graphics;
          t.clear(), this._lines ? n.returnList(this._lines) : this._lines = [];
          var e, i = this.letterSpacing,
            r = this.leading - 1,
            a = this.width - 4,
            s = 0,
            o = 0,
            h = 0,
            l = 0,
            u = 0,
            c = 0,
            _ = 0,
            d = 0,
            f = 0,
            p = "",
            m = 2,
            g = !this._widthAutoSize && !this._singleLine,
            v = this.fontSize,
            y = this._bitmapFont.resizable ? v / this._bitmapFont.size : 1;
          this._textWidth = 0, this._textHeight = 0;
          var x = this._text;
          null != this._templateVars && (x = this.parseTemplate(x));
          for (var T = x.length, S = 0; S < T; ++S) {
            var w = x.charAt(S),
              E = w.charCodeAt(0);
            if (10 != E) {
              if (E >= 65 && E <= 90 || E >= 97 && E <= 122 ? (0 == c && (_ = s), c++) : (c > 0 && (d = s), c = 0), 32 == E) l = Math.ceil(v / 2), u = v;
              else {
                var b = this._bitmapFont.glyphs[w];
                b ? (l = Math.ceil(b.advance * y), u = Math.ceil(b.lineHeight * y)) : (l = 0, u = 0);
              }
              if (u > h && (h = u), u > o && (o = u), 0 != s && (s += i), s += l, !g || s <= a) p += w;
              else {
                if (e = n.borrow(), e.height = o, e.textHeight = h, 0 == p.length) e.text = w;
                else if (c > 0 && d > 0) {
                  var C = (p += w).length - c;
                  e.text = et.trimRight(p.substr(0, C)), e.width = d, p = p.substr(C), s -= _;
                } else e.text = p, e.width = s - (l + i), p = w, s = l, o = u, h = u;
                e.y = m, m += e.height + r, e.width > this._textWidth && (this._textWidth = e.width), c = 0, _ = 0, d = 0, this._lines.push(e);
              }
            } else p += w, (e = n.borrow()).width = s, 0 == h && (0 == f && (f = v), 0 == o && (o = f), h = o), e.height = o, f = o, e.textHeight = h, e.text = p, e.y = m, m += e.height + r, e.width > this._textWidth && (this._textWidth = e.width), this._lines.push(e), p = "", s = 0, o = 0, h = 0, c = 0, _ = 0, d = 0;
          }
          p.length > 0 && ((e = n.borrow()).width = s, 0 == o && (o = f), 0 == h && (h = o), e.height = o, e.textHeight = h, e.text = p, e.y = m, e.width > this._textWidth && (this._textWidth = e.width), this._lines.push(e)), this._textWidth > 0 && (this._textWidth += 4);
          0 == this._lines.length ? this._textHeight = 0 : (e = this._lines[this._lines.length - 1], this._textHeight = e.y + e.height + 2);
          var M = NaN,
            I = 0;
          if (M = this._widthAutoSize ? 0 == this._textWidth ? 0 : this._textWidth : this.width, I = this._heightAutoSize ? 0 == this._textHeight ? 0 : this._textHeight : this.height, this._updatingSize = !0, this.setSize(M, I), this._updatingSize = !1, this.doAlign(), 0 != M && 0 != I) {
            var D = 2,
              A = 0,
              R = 0;
            a = this.width - 4;
            for (var P = this._lines.length, L = 0; L < P; L++) {
              e = this._lines[L], D = 2, A = "center" == this.align ? (a - e.width) / 2 : "right" == this.align ? a - e.width : 0, T = e.text.length;
              for (var O = 0; O < T; O++) 10 != (E = (w = e.text.charAt(O)).charCodeAt(0)) && (32 != E ? null != (b = this._bitmapFont.glyphs[w]) ? (R = (e.height + e.textHeight) / 2 - Math.ceil(b.lineHeight * y), b.texture && t.drawTexture(b.texture, D + A + Math.ceil(b.offsetX * y), e.y + R + Math.ceil(b.offsetY * y), b.texture.width * y, b.texture.height * y), D += i + Math.ceil(b.advance * y)) : D += i : D += this._letterSpacing + Math.ceil(v / 2));
            }
          }
        }, o.handleSizeChanged = function () {
          this._updatingSize || (this._underConstruct ? this.textField.size(this.width, this.height) : null != this._bitmapFont ? this._widthAutoSize ? this.doAlign() : this.textField.setChanged() : this._widthAutoSize || (this._heightAutoSize ? this.textField.width = this.width : this.textField.size(this.width, this.height)));
        }, o.handleGrayedChanged = function () {
          fairygui.GObject.prototype.handleGrayedChanged.call(this), this.grayed ? this.textField.color = "#AAAAAA" : this.textField.color = this._color;
        }, o.doAlign = function () {
          if ("top" == this.valign || 0 == this._textHeight) this._yOffset = 2;
          else {
            var t = this.height - this._textHeight;
            t < 0 && (t = 0), "middle" == this.valign ? this._yOffset = Math.floor(t / 2) : this._yOffset = Math.floor(t);
          }
          this.handleXYChanged();
        }, o.flushVars = function () {
          this.text = this._text;
        }, a(0, o, "bold", function () {
          return this.textField.bold;
        }, function (t) {
          this.textField.bold = t;
        }), a(0, o, "letterSpacing", function () {
          return this._letterSpacing;
        }, function (t) {
          this._letterSpacing = t;
        }), a(0, o, "align", function () {
          return this.textField.align;
        }, function (t) {
          this.textField.align = t;
        }), a(0, o, "text", function () {
          return this._text;
        }, function (t) {
          if (this._text = t, null == this._text && (this._text = ""), null == this._bitmapFont) {
            this._widthAutoSize && (this.textField.width = 1e4);
            var e = this._text;
            null != this._templateVars && (e = this.parseTemplate(e)), this._ubbEnabled ? this.textField.text = et.removeUBB(et.encodeHTML(e)) : this.textField.text = e;
          } else this.textField.text = "", this.textField.setChanged();
          this.parent && this.parent._underConstruct && this.textField.typeset();
        }), a(0, o, "color", function () {
          return this._color;
        }, function (t) {
          this._color != t && (this._color = t, this._gearColor.controller && this._gearColor.updateState(), this.grayed ? this.textField.color = "#AAAAAA" : this.textField.color = this._color);
        }), a(0, o, "font", function () {
          return this.textField.font;
        }, function (t) {
          this._font = t, et.startsWith(this._font, "ui://") ? this._bitmapFont = J.getItemAssetByURL(this._font) : this._bitmapFont = null, null != this._bitmapFont ? this.textField.setChanged() : this._font ? this.textField.font = this._font : this.textField.font = Z.defaultFont;
        }), a(0, o, "leading", function () {
          return this.textField.leading;
        }, function (t) {
          this.textField.leading = t;
        }), a(0, o, "fontSize", function () {
          return this.textField.fontSize;
        }, function (t) {
          this.textField.fontSize = t;
        }), a(0, o, "valign", function () {
          return this.textField.valign;
        }, function (t) {
          this.textField.valign = t;
        }), a(0, o, "italic", function () {
          return this.textField.italic;
        }, function (t) {
          this.textField.italic = t;
        }), a(0, o, "underline", function () {
          return this.textField.underline;
        }, function (t) {
          this.textField.underline = t;
        }), a(0, o, "singleLine", function () {
          return this._singleLine;
        }, function (t) {
          this._singleLine = t, this.textField.wordWrap = !this._widthAutoSize && !this._singleLine;
        }), a(0, o, "stroke", function () {
          return this.textField.stroke;
        }, function (t) {
          this.textField.stroke = t;
        }), a(0, o, "strokeColor", function () {
          return this.textField.strokeColor;
        }, function (t) {
          this.textField.strokeColor = t, this.updateGear(4);
        }), a(0, o, "ubbEnabled", function () {
          return this._ubbEnabled;
        }, function (t) {
          this._ubbEnabled = t;
        }), a(0, o, "autoSize", function () {
          return this._autoSize;
        }, function (t) {
          this._autoSize != t && this.setAutoSize(t);
        }), a(0, o, "textWidth", function () {
          return this.textField._isChanged && this.textField.typeset(), this._textWidth;
        }), a(0, o, "textHeight", function () {
          return this.textField._isChanged && this.textField.typeset(), this._textHeight;
        }), e.GUTTER_X = 2, e.GUTTER_Y = 2, e.__init$ = function () {
          n = function () {
            function t() {
              this.width = 0, this.height = 0, this.textHeight = 0, this.text = null, this.y = 0;
            }
            return r(t, ""), t.borrow = function () {
              if (t.pool.length) {
                var e = t.pool.pop();
                return e.width = 0, e.height = 0, e.textHeight = 0, e.text = null, e.y = 0, e;
              }
              return new t();
            }, t.returns = function (e) {
              t.pool.push(e);
            }, t.returnList = function (e) {
              for (var i = e.length, n = 0; n < i; n++) {
                var r = e[n];
                t.pool.push(r);
              }
              e.length = 0;
            }, t.pool = [], t;
          }(), s = function (t) {
            function e(t) {
              this._owner = null, this._lock = !1, this._sizeDirty = !1, e.__super.call(this), this._owner = t;
            }
            r(e, "", t);
            var n = e.prototype;
            return n.baseTypeset = function () {
              this._lock = !0, this.typeset(), this._lock = !1;
            }, n.typeset = function () {
              this._sizeDirty = !0, t.prototype.typeset.call(this), this._lock || this._owner.typeset(), this._isChanged && (i.timer.clear(this, this.typeset), this._isChanged = !1), this._sizeDirty = !1;
            }, n.setChanged = function () {
              this.isChanged = !0;
            }, a(0, n, "isChanged", null, function (t) {
              t && !this._sizeDirty && 0 != this._owner.autoSize && this._owner.parent && (this._sizeDirty = !0, this.event("fui_size_delay_change")), i.superSet(S, this, "isChanged", t);
            }), e;
          }(S);
        }, e;
      }(),
      bt = function (t) {
        function e() {
          this._titleObject = null, this._iconObject = null, this._relatedController = null, this._mode = 0, this._selected = !1, this._title = null, this._selectedTitle = null, this._icon = null, this._selectedIcon = null, this._sound = null, this._soundVolumeScale = 0, this._pageOption = null, this._buttonController = null, this._changeStateOnClick = !1, this._linkedPopup = null, this._downEffect = 0, this._downEffectValue = 0, this._downScaled = !1, this._down = !1, this._over = !1, e.__super.call(this), this._mode = 0, this._title = "", this._icon = "", this._sound = Z.buttonSound, this._soundVolumeScale = Z.buttonSoundVolumeScale, this._pageOption = new U(), this._changeStateOnClick = !0, this._downEffectValue = .8;
        }
        r(e, "fairygui.GButton", t);
        var n = e.prototype;
        return n.getTextField = function () {
          return this._titleObject instanceof fairygui.GTextField ? this._titleObject : this._titleObject instanceof fairygui.GLabel ? this._titleObject.getTextField() : this._titleObject instanceof fairygui.GButton ? this._titleObject.getTextField() : null;
        }, n.fireClick = function (t) {
          void 0 === t && (t = !0), t && 0 == this._mode && (this.setState("over"), i.timer.once(100, this, this.setState, ["down"], !1), i.timer.once(200, this, this.setState, ["up"], !1)), this.__click(P.createEvent("click", this.displayObject));
        }, n.setState = function (t) {
          if (this._buttonController && (this._buttonController.selectedPage = t), 1 == this._downEffect) {
            var e = this.numChildren;
            if ("down" == t || "selectedOver" == t || "selectedDisabled" == t)
              for (var i = 255 * this._downEffectValue, n = E.toHexColor((i << 16) + (i << 8) + i), r = 0; r < e; r++) {
                var a = this.getChildAt(r);
                (a instanceof fairygui.GImage || a instanceof fairygui.GLoader || a instanceof fairygui.GMovieClip) && (a.color = n);
              } else
                for (r = 0; r < e; r++)((a = this.getChildAt(r)) instanceof fairygui.GImage || a instanceof fairygui.GLoader || a instanceof fairygui.GMovieClip) && (a.color = "#FFFFFF");
          } else 2 == this._downEffect && ("down" == t || "selectedOver" == t || "selectedDisabled" == t ? this._downScaled || (this.setScale(this.scaleX * this._downEffectValue, this.scaleY * this._downEffectValue), this._downScaled = !0) : this._downScaled && (this.setScale(this.scaleX / this._downEffectValue, this.scaleY / this._downEffectValue), this._downScaled = !1));
        }, n.handleControllerChanged = function (e) {
          t.prototype.handleControllerChanged.call(this, e), this._relatedController == e && (this.selected = this._pageOption.id == e.selectedPageId);
        }, n.handleGrayedChanged = function () {
          this._buttonController && this._buttonController.hasPage("disabled") ? this.grayed ? this._selected && this._buttonController.hasPage("selectedDisabled") ? this.setState("selectedDisabled") : this.setState("disabled") : this._selected ? this.setState("down") : this.setState("up") : t.prototype.handleGrayedChanged.call(this);
        }, n.constructExtension = function (t) {
          t.seek(0, 6), this._mode = t.readByte();
          var e = t.readS();
          e && (this._sound = e), this._soundVolumeScale = t.getFloat32(), this._downEffect = t.readByte(), this._downEffectValue = t.getFloat32(), 2 == this._downEffect && this.setPivot(.5, .5, this.pivotAsAnchor), this._buttonController = this.getController("button"), this._titleObject = this.getChild("title"), this._iconObject = this.getChild("icon"), null != this._titleObject && (this._title = this._titleObject.text), null != this._iconObject && (this._icon = this._iconObject.icon), 0 == this._mode && this.setState("up"), this.on("mouseover", this, this.__rollover), this.on("mouseout", this, this.__rollout), this.on("mousedown", this, this.__mousedown), this.on("click", this, this.__click);
        }, n.setup_afterAdd = function (e, i) {
          if (t.prototype.setup_afterAdd.call(this, e, i), e.seek(i, 6) && e.readByte() == this.packageItem.objectType) {
            var n, r = 0;
            null != (n = e.readS()) && (this.title = n), null != (n = e.readS()) && (this.selectedTitle = n), null != (n = e.readS()) && (this.icon = n), null != (n = e.readS()) && (this.selectedIcon = n), e.readBool() && (this.titleColor = e.readColorS()), 0 != (r = e.getInt32()) && (this.titleFontSize = r), (r = e.getInt16()) >= 0 && (this._relatedController = this.parent.getControllerAt(r)), this.pageOption.id = e.readS(), null != (n = e.readS()) && (this._sound = n), e.readBool() && (this._soundVolumeScale = e.getFloat32()), this.selected = e.readBool();
          }
        }, n.__rollover = function () {
          this._buttonController && this._buttonController.hasPage("over") && (this._over = !0, this._down || this.grayed && this._buttonController.hasPage("disabled") || this.setState(this._selected ? "selectedOver" : "over"));
        }, n.__rollout = function () {
          this._buttonController && this._buttonController.hasPage("over") && (this._over = !1, this._down || this.grayed && this._buttonController.hasPage("disabled") || this.setState(this._selected ? "down" : "up"));
        }, n.dispose = function () {
          t.prototype.dispose.call(this);
        }, n.__mousedown = function (t) {
          this._down = !0, Rt.inst.checkPopups(t.target), i.stage.on("mouseup", this, this.__mouseup), 0 == this._mode && (this.grayed && this._buttonController && this._buttonController.hasPage("disabled") ? this.setState("selectedDisabled") : this.setState("down")), null != this._linkedPopup && (this._linkedPopup instanceof fairygui.Window ? this._linkedPopup.toggleStatus() : this.root.togglePopup(this._linkedPopup, this));
        }, n.__mouseup = function () {
          this._down && (i.stage.off("mouseup", this, this.__mouseup), this._down = !1, 0 == this._mode && (this.grayed && this._buttonController && this._buttonController.hasPage("disabled") ? this.setState("disabled") : this._over ? this.setState("over") : this.setState("up")));
        }, n.__click = function (t) {
          if (this._sound && 0 != Z.buttonSoundVolumeScale) {
            var e = J.getItemByURL(this._sound);
            e ? Rt.inst.playOneShotSound(e.file) : Rt.inst.playOneShotSound(this._sound);
          }
          1 == this._mode ? this._changeStateOnClick && (this.selected = !this._selected, P.dispatch("fui_state_changed", this.displayObject, t)) : 2 == this._mode ? this._changeStateOnClick && !this._selected && (this.selected = !0, P.dispatch("fui_state_changed", this.displayObject, t)) : this._relatedController && (this._relatedController.selectedPageId = this._pageOption.id);
        }, a(0, n, "relatedController", function () {
          return this._relatedController;
        }, function (t) {
          t != this._relatedController && (this._relatedController = t, this._pageOption.controller = t, this._pageOption.clear());
        }), a(0, n, "icon", function () {
          return this._icon;
        }, function (t) {
          this._icon = t, t = this._selected && this._selectedIcon ? this._selectedIcon : this._icon, null != this._iconObject && (this._iconObject.icon = t), this.updateGear(7);
        }), a(0, n, "titleFontSize", function () {
          var t = this.getTextField();
          return null != t ? t.fontSize : 0;
        }, function (t) {
          var e = this.getTextField();
          null != e && (e.fontSize = t);
        }), a(0, n, "selectedIcon", function () {
          return this._selectedIcon;
        }, function (t) {
          this._selectedIcon = t, t = this._selected && this._selectedIcon ? this._selectedIcon : this._icon, null != this._iconObject && (this._iconObject.icon = t);
        }), a(0, n, "title", function () {
          return this._title;
        }, function (t) {
          this._title = t, this._titleObject && (this._titleObject.text = this._selected && this._selectedTitle ? this._selectedTitle : this._title), this.updateGear(6);
        }), a(0, n, "text", function () {
          return this.title;
        }, function (t) {
          this.title = t;
        }), a(0, n, "selectedTitle", function () {
          return this._selectedTitle;
        }, function (t) {
          this._selectedTitle = t, this._titleObject && (this._titleObject.text = this._selected && this._selectedTitle ? this._selectedTitle : this._title);
        }), a(0, n, "soundVolumeScale", function () {
          return this._soundVolumeScale;
        }, function (t) {
          this._soundVolumeScale = t;
        }), a(0, n, "sound", function () {
          return this._sound;
        }, function (t) {
          this._sound = t;
        }), a(0, n, "titleColor", function () {
          var t = this.getTextField();
          return null != t ? t.color : "#000000";
        }, function (t) {
          var e = this.getTextField();
          null != e && (e.color = t), this.updateGear(4);
        }), a(0, n, "selected", function () {
          return this._selected;
        }, function (t) {
          if (0 != this._mode && this._selected != t) {
            if (this._selected = t, this.grayed && this._buttonController && this._buttonController.hasPage("disabled") ? this._selected ? this.setState("selectedDisabled") : this.setState("disabled") : this._selected ? this.setState(this._over ? "selectedOver" : "down") : this.setState(this._over ? "over" : "up"), this._selectedTitle && this._titleObject && (this._titleObject.text = this._selected ? this._selectedTitle : this._title), this._selectedIcon) {
              var e = this._selected ? this._selectedIcon : this._icon;
              null != this._iconObject && (this._iconObject.icon = e);
            }
            this._relatedController && this._parent && !this._parent._buildingDisplayList && (this._selected ? (this._relatedController.selectedPageId = this._pageOption.id, this._relatedController.autoRadioGroupDepth && this._parent.adjustRadioGroupDepth(this, this._relatedController)) : 1 == this._mode && this._relatedController.selectedPageId == this._pageOption.id && (this._relatedController.oppositePageId = this._pageOption.id));
          }
        }), a(0, n, "mode", function () {
          return this._mode;
        }, function (t) {
          this._mode != t && (0 == t && (this.selected = !1), this._mode = t);
        }), a(0, n, "pageOption", function () {
          return this._pageOption;
        }), a(0, n, "changeStateOnClick", function () {
          return this._changeStateOnClick;
        }, function (t) {
          this._changeStateOnClick = t;
        }), a(0, n, "linkedPopup", function () {
          return this._linkedPopup;
        }, function (t) {
          this._linkedPopup = t;
        }), e.UP = "up", e.DOWN = "down", e.OVER = "over", e.SELECTED_OVER = "selectedOver", e.DISABLED = "disabled", e.SELECTED_DISABLED = "selectedDisabled", e;
      }(ut),
      Ct = function (t) {
        function e() {
          this.dropdown = null, this._titleObject = null, this._iconObject = null, this._list = null, this._items = null, this._icons = null, this._values = null, this._popupDirection = 0, this._visibleItemCount = 0, this._itemsUpdated = !1, this._selectedIndex = 0, this._buttonController = null, this._selectionController = null, this._down = !1, this._over = !1, e.__super.call(this), this._visibleItemCount = Z.defaultComboBoxVisibleItemCount, this._itemsUpdated = !0, this._selectedIndex = -1, this._items = [], this._values = [];
        }
        r(e, "fairygui.GComboBox", t);
        var n = e.prototype;
        return n.getTextField = function () {
          return this._titleObject instanceof fairygui.GTextField ? this._titleObject : this._titleObject instanceof fairygui.GLabel ? this._titleObject.getTextField() : this._titleObject instanceof fairygui.GButton ? this._titleObject.getTextField() : null;
        }, n.setState = function (t) {
          this._buttonController && (this._buttonController.selectedPage = t);
        }, n.handleControllerChanged = function (e) {
          t.prototype.handleControllerChanged.call(this, e), this._selectionController == e && (this.selectedIndex = e.selectedIndex);
        }, n.updateSelectionController = function () {
          if (null != this._selectionController && !this._selectionController.changing && this._selectedIndex < this._selectionController.pageCount) {
            var t = this._selectionController;
            this._selectionController = null, t.selectedIndex = this._selectedIndex, this._selectionController = t;
          }
        }, n.dispose = function () {
          this.dropdown && (this.dropdown.dispose(), this.dropdown = null), this._selectionController = null, t.prototype.dispose.call(this);
        }, n.constructExtension = function (t) {
          var e;
          if (this._buttonController = this.getController("button"), this._titleObject = this.getChild("title"), this._iconObject = this.getChild("icon"), e = t.readS()) {
            if (this.dropdown = J.createObjectFromURL(e), !this.dropdown) return void m.print("下拉框必须为元件");
            if (this.dropdown.name = "this._dropdownObject", this._list = this.dropdown.getChild("list").asList, null == this._list) return void m.print(this.resourceURL + ": 下拉框的弹出元件里必须包含名为list的列表");
            this._list.on("fui_click_item", this, this.__clickItem), this._list.addRelation(this.dropdown, 14), this._list.removeRelation(this.dropdown, 15), this.dropdown.addRelation(this._list, 15), this.dropdown.removeRelation(this._list, 14), this.dropdown.displayObject.on("undisplay", this, this.__popupWinClosed);
          }
          this.on("mouseover", this, this.__rollover), this.on("mouseout", this, this.__rollout), this.on("mousedown", this, this.__mousedown);
        }, n.setup_afterAdd = function (e, i) {
          if (t.prototype.setup_afterAdd.call(this, e, i), e.seek(i, 6) && e.readByte() == this.packageItem.objectType) {
            var n, r = 0,
              a = 0,
              s = 0,
              o = e.getInt16();
            for (r = 0; r < o; r++) s = e.getInt16(), s += e.pos, this._items[r] = e.readS(), this._values[r] = e.readS(), null != (n = e.readS()) && (null == this._icons && (this._icons = []), this._icons[r] = n), e.pos = s;
            null != (n = e.readS()) ? (this.text = n, this._selectedIndex = this._items.indexOf(n)) : this._items.length > 0 ? (this._selectedIndex = 0, this.text = this._items[0]) : this._selectedIndex = -1, null != (n = e.readS()) && (this.icon = n), e.readBool() && (this.titleColor = e.readColorS()), (a = e.getInt32()) > 0 && (this._visibleItemCount = a), this._popupDirection = e.readByte(), (a = e.getInt16()) >= 0 && (this._selectionController = this.parent.getControllerAt(a));
          }
        }, n.showDropdown = function () {
          if (this._itemsUpdated) {
            this._itemsUpdated = !1, this._list.removeChildrenToPool();
            for (var t = this._items.length, e = 0; e < t; e++) {
              var i = this._list.addItemFromPool();
              i.name = e < this._values.length ? this._values[e] : "", i.text = this._items[e], i.icon = null != this._icons && e < this._icons.length ? this._icons[e] : null;
            }
            this._list.resizeToFit(this._visibleItemCount);
          }
          this._list.selectedIndex = this._selectedIndex, this.dropdown.width = this.width;
          var n = null;
          2 == this._popupDirection ? n = !0 : 1 == this._popupDirection && (n = !1), this.root.togglePopup(this.dropdown, this, n), this.dropdown.parent && this.setState("down");
        }, n.__popupWinClosed = function () {
          this._over ? this.setState("over") : this.setState("up");
        }, n.__clickItem = function (t, e) {
          i.timer.callLater(this, this.__clickItem2, [this._list.getChildIndex(t), e]);
        }, n.__clickItem2 = function (t, e) {
          this.dropdown.parent instanceof fairygui.GRoot && this.dropdown.parent.hidePopup(), this._selectedIndex = -1, this.selectedIndex = t, P.dispatch("fui_state_changed", this.displayObject, e);
        }, n.__rollover = function () {
          this._over = !0, this._down || this.dropdown && this.dropdown.parent || this.setState("over");
        }, n.__rollout = function () {
          this._over = !1, this._down || this.dropdown && this.dropdown.parent || this.setState("up");
        }, n.__mousedown = function (t) {
          t.target instanceof laya.display.Input || (this._down = !0, Rt.inst.checkPopups(t.target), i.stage.on("mouseup", this, this.__mouseup), this.dropdown && this.showDropdown());
        }, n.__mouseup = function () {
          this._down && (this._down = !1, i.stage.off("mouseup", this, this.__mouseup), this.dropdown && !this.dropdown.parent && (this._over ? this.setState("over") : this.setState("up")));
        }, a(0, n, "text", function () {
          return this._titleObject ? this._titleObject.text : null;
        }, function (t) {
          this._titleObject && (this._titleObject.text = t), this.updateGear(6);
        }), a(0, n, "titleColor", function () {
          var t = this.getTextField();
          return null != t ? t.color : "#000000";
        }, function (t) {
          var e = this.getTextField();
          null != e && (e.color = t), this.updateGear(4);
        }), a(0, n, "titleFontSize", function () {
          var t = this.getTextField();
          return null != t ? t.fontSize : 0;
        }, function (t) {
          var e = this.getTextField();
          null != e && (e.fontSize = t);
        }), a(0, n, "icon", function () {
          return this._iconObject ? this._iconObject.icon : null;
        }, function (t) {
          this._iconObject && (this._iconObject.icon = t), this.updateGear(7);
        }), a(0, n, "icons", function () {
          return this._icons;
        }, function (t) {
          this._icons = t, null != this._icons && -1 != this._selectedIndex && this._selectedIndex < this._icons.length && (this.icon = this._icons[this._selectedIndex]);
        }), a(0, n, "selectionController", function () {
          return this._selectionController;
        }, function (t) {
          this._selectionController = t;
        }), a(0, n, "visibleItemCount", function () {
          return this._visibleItemCount;
        }, function (t) {
          this._visibleItemCount = t;
        }), a(0, n, "popupDirection", function () {
          return this._popupDirection;
        }, function (t) {
          this._popupDirection = t;
        }), a(0, n, "items", function () {
          return this._items;
        }, function (t) {
          t ? this._items = t.concat() : this._items.length = 0, this._items.length > 0 ? (this._selectedIndex >= this._items.length ? this._selectedIndex = this._items.length - 1 : -1 == this._selectedIndex && (this._selectedIndex = 0), this.text = this._items[this._selectedIndex], null != this._icons && this._selectedIndex < this._icons.length && (this.icon = this._icons[this._selectedIndex])) : (this.text = "", null != this._icons && (this.icon = null), this._selectedIndex = -1), this._itemsUpdated = !0;
        }), a(0, n, "values", function () {
          return this._values;
        }, function (t) {
          t ? this._values = t.concat() : this._values.length = 0;
        }), a(0, n, "selectedIndex", function () {
          return this._selectedIndex;
        }, function (t) {
          this._selectedIndex != t && (this._selectedIndex = t, this._selectedIndex >= 0 && this._selectedIndex < this._items.length ? (this.text = this._items[this._selectedIndex], null != this._icons && this._selectedIndex < this._icons.length && (this.icon = this._icons[this._selectedIndex])) : (this.text = "", null != this._icons && (this.icon = null)), this.updateSelectionController());
        }), a(0, n, "value", function () {
          return this._values[this._selectedIndex];
        }, function (t) {
          this.selectedIndex = this._values.indexOf(t);
        }), e;
      }(ut),
      Mt = function (t) {
        function e() {
          this._titleObject = null, this._iconObject = null, e.__super.call(this);
        }
        r(e, "fairygui.GLabel", t);
        var n = e.prototype;
        return i.imps(n, {
          "fairygui.gears.IColorGear": !0
        }), n.getTextField = function () {
          return this._titleObject instanceof fairygui.GTextField ? this._titleObject : this._titleObject instanceof fairygui.GLabel ? this._titleObject.getTextField() : this._titleObject instanceof fairygui.GButton ? this._titleObject.getTextField() : null;
        }, n.constructExtension = function (t) {
          this._titleObject = this.getChild("title"), this._iconObject = this.getChild("icon");
        }, n.setup_afterAdd = function (e, i) {
          if (t.prototype.setup_afterAdd.call(this, e, i), e.seek(i, 6) && e.readByte() == this.packageItem.objectType) {
            var n;
            null != (n = e.readS()) && (this.title = n), null != (n = e.readS()) && (this.icon = n), e.readBool() && (this.titleColor = e.readColorS());
            var r = e.getInt32();
            if (0 != r && (this.titleFontSize = r), e.readBool()) {
              var a = this.getTextField();
              null != a ? (null != (n = e.readS()) && (a.promptText = n), null != (n = e.readS()) && (a.restrict = n), 0 != (r = e.getInt32()) && (a.maxLength = r), 0 != (r = e.getInt32()) && (4 == r ? a.keyboardType = "number" : 3 == r && (a.keyboardType = "url")), e.readBool() && (a.password = !0)) : e.skip(13);
            }
          }
        }, a(0, n, "color", function () {
          return this.titleColor;
        }, function (t) {
          this.titleColor = t;
        }), a(0, n, "icon", function () {
          return null != this._iconObject ? this._iconObject.icon : null;
        }, function (t) {
          null != this._iconObject && (this._iconObject.icon = t), this.updateGear(7);
        }), a(0, n, "editable", function () {
          return !!(this._titleObject && this._titleObject instanceof fairygui.GTextInput) && this._titleObject.asTextInput.editable;
        }, function (t) {
          this._titleObject && (this._titleObject.asTextInput.editable = t);
        }), a(0, n, "title", function () {
          return this._titleObject ? this._titleObject.text : null;
        }, function (t) {
          this._titleObject && (this._titleObject.text = t), this.updateGear(6);
        }), a(0, n, "text", function () {
          return this.title;
        }, function (t) {
          this.title = t;
        }), a(0, n, "titleColor", function () {
          var t = this.getTextField();
          return null != t ? t.color : "#000000";
        }, function (t) {
          var e = this.getTextField();
          null != e && (e.color = t), this.updateGear(4);
        }), a(0, n, "titleFontSize", function () {
          var t = this.getTextField();
          return null != t ? t.fontSize : 0;
        }, function (t) {
          var e = this.getTextField();
          null != e && (e.fontSize = t);
        }), e;
      }(ut),
      It = function (t) {
        function e() {
          this.itemRenderer = null, this.itemProvider = null, this.scrollItemToViewOnClick = !1, this.foldInvisibleItems = !1, this._layout = 0, this._lineCount = 0, this._columnCount = 0, this._lineGap = 0, this._columnGap = 0, this._defaultItem = null, this._autoResizeItem = !1, this._selectionMode = 0, this._align = null, this._verticalAlign = null, this._selectionController = null, this._lastSelectedIndex = 0, this._pool = null, this._virtual = !1, this._loop = !1, this._numItems = 0, this._realNumItems = 0, this._firstIndex = 0, this._curLineItemCount = 0, this._curLineItemCount2 = 0, this._itemSize = null, this._virtualListChanged = 0, this._virtualItems = null, this._eventLocked = !1, this.itemInfoVer = 0, this.enterCounter = 0, e.__super.call(this), this._trackBounds = !0, this._pool = new V(), this._layout = 0, this._autoResizeItem = !0, this._lastSelectedIndex = -1, this._selectionMode = 0, this.opaque = !0, this.scrollItemToViewOnClick = !0, this._align = "left", this._verticalAlign = "top", this._container = new T(), this._displayObject.addChild(this._container);
        }
        var n;
        r(e, "fairygui.GList", t);
        var s = e.prototype;
        return s.dispose = function () {
          this._pool.clear(), t.prototype.dispose.call(this);
        }, s.getFromPool = function (t) {
          t || (t = this._defaultItem);
          var e = this._pool.getObject(t);
          return null != e && (e.visible = !0), e;
        }, s.returnToPool = function (t) {
          t.displayObject.cacheAsBitmap = !1, this._pool.returnObject(t);
        }, s.addChildAt = function (e, i) {
          if (void 0 === i && (i = 0), t.prototype.addChildAt.call(this, e, i), e instanceof fairygui.GButton) {
            var n = e;
            n.selected = !1, n.changeStateOnClick = !1;
          }
          return e.on("click", this, this.__clickItem), e;
        }, s.addItem = function (t) {
          return t || (t = this._defaultItem), this.addChild(J.createObjectFromURL(t));
        }, s.addItemFromPool = function (t) {
          return this.addChild(this.getFromPool(t));
        }, s.removeChildAt = function (e, i) {
          void 0 === i && (i = !1);
          var n = t.prototype.removeChildAt.call(this, e, i);
          return n.off("click", this, this.__clickItem), n;
        }, s.removeChildToPoolAt = function (e) {
          void 0 === e && (e = 0);
          var i = t.prototype.removeChildAt.call(this, e);
          this.returnToPool(i);
        }, s.removeChildToPool = function (t) {
          this.removeChild(t), this.returnToPool(t);
        }, s.removeChildrenToPool = function (t, e) {
          void 0 === t && (t = 0), void 0 === e && (e = -1), (e < 0 || e >= this._children.length) && (e = this._children.length - 1);
          for (var i = t; i <= e; ++i) this.removeChildToPoolAt(t);
        }, s.getSelection = function () {
          var t = [],
            e = 0;
          if (this._virtual)
            for (e = 0; e < this._realNumItems; e++) {
              var i = this._virtualItems[e];
              if (i.obj instanceof fairygui.GButton && i.obj.selected || null == i.obj && i.selected) {
                var n = e;
                if (this._loop && (n = e % this._numItems, -1 != t.indexOf(n))) continue;
                t.push(n);
              }
            } else {
              var r = this._children.length;
              for (e = 0; e < r; e++) {
                var a = this._children[e].asButton;
                null != a && a.selected && t.push(e);
              }
            }
          return t;
        }, s.addSelection = function (t, e) {
          if (void 0 === e && (e = !1), 3 != this._selectionMode) {
            this.checkVirtualList(), 0 == this._selectionMode && this.clearSelection(), e && this.scrollToView(t), this._lastSelectedIndex = t;
            var i = null;
            if (this._virtual) {
              var n = this._virtualItems[t];
              null != n.obj && (i = n.obj.asButton), n.selected = !0;
            } else i = this.getChildAt(t).asButton;
            null == i || i.selected || (i.selected = !0, this.updateSelectionController(t));
          }
        }, s.removeSelection = function (t) {
          if (3 != this._selectionMode) {
            var e = null;
            if (this._virtual) {
              var i = this._virtualItems[t];
              null != i.obj && (e = i.obj.asButton), i.selected = !1;
            } else e = this.getChildAt(t).asButton;
            null != e && (e.selected = !1);
          }
        }, s.clearSelection = function () {
          var t = 0;
          if (this._virtual)
            for (t = 0; t < this._realNumItems; t++) {
              var e = this._virtualItems[t];
              e.obj instanceof fairygui.GButton && (e.obj.selected = !1), e.selected = !1;
            } else {
              var i = this._children.length;
              for (t = 0; t < i; t++) {
                var n = this._children[t].asButton;
                null != n && (n.selected = !1);
              }
            }
        }, s.clearSelectionExcept = function (t) {
          var e = 0;
          if (this._virtual)
            for (e = 0; e < this._realNumItems; e++) {
              var i = this._virtualItems[e];
              i.obj != t && (i.obj instanceof fairygui.GButton && (i.obj.selected = !1), i.selected = !1);
            } else {
              var n = this._children.length;
              for (e = 0; e < n; e++) {
                var r = this._children[e].asButton;
                null != r && r != t && (r.selected = !1);
              }
            }
        }, s.selectAll = function () {
          this.checkVirtualList();
          var t = -1,
            e = 0;
          if (this._virtual)
            for (e = 0; e < this._realNumItems; e++) {
              var i = this._virtualItems[e];
              i.obj instanceof fairygui.GButton && !i.obj.selected && (i.obj.selected = !0, t = e), i.selected = !0;
            } else {
              var n = this._children.length;
              for (e = 0; e < n; e++) {
                var r = this._children[e].asButton;
                null == r || r.selected || (r.selected = !0, t = e);
              }
            } -
            1 != t && this.updateSelectionController(t);
        }, s.selectNone = function () {
          this.clearSelection();
        }, s.selectReverse = function () {
          this.checkVirtualList();
          var t = -1,
            e = 0;
          if (this._virtual)
            for (e = 0; e < this._realNumItems; e++) {
              var i = this._virtualItems[e];
              i.obj instanceof fairygui.GButton && (i.obj.selected = !i.obj.selected, i.obj.selected && (t = e)), i.selected = !i.selected;
            } else {
              var n = this._children.length;
              for (e = 0; e < n; e++) {
                var r = this._children[e].asButton;
                null != r && (r.selected = !r.selected, r.selected && (t = e));
              }
            } -
            1 != t && this.updateSelectionController(t);
        }, s.handleArrowKey = function (t) {
          void 0 === t && (t = 0);
          var e = this.selectedIndex;
          if (-1 != e) switch (t) {
            case 1:
              if (0 == this._layout || 3 == this._layout) --e >= 0 && (this.clearSelection(), this.addSelection(e, !0));
              else if (2 == this._layout || 4 == this._layout) {
                for (var i = this._children[e], n = 0, r = e - 1; r >= 0; r--) {
                  var a = this._children[r];
                  if (a.y != i.y) {
                    i = a;
                    break;
                  }
                  n++;
                }
                for (; r >= 0; r--)
                  if ((a = this._children[r]).y != i.y) {
                    this.clearSelection(), this.addSelection(r + n + 1, !0);
                    break;
                  }
              }
              break;
            case 3:
              if (1 == this._layout || 2 == this._layout || 4 == this._layout) ++e < this._children.length && (this.clearSelection(), this.addSelection(e, !0));
              else if (3 == this._layout) {
                i = this._children[e], n = 0;
                var s = this._children.length;
                for (r = e + 1; r < s; r++) {
                  if ((a = this._children[r]).x != i.x) {
                    i = a;
                    break;
                  }
                  n++;
                }
                for (; r < s; r++)
                  if ((a = this._children[r]).x != i.x) {
                    this.clearSelection(), this.addSelection(r - n - 1, !0);
                    break;
                  }
              }
              break;
            case 5:
              if (0 == this._layout || 3 == this._layout) ++e < this._children.length && (this.clearSelection(), this.addSelection(e, !0));
              else if (2 == this._layout || 4 == this._layout) {
                for (i = this._children[e], n = 0, s = this._children.length, r = e + 1; r < s; r++) {
                  if ((a = this._children[r]).y != i.y) {
                    i = a;
                    break;
                  }
                  n++;
                }
                for (; r < s; r++)
                  if ((a = this._children[r]).y != i.y) {
                    this.clearSelection(), this.addSelection(r - n - 1, !0);
                    break;
                  }
              }
              break;
            case 7:
              if (1 == this._layout || 2 == this._layout || 4 == this._layout) --e >= 0 && (this.clearSelection(), this.addSelection(e, !0));
              else if (3 == this._layout) {
                for (i = this._children[e], n = 0, r = e - 1; r >= 0; r--) {
                  if ((a = this._children[r]).x != i.x) {
                    i = a;
                    break;
                  }
                  n++;
                }
                for (; r >= 0; r--)
                  if ((a = this._children[r]).x != i.x) {
                    this.clearSelection(), this.addSelection(r + n + 1, !0);
                    break;
                  }
              }
          }
        }, s.__clickItem = function (t) {
          if (null == this._scrollPane || !this._scrollPane.isDragged) {
            var e = L.cast(t.currentTarget);
            this.setSelectionOnEvent(e, t), this._scrollPane && this.scrollItemToViewOnClick && this._scrollPane.scrollToView(e, !0), this.displayObject.event("fui_click_item", [e, P.createEvent("fui_click_item", this.displayObject, t)]);
          }
        }, s.setSelectionOnEvent = function (t, e) {
          if (t instanceof fairygui.GButton && 3 != this._selectionMode) {
            var i = !1,
              n = t,
              r = this.childIndexToItemIndex(this.getChildIndex(t));
            if (0 == this._selectionMode) n.selected || (this.clearSelectionExcept(n), n.selected = !0);
            else if (e.shiftKey) {
              if (!n.selected)
                if (-1 != this._lastSelectedIndex) {
                  var a = Math.min(this._lastSelectedIndex, r),
                    s = Math.max(this._lastSelectedIndex, r);
                  s = Math.min(s, this.numItems - 1);
                  var o = 0;
                  if (this._virtual)
                    for (o = a; o <= s; o++) {
                      var h = this._virtualItems[o];
                      h.obj instanceof fairygui.GButton && (h.obj.selected = !0), h.selected = !0;
                    } else
                      for (o = a; o <= s; o++) {
                        var l = this.getChildAt(o).asButton;
                        null != l && (l.selected = !0);
                      }
                  i = !0;
                } else n.selected = !0;
            } else e.ctrlKey || 2 == this._selectionMode ? n.selected = !n.selected : n.selected ? this.clearSelectionExcept(n) : (this.clearSelectionExcept(n), n.selected = !0);
            i || (this._lastSelectedIndex = r), n.selected && this.updateSelectionController(r);
          }
        }, s.resizeToFit = function (t, e) {
          void 0 === t && (t = 1e6), void 0 === e && (e = 0), this.ensureBoundsCorrect();
          var i = this.numItems;
          if (t > i && (t = i), this._virtual) {
            var n = Math.ceil(t / this._curLineItemCount);
            0 == this._layout || 2 == this._layout ? this.viewHeight = n * this._itemSize.y + Math.max(0, n - 1) * this._lineGap : this.viewWidth = n * this._itemSize.x + Math.max(0, n - 1) * this._columnGap;
          } else if (0 == t) 0 == this._layout || 2 == this._layout ? this.viewHeight = e : this.viewWidth = e;
          else {
            for (var r = t - 1, a = null; r >= 0 && (a = this.getChildAt(r), this.foldInvisibleItems && !a.visible);) r--;
            if (r < 0) 0 == this._layout || 2 == this._layout ? this.viewHeight = e : this.viewWidth = e;
            else {
              var s = 0;
              0 == this._layout || 2 == this._layout ? ((s = a.y + a.height) < e && (s = e), this.viewHeight = s) : ((s = a.x + a.width) < e && (s = e), this.viewWidth = s);
            }
          }
        }, s.getMaxItemWidth = function () {
          for (var t = this._children.length, e = 0, i = 0; i < t; i++) {
            var n = this.getChildAt(i);
            n.width > e && (e = n.width);
          }
          return e;
        }, s.handleSizeChanged = function () {
          t.prototype.handleSizeChanged.call(this), this.setBoundsChangedFlag(), this._virtual && this.setVirtualListChangedFlag(!0);
        }, s.handleControllerChanged = function (e) {
          t.prototype.handleControllerChanged.call(this, e), this._selectionController == e && (this.selectedIndex = e.selectedIndex);
        }, s.updateSelectionController = function (t) {
          if (null != this._selectionController && !this._selectionController.changing && t < this._selectionController.pageCount) {
            var e = this._selectionController;
            this._selectionController = null, e.selectedIndex = t, this._selectionController = e;
          }
        }, s.getSnappingPosition = function (e, i, n) {
          if (this._virtual) {
            n || (n = new g());
            var r = NaN,
              a = 0;
            return 0 == this._layout || 2 == this._layout ? (r = i, fairygui.GList.pos_param = i, a = this.getIndexOnPos1(!1), i = fairygui.GList.pos_param, a < this._virtualItems.length && r - i > this._virtualItems[a].height / 2 && a < this._realNumItems && (i += this._virtualItems[a].height + this._lineGap)) : 1 == this._layout || 3 == this._layout ? (r = e, fairygui.GList.pos_param = e, a = this.getIndexOnPos2(!1), e = fairygui.GList.pos_param, a < this._virtualItems.length && r - e > this._virtualItems[a].width / 2 && a < this._realNumItems && (e += this._virtualItems[a].width + this._columnGap)) : (r = e, fairygui.GList.pos_param = e, a = this.getIndexOnPos3(!1), e = fairygui.GList.pos_param, a < this._virtualItems.length && r - e > this._virtualItems[a].width / 2 && a < this._realNumItems && (e += this._virtualItems[a].width + this._columnGap)), n.x = e, n.y = i, n;
          }
          return t.prototype.getSnappingPosition.call(this, e, i, n);
        }, s.scrollToView = function (t, e, i) {
          if (void 0 === e && (e = !1), void 0 === i && (i = !1), this._virtual) {
            if (0 == this._numItems) return;
            if (this.checkVirtualList(), t >= this._virtualItems.length) throw new Error("Invalid child index: " + t + ">" + this._virtualItems.length);
            this._loop && (t = Math.floor(this._firstIndex / this._numItems) * this._numItems + t);
            var n, r = this._virtualItems[t],
              a = 0,
              s = 0;
            if (0 == this._layout || 2 == this._layout) {
              for (s = 0; s < t; s += this._curLineItemCount) a += this._virtualItems[s].height + this._lineGap;
              n = new v(0, a, this._itemSize.x, r.height);
            } else if (1 == this._layout || 3 == this._layout) {
              for (s = 0; s < t; s += this._curLineItemCount) a += this._virtualItems[s].width + this._columnGap;
              n = new v(a, 0, r.width, this._itemSize.y);
            } else {
              var o = t / (this._curLineItemCount * this._curLineItemCount2);
              n = new v(o * this.viewWidth + t % this._curLineItemCount * (r.width + this._columnGap), t / this._curLineItemCount % this._curLineItemCount2 * (r.height + this._lineGap), r.width, r.height);
            }
            i = !0, null != this._scrollPane && this._scrollPane.scrollToView(n, e, i);
          } else {
            var h = this.getChildAt(t);
            null != this._scrollPane ? this._scrollPane.scrollToView(h, e, i) : null != this.parent && null != this.parent.scrollPane && this.parent.scrollPane.scrollToView(h, e, i);
          }
        }, s.getFirstChildInView = function () {
          return this.childIndexToItemIndex(t.prototype.getFirstChildInView.call(this));
        }, s.childIndexToItemIndex = function (t) {
          if (!this._virtual) return t;
          if (4 == this._layout) {
            for (var e = this._firstIndex; e < this._realNumItems; e++)
              if (null != this._virtualItems[e].obj && --t < 0) return e;
            return t;
          }
          return t += this._firstIndex, this._loop && this._numItems > 0 && (t %= this._numItems), t;
        }, s.itemIndexToChildIndex = function (t) {
          if (!this._virtual) return t;
          if (4 == this._layout) return this.getChildIndex(this._virtualItems[t].obj);
          if (this._loop && this._numItems > 0) {
            var e = this._firstIndex % this._numItems;
            t = t >= e ? this._firstIndex + (t - e) : this._firstIndex + this._numItems + (e - t);
          } else t -= this._firstIndex;
          return t;
        }, s.setVirtual = function () {
          this._setVirtual(!1);
        }, s.setVirtualAndLoop = function () {
          this._setVirtual(!0);
        }, s._setVirtual = function (t) {
          if (!this._virtual) {
            if (null == this._scrollPane) throw new Error("Virtual list must be scrollable!");
            if (t) {
              if (2 == this._layout || 3 == this._layout) throw new Error("Loop list is not supported for FlowHorizontal or FlowVertical layout!");
              this._scrollPane.bouncebackEffect = !1;
            }
            if (this._virtual = !0, this._loop = t, this._virtualItems = [], this.removeChildrenToPool(), null == this._itemSize) {
              this._itemSize = new g();
              var e = this.getFromPool(null);
              if (null == e) throw new Error("Virtual List must have a default list item resource.");
              this._itemSize.x = e.width, this._itemSize.y = e.height, this.returnToPool(e);
            }
            0 == this._layout || 2 == this._layout ? (this._scrollPane.scrollStep = this._itemSize.y, this._loop && (this._scrollPane._loop = 2)) : (this._scrollPane.scrollStep = this._itemSize.x, this._loop && (this._scrollPane._loop = 1)), this.on("fui_scroll", this, this.__scrolled), this.setVirtualListChangedFlag(!0);
          }
        }, s.refreshVirtualList = function () {
          this.setVirtualListChangedFlag(!1);
        }, s.checkVirtualList = function () {
          0 != this._virtualListChanged && (this._refreshVirtualList(), i.timer.clear(this, this._refreshVirtualList));
        }, s.setVirtualListChangedFlag = function (t) {
          void 0 === t && (t = !1), t ? this._virtualListChanged = 2 : 0 == this._virtualListChanged && (this._virtualListChanged = 1), i.timer.callLater(this, this._refreshVirtualList);
        }, s._refreshVirtualList = function () {
          var t = 2 == this._virtualListChanged;
          this._virtualListChanged = 0, this._eventLocked = !0, t && (0 == this._layout || 1 == this._layout ? this._curLineItemCount = 1 : 2 == this._layout ? this._columnCount > 0 ? this._curLineItemCount = this._columnCount : (this._curLineItemCount = Math.floor((this._scrollPane.viewWidth + this._columnGap) / (this._itemSize.x + this._columnGap)), this._curLineItemCount <= 0 && (this._curLineItemCount = 1)) : 3 == this._layout ? this._lineCount > 0 ? this._curLineItemCount = this._lineCount : (this._curLineItemCount = Math.floor((this._scrollPane.viewHeight + this._lineGap) / (this._itemSize.y + this._lineGap)), this._curLineItemCount <= 0 && (this._curLineItemCount = 1)) : (this._columnCount > 0 ? this._curLineItemCount = this._columnCount : (this._curLineItemCount = Math.floor((this._scrollPane.viewWidth + this._columnGap) / (this._itemSize.x + this._columnGap)), this._curLineItemCount <= 0 && (this._curLineItemCount = 1)), this._lineCount > 0 ? this._curLineItemCount2 = this._lineCount : (this._curLineItemCount2 = Math.floor((this._scrollPane.viewHeight + this._lineGap) / (this._itemSize.y + this._lineGap)), this._curLineItemCount2 <= 0 && (this._curLineItemCount2 = 1))));
          var e = 0,
            i = 0;
          if (this._realNumItems > 0) {
            var n = 0,
              r = Math.ceil(this._realNumItems / this._curLineItemCount) * this._curLineItemCount,
              a = Math.min(this._curLineItemCount, this._realNumItems);
            if (0 == this._layout || 2 == this._layout) {
              for (n = 0; n < r; n += this._curLineItemCount) e += this._virtualItems[n].height + this._lineGap;
              if (e > 0 && (e -= this._lineGap), this._autoResizeItem) i = this._scrollPane.viewWidth;
              else {
                for (n = 0; n < a; n++) i += this._virtualItems[n].width + this._columnGap;
                i > 0 && (i -= this._columnGap);
              }
            } else if (1 == this._layout || 3 == this._layout) {
              for (n = 0; n < r; n += this._curLineItemCount) i += this._virtualItems[n].width + this._columnGap;
              if (i > 0 && (i -= this._columnGap), this._autoResizeItem) e = this._scrollPane.viewHeight;
              else {
                for (n = 0; n < a; n++) e += this._virtualItems[n].height + this._lineGap;
                e > 0 && (e -= this._lineGap);
              }
            } else {
              i = Math.ceil(r / (this._curLineItemCount * this._curLineItemCount2)) * this.viewWidth, e = this.viewHeight;
            }
          }
          this.handleAlign(i, e), this._scrollPane.setContentSize(i, e), this._eventLocked = !1, this.handleScroll(!0);
        }, s.__scrolled = function (t) {
          this.handleScroll(!1);
        }, s.getIndexOnPos1 = function (t) {
          if (this._realNumItems < this._curLineItemCount) return e.pos_param = 0, 0;
          var i = 0,
            n = NaN,
            r = NaN;
          if (this.numChildren > 0 && !t) {
            if ((n = this.getChildAt(0).y) > e.pos_param) {
              for (i = this._firstIndex - this._curLineItemCount; i >= 0; i -= this._curLineItemCount)
                if ((n -= this._virtualItems[i].height + this._lineGap) <= e.pos_param) return e.pos_param = n, i;
              return e.pos_param = 0, 0;
            }
            for (i = this._firstIndex; i < this._realNumItems; i += this._curLineItemCount) {
              if ((r = n + this._virtualItems[i].height + this._lineGap) > e.pos_param) return e.pos_param = n, i;
              n = r;
            }
            return e.pos_param = n, this._realNumItems - this._curLineItemCount;
          }
          for (n = 0, i = 0; i < this._realNumItems; i += this._curLineItemCount) {
            if ((r = n + this._virtualItems[i].height + this._lineGap) > e.pos_param) return e.pos_param = n, i;
            n = r;
          }
          return e.pos_param = n, this._realNumItems - this._curLineItemCount;
        }, s.getIndexOnPos2 = function (t) {
          if (this._realNumItems < this._curLineItemCount) return e.pos_param = 0, 0;
          var i = 0,
            n = NaN,
            r = NaN;
          if (this.numChildren > 0 && !t) {
            if ((n = this.getChildAt(0).x) > e.pos_param) {
              for (i = this._firstIndex - this._curLineItemCount; i >= 0; i -= this._curLineItemCount)
                if ((n -= this._virtualItems[i].width + this._columnGap) <= e.pos_param) return e.pos_param = n, i;
              return e.pos_param = 0, 0;
            }
            for (i = this._firstIndex; i < this._realNumItems; i += this._curLineItemCount) {
              if ((r = n + this._virtualItems[i].width + this._columnGap) > e.pos_param) return e.pos_param = n, i;
              n = r;
            }
            return e.pos_param = n, this._realNumItems - this._curLineItemCount;
          }
          for (n = 0, i = 0; i < this._realNumItems; i += this._curLineItemCount) {
            if ((r = n + this._virtualItems[i].width + this._columnGap) > e.pos_param) return e.pos_param = n, i;
            n = r;
          }
          return e.pos_param = n, this._realNumItems - this._curLineItemCount;
        }, s.getIndexOnPos3 = function (t) {
          if (this._realNumItems < this._curLineItemCount) return e.pos_param = 0, 0;
          var i = this.viewWidth,
            n = Math.floor(e.pos_param / i),
            r = n * (this._curLineItemCount * this._curLineItemCount2),
            a = n * i,
            s = 0,
            o = NaN;
          for (s = 0; s < this._curLineItemCount; s++) {
            if ((o = a + this._virtualItems[r + s].width + this._columnGap) > e.pos_param) return e.pos_param = a, r + s;
            a = o;
          }
          return e.pos_param = a, r + this._curLineItemCount - 1;
        }, s.handleScroll = function (t) {
          this._eventLocked || (this.enterCounter = 0, 0 == this._layout || 2 == this._layout ? (this.handleScroll1(t), this.handleArchOrder1()) : 1 == this._layout || 3 == this._layout ? (this.handleScroll2(t), this.handleArchOrder2()) : this.handleScroll3(t), this._boundsChanged = !1);
        }, s.handleScroll1 = function (t) {
          if (this.enterCounter++, this.enterCounter > 3) console.log("FairyGUI: list will never be filled as the item renderer function always returns a different size.");
          else {
            var e = this._scrollPane.scrollingPosY,
              i = e + this._scrollPane.viewHeight,
              n = i == this._scrollPane.contentHeight;
            fairygui.GList.pos_param = e;
            var r = this.getIndexOnPos1(t);
            if (e = fairygui.GList.pos_param, r != this._firstIndex || t) {
              var a = this._firstIndex;
              this._firstIndex = r;
              var s, o, h = r,
                l = a > r,
                u = this.numChildren,
                c = a + u - 1,
                _ = l ? c : a,
                d = 0,
                f = e,
                p = !1,
                m = 0,
                g = 0,
                v = this.defaultItem,
                y = 0,
                x = 0,
                T = (this._scrollPane.viewWidth - this._columnGap * (this._curLineItemCount - 1)) / this._curLineItemCount;
              for (this.itemInfoVer++; h < this._realNumItems && (n || f < i);) {
                if ((null == (s = this._virtualItems[h]).obj || t) && (null != this.itemProvider && (null == (v = this.itemProvider.runWith(h % this._numItems)) && (v = this._defaultItem), v = J.normalizeURL(v)), null != s.obj && s.obj.resourceURL != v && (s.obj instanceof fairygui.GButton && (s.selected = s.obj.selected), this.removeChildToPool(s.obj), s.obj = null)), null == s.obj) {
                  if (l) {
                    for (x = _; x >= a; x--)
                      if (null != (o = this._virtualItems[x]).obj && o.updateFlag != this.itemInfoVer && o.obj.resourceURL == v) {
                        o.obj instanceof fairygui.GButton && (o.selected = o.obj.selected), s.obj = o.obj, o.obj = null, x == _ && _--;
                        break;
                      }
                  } else
                    for (x = _; x <= c; x++)
                      if (null != (o = this._virtualItems[x]).obj && o.updateFlag != this.itemInfoVer && o.obj.resourceURL == v) {
                        o.obj instanceof fairygui.GButton && (o.selected = o.obj.selected), s.obj = o.obj, o.obj = null, x == _ && _++;
                        break;
                      }
                  null != s.obj ? this.setChildIndex(s.obj, l ? h - r : this.numChildren) : (s.obj = this._pool.getObject(v), l ? this.addChildAt(s.obj, h - r) : this.addChild(s.obj)), s.obj instanceof fairygui.GButton && (s.obj.selected = s.selected), p = !0;
                } else p = t;
                p && (this._autoResizeItem && (0 == this._layout || this._columnCount > 0) && s.obj.setSize(T, s.obj.height, !0), this.itemRenderer.runWith([h % this._numItems, s.obj]), h % this._curLineItemCount == 0 && (m += Math.ceil(s.obj.height) - s.height, h == r && a > r && (g = Math.ceil(s.obj.height) - s.height)), s.width = Math.ceil(s.obj.width), s.height = Math.ceil(s.obj.height)), s.updateFlag = this.itemInfoVer, s.obj.setXY(d, f), h == r && (i += s.height), d += s.width + this._columnGap, h % this._curLineItemCount == this._curLineItemCount - 1 && (d = 0, f += s.height + this._lineGap), h++;
              }
              for (y = 0; y < u; y++)(s = this._virtualItems[a + y]).updateFlag != this.itemInfoVer && null != s.obj && (s.obj instanceof fairygui.GButton && (s.selected = s.obj.selected), this.removeChildToPool(s.obj), s.obj = null);
              0 == m && 0 == g || this._scrollPane.changeContentSizeOnScrolling(0, m, 0, g), h > 0 && this.numChildren > 0 && this._container.y < 0 && this.getChildAt(0).y > -this._container.y && this.handleScroll1(!1);
            }
          }
        }, s.handleScroll2 = function (t) {
          if (this.enterCounter++, this.enterCounter > 3) console.log("FairyGUI: list will never be filled as the item renderer function always returns a different size.");
          else {
            var e = this._scrollPane.scrollingPosX,
              i = e + this._scrollPane.viewWidth,
              n = e == this._scrollPane.contentWidth;
            fairygui.GList.pos_param = e;
            var r = this.getIndexOnPos2(t);
            if (e = fairygui.GList.pos_param, r != this._firstIndex || t) {
              var a = this._firstIndex;
              this._firstIndex = r;
              var s, o, h = r,
                l = a > r,
                u = this.numChildren,
                c = a + u - 1,
                _ = l ? c : a,
                d = e,
                f = 0,
                p = !1,
                m = 0,
                g = 0,
                v = this.defaultItem,
                y = 0,
                x = 0,
                T = (this._scrollPane.viewHeight - this._lineGap * (this._curLineItemCount - 1)) / this._curLineItemCount;
              for (this.itemInfoVer++; h < this._realNumItems && (n || d < i);) {
                if ((null == (s = this._virtualItems[h]).obj || t) && (null != this.itemProvider && (null == (v = this.itemProvider.runWith(h % this._numItems)) && (v = this._defaultItem), v = J.normalizeURL(v)), null != s.obj && s.obj.resourceURL != v && (s.obj instanceof fairygui.GButton && (s.selected = s.obj.selected), this.removeChildToPool(s.obj), s.obj = null)), null == s.obj) {
                  if (l) {
                    for (x = _; x >= a; x--)
                      if (null != (o = this._virtualItems[x]).obj && o.updateFlag != this.itemInfoVer && o.obj.resourceURL == v) {
                        o.obj instanceof fairygui.GButton && (o.selected = o.obj.selected), s.obj = o.obj, o.obj = null, x == _ && _--;
                        break;
                      }
                  } else
                    for (x = _; x <= c; x++)
                      if (null != (o = this._virtualItems[x]).obj && o.updateFlag != this.itemInfoVer && o.obj.resourceURL == v) {
                        o.obj instanceof fairygui.GButton && (o.selected = o.obj.selected), s.obj = o.obj, o.obj = null, x == _ && _++;
                        break;
                      }
                  null != s.obj ? this.setChildIndex(s.obj, l ? h - r : this.numChildren) : (s.obj = this._pool.getObject(v), l ? this.addChildAt(s.obj, h - r) : this.addChild(s.obj)), s.obj instanceof fairygui.GButton && (s.obj.selected = s.selected), p = !0;
                } else p = t;
                p && (this._autoResizeItem && (1 == this._layout || this._lineCount > 0) && s.obj.setSize(s.obj.width, T, !0), this.itemRenderer.runWith([h % this._numItems, s.obj]), h % this._curLineItemCount == 0 && (m += Math.ceil(s.obj.width) - s.width, h == r && a > r && (g = Math.ceil(s.obj.width) - s.width)), s.width = Math.ceil(s.obj.width), s.height = Math.ceil(s.obj.height)), s.updateFlag = this.itemInfoVer, s.obj.setXY(d, f), h == r && (i += s.width), f += s.height + this._lineGap, h % this._curLineItemCount == this._curLineItemCount - 1 && (f = 0, d += s.width + this._columnGap), h++;
              }
              for (y = 0; y < u; y++)(s = this._virtualItems[a + y]).updateFlag != this.itemInfoVer && null != s.obj && (s.obj instanceof fairygui.GButton && (s.selected = s.obj.selected), this.removeChildToPool(s.obj), s.obj = null);
              0 == m && 0 == g || this._scrollPane.changeContentSizeOnScrolling(m, 0, g, 0), h > 0 && this.numChildren > 0 && this._container.x < 0 && this.getChildAt(0).x > -this._container.x && this.handleScroll2(!1);
            }
          }
        }, s.handleScroll3 = function (t) {
          var e = this._scrollPane.scrollingPosX;
          fairygui.GList.pos_param = e;
          var i = this.getIndexOnPos3(t);
          if (e = fairygui.GList.pos_param, i != this._firstIndex || t) {
            var n = this._firstIndex;
            this._firstIndex = i;
            var r, a, s = n,
              o = this._virtualItems.length,
              h = this._curLineItemCount * this._curLineItemCount2,
              l = i % this._curLineItemCount,
              u = this.viewWidth,
              c = Math.floor(i / h) * h,
              _ = c + 2 * h,
              d = !1,
              f = 0,
              p = 0,
              m = this._defaultItem,
              g = (this._scrollPane.viewWidth - this._columnGap * (this._curLineItemCount - 1)) / this._curLineItemCount,
              v = (this._scrollPane.viewHeight - this._lineGap * (this._curLineItemCount2 - 1)) / this._curLineItemCount2;
            for (this.itemInfoVer++, f = c; f < _; f++)
              if (!(f >= this._realNumItems)) {
                if (p = f % this._curLineItemCount, f - c < h) {
                  if (p < l) continue;
                } else if (p > l) continue;
                (r = this._virtualItems[f]).updateFlag = this.itemInfoVer;
              }
            var y = null,
              x = 0;
            for (f = c; f < _; f++)
              if (!(f >= this._realNumItems) && (r = this._virtualItems[f]).updateFlag == this.itemInfoVer) {
                if (null == r.obj) {
                  for (; s < o;) {
                    if (null != (a = this._virtualItems[s]).obj && a.updateFlag != this.itemInfoVer) {
                      a.obj instanceof fairygui.GButton && (a.selected = a.obj.selected), r.obj = a.obj, a.obj = null;
                      break;
                    }
                    s++;
                  } -
                  1 == x && (x = this.getChildIndex(y) + 1), null == r.obj ? (null != this.itemProvider && (null == (m = this.itemProvider.runWith(f % this._numItems)) && (m = this._defaultItem), m = J.normalizeURL(m)), r.obj = this._pool.getObject(m), this.addChildAt(r.obj, x)) : x = this.setChildIndexBefore(r.obj, x), x++, r.obj instanceof fairygui.GButton && (r.obj.selected = r.selected), d = !0;
                } else d = t, x = -1, y = r.obj;
                d && (this._autoResizeItem && (this._curLineItemCount == this._columnCount && this._curLineItemCount2 == this._lineCount ? r.obj.setSize(g, v, !0) : this._curLineItemCount == this._columnCount ? r.obj.setSize(g, r.obj.height, !0) : this._curLineItemCount2 == this._lineCount && r.obj.setSize(r.obj.width, v, !0)), this.itemRenderer.runWith([f % this._numItems, r.obj]), r.width = Math.ceil(r.obj.width), r.height = Math.ceil(r.obj.height));
              }
            var T = c / h * u,
              S = T,
              w = 0,
              E = 0;
            for (f = c; f < _; f++) f >= this._realNumItems || ((r = this._virtualItems[f]).updateFlag == this.itemInfoVer && r.obj.setXY(S, w), r.height > E && (E = r.height), f % this._curLineItemCount == this._curLineItemCount - 1 ? (S = T, w += E + this._lineGap, E = 0, f == c + h - 1 && (S = T += u, w = 0)) : S += r.width + this._columnGap);
            for (f = s; f < o; f++)(r = this._virtualItems[f]).updateFlag != this.itemInfoVer && null != r.obj && (r.obj instanceof fairygui.GButton && (r.selected = r.obj.selected), this.removeChildToPool(r.obj), r.obj = null);
          }
        }, s.handleArchOrder1 = function () {
          if (2 == this.childrenRenderOrder) {
            for (var t = this._scrollPane.posY + this.viewHeight / 2, e = Number.POSITIVE_INFINITY, i = 0, n = 0, r = this.numChildren, a = 0; a < r; a++) {
              var s = this.getChildAt(a);
              this.foldInvisibleItems && !s.visible || (i = Math.abs(t - s.y - s.height / 2)) < e && (e = i, n = a);
            }
            this.apexIndex = n;
          }
        }, s.handleArchOrder2 = function () {
          if (2 == this.childrenRenderOrder) {
            for (var t = this._scrollPane.posX + this.viewWidth / 2, e = Number.POSITIVE_INFINITY, i = 0, n = 0, r = this.numChildren, a = 0; a < r; a++) {
              var s = this.getChildAt(a);
              this.foldInvisibleItems && !s.visible || (i = Math.abs(t - s.x - s.width / 2)) < e && (e = i, n = a);
            }
            this.apexIndex = n;
          }
        }, s.handleAlign = function (t, e) {
          var i = 0,
            n = 0;
          e < this.viewHeight && ("middle" == this._verticalAlign ? n = Math.floor((this.viewHeight - e) / 2) : "bottom" == this._verticalAlign && (n = this.viewHeight - e)), t < this.viewWidth && ("center" == this._align ? i = Math.floor((this.viewWidth - t) / 2) : "right" == this._align && (i = this.viewWidth - t)), i == this._alignOffset.x && n == this._alignOffset.y || (this._alignOffset.setTo(i, n), null != this._scrollPane ? this._scrollPane.adjustMaskContainer() : this._container.pos(this._margin.left + this._alignOffset.x, this._margin.top + this._alignOffset.y));
        }, s.updateBounds = function () {
          if (!this._virtual) {
            var t, e = 0,
              i = 0,
              n = 0,
              r = 0,
              a = 0,
              s = 0,
              o = 0,
              h = 0,
              l = 0,
              u = 0,
              c = this._children.length,
              _ = this.viewWidth,
              d = this.viewHeight,
              f = 0,
              p = 0,
              m = NaN;
            if (0 == this._layout) {
              for (e = 0; e < c; e++) t = this.getChildAt(e), this.foldInvisibleItems && !t.visible || (0 != n && (n += this._lineGap), t.y = n, this._autoResizeItem && t.setSize(_, t.height, !0), n += Math.ceil(t.height), t.width > r && (r = t.width));
              s = Math.ceil(r), o = n;
            } else if (1 == this._layout) {
              for (e = 0; e < c; e++) t = this.getChildAt(e), this.foldInvisibleItems && !t.visible || (0 != i && (i += this._columnGap), t.x = i, this._autoResizeItem && t.setSize(t.width, d, !0), i += Math.ceil(t.width), t.height > a && (a = t.height));
              s = i, o = Math.ceil(a);
            } else if (2 == this._layout)
              if (this._autoResizeItem && this._columnCount > 0) {
                for (e = 0; e < c; e++)
                  if (t = this.getChildAt(e), (!this.foldInvisibleItems || t.visible) && (f += t.sourceWidth, ++h == this._columnCount || e == c - 1)) {
                    for (m = (_ - f - (h - 1) * this._columnGap) / f, i = 0, h = p; h <= e; h++) t = this.getChildAt(h), this.foldInvisibleItems && !t.visible || (t.setXY(i, n), h < e ? (t.setSize(t.sourceWidth + Math.round(t.sourceWidth * m), t.height, !0), i += Math.ceil(t.width) + this._columnGap) : t.setSize(_ - i, t.height, !0), t.height > a && (a = t.height));
                    n += Math.ceil(a) + this._lineGap, a = 0, h = 0, p = e + 1, f = 0;
                  }
                o = n + Math.ceil(a), s = _;
              } else {
                for (e = 0; e < c; e++) t = this.getChildAt(e), this.foldInvisibleItems && !t.visible || (0 != i && (i += this._columnGap), (0 != this._columnCount && h >= this._columnCount || 0 == this._columnCount && i + t.width > _ && 0 != a) && (i = 0, n += Math.ceil(a) + this._lineGap, a = 0, h = 0), t.setXY(i, n), (i += Math.ceil(t.width)) > r && (r = i), t.height > a && (a = t.height), h++);
                o = n + Math.ceil(a), s = Math.ceil(r);
              }
            else if (3 == this._layout)
              if (this._autoResizeItem && this._lineCount > 0) {
                for (e = 0; e < c; e++)
                  if (t = this.getChildAt(e), (!this.foldInvisibleItems || t.visible) && (f += t.sourceHeight, ++h == this._lineCount || e == c - 1)) {
                    for (m = (d - f - (h - 1) * this._lineGap) / f, n = 0, h = p; h <= e; h++) t = this.getChildAt(h), this.foldInvisibleItems && !t.visible || (t.setXY(i, n), h < e ? (t.setSize(t.width, t.sourceHeight + Math.round(t.sourceHeight * m), !0), n += Math.ceil(t.height) + this._lineGap) : t.setSize(t.width, d - n, !0), t.width > r && (r = t.width));
                    i += Math.ceil(r) + this._columnGap, r = 0, h = 0, p = e + 1, f = 0;
                  }
                s = i + Math.ceil(r), o = d;
              } else {
                for (e = 0; e < c; e++) t = this.getChildAt(e), this.foldInvisibleItems && !t.visible || (0 != n && (n += this._lineGap), (0 != this._lineCount && h >= this._lineCount || 0 == this._lineCount && n + t.height > d && 0 != r) && (n = 0, i += Math.ceil(r) + this._columnGap, r = 0, h = 0), t.setXY(i, n), (n += Math.ceil(t.height)) > a && (a = n), t.width > r && (r = t.width), h++);
                s = i + Math.ceil(r), o = Math.ceil(a);
              }
            else {
              var g = 0;
              if (this._autoResizeItem && this._lineCount > 0 && (g = Math.floor((d - (this._lineCount - 1) * this._lineGap) / this._lineCount)), this._autoResizeItem && this._columnCount > 0) {
                for (e = 0; e < c; e++)
                  if (t = this.getChildAt(e), (!this.foldInvisibleItems || t.visible) && (0 == h && (0 != this._lineCount && u >= this._lineCount || 0 == this._lineCount && n + t.height > d) && (l++, n = 0, u = 0), f += t.sourceWidth, ++h == this._columnCount || e == c - 1)) {
                    for (m = (_ - f - (h - 1) * this._columnGap) / f, i = 0, h = p; h <= e; h++) t = this.getChildAt(h), this.foldInvisibleItems && !t.visible || (t.setXY(l * _ + i, n), h < e ? (t.setSize(t.sourceWidth + Math.round(t.sourceWidth * m), this._lineCount > 0 ? g : t.height, !0), i += Math.ceil(t.width) + this._columnGap) : t.setSize(_ - i, this._lineCount > 0 ? g : t.height, !0), t.height > a && (a = t.height));
                    n += Math.ceil(a) + this._lineGap, a = 0, h = 0, p = e + 1, f = 0, u++;
                  }
              } else
                for (e = 0; e < c; e++) t = this.getChildAt(e), this.foldInvisibleItems && !t.visible || (0 != i && (i += this._columnGap), this._autoResizeItem && this._lineCount > 0 && t.setSize(t.width, g, !0), (0 != this._columnCount && h >= this._columnCount || 0 == this._columnCount && i + t.width > _ && 0 != a) && (i = 0, n += Math.ceil(a) + this._lineGap, a = 0, h = 0, u++, (0 != this._lineCount && u >= this._lineCount || 0 == this._lineCount && n + t.height > d && 0 != r) && (l++, n = 0, u = 0)), t.setXY(l * _ + i, n), (i += Math.ceil(t.width)) > r && (r = i), t.height > a && (a = t.height), h++);
              o = l > 0 ? d : n + Math.ceil(a), s = (l + 1) * _;
            }
            this.handleAlign(s, o), this.setBounds(0, 0, s, o);
          }
        }, s.setup_beforeAdd = function (t, e) {
          fairygui.GObject.prototype.setup_beforeAdd.call(this, t, e), t.seek(e, 5);
          var i, n = 0,
            r = 0,
            a = 0,
            s = 0,
            o = 0;
          this._layout = t.readByte(), this._selectionMode = t.readByte(), s = t.readByte(), this._align = 0 == s ? "left" : 1 == s ? "center" : "right", s = t.readByte(), this._verticalAlign = 0 == s ? "top" : 1 == s ? "middle" : "bottom", this._lineGap = t.getInt16(), this._columnGap = t.getInt16(), this._lineCount = t.getInt16(), this._columnCount = t.getInt16(), this._autoResizeItem = t.readBool(), this._childrenRenderOrder = t.readByte(), this._apexIndex = t.getInt16(), t.readBool() && (this._margin.top = t.getInt32(), this._margin.bottom = t.getInt32(), this._margin.left = t.getInt32(), this._margin.right = t.getInt32());
          var h = t.readByte();
          if (2 == h) {
            var l = t.pos;
            t.seek(e, 7), this.setupScroll(t), t.pos = l;
          } else this.setupOverflow(h);
          t.readBool() && t.skip(8), t.seek(e, 8), this._defaultItem = t.readS();
          var u = t.getInt16();
          for (n = 0; n < u; n++)
            if (o = t.getInt16(), o += t.pos, null != (i = t.readS()) || (i = this.defaultItem)) {
              var c = this.getFromPool(i);
              if (null != c && (this.addChild(c), null != (i = t.readS()) && (c.text = i), null != (i = t.readS()) && c instanceof fairygui.GButton && (c.selectedTitle = i), null != (i = t.readS()) && (c.icon = i), null != (i = t.readS()) && c instanceof fairygui.GButton && (c.selectedIcon = i), null != (i = t.readS()) && (c.name = i), c instanceof fairygui.GComponent))
                for (a = t.getInt16(), r = 0; r < a; r++) {
                  var _ = c.getController(t.readS());
                  i = t.readS(), null != _ && (_.selectedPageId = i);
                }
              t.pos = o;
            } else t.pos = o;
        }, s.setup_afterAdd = function (e, i) {
          t.prototype.setup_afterAdd.call(this, e, i), e.seek(i, 6);
          var n = e.getInt16(); - 1 != n && (this._selectionController = this.parent.getControllerAt(n));
        }, a(0, s, "layout", function () {
          return this._layout;
        }, function (t) {
          this._layout != t && (this._layout = t, this.setBoundsChangedFlag(), this._virtual && this.setVirtualListChangedFlag(!0));
        }), a(0, s, "align", function () {
          return this._align;
        }, function (t) {
          this._align != t && (this._align = t, this.setBoundsChangedFlag(), this._virtual && this.setVirtualListChangedFlag(!0));
        }), a(0, s, "lineCount", function () {
          return this._lineCount;
        }, function (t) {
          this._lineCount != t && (this._lineCount = t, 3 != this._layout && 4 != this._layout || (this.setBoundsChangedFlag(), this._virtual && this.setVirtualListChangedFlag(!0)));
        }), a(0, s, "columnCount", function () {
          return this._columnCount;
        }, function (t) {
          this._columnCount != t && (this._columnCount = t, 2 != this._layout && 4 != this._layout || (this.setBoundsChangedFlag(), this._virtual && this.setVirtualListChangedFlag(!0)));
        }), a(0, s, "lineGap", function () {
          return this._lineGap;
        }, function (t) {
          this._lineGap != t && (this._lineGap = t, this.setBoundsChangedFlag(), this._virtual && this.setVirtualListChangedFlag(!0));
        }), a(0, s, "columnGap", function () {
          return this._columnGap;
        }, function (t) {
          this._columnGap != t && (this._columnGap = t, this.setBoundsChangedFlag(), this._virtual && this.setVirtualListChangedFlag(!0));
        }), a(0, s, "verticalAlign", function () {
          return this._verticalAlign;
        }, function (t) {
          this._verticalAlign != t && (this._verticalAlign = t, this.setBoundsChangedFlag(), this._virtual && this.setVirtualListChangedFlag(!0));
        }), a(0, s, "virtualItemSize", function () {
          return this._itemSize;
        }, function (t) {
          this._virtual && (null == this._itemSize && (this._itemSize = new g()), this._itemSize.setTo(t.x, t.y), this.setVirtualListChangedFlag(!0));
        }), a(0, s, "defaultItem", function () {
          return this._defaultItem;
        }, function (t) {
          this._defaultItem = t;
        }), a(0, s, "autoResizeItem", function () {
          return this._autoResizeItem;
        }, function (t) {
          this._autoResizeItem != t && (this._autoResizeItem = t, this.setBoundsChangedFlag(), this._virtual && this.setVirtualListChangedFlag(!0));
        }), a(0, s, "selectionMode", function () {
          return this._selectionMode;
        }, function (t) {
          this._selectionMode = t;
        }), a(0, s, "selectionController", function () {
          return this._selectionController;
        }, function (t) {
          this._selectionController = t;
        }), a(0, s, "itemPool", function () {
          return this._pool;
        }), a(0, s, "selectedIndex", function () {
          var t = 0;
          if (this._virtual)
            for (t = 0; t < this._realNumItems; t++) {
              var e = this._virtualItems[t];
              if (e.obj instanceof fairygui.GButton && e.obj.selected || null == e.obj && e.selected) return this._loop ? t % this._numItems : t;
            } else {
              var i = this._children.length;
              for (t = 0; t < i; t++) {
                var n = this._children[t].asButton;
                if (null != n && n.selected) return t;
              }
            }
          return -1;
        }, function (t) {
          t >= 0 && t < this.numItems ? (0 != this._selectionMode && this.clearSelection(), this.addSelection(t)) : this.clearSelection();
        }), a(0, s, "numItems", function () {
          return this._virtual ? this._numItems : this._children.length;
        }, function (t) {
          var e = 0;
          if (this._virtual) {
            if (null == this.itemRenderer) throw new Error("Set itemRenderer first!");
            this._numItems = t, this._loop ? this._realNumItems = 6 * this._numItems : this._realNumItems = this._numItems;
            var r = this._virtualItems.length;
            if (this._realNumItems > r)
              for (e = r; e < this._realNumItems; e++) {
                var a = new n();
                a.width = this._itemSize.x, a.height = this._itemSize.y, this._virtualItems.push(a);
              } else
                for (e = this._realNumItems; e < r; e++) this._virtualItems[e].selected = !1;
            0 != this._virtualListChanged && i.timer.clear(this, this._refreshVirtualList), this._refreshVirtualList();
          } else {
            var s = this._children.length;
            if (t > s)
              for (e = s; e < t; e++) null == this.itemProvider ? this.addItemFromPool() : this.addItemFromPool(this.itemProvider.runWith(e));
            else this.removeChildrenToPool(t, s);
            if (null != this.itemRenderer)
              for (e = 0; e < t; e++) this.itemRenderer.runWith([e, this.getChildAt(e)]);
          }
        }), e.pos_param = NaN, e.__init$ = function () {
          n = function () {
            function t() {
              this.width = 0, this.height = 0, this.obj = null, this.updateFlag = 0, this.selected = !1;
            }
            return r(t, ""), t;
          }();
        }, e;
      }(ut),
      Dt = function (t) {
        function e() {
          this.div = null, this._ubbEnabled = !1, this._color = null, e.__super.call(this), this._text = "";
        }
        r(e, "fairygui.GRichTextField", lt);
        var i = e.prototype;
        return i.createDisplayObject = function () {
          this._displayObject = this.div = new _(), this._displayObject.mouseEnabled = !0, this._displayObject.$owner = this, this.font = Z.defaultFont;
        }, i.handleSizeChanged = function () {
          this.div.size(this.width, this.height);
        }, a(0, i, "bold", function () {
          return this.div.style.bold;
        }, function (t) {
          this.div.style.bold = t;
        }), a(0, i, "align", function () {
          return this.div.style.align;
        }, function (t) {
          this.div.style.align = t;
        }), a(0, i, "text", function () {
          return this._text;
        }, function (t) {
          this._text = t;
          var e = this._text;
          null != this._templateVars && (e = this.parseTemplate(e)), this._ubbEnabled ? this.div.innerHTML = et.parseUBB(e) : this.div.innerHTML = e;
        }), a(0, i, "color", function () {
          return this._color;
        }, function (t) {
          this._color != t && (this._color = t, this.div.color = t, this._gearColor.controller && this._gearColor.updateState());
        }), a(0, i, "font", function () {
          return this.div.style.fontFamily;
        }, function (t) {
          this.div.style.fontFamily = t;
        }), a(0, i, "leading", function () {
          return this.div.style.leading;
        }, function (t) {
          this.div.style.leading = t;
        }), a(0, i, "fontSize", function () {
          return this.div.style.fontSize;
        }, function (t) {
          this.div.style.fontSize = t;
        }), a(0, i, "valign", function () {
          return this.div.style.valign;
        }, function (t) {
          this.div.style.valign = t;
        }), a(0, i, "italic", function () {
          return this.div.style.italic;
        }, function (t) {
          this.div.style.italic = t;
        }), a(0, i, "stroke", function () {
          return this.div.style.stroke;
        }, function (t) {
          this.div.style.stroke = t;
        }), a(0, i, "strokeColor", function () {
          return this.div.style.strokeColor;
        }, function (t) {
          this.div.style.strokeColor = t, this.updateGear(4);
        }), a(0, i, "ubbEnabled", function () {
          return this._ubbEnabled;
        }, function (t) {
          this._ubbEnabled = t;
        }), e;
      }(),
      At = function (t) {
        function e() {
          this._max = 0, this._value = 0, this._titleType = 0, this._reverse = !1, this._titleObject = null, this._aniObject = null, this._barObjectH = null, this._barObjectV = null, this._barMaxWidth = 0, this._barMaxHeight = 0, this._barMaxWidthDelta = 0, this._barMaxHeightDelta = 0, this._barStartX = 0, this._barStartY = 0, this._tweening = !1, e.__super.call(this), this._titleType = 0, this._value = 50, this._max = 100;
        }
        r(e, "fairygui.GProgressBar", t);
        var i = e.prototype;
        return i.tweenValue = function (t, e) {
          var i = this;
          if (this._value != t) {
            this._tweening && (Y.kill(this, !1, this.update), this._tweening = !1);
            var n = this._value;
            return this._value = t, this._tweening = !0, Y.to(n, this._value, e).setTarget(this, this.update).setEase(0).onComplete(function () {
              i._tweening = !1;
            }, this);
          }
          return null;
        }, i.update = function (t) {
          var e = 0 != this._max ? Math.min(t / this._max, 1) : 0;
          if (this._titleObject) switch (this._titleType) {
            case 0:
              this._titleObject.text = Math.round(100 * e) + "%";
              break;
            case 1:
              this._titleObject.text = Math.round(t) + "/" + Math.round(this._max);
              break;
            case 2:
              this._titleObject.text = "" + Math.round(t);
              break;
            case 3:
              this._titleObject.text = "" + Math.round(this._max);
          }
          var i = this.width - this._barMaxWidthDelta,
            n = this.height - this._barMaxHeightDelta;
          this._reverse ? (this._barObjectH && (this._barObjectH.width = Math.round(i * e), this._barObjectH.x = this._barStartX + (i - this._barObjectH.width)), this._barObjectV && (this._barObjectV.height = Math.round(n * e), this._barObjectV.y = this._barStartY + (n - this._barObjectV.height))) : (this._barObjectH && (this._barObjectH.width = Math.round(i * e)), this._barObjectV && (this._barObjectV.height = Math.round(n * e))), this._aniObject instanceof fairygui.GMovieClip && (this._aniObject.frame = Math.round(100 * e));
        }, i.constructExtension = function (t) {
          t.seek(0, 6), this._titleType = t.readByte(), this._reverse = t.readBool(), this._titleObject = this.getChild("title"), this._barObjectH = this.getChild("bar"), this._barObjectV = this.getChild("bar_v"), this._aniObject = this.getChild("ani"), this._barObjectH && (this._barMaxWidth = this._barObjectH.width, this._barMaxWidthDelta = this.width - this._barMaxWidth, this._barStartX = this._barObjectH.x), this._barObjectV && (this._barMaxHeight = this._barObjectV.height, this._barMaxHeightDelta = this.height - this._barMaxHeight, this._barStartY = this._barObjectV.y);
        }, i.handleSizeChanged = function () {
          t.prototype.handleSizeChanged.call(this), this._barObjectH && (this._barMaxWidth = this.width - this._barMaxWidthDelta), this._barObjectV && (this._barMaxHeight = this.height - this._barMaxHeightDelta), this._underConstruct || this.update(this._value);
        }, i.setup_afterAdd = function (e, i) {
          t.prototype.setup_afterAdd.call(this, e, i), e.seek(i, 6) && e.readByte() == this.packageItem.objectType ? (this._value = e.getInt32(), this._max = e.getInt32(), this.update(this._value)) : this.update(this._value);
        }, i.dispose = function () {
          this._tweening && Y.kill(this), t.prototype.dispose.call(this);
        }, a(0, i, "max", function () {
          return this._max;
        }, function (t) {
          this._max != t && (this._max = t, this.update(this._value));
        }), a(0, i, "titleType", function () {
          return this._titleType;
        }, function (t) {
          this._titleType != t && (this._titleType = t, this.update(this._value));
        }), a(0, i, "value", function () {
          return this._value;
        }, function (t) {
          this._tweening && (Y.kill(this, !0, this.update), this._tweening = !1), this._value != t && (this._value = t, this.update(this._value));
        }), e;
      }(ut),
      Rt = function (t) {
        function e() {
          this.uiScale = 1, this._modalLayer = null, this._popupStack = null, this._justClosedPopups = null, this._modalWaitPane = null, this._focusedObject = null, this._tooltipWin = null, this._defaultTooltipWin = null, this._checkPopups = !1, e.__super.call(this), null == fairygui.GRoot._inst && (fairygui.GRoot._inst = this), this.opaque = !1, this._popupStack = [], this._justClosedPopups = [], this.displayObject.once("display", this, this.__addedToStage);
        }
        r(e, "fairygui.GRoot", ut);
        var n = e.prototype;
        return n.showWindow = function (t) {
          this.addChild(t), t.requestFocus(), t.x > this.width ? t.x = this.width - t.width : t.x + t.width < 0 && (t.x = 0), t.y > this.height ? t.y = this.height - t.height : t.y + t.height < 0 && (t.y = 0), this.adjustModalLayer();
        }, n.hideWindow = function (t) {
          t.hide();
        }, n.hideWindowImmediately = function (t) {
          t.parent == this && this.removeChild(t), this.adjustModalLayer();
        }, n.bringToFront = function (t) {
          var e = this.numChildren,
            i = NaN;
          for (i = null == this._modalLayer.parent || t.modal ? e - 1 : this.getChildIndex(this._modalLayer) - 1; i >= 0; i--) {
            var n = this.getChildAt(i);
            if (n == t) return;
            if (n instanceof fairygui.Window) break;
          }
          i >= 0 && this.setChildIndex(t, i);
        }, n.showModalWait = function (t) {
          null != Z.globalModalWaiting && (null == this._modalWaitPane && (this._modalWaitPane = J.createObjectFromURL(Z.globalModalWaiting)), this._modalWaitPane.setSize(this.width, this.height), this._modalWaitPane.addRelation(this, 24), this.addChild(this._modalWaitPane), this._modalWaitPane.text = t);
        }, n.closeModalWait = function () {
          null != this._modalWaitPane && null != this._modalWaitPane.parent && this.removeChild(this._modalWaitPane);
        }, n.closeAllExceptModals = function () {
          for (var t = this._children.slice(), e = t.length, i = 0; i < e; i++) {
            var n = t[i];
            n instanceof fairygui.Window && !n.modal && n.hide();
          }
        }, n.closeAllWindows = function () {
          for (var t = this._children.slice(), e = t.length, i = 0; i < e; i++) {
            var n = t[i];
            n instanceof fairygui.Window && n.hide();
          }
        }, n.getTopWindow = function () {
          for (var t = this.numChildren - 1; t >= 0; t--) {
            var e = this.getChildAt(t);
            if (e instanceof fairygui.Window) return e;
          }
          return null;
        }, n.showPopup = function (t, e, n) {
          if (this._popupStack.length > 0) {
            var r = this._popupStack.indexOf(t);
            if (-1 != r)
              for (var a = this._popupStack.length - 1; a >= r; a--) this.removeChild(this._popupStack.pop());
          }
          if (this._popupStack.push(t), null != e)
            for (var s = e; null != s;) {
              if (s.parent == this) {
                t.sortingOrder < s.sortingOrder && (t.sortingOrder = s.sortingOrder);
                break;
              }
              s = s.parent;
            }
          this.addChild(t), this.adjustModalLayer();
          var o, h = 0,
            l = 0;
          e ? (o = e.localToGlobal(), h = e.width, l = e.height) : o = this.globalToLocal(i.stage.mouseX, i.stage.mouseY);
          var u = NaN,
            c = NaN;
          (u = o.x) + t.width > this.width && (u = u + h - t.width), c = o.y + l, (null == n && c + t.height > this.height || 0 == n) && (c = o.y - t.height - 1) < 0 && (c = 0, u += h / 2), t.x = u, t.y = c;
        }, n.togglePopup = function (t, e, i) {
          -1 == this._justClosedPopups.indexOf(t) && this.showPopup(t, e, i);
        }, n.hidePopup = function (t) {
          if (null != t) {
            var e = this._popupStack.indexOf(t);
            if (-1 != e)
              for (var i = this._popupStack.length - 1; i >= e; i--) this.closePopup(this._popupStack.pop());
          } else {
            for (i = this._popupStack.length - 1; i >= 0; i--) this.closePopup(this._popupStack[i]);
            this._popupStack.length = 0;
          }
        }, n.closePopup = function (t) {
          null != t.parent && (t instanceof fairygui.Window ? t.hide() : this.removeChild(t));
        }, n.showTooltips = function (t) {
          if (null == this._defaultTooltipWin) {
            var e = Z.tooltipsWin;
            if (!e) return void m.print("UIConfig.tooltipsWin not defined");
            this._defaultTooltipWin = J.createObjectFromURL(e);
          }
          this._defaultTooltipWin.text = t, this.showTooltipsWin(this._defaultTooltipWin);
        }, n.showTooltipsWin = function (t, e) {
          this.hideTooltips(), this._tooltipWin = t;
          var n = 0,
            r = 0;
          null == e ? (n = i.stage.mouseX + 10, r = i.stage.mouseY + 20) : (n = e.x, r = e.y);
          var a = this.globalToLocal(n, r);
          n = a.x, r = a.y, n + this._tooltipWin.width > this.width && (n = n - this._tooltipWin.width - 1) < 0 && (n = 10), r + this._tooltipWin.height > this.height && (r = r - this._tooltipWin.height - 1, n - this._tooltipWin.width - 1 > 0 && (n = n - this._tooltipWin.width - 1), r < 0 && (r = 10)), this._tooltipWin.x = n, this._tooltipWin.y = r, this.addChild(this._tooltipWin);
        }, n.hideTooltips = function () {
          null != this._tooltipWin && (this._tooltipWin.parent && this.removeChild(this._tooltipWin), this._tooltipWin = null);
        }, n.getObjectUnderPoint = function (t, e) {
          return null;
        }, n.setFocus = function (t) {
          this._focusedObject != t && (this._focusedObject = t, this.displayObject.event("fui_focus_changed"));
        }, n.playOneShotSound = function (t, e) {
          void 0 === e && (e = 1), et.startsWith(t, "ui://") || x.playSound(t);
        }, n.adjustModalLayer = function () {
          var t = this.numChildren;
          null != this._modalWaitPane && null != this._modalWaitPane.parent && this.setChildIndex(this._modalWaitPane, t - 1);
          for (var e = t - 1; e >= 0; e--) {
            var i = this.getChildAt(e);
            if (i instanceof fairygui.Window && i.modal) return void(null == this._modalLayer.parent ? this.addChildAt(this._modalLayer, e) : this.setChildIndexBefore(this._modalLayer, e));
          }
          null != this._modalLayer.parent && this.removeChild(this._modalLayer);
        }, n.__addedToStage = function () {
          i.stage.on("mousedown", this, this.__stageMouseDown), i.stage.on("mouseup", this, this.__stageMouseUp), this._modalLayer = new gt(), this._modalLayer.setSize(this.width, this.height), this._modalLayer.drawRect(0, null, Z.modalLayerColor), this._modalLayer.addRelation(this, 24), this.displayObject.stage.on("resize", this, this.__winResize), this.__winResize();
        }, n.checkPopups = function (t) {
          if (!this._checkPopups && (this._checkPopups = !0, this._justClosedPopups.length = 0, this._popupStack.length > 0)) {
            for (var e = t; e != this.displayObject.stage && null != e;) {
              if (e.$owner) {
                var i = this._popupStack.indexOf(e.$owner);
                if (-1 != i) {
                  for (var n = this._popupStack.length - 1; n > i; n--) {
                    var r = this._popupStack.pop();
                    this.closePopup(r), this._justClosedPopups.push(r);
                  }
                  return;
                }
              }
              e = e.parent;
            }
            for (n = this._popupStack.length - 1; n >= 0; n--) r = this._popupStack[n], this.closePopup(r), this._justClosedPopups.push(r);
            this._popupStack.length = 0;
          }
        }, n.__stageMouseDown = function (t) {
          for (var e = t.target; e != this.displayObject.stage && null != e;) {
            if (e.$owner) {
              var i = e.$owner;
              if (i.touchable && i.focusable) {
                this.setFocus(i);
                break;
              }
            }
            e = e.parent;
          }
          null != this._tooltipWin && this.hideTooltips(), this.checkPopups(t.target);
        }, n.__stageMouseUp = function () {
          this._checkPopups = !1;
        }, n.__winResize = function () {
          this.setSize(i.stage.width, i.stage.height);
        }, a(0, n, "focus", function () {
          return this._focusedObject && !this._focusedObject.onStage && (this._focusedObject = null), this._focusedObject;
        }, function (t) {
          if (t && (!t.focusable || !t.onStage)) throw "invalid focus target";
          this.setFocus(t);
        }), a(0, n, "hasAnyPopup", function () {
          return 0 != this._popupStack.length;
        }), a(0, n, "modalLayer", function () {
          return this._modalLayer;
        }), a(0, n, "hasModalWindow", function () {
          return null != this._modalLayer.parent;
        }), a(0, n, "modalWaiting", function () {
          return this._modalWaitPane && this._modalWaitPane.inContainer;
        }), a(0, n, "volumeScale", function () {
          return x.soundVolume;
        }, function (t) {
          x.soundVolume = t;
        }), a(1, e, "inst", function () {
          return null == fairygui.GRoot._inst && new e(), fairygui.GRoot._inst;
        }, fairygui.GComponent._$SET_inst), e._inst = null, e;
      }(),
      Pt = function (t) {
        function e() {
          this.input = null, e.__super.call(this);
        }
        r(e, "fairygui.GTextInput", t);
        var i = e.prototype;
        return i.createDisplayObject = function () {
          this._displayObject = this.input = new p(), this._displayObject.mouseEnabled = !0, this._displayObject.$owner = this;
        }, i.handleSizeChanged = function () {
          this.input.size(this.width, this.height);
        }, i.setup_beforeAdd = function (e, i) {
          t.prototype.setup_beforeAdd.call(this, e, i), e.seek(i, 4);
          var n = e.readS();
          null != n && (this.promptText = n), null != (n = e.readS()) && (this.input.restrict = n);
          var r = e.getInt32();
          0 != r && (this.input.maxChars = r), 0 != (r = e.getInt32()) && (4 == r ? this.keyboardType = "number" : 3 == r && (this.keyboardType = "url")), e.readBool() && (this.password = !0);
        }, a(0, i, "bold", function () {
          return this.input.bold;
        }, function (t) {
          this.input.bold = t;
        }), a(0, i, "align", function () {
          return this.input.align;
        }, function (t) {
          this.input.align = t;
        }), a(0, i, "text", function () {
          return this.input.text;
        }, function (t) {
          this.input.text = t;
        }), a(0, i, "password", function () {
          return "password" == this.input.type;
        }, function (t) {
          this.input.type = t ? "password" : "text";
        }), a(0, i, "color", function () {
          return this.input.color;
        }, function (t) {
          this.input.color = t;
        }), a(0, i, "font", function () {
          return this.input.font;
        }, function (t) {
          this.input.font = t;
        }), a(0, i, "leading", function () {
          return this.input.leading;
        }, function (t) {
          this.input.leading = t;
        }), a(0, i, "maxLength", function () {
          return this.input.maxChars;
        }, function (t) {
          this.input.maxChars = t;
        }), a(0, i, "fontSize", function () {
          return this.input.fontSize;
        }, function (t) {
          this.input.fontSize = t;
        }), a(0, i, "valign", function () {
          return this.input.valign;
        }, function (t) {
          this.input.valign = t;
        }), a(0, i, "italic", function () {
          return this.input.italic;
        }, function (t) {
          this.input.italic = t;
        }), a(0, i, "singleLine", function () {
          return !this.input.multiline;
        }, function (t) {
          this.input.multiline = !t;
        }), a(0, i, "stroke", function () {
          return this.input.stroke;
        }, function (t) {
          this.input.stroke = t;
        }), a(0, i, "strokeColor", function () {
          return this.input.strokeColor;
        }, function (t) {
          this.input.strokeColor = t, this.updateGear(4);
        }), a(0, i, "keyboardType", function () {
          return this.input.type;
        }, function (t) {
          this.input.type = t;
        }), a(0, i, "editable", function () {
          return this.input.editable;
        }, function (t) {
          this.input.editable = t;
        }), a(0, i, "promptText", function () {
          return this.input.prompt;
        }, function (t) {
          this.input.prompt = t;
        }), a(0, i, "restrict", function () {
          return this.input.restrict;
        }, function (t) {
          this.input.restrict = t;
        }), a(0, i, "textWidth", function () {
          return this.input.textWidth;
        }), e;
      }(lt),
      Lt = function (t) {
        function e() {
          this._grip = null, this._arrowButton1 = null, this._arrowButton2 = null, this._bar = null, this._target = null, this._vertical = !1, this._scrollPerc = 0, this._fixedGripSize = !1, this._dragOffset = null, e.__super.call(this), this._dragOffset = new laya.maths.Point(), this._scrollPerc = 0;
        }
        r(e, "fairygui.GScrollBar", ut);
        var s = e.prototype;
        return s.setScrollPane = function (t, e) {
          this._target = t, this._vertical = e;
        }, s.constructExtension = function (t) {
          t.seek(0, 6), this._fixedGripSize = t.readBool(), this._grip = this.getChild("grip"), this._grip ? (this._bar = this.getChild("bar"), this._bar ? (this._arrowButton1 = this.getChild("arrow1"), this._arrowButton2 = this.getChild("arrow2"), this._grip.on("mousedown", this, this.__gripMouseDown), this._arrowButton1 && this._arrowButton1.on("mousedown", this, this.__arrowButton1Click), this._arrowButton2 && this._arrowButton2.on("mousedown", this, this.__arrowButton2Click), this.on("mousedown", this, this.__barMouseDown)) : m.print("需要定义bar")) : m.print("需要定义grip");
        }, s.__gripMouseDown = function (t) {
          this._bar && (t.stopPropagation(), i.stage.on("mousemove", this, this.__gripMouseMove), i.stage.on("mouseup", this, this.__gripMouseUp), this.globalToLocal(i.stage.mouseX, i.stage.mouseY, this._dragOffset), this._dragOffset.x -= this._grip.x, this._dragOffset.y -= this._grip.y);
        }, s.__gripMouseMove = function () {
          var t = this.globalToLocal(i.stage.mouseX, i.stage.mouseY, fairygui.GScrollBar.sScrollbarHelperPoint);
          if (this._vertical) {
            var e = t.y - this._dragOffset.y;
            this._target.setPercY((e - this._bar.y) / (this._bar.height - this._grip.height), !1);
          } else {
            var n = t.x - this._dragOffset.x;
            this._target.setPercX((n - this._bar.x) / (this._bar.width - this._grip.width), !1);
          }
        }, s.__gripMouseUp = function (t) {
          this._bar && (i.stage.off("mousemove", this, this.__gripMouseMove), i.stage.off("mouseup", this, this.__gripMouseUp));
        }, s.__arrowButton1Click = function (t) {
          t.stopPropagation(), this._vertical ? this._target.scrollUp() : this._target.scrollLeft();
        }, s.__arrowButton2Click = function (t) {
          t.stopPropagation(), this._vertical ? this._target.scrollDown() : this._target.scrollRight();
        }, s.__barMouseDown = function (t) {
          var e = this._grip.globalToLocal(i.stage.mouseX, i.stage.mouseY, fairygui.GScrollBar.sScrollbarHelperPoint);
          this._vertical ? e.y < 0 ? this._target.scrollUp(4) : this._target.scrollDown(4) : e.x < 0 ? this._target.scrollLeft(4) : this._target.scrollRight(4);
        }, a(0, s, "displayPerc", null, function (t) {
          this._vertical ? (this._fixedGripSize || (this._grip.height = t * this._bar.height), this._grip.y = this._bar.y + (this._bar.height - this._grip.height) * this._scrollPerc) : (this._fixedGripSize || (this._grip.width = t * this._bar.width), this._grip.x = this._bar.x + (this._bar.width - this._grip.width) * this._scrollPerc);
        }), a(0, s, "scrollPerc", null, function (t) {
          this._scrollPerc = t, this._vertical ? this._grip.y = this._bar.y + (this._bar.height - this._grip.height) * this._scrollPerc : this._grip.x = this._bar.x + (this._bar.width - this._grip.width) * this._scrollPerc;
        }), a(0, s, "minSize", function () {
          return this._vertical ? (null != this._arrowButton1 ? this._arrowButton1.height : 0) + (null != this._arrowButton2 ? this._arrowButton2.height : 0) : (null != this._arrowButton1 ? this._arrowButton1.width : 0) + (null != this._arrowButton2 ? this._arrowButton2.width : 0);
        }), n(e, ["sScrollbarHelperPoint", function () {
          return this.sScrollbarHelperPoint = new g();
        }]), e;
      }(),
      Ot = function (t) {
        function e() {
          this._max = 0, this._value = 0, this._titleType = 0, this._reverse = !1, this._titleObject = null, this._barObjectH = null, this._barObjectV = null, this._barMaxWidth = 0, this._barMaxHeight = 0, this._barMaxWidthDelta = 0, this._barMaxHeightDelta = 0, this._gripObject = null, this._clickPos = null, this._clickPercent = 0, this._barStartX = 0, this._barStartY = 0, this.changeOnClick = !0, this.canDrag = !0, e.__super.call(this), this._titleType = 0, this._value = 50, this._max = 100, this._clickPos = new laya.maths.Point();
        }
        r(e, "fairygui.GSlider", t);
        var s = e.prototype;
        return s.update = function () {
          var t = Math.min(this._value / this._max, 1);
          this.updateWidthPercent(t);
        }, s.updateWidthPercent = function (t) {
          if (this._titleObject) switch (this._titleType) {
            case 0:
              this._titleObject.text = Math.round(100 * t) + "%";
              break;
            case 1:
              this._titleObject.text = this._value + "/" + this._max;
              break;
            case 2:
              this._titleObject.text = "" + this._value;
              break;
            case 3:
              this._titleObject.text = "" + this._max;
          }
          var e = this.width - this._barMaxWidthDelta,
            i = this.height - this._barMaxHeightDelta;
          this._reverse ? (this._barObjectH && (this._barObjectH.width = Math.round(e * t), this._barObjectH.x = this._barStartX + (e - this._barObjectH.width)), this._barObjectV && (this._barObjectV.height = Math.round(i * t), this._barObjectV.y = this._barStartY + (i - this._barObjectV.height))) : (this._barObjectH && (this._barObjectH.width = Math.round(e * t)), this._barObjectV && (this._barObjectV.height = Math.round(i * t)));
        }, s.constructExtension = function (t) {
          t.seek(0, 6), this._titleType = t.readByte(), this._reverse = t.readBool(), this._titleObject = this.getChild("title"), this._barObjectH = this.getChild("bar"), this._barObjectV = this.getChild("bar_v"), this._gripObject = this.getChild("grip"), this._barObjectH && (this._barMaxWidth = this._barObjectH.width, this._barMaxWidthDelta = this.width - this._barMaxWidth, this._barStartX = this._barObjectH.x), this._barObjectV && (this._barMaxHeight = this._barObjectV.height, this._barMaxHeightDelta = this.height - this._barMaxHeight, this._barStartY = this._barObjectV.y), this._gripObject && this._gripObject.on("mousedown", this, this.__gripMouseDown), this.displayObject.on("mousedown", this, this.__barMouseDown);
        }, s.handleSizeChanged = function () {
          t.prototype.handleSizeChanged.call(this), this._barObjectH && (this._barMaxWidth = this.width - this._barMaxWidthDelta), this._barObjectV && (this._barMaxHeight = this.height - this._barMaxHeightDelta), this._underConstruct || this.update();
        }, s.setup_afterAdd = function (e, i) {
          t.prototype.setup_afterAdd.call(this, e, i), e.seek(i, 6) && e.readByte() == this.packageItem.objectType ? (this._value = e.getInt32(), this._max = e.getInt32(), this.update()) : this.update();
        }, s.__gripMouseDown = function (t) {
          this.canDrag = !0, t.stopPropagation(), this._clickPos = this.globalToLocal(i.stage.mouseX, i.stage.mouseY), this._clickPercent = this._value / this._max, i.stage.on("mousemove", this, this.__gripMouseMove), i.stage.on("mouseup", this, this.__gripMouseUp);
        }, s.__gripMouseMove = function (t) {
          if (this.canDrag) {
            var e = this.globalToLocal(i.stage.mouseX, i.stage.mouseY, fairygui.GSlider.sSilderHelperPoint),
              n = e.x - this._clickPos.x,
              r = e.y - this._clickPos.y;
            this._reverse && (n = -n, r = -r);
            var a = NaN;
            (a = this._barObjectH ? this._clickPercent + n / this._barMaxWidth : this._clickPercent + r / this._barMaxHeight) > 1 ? a = 1 : a < 0 && (a = 0);
            var s = Math.round(this._max * a);
            s != this._value && (this._value = s, P.dispatch("fui_state_changed", this.displayObject, t)), this.updateWidthPercent(a);
          }
        }, s.__gripMouseUp = function (t) {
          i.stage.off("mousemove", this, this.__gripMouseMove), i.stage.off("mouseup", this, this.__gripMouseUp);
        }, s.__barMouseDown = function (t) {
          if (this.changeOnClick) {
            var e = this._gripObject.globalToLocal(t.stageX, t.stageY, fairygui.GSlider.sSilderHelperPoint),
              i = this._value / this._max,
              n = NaN;
            this._barObjectH && (n = (e.x - this._gripObject.width / 2) / this._barMaxWidth), this._barObjectV && (n = (e.y - this._gripObject.height / 2) / this._barMaxHeight), this._reverse ? i -= n : i += n, i > 1 ? i = 1 : i < 0 && (i = 0);
            var r = Math.round(this._max * i);
            r != this._value && (this._value = r, P.dispatch("fui_state_changed", this.displayObject, t)), this.updateWidthPercent(i);
          }
        }, a(0, s, "max", function () {
          return this._max;
        }, function (t) {
          this._max != t && (this._max = t, this.update());
        }), a(0, s, "titleType", function () {
          return this._titleType;
        }, function (t) {
          this._titleType = t;
        }), a(0, s, "value", function () {
          return this._value;
        }, function (t) {
          this._value != t && (this._value = t, this.update());
        }), n(e, ["sSilderHelperPoint", function () {
          return this.sSilderHelperPoint = new g();
        }]), e;
      }(ut),
      Nt = (function (t) {
        function e() {
          this._contentPane = null, this._modalWaitPane = null, this._closeButton = null, this._dragArea = null, this._contentArea = null, this._frame = null, this._modal = !1, this._uiSources = null, this._inited = !1, this._loading = !1, this._requestingCmd = 0, this.bringToFontOnClick = !1, e.__super.call(this), this.focusable = !0, this._uiSources = [], this.bringToFontOnClick = Z.bringWindowToFrontOnClick, this.displayObject.on("display", this, this.__onShown), this.displayObject.on("undisplay", this, this.__onHidden), this.displayObject.on("mousedown", this, this.__mouseDown);
        }
        r(e, "fairygui.Window", t, "Window$2");
        var i = e.prototype;
        i.addUISource = function (t) {
          this._uiSources.push(t);
        }, i.show = function () {
          Rt.inst.showWindow(this);
        }, i.showOn = function (t) {
          t.showWindow(this);
        }, i.hide = function () {
          this.isShowing && this.doHideAnimation();
        }, i.hideImmediately = function () {
          var t = this.parent instanceof fairygui.GRoot ? this.parent : null;
          t || (t = Rt.inst), t.hideWindowImmediately(this);
        }, i.centerOn = function (t, e) {
          void 0 === e && (e = !1), this.setXY(Math.round((t.width - this.width) / 2), Math.round((t.height - this.height) / 2)), e && (this.addRelation(t, 3), this.addRelation(t, 10));
        }, i.toggleStatus = function () {
          this.isTop ? this.hide() : this.show();
        }, i.bringToFront = function () {
          this.root.bringToFront(this);
        }, i.showModalWait = function (t) {
          void 0 === t && (t = 0), 0 != t && (this._requestingCmd = t), Z.windowModalWaiting && (this._modalWaitPane || (this._modalWaitPane = J.createObjectFromURL(Z.windowModalWaiting)), this.layoutModalWaitPane(), this.addChild(this._modalWaitPane));
        }, i.layoutModalWaitPane = function () {
          if (null != this._contentArea) {
            var t = this._frame.localToGlobal();
            t = this.globalToLocal(t.x, t.y, t), this._modalWaitPane.setXY(t.x + this._contentArea.x, t.y + this._contentArea.y), this._modalWaitPane.setSize(this._contentArea.width, this._contentArea.height);
          } else this._modalWaitPane.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height);
        }, i.closeModalWait = function (t) {
          return void 0 === t && (t = 0), (0 == t || this._requestingCmd == t) && (this._requestingCmd = 0, this._modalWaitPane && null != this._modalWaitPane.parent && this.removeChild(this._modalWaitPane), !0);
        }, i.init = function () {
          if (!this._inited && !this._loading)
            if (this._uiSources.length > 0) {
              this._loading = !1;
              for (var t = this._uiSources.length, e = 0; e < t; e++) {
                var i = this._uiSources[e];
                i.loaded || (i.load(this.__uiLoadComplete, this), this._loading = !0);
              }
              this._loading || this._init();
            } else this._init();
        }, i.onInit = function () {}, i.onShown = function () {}, i.onHide = function () {}, i.doShowAnimation = function () {
          this.onShown();
        }, i.doHideAnimation = function () {
          this.hideImmediately();
        }, i.__uiLoadComplete = function () {
          for (var t = this._uiSources.length, e = 0; e < t; e++) {
            if (!this._uiSources[e].loaded) return;
          }
          this._loading = !1, this._init();
        }, i._init = function () {
          this._inited = !0, this.onInit(), this.isShowing && this.doShowAnimation();
        }, i.dispose = function () {
          null != this.parent && this.hideImmediately(), t.prototype.dispose.call(this);
        }, i.closeEventHandler = function () {
          this.hide();
        }, i.__onShown = function () {
          this._inited ? this.doShowAnimation() : this.init();
        }, i.__onHidden = function () {
          this.closeModalWait(), this.onHide();
        }, i.__mouseDown = function () {
          this.isShowing && this.bringToFontOnClick && this.bringToFront();
        }, i.__dragStart = function (t) {
          L.cast(t.currentTarget).stopDrag(), this.startDrag();
        }, a(0, i, "contentPane", function () {
          return this._contentPane;
        }, function (t) {
          this._contentPane != t && (null != this._contentPane && this.removeChild(this._contentPane), this._contentPane = t, null != this._contentPane && (this.addChild(this._contentPane), this.setSize(this._contentPane.width, this._contentPane.height), this._contentPane.addRelation(this, 24), this._frame = this._contentPane.getChild("frame"), null != this._frame && (this.closeButton = this._frame.getChild("closeButton"), this.dragArea = this._frame.getChild("dragArea"), this.contentArea = this._frame.getChild("contentArea"))));
        }), a(0, i, "isShowing", function () {
          return null != this.parent;
        }), a(0, i, "isTop", function () {
          return null != this.parent && this.parent.getChildIndex(this) == this.parent.numChildren - 1;
        }), a(0, i, "modal", function () {
          return this._modal;
        }, function (t) {
          this._modal = t;
        }), a(0, i, "dragArea", function () {
          return this._dragArea;
        }, function (t) {
          this._dragArea != t && (null != this._dragArea && (this._dragArea.draggable = !1, this._dragArea.off("fui_drag_start", this, this.__dragStart)), this._dragArea = t, null != this._dragArea && (this._dragArea instanceof fairygui.GGraph && this._dragArea.asGraph.drawRect(0, null, null), this._dragArea.draggable = !0, this._dragArea.on("fui_drag_start", this, this.__dragStart)));
        }), a(0, i, "frame", function () {
          return this._frame;
        }), a(0, i, "closeButton", function () {
          return this._closeButton;
        }, function (t) {
          null != this._closeButton && this._closeButton.offClick(this, this.closeEventHandler), this._closeButton = t, null != this._closeButton && this._closeButton.onClick(this, this.closeEventHandler);
        }), a(0, i, "contentArea", function () {
          return this._contentArea;
        }, function (t) {
          this._contentArea = t;
        }), a(0, i, "modalWaiting", function () {
          return this._modalWaitPane && null != this._modalWaitPane.parent;
        });
      }(ut), function (t) {
        function e() {
          this._tex = null, this._scaleByTile = !1, this._scale9Grid = null, this._tileGridIndice = 0, this._textureScaleX = 1, this._textureScaleY = 1, this._needRebuild = !1, e.__super.call(this), this.mouseEnabled = !1;
        }
        r(e, "fairygui.display.Image", T, "Image$1");
        var n = e.prototype;
        return n.scaleTexture = function (t, e) {
          this._textureScaleX == t && this._textureScaleY == e || (this._textureScaleX = t, this._textureScaleY = e, this._tex && this.size(this._tex.width * t, this._tex.height * e), this.markChanged());
        }, n.markChanged = function () {
          this._needRebuild || (this._needRebuild = !0, i.timer.callLater(this, this.rebuild));
        }, n.rebuild = function () {
          this._needRebuild = !1;
          var t = this.width,
            e = this.height,
            i = this.graphics;
          if (null != this._tex && 0 != t && 0 != e)
            if (this._scaleByTile) i.clear(), i.fillTexture(this._tex, 0, 0, t, e);
            else if (null != this._scale9Grid) {
            i.clear();
            var n = this._tex.width,
              r = this._tex.height,
              a = this._scale9Grid.x,
              s = Math.max(n - this._scale9Grid.right, 0),
              o = this._scale9Grid.y,
              h = Math.max(r - this._scale9Grid.bottom, 0),
              l = NaN;
            e >= r - this._scale9Grid.height ? (o = this._scale9Grid.y, h = r - this._scale9Grid.bottom) : (l = e * (l = this._scale9Grid.y / (r - this._scale9Grid.bottom)) / (1 + l), o = Math.round(l), h = e - l), t >= n - this._scale9Grid.width ? (a = this._scale9Grid.x, s = n - this._scale9Grid.right) : (l = t * (l = this._scale9Grid.x / (n - this._scale9Grid.right)) / (1 + l), a = Math.round(l), s = t - l);
            var u = Math.max(t - a - s, 0),
              c = Math.max(e - o - h, 0);
            a && o && i.drawTexture(fairygui.display.Image.getTexture(this._tex, 0, 0, a, o), 0, 0, a, o), s && o && i.drawTexture(fairygui.display.Image.getTexture(this._tex, n - s, 0, s, o), t - s, 0, s, o), a && h && i.drawTexture(fairygui.display.Image.getTexture(this._tex, 0, r - h, a, h), 0, e - h, a, h), s && h && i.drawTexture(fairygui.display.Image.getTexture(this._tex, n - s, r - h, s, h), t - s, e - h, s, h), u && o && this.drawTexture(0, fairygui.display.Image.getTexture(this._tex, a, 0, n - a - s, o), a, 0, u, o), u && h && this.drawTexture(1, fairygui.display.Image.getTexture(this._tex, a, r - h, n - a - s, h), a, e - h, u, h), c && a && this.drawTexture(2, fairygui.display.Image.getTexture(this._tex, 0, o, a, r - o - h), 0, o, a, c), c && s && this.drawTexture(3, fairygui.display.Image.getTexture(this._tex, n - s, o, s, r - o - h), t - s, o, s, c), u && c && this.drawTexture(4, fairygui.display.Image.getTexture(this._tex, a, o, n - a - s, r - o - h), a, o, u, c);
          } else i.cleanByTexture(this._tex, 0, 0, t, e);
          else i.clear();
        }, n.drawTexture = function (t, e, i, n, r, a) {
          void 0 === r && (r = 0), void 0 === a && (a = 0), -1 == t || 0 == (this._tileGridIndice & 1 << t) ? this.graphics.drawTexture(e, i, n, r, a) : this.graphics.fillTexture(e, i, n, r, a);
        }, a(0, n, "tex", function () {
          return this._tex;
        }, function (t) {
          this._tex != t && (this._tex = t, this._tex ? this.size(this._tex.width * this._textureScaleX, this._tex.height * this._textureScaleY) : this.size(0, 0), this.markChanged());
        }), a(0, n, "scale9Grid", function () {
          return this._scale9Grid;
        }, function (t) {
          this._scale9Grid = t, this.markChanged();
        }), a(0, n, "scaleByTile", function () {
          return this._scaleByTile;
        }, function (t) {
          this._scaleByTile != t && (this._scaleByTile = t, this.markChanged());
        }), a(0, n, "tileGridIndice", function () {
          return this._tileGridIndice;
        }, function (t) {
          this._tileGridIndice != t && (this._tileGridIndice = t, this.markChanged());
        }), e.getTexture = function (t, e, i, n, r) {
          n <= 0 && (n = 1), r <= 0 && (r = 1), t.$_GID || (t.$_GID = E.getGID());
          var a = t.$_GID + "." + e + "." + i + "." + n + "." + r,
            s = b.I.get(a);
          return s && s.source || (s = w.createFromTexture(t, e, i, n, r), b.I.set(a, s)), s;
        }, e;
      }()),
      Vt = function (t) {
        function e() {
          this.interval = 0, this.swing = !1, this.repeatDelay = 0, this.timeScale = 1, this._$3__texture = null, this._needRebuild = !1, this._playing = !0, this._frameCount = 0, this._frames = null, this._frame = 0, this._boundsRect = null, this._start = 0, this._end = 0, this._times = 0, this._endAt = 0, this._status = 0, this._endHandler = null, this._frameElapsed = 0, this._reversed = !1, this._repeatedCount = 0, e.__super.call(this), this.mouseEnabled = !1, this.setPlaySettings(), this.on("display", this, this.__addToStage), this.on("undisplay", this, this.__removeFromStage);
        }
        r(e, "fairygui.display.MovieClip", T, "MovieClip$1");
        var n = e.prototype;
        return n.rewind = function () {
          this._frame = 0, this._frameElapsed = 0, this._reversed = !1, this._repeatedCount = 0, this.drawFrame();
        }, n.syncStatus = function (t) {
          this._frame = t._frame, this._frameElapsed = t._frameElapsed, this._reversed = t._reversed, this._repeatedCount = t._repeatedCount, this.drawFrame();
        }, n.advance = function (t) {
          for (var e = this._frame, i = this._reversed, n = t;;) {
            var r = this.interval + this._frames[this._frame].addDelay;
            if (0 == this._frame && this._repeatedCount > 0 && (r += this.repeatDelay), t < r) {
              this._frameElapsed = 0;
              break;
            }
            if (t -= r, this.swing ? this._reversed ? (this._frame--, this._frame <= 0 && (this._frame = 0, this._repeatedCount++, this._reversed = !this._reversed)) : (this._frame++, this._frame > this._frameCount - 1 && (this._frame = Math.max(0, this._frameCount - 2), this._repeatedCount++, this._reversed = !this._reversed)) : (this._frame++, this._frame > this._frameCount - 1 && (this._frame = 0, this._repeatedCount++)), this._frame == e && this._reversed == i) {
              var a = n - t;
              t -= Math.floor(t / a) * a;
            }
          }
          this.drawFrame();
        }, n.setPlaySettings = function (t, e, i, n, r) {
          void 0 === t && (t = 0), void 0 === e && (e = -1), void 0 === i && (i = 0), void 0 === n && (n = -1), this._start = t, this._end = e, (-1 == this._end || this._end > this._frameCount - 1) && (this._end = this._frameCount - 1), this._times = i, this._endAt = n, -1 == this._endAt && (this._endAt = this._end), this._status = 0, this._endHandler = r, this.frame = t;
        }, n.update = function (t) {
          if (void 0 === t && (t = !0), (this._playing || !t) && 0 != this._frameCount && 3 != this._status) {
            var e = i.timer.delta;
            e > 100 && (e = 100), 1 != this.timeScale && (e *= this.timeScale), this._frameElapsed += e;
            var n = this.interval + this._frames[this._frame].addDelay;
            if (0 == this._frame && this._repeatedCount > 0 && (n += this.repeatDelay), !(this._frameElapsed < n)) {
              if (this._frameElapsed -= n, this._frameElapsed > this.interval && (this._frameElapsed = this.interval), this.swing ? this._reversed ? (this._frame--, this._frame <= 0 && (this._frame = 0, this._repeatedCount++, this._reversed = !this._reversed)) : (this._frame++, this._frame > this._frameCount - 1 && (this._frame = Math.max(0, this._frameCount - 2), this._repeatedCount++, this._reversed = !this._reversed)) : (this._frame++, this._frame > this._frameCount - 1 && (this._frame = 0, this._repeatedCount++)), 1 == this._status) this._frame = this._start, this._frameElapsed = 0, this._status = 0;
              else if (2 == this._status) {
                if (this._frame = this._endAt, this._frameElapsed = 0, this._status = 3, null != this._endHandler) {
                  var r = this._endHandler;
                  this._endHandler = null, r.run();
                }
              } else this._frame == this._end && (this._times > 0 ? (this._times--, 0 == this._times ? this._status = 2 : this._status = 1) : 0 != this._start && (this._status = 1));
              this.drawFrame();
            }
          }
        }, n.drawFrame = function () {
          if (this._frameCount > 0 && this._frame < this._frames.length) {
            var t = this._frames[this._frame];
            this.graphics.cleanByTexture(t.texture, t.rect.x, t.rect.y);
          } else this.graphics.clear();
        }, n.checkTimer = function () {
          this._playing && this._frameCount > 0 && null != this.stage ? i.timer.frameLoop(1, this, this.update) : i.timer.clear(this, this.update);
        }, n.__addToStage = function () {
          this._playing && this._frameCount > 0 && i.timer.frameLoop(1, this, this.update);
        }, n.__removeFromStage = function () {
          i.timer.clear(this, this.update);
        }, a(0, n, "frames", function () {
          return this._frames;
        }, function (t) {
          this._frames = t, null != this._frames ? this._frameCount = this._frames.length : this._frameCount = 0, (-1 == this._end || this._end > this._frameCount - 1) && (this._end = this._frameCount - 1), (-1 == this._endAt || this._endAt > this._frameCount - 1) && (this._endAt = this._frameCount - 1), (this._frame < 0 || this._frame > this._frameCount - 1) && (this._frame = this._frameCount - 1), this.drawFrame(), this._frameElapsed = 0, this._repeatedCount = 0, this._reversed = !1, this.checkTimer();
        }), a(0, n, "playing", function () {
          return this._playing;
        }, function (t) {
          this._playing != t && (this._playing = t, this.checkTimer());
        }), a(0, n, "frameCount", function () {
          return this._frameCount;
        }), a(0, n, "frame", function () {
          return this._frame;
        }, function (t) {
          this._frame != t && (null != this._frames && t >= this._frameCount && (t = this._frameCount - 1), this._frame = t, this._frameElapsed = 0, this.drawFrame());
        }), a(0, n, "boundsRect", function () {
          return this._boundsRect;
        }, function (t) {
          this._boundsRect = t;
        }), e;
      }();
    i.__init([It, z, I, J, k, Et, _t, X, ct, pt, mt]);
  }(window, document, Laya), "function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function (t, e) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    for (var i in Laya) {
      var n = Laya[i];
      n && n.__isclass && (e[i] = n);
    }
  });
var WordTipsUtils;
! function (t) {
  t.wordList = [], t.showWordList = [], t.maxNum = 10, t.showWordTips = function (e) {
    if (t.showWordList.length > 0 && t.showWordList[t.showWordList.length - 1].nowword == e) return;
    if (t.wordList.length > 0) {
      var i = t.wordList.shift();
      GameLayerManager.getInstance().topLayer.addChild(i), t.showWordList.push(i), i.showWord(e);
    } else if (t.showWordList.length < 10) n = new WordTipsView(), GameLayerManager.getInstance().topLayer.addChild(n), t.showWordList.push(n), n.showWord(e);
    else {
      var n;
      (n = t.showWordList.shift()).showWord(e), t.showWordList.push(n);
    }
  }, t.addwordList = function (e) {
    if (e) {
      e.removeFromParent();
      var i = t.showWordList.indexOf(e); - 1 != i && t.showWordList.splice(i, 1), t.wordList.push(e);
    }
  };
}(WordTipsUtils || (WordTipsUtils = {}));
var TimeUtils;
! function (t) {
  t.formatData = function (t) {
    var e = new Date(1e3 * t);
    return this.getTwo(e.getMonth() + 1) + "/" + this.getTwo(e.getDate()) + " " + this.getTwo(e.getHours()) + ":" + this.getTwo(e.getMinutes());
  }, t.formatData1 = function (t) {
    var e = new Date(1e3 * t);
    return e.getMonth() + 1 + "月" + e.getDate() + "日";
  }, t.formatYearMonthDate = function (t) {
    var e = new Date(1e3 * t);
    return e.getFullYear() + "." + (e.getMonth() + 1) + "." + e.getDate();
  }, t.formatYearMonthDate1 = function (t) {
    var e = new Date(1e3 * t),
      i = e.getMonth() + 1 >= 10 ? (e.getMonth() + 1).toString() : "0" + (e.getMonth() + 1),
      n = e.getDate() >= 10 ? e.getDate().toString() : "0" + e.getDate();
    return e.getFullYear() + "-" + i + "-" + n;
  }, t.LXandJXTimeType = function (t) {
    var e = "";
    if (t < 0) e = "0秒";
    else if (t < 60) e = Math.floor(t) + "秒";
    else if (t < 3600) e = Math.floor(t / 60) + "分钟";
    else {
      var i;
      e = (i = Math.floor(t / 60 / 60)) + "小时", e += Math.floor((t - 60 * i * 60) / 60) + "分钟";
    }
    return e;
  }, t.formatTime = function (t) {
    var e = "",
      i = Math.floor(t / 3600);
    i > 0 && (e += i >= 10 ? i + ":" : "0" + i + ":");
    var n = Math.floor(t % 3600 / 60);
    e += n >= 10 ? n + ":" : "0" + n + ":";
    var r = Math.floor(t % 60);
    return e += r >= 10 ? r + "" : "0" + r;
  }, t.formatTime1 = function (t) {
    var e = "",
      i = Math.floor(t / 3600);
    return i > 0 && (e += i + "小时"), e += Math.floor(t % 3600 / 60) + "分", e += Math.floor(t % 60) + "秒";
  }, t.formatTime2 = function (t) {
    var e = "";
    return e += Math.floor(t / 86400) + "天", e += Math.floor(t / 3600) + "小时", e += Math.floor(t % 3600 / 60) + "分", e += Math.floor(t % 60) + "秒";
  }, t.formatTime3 = function (t) {
    var e = "";
    return e += Math.floor(t / 86400) + "天", e += Math.floor(t % 86400 / 3600) + "小时", e += Math.floor(t % 86400 % 3600 / 60) + "分";
  }, t.formatTime4 = function (t) {
    var e = "";
    t > 86400 && (e += Math.floor(t / 86400) + "天");
    t > 3600 && (e += Math.floor(t % 86400 / 3600) + "小时");
    t > 60 && (e += Math.floor(t % 86400 % 3600 / 60) + "分钟");
    return e;
  }, t.formatTime4Arr = function (t) {
    var e = [];
    if (t >= 3600) {
      var i = Math.floor(t % 86400 / 3600);
      e.unshift(String(i));
    }
    if (t >= 60) {
      var n = Math.floor(t % 86400 % 3600 / 60);
      e.unshift(String(n));
    }
    return e;
  }, t.getTwo = function (t) {
    var e = String(t);
    return e.length < 2 && (e = "0" + e), e;
  }, t.datetoTime = function (t) {
    return Date.parse(t) / 1e3;
  };
}(TimeUtils || (TimeUtils = {}));
var GameUtils;
! function (t) {
  t.alert = function (t, e, i, n, r, a, s, o) {
    void 0 === t && (t = ""), void 0 === e && (e = null), void 0 === i && (i = null), void 0 === n && (n = ""), void 0 === r && (r = "取消"), void 0 === a && (a = "确定"), void 0 === s && (s = !1), void 0 === o && (o = LayerNotify.LAYER_TOPLAYER), UiManager.getInstance().close(AlertView);
    var h = {};
    h.titleStr = n, h.descStr = t, h.callback = i, h.type = 1, h.MethodObj = e, h.cancelStr = r, h.okstr = a, h.closeAsCancel = s, UiManager.getInstance().add(AlertView, h, o);
  }, t.confirm = function (t, e, i, n, r, a, s, o, h) {
    void 0 === t && (t = ""), void 0 === e && (e = null), void 0 === i && (i = null), void 0 === n && (n = null), void 0 === r && (r = ""), void 0 === a && (a = "取消"), void 0 === s && (s = "确定"), void 0 === o && (o = !1), void 0 === h && (h = LayerNotify.LAYER_TOPLAYER), UiManager.getInstance().close(AlertView);
    var l = {};
    l.titleStr = r, l.descStr = t, l.callback = i, l.type = 2, l.MethodObj = e, l.itemData = n, l.cancelStr = a, l.okstr = s, l.closeAsCancel = o, UiManager.getInstance().add(AlertView, l, h);
  }, t.randRange = function (t, e) {
    return Math.floor(Math.random() * (e - t + 1)) + t;
  }, t.randRange1 = function (t, e) {
    return Math.random() * (e - t + 1) + t;
  }, t.getGold = function (t) {
    var e = "";
    if (t < 1e6) {
      if (t < 1e4) return t.toString();
      e += ((i = Math.floor(t / 1e3)) + (n = t % 1e3 / 1e3)).toFixed(2) + "k";
    } else {
      var i = Math.floor(t / 1e6),
        n = t % 1e6 / 1e6;
      e += (i + n).toFixed(2) + "m";
    }
    return e;
  }, t.compareVersion = function (t, e) {
    t = t.split("."), e = e.split(".");
    for (var i = Math.max(t.length, e.length); t.length < i;) t.push("0");
    for (; e.length < i;) e.push("0");
    for (var n = 0; n < i; n++) {
      var r = parseInt(t[n]),
        a = parseInt(e[n]);
      if (r > a) return 1;
      if (r < a) return -1;
    }
    return 0;
  };
}(GameUtils || (GameUtils = {}));
var Global, Debuger = function () {
    function t() {}
    return t.log = function (e) {
      for (var i = [], n = 1; n < arguments.length; n++) i[n - 1] = arguments[n];
      t.isprint && console.log.call(console, e, i);
    }, t.error = function (e) {
      for (var i = [], n = 1; n < arguments.length; n++) i[n - 1] = arguments[n];
      t.isprint && console.error.call(console, e, i);
    }, t.isprint = !0, t;
  }(),
  ValueFlyManager = function () {
    function t() {}
    return t.getInstance = function () {
      return this._instance || (this._instance = new t()), this._instance;
    }, t.prototype.addGoldfly = function (t, e, i) {
      void 0 === i && (i = LayerNotify.LAYER_BACKGROUND), this._pooList || (this._pooList = []);
      var n = UiManager.instance.getView(MainView);
      if (n && e > 0)
        for (var r = 0, a = 0; a < e; a++) {
          var s;
          this._pooList && this._pooList.length > 0 ? (s = this._pooList.shift()).visible = !0 : s = fairygui.UIPackage.createObject("main", "img_gold").asImage, GameLayerManager.getInstance().uiLayer.addChild(s), s.setPivot(.5, .5, !0), s.x = t.x, s.y = t.y, s.scaleX = s.scaleY = 1.5;
          var o = n.item_top.img_gold.localToGlobal();
          r = 100 * a, s.visible = !1, Laya.Tween.to(s, {
            x: o.x,
            y: o.y,
            update: Handler.create(this, this.updateTween, [s])
          }, 800, Laya.Ease.backInOut, Handler.create(this, this.tweenfunCallback, [s]), r, !0);
        }
    }, t.prototype.updateTween = function (t) {
      t.visible || (t.visible = !0);
    }, t.prototype.tweenfunCallback = function (t) {
      t && (t.removeFromParent(), this._pooList.push(t));
    }, t.prototype.playBloodEffect = function (t, e) {
      this._bloodPoolList || (this._bloodPoolList = []);
      var i;
      i = this._bloodPoolList.length > 0 ? this._bloodPoolList.shift() : fairygui.UIPackage.createObject("main", "bloodtips"), GameLayerManager.getInstance().uiLayer.addChild(i), i.x = t.x, i.y = t.y, i.play(e);
    }, t.prototype.removeBloodEffect = function (t) {
      t && (t.removeFromParent(), this._bloodPoolList.push(t));
    }, t.prototype.playAddBloodEffect = function (t, e) {
      this._addbloodPoolList || (this._addbloodPoolList = []);
      var i;
      i = this._addbloodPoolList.length > 0 ? this._addbloodPoolList.shift() : fairygui.UIPackage.createObject("main", "addblooditem"), GameLayerManager.getInstance().uiLayer.addChild(i), i.x = t.x, i.y = t.y, i.play(e);
    }, t.prototype.removeaddBloodEffect = function (t) {
      t && (t.removeFromParent(), this._addbloodPoolList.push(t));
    }, t;
  }(),
  StagesManager = function () {
    function t() {
      this._loadState = 0;
    }
    return t.getInstance = function () {
      return this._instance || (this._instance = new t()), this._instance;
    }, t.prototype.init = function () {
      ResDataManager.getInastance().addEffectPackage("effect_dianji", !0, !1), this._effect = fairygui.UIPackage.createObject("effect_dianji", "effect_dianji").asMovieClip, Global.stage.addChild(this._effect.displayObject), this._effect.setPivot(.5, .5, !0), this._effect.playing = !1, this._effect.visible = !1, Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.stageMouseDownHandler), Laya.stage.on(Laya.Event.MOUSE_UP, this, this.stageMouseUPHandler), Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.stageMouseOutHandler);
    }, t.prototype.stageMouseUPHandler = function () {
      Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.stageMouseMoveHandler), this._effect && this._effect.setPlaySettings(5, 9, 1, 9, Handler.create(this, this.effectend));
    }, t.prototype.stageMouseOutHandler = function () {
      Laya.stage.event(Laya.Event.MOUSE_UP);
    }, t.prototype.effectend = function () {
      this._effect && (this._effect.playing = !1, this._effect.visible = !1);
    }, t.prototype.stageMouseDownHandler = function () {
      this._effect && (this._effect.visible = !0, this._effect.playing = !0, this._effect.setPlaySettings(1, 4, 0), this.updateEffect(), Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.stageMouseMoveHandler));
    }, t.prototype.stageMouseMoveHandler = function () {
      this.updateEffect();
    }, t.prototype.updateEffect = function () {
      this._effect && (this._effect.x = Laya.stage.mouseX, this._effect.y = Laya.stage.mouseY);
    }, t;
  }(),
  Scene3DManager = function () {
    function t() {
      this._nowAlivenpcindex = 0, this._scenePosNum = 0, this.standZ = 0, this.point = new Laya.Vector2(), this._offsetVector3 = new Laya.Vector3(0, .25, 0), this._isshowDjsNpc = 0, this._index = 0, this._disz = 0, this._npcScale = 1, this._specialType = 0;
    }
    return t.getInstance = function () {
      return this._instance || (this._instance = new t()), this._instance;
    }, t.prototype.loadScene = function (t) {
      this._mainProxy = MVCObjectPool.getInstance().getProxy(MainProxy), this.updateSceneById(1), this.showMainPlayer(), this.initView(), this._isshowDjsNpc = Number(CacheManager.getInstance().getCachestr(RoleDataType.isShowDjsNpc));
    }, t.prototype.initView = function () {
      this._guanqiaProxy = MVCObjectPool.getInstance().getProxy(GuanQIaProxy), this.point = new Laya.Vector2(), this.ray = new Laya.Ray(new Laya.Vector3(0, 0, 0), new Laya.Vector3(0, 0, 0)), this._outHitInfo = new Laya.RaycastHit(), this._position = new Laya.Vector3(0, 0, 0), this._upVector3 = new Laya.Vector3(0, 1, 0), this._quaternion = new Laya.Quaternion(), this._vector3 = new Laya.Vector3(), this._offsetVector3 = new Laya.Vector3(0, 0, 0), this.bullet = ResDataManager.getInastance().getResByurl(PathConfig.getgunlh("bullet"));
    }, t.prototype.checkHit = function () {}, t.prototype.mouseDownClick = function () {
      -1 !== this._outHitInfo.distance && (Laya.Vector3.add(this._outHitInfo.position, this._offsetVector3, this._vector3), this.mainPlayerScript.moveToPos(this._vector3));
    }, t.prototype.showMainPlayer = function () {
      if (!this.mainPlayer) {
        this.mainPlayer = Laya.Sprite3D.instantiate(ResDataManager.getInastance().getResByurl(PathConfig.getequipslh("manbone"))), this.nowScene.addChild(this.mainPlayer);
        this.mainPlayer.transform.scale = new Vector3(1.6, 1.6, 1.6), this.mainPlayerScript = this.mainPlayer.addComponent(PlayerScript), this.mainPlayerScript.initPos(PosType.getStandPos(!1)), this.mainPlayer.name = "mainPlayer";
        var t = this.mainPlayer.getChildAt(0).getChildByName("collidebox");
        t.name = "mainPlayer", t.meshRender.enable = !1;
        var e = MVCObjectPool.getInstance().getProxy(GunProxy),
          i = MVCObjectPool.getInstance().getProxy(HelmetProxy),
          n = MVCObjectPool.getInstance().getProxy(ArmorProxy),
          e = MVCObjectPool.getInstance().getProxy(GunProxy);
        this.mainPlayerScript.changeHelmet(i.myhelmetVo.cfg), this.mainPlayerScript.changeArmor(n.myarmorVo.cfg), this.mainPlayerScript.changeGun(e.mygunVo.cfg, !0, e.mygunVo.cfg.length), this.drawCollider(t);
      }
    }, t.prototype.initStartGame = function () {
      this.initMainPlayerGame(), this.initScenePos();
    }, t.prototype.initMainPlayerGame = function () {
      this.showMainPlayer(), PosType.init(), this.mainPlayerScript.updateAlive(!0), this.mainPlayerScript.initPos(PosType.getStandPos(!1));
    }, t.prototype.updateSceneById = function (e) {
      PosType.init(), this._sceneModelDict = {}, this.nowScene = new Laya.Scene(), GameLayerManager.getInstance().background.displayObject.addChild(this.nowScene), this.camera = new Laya.Camera(0, .1, 160), this.cameraScript = this.camera.addComponent(CameraMoveScript), this.nowScene.addChild(this.camera);
      for (var i = 0; i < 3; i++) {
        this._scenePosNum = i;
        var n = Laya.Sprite3D.instantiate(ResDataManager.getInastance().getResByurl(PathConfig.getscene(e)));
        this.nowScene.addChild(n), this._sceneModelDict[i] = n, n.addComponent(SceneScript);
        n.getComponentByType(SceneScript).setIndex(i);
      }
      if (this.initScenePos(), !this._bloodEffect) {
        this._bloodEffectSprite = Laya.Sprite3D.instantiate(ResDataManager.getInastance().getResByurl(PathConfig.geteffect("effect_blood")));
        var r = this._bloodEffectSprite.getChildAt(0);
        t.getInstance().nowScene.addChild(this._bloodEffectSprite), this._bloodEffect = r._geometryFilter, this._bloodEffect.looping = !1, this._bloodEffect.stop();
      }
      if (!this._createnpcEffect) {
        this._createnpcEffectSprite = Laya.Sprite3D.instantiate(ResDataManager.getInastance().getResByurl(PathConfig.geteffect("effect_gray")));
        var a = this._createnpcEffectSprite.getChildAt(0);
        t.getInstance().nowScene.addChild(this._createnpcEffectSprite), this._createnpcEffect = a._geometryFilter, this._createnpcEffect.looping = !1, this._createnpcEffect.stop(), this._createnpcEffect.on(Laya.Event.COMPLETE, this, this.npceffectplayEndfun);
      }
      if (!this._gunboxEffect) {
        this._gunboxEffectSprite = Laya.Sprite3D.instantiate(ResDataManager.getInastance().getResByurl(PathConfig.geteffect("effect_green")));
        var s = this._gunboxEffectSprite.getChildAt(0);
        t.getInstance().nowScene.addChild(this._gunboxEffectSprite), this._gunboxEffect = s._geometryFilter, this._gunboxEffect.stop(), this._gunboxEffectSprite.active = !1;
      }
    }, t.prototype.playGunboxEffect = function (t) {
      this._gunboxEffect && this._gunboxEffectSprite && (this._gunboxEffectSprite.active = !0, this._gunboxEffectSprite.transform.position = t.clone(), this._gunboxEffect._currentTime = 0, this._gunboxEffect.play());
    }, t.prototype.removeGunboxEffect = function () {
      this._gunboxEffect && this._gunboxEffectSprite && (this._gunboxEffect.stop(), this._gunboxEffectSprite.active = !1);
    }, t.prototype.playCreateNpcEffect = function (t) {
      this._createnpcEffect && this._createnpcEffectSprite && (this._createnpcEffectSprite.active = !0, this._createnpcEffectSprite.transform.position = t.clone(), this._createnpcEffectSprite.transform.position.y = .6, this._createnpcEffect.looping = !0, this._createnpcEffect._currentTime = 0, this._createnpcEffect.play());
    }, t.prototype.removeNpcEffect = function () {
      this._createnpcEffect && this._createnpcEffectSprite && (this._createnpcEffect.stop(), this._createnpcEffectSprite.active = !1);
    }, t.prototype.playBloodEffect = function (t, e) {
      this._bloodEffectSprite && this._bloodEffect && (this._bloodEffectSprite.transform.position = t.clone(), this._bloodEffectSprite.transform.lookAt(new Vector3(100 * -e.x, 0, 100 * -e.z), new Vector3(0, 1, 0)), this._bloodEffect.looping = !1, this._bloodEffect._currentTime = 0, this._bloodEffect.play());
    }, t.prototype.initScenePos = function () {
      if (this._sceneModelDict) {
        this._scenePosNum = 0;
        for (var e in this._sceneModelDict) this._scenePosNum < Number(e) && (this._scenePosNum = Number(e)), this._sceneModelDict[e].transform.position = new Vector3(0, 0, -Number(e) * t.sceneZ);
      }
    }, t.prototype.updateNowScenePos = function (e) {
      var i = this._sceneModelDict[e];
      i && (this._scenePosNum++, i.transform.position = new Vector3(0, 0, -this._scenePosNum * t.sceneZ));
    }, t.prototype.getStandPos = function (t) {
      switch (t) {
        case PosType.PosType_left:
        case PosType.PosType_middle:
        case PosType.PosType_right:
      }
    }, t.prototype.addNpc = function (t, e, i, n, r, a, s) {
      void 0 === s && (s = 1.6), Debuger.log("添加npc"), this._index = t, this._npccallobj = e, this._npccallback = i, this._disz = n, this.resourceCfg = r, this.nowNpcGunCfg = GunCFG.dict[r.gunrID], this._npcScale = s + .8, this._specialType = a, this._endPos = PosType.getStandPos(!0, n), this._nowNpcPos = this._endPos.clone(), this.createNpc();
    }, t.prototype.npceffectplayEndfun = function () {
      this.removeNpcEffect();
    }, t.prototype.createNpc = function () {
      this._nowNpcPos = new Vector3(this._endPos.x, this._endPos.y + 100, this._endPos.z), this.nowNpc = Laya.Sprite3D.instantiate(ResDataManager.getInastance().getResByurl(PathConfig.getequipslh("manbone")), this.nowScene), this.nowNpc.name = "npc_" + this._index, this.nowNpcName = this.nowNpc.name, this.nowNpcScript = this.nowNpc.addComponent(PlayerScript), this.nowNpcScript.initPos(this._nowNpcPos), 1 != this._npcScale && (this.nowNpc.transform.scale = new Vector3(this._npcScale, this._npcScale, this._npcScale));
      var t = this.nowNpc.getChildAt(0).getChildByName("collidebox");
      t.name = "npc_" + this._index, t.meshRender.enable = !1;
      var e = HelmetCFG.dict[this.resourceCfg.resourcehead],
        i = ArmorCFG.dict[this.resourceCfg.resourceBody],
        n = GunCFG.dict[this.resourceCfg.gunrID];
      this.nowNpcScript.changeHelmet(e), this.nowNpcScript.changeArmor(i), this.nowNpcScript.changeGun(n, !1, 0), this.drawCollider(t), this.clearTween(), this.setMainInitLookAt(), this.nowNpc.transform.position = this._nowNpcPos, this._tween = Laya.Tween.to(this._nowNpcPos, {
        x: this._endPos.x,
        y: this._endPos.y,
        z: this._endPos.z
      }, 500, Laya.Ease.linearNone, Handler.create(this, this.moveNpcPosCallback), 0, !0), this._tween.update = Handler.create(this, function () {
        this.nowNpc && (this.nowNpc.transform.position = this._nowNpcPos);
      }, null, !1);
    }, t.prototype.setMainInitLookAt = function () {
      this.mainPlayerScript.setLookAt(new Vector3(0, 1, 0));
      var t = new Laya.Quaternion();
      Laya.Quaternion.createFromAxisAngle(new Vector3(0, 1, 0), 0, t), this.mainPlayer.transform.rotation = t;
    }, t.prototype.moveNpcPosCallback = function () {
      if (this.clearTween(), this.playCreateNpcEffect(this._nowNpcPos), this.nowNpcScript.initPos(this._nowNpcPos), this.nowNpcScript.specialType = this._specialType, this.mainPlayer) {
        var e = this.mainPlayer.transform.position;
        this.nowNpc.transform.lookAt(new Vector3(e.x, t.standY, e.z), new Vector3(0, 1, 0));
      }
      switch (this._specialType) {
        case 1:
          this.nowNpcScript.setismove(!0, this.mainPlayer.transform.position);
          break;
        case 2:
          switch (0 == this._isshowDjsNpc && (this._isshowDjsNpc = 1, CacheManager.getInstance().addCachestr(RoleDataType.isShowDjsNpc, this._isshowDjsNpc.toString()), WordTipsUtils.showWordTips("倒计时结束小怪会反击哦~")), this._mainProxy.nowGamesType) {
            case GamesType.GuaQiaType_wujin:
              var i = SettingCFG.dict[27].value + Math.floor(GameStateManager.getInstance().nowGuanQia / SettingCFG.dict[28].value) * SettingCFG.dict[29].value;
              i > SettingCFG.dict[30].value && (i = SettingCFG.dict[30].value), this.nowNpcScript.setDaojishi(i);
              break;
            case GamesType.GuaQiaType_guaqia:
              this.nowNpcScript.setDaojishi(this._guanqiaProxy.selectGQVo.cfg.time);
          }
      }
      this._npccallback && this._npccallobj && this._npccallback.call(this._npccallobj);
    }, t.prototype.removeNpc = function () {
      this.clearTween(), this.nowNpcScript && (this.nowNpcScript.destory(), this.nowNpcScript = null, this.nowNpc = null);
    }, t.prototype.addBoss = function (t, e, i, n, r, a) {
      var s = UiManager.instance.getView(MainView);
      s && s.showBossEffect(), Debuger.log("添加boss"), this.addNpc(t, e, i, n, r, a, 1.8);
    }, t.prototype.drawCollider = function (t) {
      t.addComponent(DrawBoxColliderScript);
    }, t.prototype.clearTween = function () {
      this._tween && (this._tween.clear(), this._tween = null);
    }, t.standY = 0, t.sceneZ = 84, t;
  }(),
  PosType = function () {
    function t() {}
    return t.init = function () {
      t.nowStandXType = 1, t.isAdd = !0, t.nowStandZValue = 0;
    }, t.getStandPos = function (e, i) {
      void 0 === e && (e = !0), void 0 === i && (i = 0);
      var n = new Vector3();
      n.y = Scene3DManager.standY;
      var r = GameUtils.randRange1(SettingCFG.dict[12].value, SettingCFG.dict[13].value);
      if (0 == t.nowStandXType ? n.x = r : 1 == t.nowStandXType ? n.x = 0 : 2 == t.nowStandXType && (n.x = -r), e) {
        var a = t.nowStandZValue - i;
        n.z = a, t.nowStandZValue += -i;
      }
      return t.lastStandXType = t.nowStandXType, t.isAdd ? ++t.nowStandXType > 2 && (t.nowStandXType = 1, t.isAdd = !1) : --t.nowStandXType < 0 && (t.nowStandXType = 1, t.isAdd = !0), n;
    }, t.PosType_right = "PosType_right", t.PosType_middle = "PosType_middle", t.PosType_left = "PosType_left", t.halfwidth = 10, t.nowStandXType = 0, t.nowStandZValue = 0, t.isAdd = !0, t.lastStandXType = 0, t;
  }();
! function (t) {
  t.httpurl = "", t.openid = "zk1", t.versions = "", t.initWidth = 720, t.initHeight = 1280, t.appid = "wx85daa6bc0a5df2b3", t.gameVersions = "4.4.0", t.resouceVersion = "", t.isceshi = !0, t.curHeight = function () {
    return Laya.stage.height;
  }, t.curWidth = function () {
    return Laya.stage.width;
  }, t.setVars = function () {
    t.stage = Laya.stage;
  }, t.getappid = function () {
    return Laya.Browser.window.wx ? t.appid : Laya.Browser.window.BK ? "101528949" : "";
  }, t.getUrl = function (e) {
    return -1 == e.indexOf("wxlocal") ? e + t.versions : e;
  }, t.getBasePath = function () {
    return Laya.Browser.window.wx, "";
  };
}(Global || (Global = {}));
var SocketNofify, ActionType = function () {
    function t() {}
    return t.ActionType_stand = "stand", t.ActionType_walk = "walk", t.ActionType_shoot = "shoot", t;
  }(),
  WXGamePlatform = function () {
    function t() {
      this.isShareing = !1, this.startShareTime = 0, this.isjudgeShare = !1, this.nowShareType = "", this._openrankDict = {}, this._bannerIndex = 0, this.bannerHeight = 0, this.bannerWidth = 0, this._bannerTypeList = [];
    }
    return t.getInstance = function () {
      return this._instance || (this._instance = new t()), this._instance;
    }, t.prototype.init = function () {
      t.randomVersion = Math.random(), this.showShareMenu({
        withShareTicket: !0
      }), t.shareUrl = "", this.initDayShareNum();
    }, t.prototype.initDayShareNum = function () {
      var e = MVCObjectPool.getInstance().getProxy(DayProxy);
      e && (e.isNewDay ? (t.dayShareNum = 0, t.dayVideoNum = 0, this.updateDayShareInfo(), this.updateDayVideoInfo()) : (t.dayShareNum = Number(CacheManager.getInstance().getCachestr(RoleDataType.nowdayShare)), t.dayVideoNum = Number(CacheManager.getInstance().getCachestr(RoleDataType.nowdayVideo)))), Debuger.log("initDayShareNum", t.dayShareNum);
    }, t.prototype.updateDayShareInfo = function () {
      CacheManager.getInstance().addCachestr(RoleDataType.nowdayShare, t.dayShareNum), Debuger.log("****DayShareInfo", t.dayShareNum);
    }, t.prototype.updateDayVideoInfo = function () {
      CacheManager.getInstance().addCachestr(RoleDataType.nowdayVideo, t.dayVideoNum), Debuger.log("****DayVideoInfo", t.dayVideoNum);
    }, t.prototype.initShareAppMessage = function () {
      console.log("initShareAppMessage")
      ResourceManager.getInstance().Loader(t.shareUrl, Loader.JSON, this, function () {
        var e = ResDataManager.getInastance().getResByurl(t.shareUrl);
        if (e) {
          Debuger.log(e);
          var i = e.shareInfo,
            n = e.relation[ShareType.ShareType_default];
          if (n && n.length > 0) var r = i[n[0].shareInfoId];
          r && this.onShareAppMessage(r.content, r.img_url);
        }
      }, null, !1);
    }, t.prototype.loadSubpackage = function (e, i, n, r) {
      if (Laya.Browser.window.wx) {
        this._subcallobj = i, this._subcallback = n, this._updatecallback = r;
        var a = Laya.Browser.window.wx;
        if (a.loadSubpackage) {
          a.loadSubpackage({
            name: e,
            success: function (e) {
              Debuger.log("分包加载成功");
              var i = t.getInstance();
              i._subcallback && i._subcallobj && i._subcallback.call(i._subcallobj);
            },
            fail: function (t) {
              WordTipsUtils.showWordTips("分包加载失败，请清理微信缓存重新进入！");
            }
          }).onProgressUpdate(function (e) {
            var i = t.getInstance();
            i._updatecallback && i._subcallobj && i._updatecallback.call(i._subcallobj, e.progress), console.log("下载进度", e.progress), console.log("已经下载的数据长度", e.totalBytesWritten), console.log("预期需要下载的数据总长度", e.totalBytesExpectedToWrite);
          });
        } else i && n && n.call(i);
      } else i && n && n.call(i);
    }, t.prototype.login = function (e, i, n) {
      void 0 === n && (n = null), Laya.Browser.window.wx ? Laya.Browser.window.wx.login({
        success: function (n) {
          Debuger.log("wx.login:", n), t.code = n.code;
          var r = t.getInstance().getLaunchOptionsSync();
          t.getInstance().wxLogin(r, e, i);
        },
        fail: function (t) {
          Debuger.log("登录失败");
        }
      }) : i.call(e);
    }, t.prototype.wxLogin = function (e, i, n) {
      t.qudao = "";
      var r = "";
      Debuger.log("login_info", e);
      var a = "";
      if (e && e.query) {
        var s = e.query;
        s.hasOwnProperty("shareid") && (a = s.shareid), s.hasOwnProperty("from") && (r = s.from, Debuger.log("from_uid=>", r)), s.hasOwnProperty("zysource") && (t.qudao = s.zysource);
      }
      var o = t.code,
        h = Global.appid,
        l = r,
        u = Global.gameVersions;
      wx.request({
        url: 'https://tyalw.top/Game/game/全民枪神吃鸡战场/Login.json',
        success: function (res) {
          console.log(res)
          this.setLoginInfo(res), n.call(i);
        }
      })
      GameHttps.getInstance().send("c=xyx&a=wxProgramLogin", {
        code: o,
        appId: h,
        fromUid: l,
        ver: u,
        qudao: a
      }, function (t) {
        this.setLoginInfo(t), n.call(i);
      }, this, !0);
    }, t.prototype.setLoginInfo = function (e) {
      if (e && e.user) {
        Debuger.log("setLoginInfo:", e), t.curTime = e.curTime, t.fromUid = e.fromUid, t.session_key = e.session_key;
        var i = e.user;
        t.uid = i.id, t.isBlackIp = Number(i.isBlackIp), t.isLegal = Number(i.isLegal), t.limit_time = i.limit_time, null != i.h_video_num && (t.h_video_num = Number(i.h_video_num)), null != i.w_video_num && (t.w_video_num = Number(i.w_video_num)), null != i.h_vlimit_num && (t.h_vlimit_num = Number(i.h_vlimit_num)), null != i.w_vlimit_num && (t.w_vlimit_num = Number(i.w_vlimit_num)), null != i.w_limit_time && (t.w_limit_time = i.w_limit_time), null != i.h_limit_time && (t.h_limit_time = i.h_limit_time), null != i.isNewUser && (t.isNewUser = i.isNewUser), null != i.qudao && (t.loginqudao = i.qudao), null != i.legalShare && (t.legalShare = Number(i.legalShare)), null != i.choutiopen && (t.choutiopen = Number(i.choutiopen)), t.h_limit_timeArr = "" != t.h_limit_time && null != t.h_limit_time ? JSON.parse(t.h_limit_time) : [], t.w_limit_timeArr = "" != t.w_limit_time && null != t.w_limit_time ? JSON.parse(t.w_limit_time) : [], Debuger.log("h_limit*w_limit", t.h_limit_timeArr.length, t.w_limit_timeArr.length);
      } else Debuger.log("登录数据为空，模拟本地数据"), t.curTime = Laya.Browser.now() / 1e3, t.fromUid = 0, t.session_key = "", t.uid = 0, t.isBlackIp = 0, t.isLegal = 0, t.limit_time = "", t.h_video_num = 1, t.w_video_num = 1, t.h_vlimit_num = 1, t.w_vlimit_num = 1, t.w_limit_time = "", t.h_limit_time = "", t.isNewUser = 0, t.legalShare = 0, t.choutiopen = 0, t.h_limit_timeArr = "" != t.h_limit_time && null != t.h_limit_time ? JSON.parse(t.h_limit_time) : [], t.w_limit_timeArr = "" != t.w_limit_time && null != t.w_limit_time ? JSON.parse(t.w_limit_time) : [], Debuger.log("h_limit*w_limit", t.h_limit_timeArr.length, t.w_limit_timeArr.length);
    }, t.prototype.getUserInfo = function (e, i, n) {
      void 0 === n && (n = null), Laya.Browser.window.wx && Laya.Browser.window.wx.getUserInfo({
        success: function (n) {
          Debuger.log("获取微信用户信息成功", n);
          var r = n.userInfo;
          t.nickName = r.nickName, t.avatarUrl = r.avatarUrl, t.gender = r.gender, t.province = r.province, t.city = r.city, t.country = r.country, Global.openid = r.nickName, i.call(e);
        },
        fail: function (t) {
          (t.errMsg.indexOf("auth deny") > -1 || t.errMsg.indexOf("auth denied") > -1) && Debuger.log("获取授权失败", "右上角菜单->关于（小程序名字）->右上角菜单->设置");
        }
      });
    }, t.prototype.getShareInfo = function (t, e, i, n) {
      void 0 === n && (n = null), Laya.Browser.window.wx && (Debuger.log("shareTicket:", t.shareTicket), Laya.Browser.window.wx.getShareInfo({
        shareTicket: t.shareTicket,
        success: function (t) {
          Debuger.log("成功：", t), i.call(e, t);
        }
      }));
    }, t.prototype.onShareAppMessage = function (t, e) {
      console.log("onShareAppMessage")
      Laya.Browser.window.wx && Laya.Browser.window.wx.onShareAppMessage(function () {
        return {
          title: t,
          imageUrl: e
        };
      });
    }, t.prototype.shareAppMessage = function (t) {
      console.log("shareAppMessage")
      Laya.Browser.window.wx && Laya.Browser.window.wx.shareAppMessage(t);
    }, t.prototype.showShareMenu = function (t) {
      void 0 === t && (t = null), Laya.Browser.window.wx && Laya.Browser.window.wx.showShareMenu(t);
    }, t.prototype.updateShareMenu = function (t) {
      void 0 === t && (t = null), Laya.Browser.window.wx && Laya.Browser.window.wx.updateShareMenu(t);
    }, t.prototype.pullShare = function (t, e, i, n) {
      void 0 === n && (n = null), Laya.Browser.window.wx && Laya.Browser.window.wx.shareAppMessage({
        success: function (t) {
          Debuger.log("i am success"), i.call(e);
        },
        fail: function () {
          Debuger.log("i am fail"), n.call(e);
        },
        complete: function () {
          Debuger.log("i am complete");
        }
      });
    }, t.prototype.showMenu = function () {
      Laya.Browser.window.wx && Laya.Browser.window.wx.showShareMenu();
    }, t.prototype.setStorageSync = function (t, e) {
      Laya.Browser.window.wx && Laya.Browser.window.wx.setStorageSync(t, e);
    }, t.prototype.getStorageSync = function (t) {
      return Laya.Browser.window.wx ? Laya.Browser.window.wx.getStorageSync(t) : null;
    }, t.prototype.getStorageSync1 = function (t) {
      return Laya.Browser.window.wx.getStorageSync(t);
    }, t.prototype.setUserCloudStorage = function (t, e, i, n) {
      void 0 === e && (e = null), void 0 === i && (i = null), void 0 === n && (n = null), Laya.Browser.window.wx && Laya.Browser.window.wx.setUserCloudStorage({
        KVDataList: t,
        success: function (t) {
          i && i.call(e, t);
        },
        fail: function (t) {
          n && n.call(e);
        }
      });
    }, t.prototype.toast = function (t) {
      Laya.Browser.window.wx && Laya.Browser.window.wx.showToast({
        title: t
      });
    }, t.prototype.postMessage = function (t, e) {
      if (void 0 === e && (e = null), Laya.Browser.window.wx) {
        Debuger.log("postMessage:", t);
        Laya.Browser.window.wx.getOpenDataContext().postMessage({
          action: t,
          data: e
        });
      }
    }, t.prototype.createInnerAudioContext = function () {
      return Laya.Browser.window.wx ? Laya.Browser.window.wx.createInnerAudioContext() : null;
    }, t.prototype.getSystemInfoSync = function () {
      return Laya.Browser.window.wx ? Laya.Browser.window.wx.getSystemInfoSync() : null;
    }, t.prototype.previewImage = function (t) {
      Laya.Browser.window.wx && Laya.Browser.window.wx.previewImage(t);
    }, t.prototype.onHide = function (t, e) {
      void 0 === t && (t = null), void 0 === e && (e = null), Laya.Browser.window.wx && Laya.Browser.window.wx.onHide(function (i) {
        e && t && e.call(t, i), SoundssManager.getInstance().isAllOpen = !1, EventUtils.dispatchEvent(GameEvent.GameEvent_logout);
      });
    }, t.prototype.getLaunchOptionsSync = function () {
      return Laya.Browser.window.wx ? Laya.Browser.window.wx.getLaunchOptionsSync() : null;
    }, t.prototype.hideToast = function (t) {
      Laya.Browser.window.wx && Laya.Browser.window.wx.hideToast(t);
    }, t.prototype.gc = function () {
      Laya.Browser.window.wx && Laya.Browser.window.wx.triggerGC();
    }, t.prototype.showModal = function (t) {
      Laya.Browser.window.wx && Laya.Browser.window.wx.showModal(t);
    }, t.prototype.openMiniPrograme = function (t, e) {
      Laya.Browser.window.wx && Laya.Browser.window.wx.navigateToMiniProgram({
        appId: t,
        path: e,
        extraData: {
          foo: "bar"
        },
        envVersion: "release",
        success: function (t) {}
      });
    }, t.prototype.clearStorage = function () {
      Laya.Browser.window.wx && Laya.Browser.window.wx.clearStorageSync();
    }, t.prototype.vibrateShort = function () {
      Laya.Browser.window.wx && Laya.Browser.window.wx.vibrateShort();
    }, t.prototype.removeStorage = function (t) {
      Laya.Browser.window.wx && Laya.Browser.window.wx.removeStorage(t);
    }, t.prototype.startShareApp = function (e, i, n, r, a) {
      void 0 === n && (n = null), void 0 === r && (r = null), void 0 === a && (a = null), t.nowShareindex = 0, this.isjudgeShare = i, this.nowShareType = e, ResourceManager.getInstance().Loader(t.shareUrl, Laya.Loader.JSON, this, function () {
        var i = ResDataManager.getInastance().getResByurl(t.shareUrl);
        if (i) {
          Debuger.log(i);
          var s, o = i.shareInfo,
            h = i.relation;
          h[e] || (e = ShareType.ShareType_default);
          var l = !1;
          1 == t.legalShare ? l = !0 : 1 == t.isBlackIp && this.checkTime(t.h_limit_timeArr) ? l = !0 : 0 == t.isBlackIp && this.checkTime(t.w_limit_timeArr) && (l = !0);
          var u, c, _ = h[e],
            d = "";
          _ && _.length > 0 && (d = (u = _[GameUtils.randRange(0, _.length - 1)]).shareId, c = o[u.shareInfoId]), l && (_ = h[ShareType.ShareType_LegalShare], Debuger.log("******legalShare:", _), _ && (d = (u = _[GameUtils.randRange(0, _.length - 1)]).shareId, c = o[u.shareInfoId])), c && ((s = {}).title = c.content, s.imageUrl = c.img_url, s.shareid = d, s.query = "from=" + t.uid + "&shareid=share_" + d, t.getInstance().sendShareTongji(s.shareid), this.shareApp(s, n, r, a));
        }
      });
    }, t.prototype.shareApp = function (e, i, n, r) {
      console.log("shareApp")
      Debuger.log("shareApp", e), this.nowshareObj = i, this.nowsharesucceedfun = n, this.nowsharefailfun = r, this.nowshareinfo = e, this.startShareTime = Laya.Browser.now(), this.isShareing = !0, t.callbackfailstate = 0, this.shareAppMessage({
        title: e.title,
        imageUrl: e.imageUrl,
        query: e.query,
        success: function (t) {},
        fail: function (t) {
          WordTipsUtils.showWordTips("您取消了分享"), r && r.call(i);
        },
        cancel: function (e) {
          t.callbackfailstate = 1;
        }
      });
    }, t.prototype.onShow = function (e, i, n) {
      void 0 === e && (e = null), void 0 === i && (i = null), void 0 === n && (n = null), Laya.Browser.window.wx && Laya.Browser.window.wx.onShow(function (e) {
        Laya.timer.frameOnce(1, t.getInstance(), t.getInstance().onShowSucceed);
      }), this.onHide();
    }, t.prototype.onShowSucceed = function () {
      console.log("onShowSucceed")
      var e = t.getInstance();
      if (e.isShareing) {
        e.isShareing = !1;
        var i = !1;
        if (e.isjudgeShare) {
          if (0 == t.callbackfailstate) {
            var n = (Laya.Browser.now() - e.startShareTime) / 1e3;
            if (n >= 2.5)
              if (0 == t.dayShareNum) i = !0;
              else {
                t.nowShareindex++;
                var r = 3 + .2 * (t.dayShareNum - 1);
                if (r > 4 && (r = 4), n >= r)
                  if (t.nowShareindex < 3) {
                    GameUtils.randRange(1, 100) <= t.sharegailv && (i = !0);
                  } else i = !0;
              }
          }
          t.callbackfailstate = 0, i ? (t.dayShareNum++, e.updateDayShareInfo(), e.nowshareObj && e.nowsharesucceedfun && e.nowsharesucceedfun.call(e.nowshareObj)) : e.showModal({
            title: "提示",
            content: "分享失败，请分享到不同的群",
            showCancel: !0,
            cancelText: "取消",
            confirmText: "确定",
            success: function (e) {
              var i = t.getInstance();
              e.confirm ? t.getInstance().shareApp(i.nowshareinfo, i.nowshareObj, i.nowsharesucceedfun, i.nowsharefailfun) : i.nowsharefailfun && i.nowshareObj && i.nowsharefailfun.call(i.nowshareObj);
            },
            fail: function () {
              t.getInstance().isShareing = !1;
            },
            complete: function () {}
          });
        }
      }
      SoundssManager.getInstance().isAllOpen = !0, EventUtils.dispatchEvent(GameEvent.GameEvnt_enter);
    }, t.prototype.sendShareTongji = function (e, i) {
      // Debuger.log("分享统计:");
      // void 0 === i && (i = 1), Debuger.log("分享统计:", e);
      // var n = "https://click.xyx.bkdau.cn/share/" + Global.appid + "/" + e;
      // if (TongjiHttps.getInstance().sendbyget(n, "", null), "" != t.loginqudao) {
      //   n = "https://click.xyx.bkdau.cn/qdShare/" + Global.getappid() + "/" + e + "/" + t.loginqudao, TongjiHttps.getInstance().sendbyget(n, "", null);
      //   var r = {};
      //   r.appId = Global.getappid(), r.uid = t.uid, r.qudao = t.loginqudao, r.type = i, TongjiHttps.getInstance().send("c=xyx&a=rmDuplicateShareClick", r);
      // }
    }, t.getMonDate = function () {
      var t = new Date(),
        e = t.getDay(),
        i = t.getDate();
      return 1 == e ? t : (0 == e ? t.setDate(i - 6) : t.setDate(i - e + 1), t);
    }, t.prototype.storeResult = function (e, i) {
      if (Laya.Browser.window.wx) {
        Debuger.log("排行榜数据上传:", e, i);
        var n = t.getMonDate(),
          r = n.getFullYear() + "-" + n.getMonth() + "-" + n.getDate(),
          a = Number(this.getStorageSync("userscores")),
          s = Number(this.getStorageSync("weekscore_" + r)),
          o = s,
          h = e,
          l = a + i;
        0 != i && this.setStorageSync("userscores", l.toString()), h > s && (this.setStorageSync("weekscore_" + r, h.toString()), o = h), Debuger.log("qq", l, "weekscore_" + r);
        this.setUserCloudStorage([{
          key: "userscore",
          value: l.toString()
        }, {
          key: "weekscore_" + r,
          value: o.toString()
        }, {
          key: "gamecenterscore",
          value: JSON.stringify({
            wxgame: {
              score: l,
              update_time: Math.floor(new Date().getTime() / 1e3)
            }
          })
        }]);
      }
    }, t.prototype.openFriendRank = function (t, e, i, n, r) {
      void 0 === n && (n = null), void 0 === r && (r = null), this.closeziyuStage(), this._openrankDict[e] = {
        type: t,
        viewType: e,
        rect: i,
        parent: n,
        data: r
      }, this.initziyuStage(i, n), this.postMessage(t, r);
    }, t.prototype.openchaoyueRank = function (t, e, i, n, r) {
      void 0 === r && (r = null), this.closeziyuStage(), this._openrankDict[i] = {
        type: e,
        viewType: i,
        rect: n,
        parent: r
      }, this.initziyuStage(n, r), this.postMessage(RankType.show_chaoyue_game, {
        score: t
      });
    }, t.prototype.changeFriendRank = function (t) {
      this.postMessage(t);
    }, t.prototype.prePageRank = function () {
      this.postMessage(RankType.RankType_show_up_page);
    }, t.prototype.nextPageRank = function () {
      this.postMessage(RankType.RankType_show_next_page);
    }, t.prototype.closeFriendRank = function (t) {
      this.postMessage(RankType.RankType_hide_result), this.closeziyuStage(), this._openrankDict[t] && delete this._openrankDict[t];
      for (var e in this._openrankDict) {
        var i = this._openrankDict[e];
        this.openFriendRank(i.type, i.viewType, i.rect, i.parent, i.data);
        break;
      }
    }, t.prototype.initziyuStage = function (t, e) {
      Laya.Browser.window.wx && (this.subContextSprite || (Laya.Browser.window.sharedCanvas.width = t.width, Laya.Browser.window.sharedCanvas.height = t.height, this.subTexture = new Laya.Texture(Laya.Browser.window.sharedCanvas), this.subContextSprite = new Laya.Sprite(), this.subContextSprite.size(t.width, t.height), e ? e.addChild(this.subContextSprite) : GameLayerManager.getInstance().uiLayer.displayObject.addChild(this.subContextSprite), this.subContextSprite.graphics.drawTexture(this.subTexture, 0, 0, this.subTexture.width, this.subTexture.height), this.subContextSprite.x = t.x, this.subContextSprite.y = t.y, this.reloadwxCanvas(), Laya.timer.frameLoop(5, this, this.reloadwxCanvas)));
    }, t.prototype.reloadwxCanvas = function () {
      if (this.subTexture && this.subTexture.bitmap) {
        var t = this.subTexture.bitmap._source && this.subTexture.bitmap.reloadCanvasData;
        t && t.call(this.subTexture.bitmap);
      }
    }, t.prototype.closeziyuStage = function () {
      Laya.timer.clear(this, this.reloadwxCanvas), this.subTexture && (this.subTexture.bitmap.alwaysChange = !1, this.subTexture.destroy(), this.subTexture = null), this.subContextSprite && (this.subContextSprite.destroy(), this.subContextSprite = null);
    }, t.prototype.moreGame = function () {
      this.openMiniPrograme("wx641598c6b2c2e309", "pages/fangkuaiwan/index");
    }, t.prototype.createBanner = function (t, e) {
      if (void 0 === t && (t = ""), void 0 === e && (e = {
          bottom: 0
        }), this._bannerIndex--, this._bannerIndex < 0 && (this._bannerIndex = 0), 0 == this._bannerIndex) {
        if ("" != t) {
          for (var i = !1, n = 0; n < this._bannerTypeList.length; n++)
            if (t == this._bannerTypeList[n].type) {
              this._bannerTypeList[n].style = e;
              var r = this._bannerTypeList.splice(n, 1);
              this._bannerTypeList.push(r[0]), i = !0;
              break;
            }
          i || this._bannerTypeList.push({
            type: t,
            style: e
          });
        } else {
          if (0 == this._bannerTypeList.length) return;
          e = this._bannerTypeList[this._bannerTypeList.length - 1].style;
        }
        if (Laya.Browser.window.wx)
          if (this.bannerAd) {
            Laya.Browser.now() - this.bannerRunTime > 18e4 ? (Debuger.log("先移除banner,再添加"), this.bannerAd.offError(this.bannerError), this.bannerAd.destory(), this.createNewBanner(e)) : this.showBanner(e);
          } else this.createNewBanner(e);
      }
    }, t.prototype.createNewBanner = function (t) {
      if (Laya.Browser.window.wx && Laya.Browser.window.wx.createBannerAd) {
        this.bannerRunTime = Laya.Browser.now();
        var e = this.getSystemInfoSync();
        if (this.bannerAd = Laya.Browser.window.wx.createBannerAd({
            adUnitId: "adunit-4a2d00317e7dbe95",
            style: {
              left: 0,
              top: e.screenHeight - 105,
              width: .82 * e.screenWidth
            }
          }), this.bannerAd) {
          this.bannerAd.onError(this.bannerError);
          var i = this,
            n = function (r) {
              Debuger.log("bannerad", r), i.bannerAd.offResize(n), t.hasOwnProperty("left") ? i.bannerAd.style.left = t.left : i.bannerAd.style.left = .5 * (e.windowWidth - r.width), i.bannerHeight = r.height, i.bannerWidth = r.width, console.log("res:" + JSON.stringify(r)), i.bannerAd.style.top = e.windowHeight - r.height - Number(t.bottom);
            };
          this.bannerAd.onResize(n);
        }
        this.showBanner();
      }
    }, t.prototype.bannerError = function (t) {
      Debuger.log(t);
    }, t.prototype.showBanner = function (t) {
      if (void 0 === t && (t = {
          bottom: 0
        }), this.bannerAd) {
        console.log("showBannershowBanner");
        var e = this.getSystemInfoSync();
        this.bannerAd.style.top = e.windowHeight - this.bannerHeight - t.bottom, t.hasOwnProperty("left") ? this.bannerAd.style.left = t.left : this.bannerAd.style.left = .5 * (e.windowWidth - this.bannerWidth), this.bannerAd.show();
      }
    }, t.prototype.hideBanner = function (t) {
      if (void 0 === t && (t = ""), this._bannerIndex++, this.bannerAd && this.bannerAd.hide(), "" != t) {
        for (var e = 0; e < this._bannerTypeList.length; e++)
          if (t == this._bannerTypeList[e].type) {
            this._bannerTypeList.splice(e, 1);
            break;
          }
        if (this._bannerTypeList.length > 0 && this._bannerIndex <= 0) {
          var i = this._bannerTypeList[this._bannerTypeList.length - 1];
          this.createBanner(i.type, i.style);
        }
      }
    }, t.prototype.playVideo = function (e, i, n, r) {
      var a = this;
      void 0 === e && (e = null), void 0 === i && (i = null), void 0 === n && (n = null), void 0 === r && (r = null), Laya.Browser.window.wx && !t.videoplaying && (t.videoplaying = !0, this.videocallobj = e, this.videosucceedCallback = i, this.videofailCallback = n, this.videoAd = Laya.Browser.window.wx.createRewardedVideoAd({
        adUnitId: "adunit-c1a2e120a4370131"
      }), this.videoAd.onClose(this.closeAD), this.videoAd.onError(this.onerro), this.videoAd.load().then(function () {
        return a.videoAd.show();
      }).catch(function (e) {
        console.log(e.errMsg), t.getInstance().failVideo();
      }), null != r && ResourceManager.getInstance().Loader(t.shareUrl, Laya.Loader.JSON, this, function () {
        var e = ResDataManager.getInastance().getResByurl(t.shareUrl).relation;
        e[r] || (r = ShareType.ShareType_default);
        var i = e[r];
        if (i && i.length > 0) {
          var n = i[GameUtils.randRange(0, i.length - 1)];
          n && t.getInstance().sendShareTongji(n.videoId, 2);
        }
      }));
    }, t.prototype.onerro = function (e) {
      t.videoplaying = !1;
    }, t.prototype.closeAD = function (e) {
      var i = t.getInstance();
      e && e.isEnded || void 0 == e ? i.videocallobj && i.videosucceedCallback && (t.dayVideoNum++, i.updateDayVideoInfo(), i.videosucceedCallback.call(i.videocallobj)) : (WordTipsUtils.showWordTips("广告播放失败，要看完哦~"), i.videocallobj && i.videofailCallback && i.videofailCallback.call(i.videocallobj)), t.videoplaying = !1, i.videoAd.offError(this.onerro), i.videoAd.offClose(i.closeAD);
    }, t.prototype.failVideo = function () {
      t.videoplaying = !1, WordTipsUtils.showWordTips("广告加载失败,试试别的方式吧~");
      var e = t.getInstance();
      e.videoAd.offClose(e.closeAD), e.videocallobj && e.videofailCallback && e.videofailCallback.call(e.videocallobj);
    }, t.prototype.showPreviewImage = function (t) {
      Laya.Browser.window.wx && Laya.Browser.window.wx.previewImage({
        current: t,
        urls: [t]
      });
    }, t.prototype.checkEnable = function () {
      return 1 == t.isLegal;
    }, Object.defineProperty(t.prototype, "isshowShare", {
      get: function () {
        if (1 == t.isLegal) return !1;
        var e = 0;
        return 0 == t.isBlackIp ? (e = t.w_video_num, t.w_limit_timeArr.length > 0 && 1 == this.checkTime(t.w_limit_timeArr) && (e = t.w_vlimit_num)) : (e = t.h_video_num, t.h_limit_timeArr.length > 0 && 1 == this.checkTime(t.h_limit_timeArr) && (e = t.h_vlimit_num)), !(t.dayVideoNum < e) && (10 == t.dayShareNum ? (t.dayShareNum++, this.updateDayShareInfo(), !1) : !(t.dayShareNum > 20));
      },
      enumerable: !0,
      configurable: !0
    }), t.prototype.checkTime = function (t) {
      var e = t,
        i = new Date(),
        n = i.getHours();
      n += i.getMinutes() / 100;
      for (var r in e)
        if (e[r][0] <= n && e[r][1] > n) return Debuger.log("startHour:" + e[r][0]), Debuger.log("EndHour:" + e[r][1]), Debuger.log("inTime:true"), !0;
      return !1;
    }, t.checkUpdateVer = function () {
      if (Laya.Browser.window.wx) {
        var t = Laya.Browser.window.wx.getSystemInfoSync().SDKVersion;
        if (Debuger.log("curWXSDKVersion:" + t), GameUtils.compareVersion(t, "1.9.90") < 0) return;
        if (Debuger.log("startUpdatePro!"), !Laya.Browser.window.wx.getUpdateManager) return;
        var e = Laya.Browser.window.wx.getUpdateManager();
        if (!e) return;
        e.onUpdateReady(function () {
          Laya.Browser.window.wx.showModal({
            title: "更新提示",
            content: "新版本已经准备好，是否重启应用？",
            success: function (t) {
              t.confirm && e.applyUpdate();
            }
          });
        });
      }
    }, t.prototype.uploadQuDaoInfo = function () {
      if (1 == t.isNewUser && "" != t.qudao && 0 != t.uid) {
        var e = {};
        e.appId = Global.appid, e.uid = t.uid, e.qudao = t.qudao, Debuger.log("param:" + e), GameHttps.getInstance().send("c=xyx&a=upUserSource", e, null, null), t.isNewUser = 0;
      }
    }, t.prototype.isshowChouti = function () {
      return !this.checkEnable();
    }, t.randomVersion = 0, t.shareUrl = "", t.curTime = 0, t.fromUid = 0, t.session_key = "", t.isBlackIp = 0, t.isLegal = 0, t.limit_time = "", t.h_limit_time = "", t.h_video_num = 0, t.h_limit_timeArr = [], t.h_vlimit_num = 0, t.w_limit_time = "", t.w_video_num = 0, t.w_limit_timeArr = [], t.w_vlimit_num = 0, t.sharegailv = 70, t.dayShareNum = 0, t.dayVideoNum = 0, t.isNewUser = 0, t.qudao = "", t.loginqudao = "", t.videoplaying = !1, t.legalShare = 0, t.choutiopen = 0, t.nowShareindex = 0, t.callbackfailstate = 0, t;
  }(),
  ShareType = function () {
    function t() {}
    return t.ShareType_LegalShare = "legalShare", t.ShareType_chuangguan = "chuangguan", t.ShareType_default = "default", t.ShareType_fuhuo = "fuhuo", t.ShareType_huodejiangli = "huodejiangli", t.ShareType_lingqiang = "lingqiang", t.ShareType_lingxueliang = "lingxueliang", t.ShareType_miaozhunqi = "miaozhunqi", t.ShareType_shouyefenxiang = "shouyefenxiang", t.ShareType_xuanyao = "xuanyao", t.ShareType_miaozhunqishiyong = "miaozhunqishiyong", t.ShareType_shouyelingqiang = "shouyelingqiang", t.ShareType_jinbubuzu = "jinbubuzu", t.ShareType_equiplingqiang = "equiplingqiang", t.ShareType_equiplinghelmet = "equiplinghelmet", t.ShareType_equiplingarmor = "equiplingarmor", t;
  }(),
  RankType = function () {
    function t() {}
    return t.RankType_show_friend_rank = "show_friend_rank", t.RankType_group_week_result = "group_week_result", t.RankType_show_result = "show_result", t.RankType_show_next_page = "show_next_page", t.RankType_show_up_page = "show_up_page", t.RankType_hide_result = "hide_result", t.show_chaoyue_game = "show_chaoyue_game", t;
  }(),
  ADIconView = function () {
    function t(t, e, i) {
      this.dataIndex = 0, this.more_btn = t, this.adsData = e;
      for (var n, r = 0, a = 0; a < this.adsData.length; a++) {
        r += parseInt(this.adsData[a].score), n = this.adsData[a].btn.imgs;
        for (var s in n) n[s] = i + n[s];
      }
      this.totalscore = r, this.ad();
    }
    return t.prototype.ad = function () {
      this.adsData && this.adsData.length > 0 && (this.more_btn.on(Laya.Event.CLICK, this, this.advHandler), this.advAnim = new UrlAnimal(this.more_btn), this.currentData = this.adsData[this.dataIndex], this.link = this.adsData[this.dataIndex].url_page + this.adsData[this.dataIndex].url_path, this.advAnim.play(Number(this.adsData[this.dataIndex].btn.time), this.adsData[this.dataIndex].btn.imgs));
    }, t.prototype.advHandler = function () {
      ADIGamePlatform.getInstance().sendTongji(this.currentData), this.nextAdv();
    }, t.prototype.nextAdv = function () {
      this.dataIndex = (this.dataIndex + 1) % this.adsData.length;
      var t = this.adsData[this.dataIndex];
      this.currentData = t, this.link = t.url_page + t.url_path, this.advAnim.play(Number(t.btn.time), t.btn.imgs), ADIGamePlatform.getInstance().sendADCountEvent();
    }, t.prototype.dispose = function () {
      this.more_btn = null, this.more_btn.off(Laya.Event.CLICK, this, this.advHandler), this.advAnim && (this.advAnim.stop(), this.advAnim = null);
    }, t;
  }(),
  UrlAnimal = function () {
    function t(t) {
      this.index = 0, this.target = t;
    }
    return t.prototype.play = function (t, e) {
      this.stop(), e && (this.texture = e), this.texture && this.texture.length > 1 ? Laya.timer.loop(t, this, this.timerHandler) : this.timerHandler();
    }, t.prototype.timerHandler = function () {
      this.target.graphics.clear(), this.target.graphics.loadImage(this.texture[this.index]), this.index++, this.index >= this.texture.length && (this.index = 0);
    }, t.prototype.stop = function () {
      this.index = 0, Laya.timer.clear(this, this.timerHandler);
    }, t;
  }(),
  ShootType = function () {
    function t() {}
    return t.ShootType_forword = "ShootType_forword", t.ShootType_endVec = "ShootType_endVec", t;
  }(),
  SpecialTypes = function () {
    function t() {}
    return t.SpecialTypes_0 = 0, t.SpecialTypes_1 = 1, t.SpecialTypes_2 = 2, t.SpecialTypes_3 = 3, t;
  }(),
  GamesType = function () {
    function t() {}
    return t.GuaQiaType_guaqia = "guaqia", t.GuaQiaType_wujin = "wujin", t.GuaQiaType_jijiangkaiq = "jijiangkaiq", t;
  }(),
  EquipType = function () {
    function t() {}
    return t.EquipType_gun = "EquipType_gun", t.EquipType_helmet = "EquipType_helmet", t.EquipType_armor = "EquipType_armor", t;
  }(),
  BulletType = function () {
    function t() {}
    return t.BulletType_danfa = 0, t.BulletType_lianfa1 = 1, t.BulletType_lianfa2 = 2, t.BulletType_sandan = 3, t;
  }(),
  BtnGetType = function () {
    function t() {}
    return t.BtnGetType_getblood = "BtnGetType_getblood", t.BtnGetType_getgun = "BtnGetType_getgun", t.BtnGetType_getmiaozhun = "BtnGetType_getmiaozhun", t;
  }(),
  BannerType = function () {
    function t() {}
    return t.BannerType_shouye = "BannerType_shouye", t.BannerType_rank = "BannerType_rank", t.BannerType_gameing = "BannerType_gameing", t.BannerType_gongxihuode = "BannerType_gongxihuode", t.BannerType_revive = "BannerType_revive", t.BannerType_guanqia = "BannerType_guanqia", t;
  }(),
  GunType = function () {
    function t() {}
    return t.GunType_1 = 1, t.GunType_2 = 2, t.GunType_3 = 3, t.GunType_4 = 4, t;
  }(),
  GuanQiaStateType = function () {
    function t() {}
    return t.GuanQiaStateType_0 = 0, t.GuanQiaStateType_1 = 1, t.GuanQiaStateType_2 = 2, t.GuanQiaStateType_3 = 3, t.GuanQiaStateType_4 = 4, t;
  }();
! function (t) {
  t.SOCKET_CONNECT_SUCCEED = "SOCKET_CONNECT_SUCCEED", t.SOCKET_User_Login = "User_Login", t.SOCKET_WEBSOCKET_AGAIN_HANDLER = "websocketAgainhandler", t.SOCKET_RECEIVE_ERRO = "SOCKET_RECEIVE_ERRO";
}(SocketNofify || (SocketNofify = {}));
var LayerNotify;
! function (t) {
  t.LAYER_BACKGROUND = "LAYER_BACKGROUND", t.LAYER_UILAYER = "LAYER_UILAYER", t.LAYER_TOPLAYER = "LAYER_TOPLAYER", t.LAYER_EFFECTLAYER = "LAYER_EFFECTLAYER", t.LAYER_GUIDELAYER = "LAYER_GUIDELAYER", t.LAYER_MAXTOP = "LAYER_MAXTOP";
}(LayerNotify || (LayerNotify = {}));
var EventUtils;
! function (t) {
  t.Event = function (t, e, i, n) {
    return void 0 === e && (e = null), void 0 === i && (i = !1), void 0 === n && (n = !1), new lcp.LEvent(t, e, i, n);
  }, t.dispatchEvent = function (t, e, i, n) {
    void 0 === e && (e = null), void 0 === i && (i = !1), void 0 === n && (n = !1), lcp.LListener.getInstance().dispatchEvent(t, e);
  }, t.addEventListener = function (t, e, i, n, r) {
    void 0 === n && (n = !1), void 0 === r && (r = 0), lcp.LListener.getInstance().addEventListener(t, e, i, n, r);
  }, t.hasEventListener = function (t) {
    return lcp.LListener.getInstance().hasEventListener(t);
  }, t.removeEventListener = function (t, e, i, n, r) {
    void 0 === n && (n = !1), void 0 === r && (r = 0), lcp.LListener.getInstance().removeEventListener(t, e, i);
  };
}(EventUtils || (EventUtils = {}));
var PathConfig;
! function (t) {
  t.assetHost = "res/", t.configs = "configs/", t.ui = "ui/", t.player = "player/", t.icon = "icon/", t.uibg = "uibg/", t.wxlocal = "wxlocal/", t.sounds = "sounds/", t.scene = "scene/", t.mainplayer = "mainplayer/", t.bullet = "bullet/", t.body = "body/", t.head = "head/", t.equips = "equips/", t.guns = "guns/", t.effects = "effects/", t.icon = "icon/", t.init = function () {}, t.getgunicon = function (e) {
    return Global.getUrl(t.assetHost + t.icon + "gun/" + e + ".png");
  }, t.getheadicon = function (e) {
    return Global.getUrl(t.assetHost + t.icon + "head/" + e + ".png");
  }, t.getbodyicon = function (e) {
    return Global.getUrl(t.assetHost + t.icon + "body/" + e + ".png");
  }, t.geteffect = function (e) {
    return Global.getUrl(t.wxlocal + t.effects + e + ".lh");
  }, t.getgunlh = function (e) {
    return Global.getUrl(t.wxlocal + t.guns + e + ".lh");
  }, t.getgunMesh = function (e) {
    return Global.getUrl(t.wxlocal + t.guns + "Assets/Models/gun/" + e + ".lm");
  }, t.getgunMaterials = function (e) {
    return Global.getUrl(t.wxlocal + t.guns + "Assets/Models/gun/Materials/" + e + ".lmat");
  }, t.getgunMeshAndMaterial = function (e, i) {
    return [{
      url: t.getgunMesh(e),
      type: Laya.MeshSprite3D
    }, {
      url: t.getgunMaterials(i),
      type: Laya.StandardMaterial
    }];
  }, t.getequipslh = function (e) {
    return Global.getUrl(t.wxlocal + t.equips + e + ".lh");
  }, t.getequipsMesh = function (e) {
    return Global.getUrl(t.wxlocal + t.equips + "Assets/Models/Equips/" + e + ".lm");
  }, t.getequipsMaterials = function (e) {
    return Global.getUrl(t.wxlocal + t.equips + "Assets/Models/Equips/Materials/" + e + ".lmat");
  }, t.getEquipMeshAndMaterial = function (e, i) {
    return [{
      url: t.getequipsMesh(e),
      type: Laya.MeshSprite3D
    }, {
      url: t.getequipsMaterials(i),
      type: Laya.StandardMaterial
    }];
  }, t.getscene = function (e) {
    return Global.getUrl(t.assetHost + t.scene + e + ".lh");
  }, t.getsound = function (e) {
    return Global.getUrl(t.wxlocal + t.sounds + e + ".mp3");
  }, t.getuibg = function (e) {
    return Global.getUrl(t.assetHost + t.uibg + e + ".png");
  }, t.getResConfig = function () {
    return Global.getUrl(t.wxlocal + "resConfig.json");
  }, t.getConfig = function () {
    return Global.getUrl(t.wxlocal + "gameConfig.bin");
  };
}(PathConfig || (PathConfig = {}));
var SettingCFG = function () {
    function t() {}
    return t.initCfg = function (e) {
      var i = e.split("\n"),
        n = 0;
      for (n = 0; n < i.length; n++) {
        var r = i[n].split("&"),
          a = new t();
        a.id = Number(r[0]), a.desc = r[1], a.value = Number(r[2]), t.dict[a.id] = a, t.vec.push(a);
      }
    }, t.dict = {}, t.vec = [], t;
  }(),
  ScreeningCFG = function () {
    function t() {}
    return t.initCfg = function (e) {
      var i = e.split("\n"),
        n = 0;
      for (n = 0; n < i.length; n++) {
        var r = i[n].split("&"),
          a = new t();
        a.screening = Number(r[0]), a.bool = Number(r[1]), a.bossbool = Number(r[2]), a.number = Number(r[3]), a.distance = Number(r[4]), a.distancemax = Number(r[5]), a.bossdistance = Number(r[6]), a.bossdistancemax = Number(r[7]), a.type = Number(r[8]), a.dirennumber = Number(r[9]), a.reward = Number(r[10]), a.gunid = Number(r[11]), a.isopen = Number(r[12]), a.time = Number(r[13]), t.dict[a.screening] = a, t.vec.push(a);
      }
    }, t.dict = {}, t.vec = [], t;
  }(),
  ResourceCFG = function () {
    function t() {}
    return t.initCfg = function (e) {
      var i = e.split("\n"),
        n = 0;
      for (n = 0; n < i.length; n++) {
        var r = i[n].split("&"),
          a = new t();
        a.id = Number(r[0]), a.type = Number(r[1]), a.resourceBody = Number(r[2]), a.resourcehead = Number(r[3]), a.gunrID = Number(r[4]), a.hurt1 = Number(r[5]), t.dict[a.id] = a, t.vec.push(a);
      }
    }, t.dict = {}, t.vec = [], t;
  }(),
  HelmetCFG = function () {
    function t() {}
    return t.initCfg = function (e) {
      var i = e.split("\n"),
        n = 0;
      for (n = 0; n < i.length; n++) {
        var r = i[n].split("&"),
          a = new t();
        a.id = Number(r[0]), a.level = Number(r[1]), a.name = r[2], a.blood = Number(r[3]), a.type = Number(r[4]), a.number = Number(r[5]), a.resource = r[6], a.helmetid = Number(r[7]), a.resource2D = r[8], a.mesh = r[9], a.show = Number(r[10]), t.dict[a.id] = a, t.vec.push(a);
      }
    }, t.dict = {}, t.vec = [], t;
  }(),
  GunCFG = function () {
    function t() {}
    return t.initCfg = function (e) {
      var i = e.split("\n"),
        n = 0;
      for (n = 0; n < i.length; n++) {
        var r = i[n].split("&"),
          a = new t();
        a.id = Number(r[0]), a.level = Number(r[1]), a.name = r[2], a.number = Number(r[3]), a.trajectory = Number(r[4]), a.length = Number(r[5]), a.hurt = Number(r[6]), a.need = Number(r[7]), a.gunid = Number(r[8]), a.type = Number(r[9]), a.resource = r[10], a.resource2D = r[11], a.mesh = r[12], a.CF = Number(r[13]), a.sort = Number(r[14]), t.dict[a.id] = a, t.vec.push(a);
      }
    }, t.dict = {}, t.vec = [], t;
  }(),
  ArmorCFG = function () {
    function t() {}
    return t.initCfg = function (e) {
      var i = e.split("\n"),
        n = 0;
      for (n = 0; n < i.length; n++) {
        var r = i[n].split("&"),
          a = new t();
        a.id = Number(r[0]), a.level = Number(r[1]), a.name = r[2], a.blood = Number(r[3]), a.type = Number(r[4]), a.number = Number(r[5]), a.resource = r[6], a.armorid = Number(r[7]), a.resource2D = r[8], a.mesh = r[9], a.show = Number(r[10]), t.dict[a.id] = a, t.vec.push(a);
      }
    }, t.dict = {}, t.vec = [], t;
  }(),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  RecConfigs = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.getInstance = function () {
      return null == this.instance && (this.instance = new e()), this.instance;
    }, e.prototype.init = function () {
      this.groupdict = {};
    }, e.prototype.initRec = function (t) {
      if (null != t) {
        var e = JSON.parse(t),
          i = e.groups,
          n = e.resources,
          r = {};
        for (var a in n) {
          var s = n[a];
          switch (s.type) {
            case "bin":
              s.type = Loader.BUFFER;
              break;
            case "ls":
              s.type = Laya.Scene;
              break;
            case "lh":
              s.type = Laya.Sprite3D;
              break;
            case "lm":
              s.type = Laya.MeshSprite3D;
          }
          r[s.name] = s;
        }
        for (var o in i) {
          var h = i[o],
            l = h.keys.split(","),
            u = [];
          for (var t in l) {
            var c = l[t];
            if ("" != c) {
              var _ = r[c].url;
              _ = _.replace("res/", PathConfig.assetHost), u.push({
                url: Global.getUrl(_),
                type: r[c].type
              });
            }
          }
          this.groupdict[h.name] = u;
        }
        ResDataManager.instance.clearResByUrl(PathConfig.getResConfig(), !0);
      }
    }, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }();
! function (t) {
  var e = function (t) {
    function e(e, i, n, r) {
      void 0 === i && (i = null), void 0 === n && (n = !1), void 0 === r && (r = !1);
      var a = t.call(this) || this;
      return a.CLASS_NAME = "LEvent", i && (a._obj = i), a;
    }
    return __extends(e, t), e.prototype.clone = function (t) {
      return new e(this.type, t || this._obj);
    }, e.prototype.toString = function () {
      console.log(this.CLASS_NAME, "type", "bubbles", "cancelable");
    }, Object.defineProperty(e.prototype, "param", {
      get: function () {
        return this._obj;
      },
      enumerable: !0,
      configurable: !0
    }), e;
  }(Laya.Event);
  t.LEvent = e;
}(lcp || (lcp = {}));
var lcp, __extends = this && this.__extends || function () {
  var t = function (e, i) {
    return (t = Object.setPrototypeOf || {
        __proto__: []
      }
      instanceof Array && function (t, e) {
        t.__proto__ = e;
      } || function (t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
      })(e, i);
  };
  return function (e, i) {
    function n() {
      this.constructor = e;
    }
    t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
  };
}();
! function (t) {
  var e = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.CLASS_NAME = "LListener", e.isInit = !1, e.isInit, null == e._dispatcher && (e._dispatcher = new Laya.EventDispatcher(), e.isInit = !0), e;
    }
    return __extends(e, t), e.getInstance = function () {
      return null == this._instance && (this._instance = new e()), this._instance;
    }, e.prototype.addEventListener = function (t, e, i, n, r) {
      void 0 === n && (n = !1), void 0 === r && (r = 0), this._dispatcher.on(t, i, e);
    }, e.prototype.removeEventListener = function (t, e, i, n) {
      void 0 === n && (n = !1), this._dispatcher.off(t, i, e);
    }, e.prototype.hasEventListener = function (t) {
      return this._dispatcher.hasListener(t);
    }, e.prototype.dispatchEvent = function (t, e) {
      return this._dispatcher.event(t, e);
    }, e;
  }(Laya.EventDispatcher);
  t.LListener = e;
}(lcp || (lcp = {}));
var __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  BaseView = function (t) {
    function e(e, i, n, r, a, s) {
      void 0 === e && (e = ""), void 0 === i && (i = ""), void 0 === n && (n = !1), void 0 === r && (r = !1), void 0 === a && (a = !1), void 0 === s && (s = !0);
      var o = t.call(this) || this;
      return o._pkgName = "", o._resName = "", o._iscache = !0, o._isShowAnimation = !1, o._clickBgIsColse = !1, o._iscache = s, o._pkgName = e, o._resName = i, o._isAddpackage = n, o._isShowAnimation = r, o._clickBgIsColse = a, o.showModalWait(), o;
    }
    return __extends(e, t), e.prototype.setclickBgIsColse = function () {
      this.isShowing && this._clickBgIsColse && this.contentPane && (this._clickBg || (this._clickBg = new fairygui.GLoader(), this._clickBg.touchable = !0, this._clickBg.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height), this._clickBg.url = "ui://4ikzubtqqa6w4", this._clickBg.fill = fairygui.LoaderFillType.ScaleFree, this._clickBg.alpha = .5, this._clickBg.visible = !1, this.contentPane.addChildAt(this._clickBg, 0), this._clickBg.onClick(this, this.closeViewfun)));
    }, e.prototype.closeViewfun = function () {
      UiManager.getInstance().close(this.viewKey);
    }, e.prototype.loadUi = function (t, e, i) {
      ResourceManager.getInstance().loadGroup(t, e, i);
    }, e.prototype.loadUibyArr = function (t, e, i) {
      ResourceManager.getInstance().Loaders(t, e, i);
    }, e.prototype.removeEffectPackage = function (t) {
      ResDataManager.instance.removePackage(t, !0);
    }, e.prototype.getpanelController = function (t) {
      return this.item_panel ? this.item_panel.getController(t) : null;
    }, e.prototype.getpanelTransition = function (t) {
      return this.item_panel ? this.item_panel.getTransition(t) : null;
    }, e.prototype.onInit = function () {
      t.prototype.onInit.call(this), "" != this._pkgName && "" != this._resName && this.parseUi(this._pkgName, this._resName, this._isAddpackage, this._iscache);
    }, e.prototype.parseUi = function (t, e, i, n) {
      void 0 === n && (n = !0), this._pkgName = t, this._resName = e, ResDataManager.instance.adduiPackage(t, i, n), this.contentPane = fairygui.UIPackage.createObject(t, e).asCom;
      for (var r in this.contentPane._children) {
        var a = this.contentPane._children[r];
        if ("item_panel" == a.name) {
          var s = a;
          if (s)
            for (var o in s._children) {
              var h = s._children[o];
              this[h.name] = h;
            }
          this.item_panel = a;
        } else this[a.name] = a;
      }
      this.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height), this.closeModalWait(), this.layout(), this.setPivot(.5, .5), this.setclickBgIsColse(), this.do1ShowAnimation();
    }, e.prototype.do1ShowAnimation = function () {
      this._isShowAnimation ? (this.setScale(.3, .3), laya.utils.Tween.to(this, {
        scaleX: 1,
        scaleY: 1
      }, 100, laya.utils.Ease.quadInOut, Handler.create(this, this.onShown1))) : this.onShown1();
    }, e.prototype.onShown1 = function () {
      this._clickBg && (this._clickBg.visible = !0), t.prototype.onShown.call(this);
    }, e.prototype.getComById = function (t) {
      return this.contentPane.getChild(t).asCom;
    }, e.prototype.getControllerByBame = function (t) {
      return this.contentPane.getController(t);
    }, e.prototype.getTransitionByName = function (t) {
      return this.contentPane.getTransition(t);
    }, e.prototype.getProxy = function (t) {
      return MVCObjectPool.getInstance().getProxy(t);
    }, e.prototype.dispacheDataEvent = function (t, e) {
      void 0 === e && (e = null), EventUtils.dispatchEvent(t, e);
    }, e.prototype.addDataEvent = function (t, e, i) {
      EventUtils.addEventListener(t, i, e);
    }, e.prototype.removeDataEvent = function (t, e, i) {
      EventUtils.removeEventListener(t, i, e);
    }, e.prototype.layout = function () {}, e.prototype.destory = function () {
      ResDataManager.instance.removePackage(this._pkgName, !1), this._pkgName = null, this._resName = null, this._clickBg && (this._clickBg.offClick(this, this.closeViewfun), this._clickBg.dispose(), this._clickBg = null), this.viewKey = null, this.dispose();
    }, e;
  }(fairygui.Window),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ChildBaseView = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.constructFromXML = function (e) {
      t.prototype.constructFromXML.call(this, e);
      for (var i in this._children) {
        var n = this._children[i];
        this[n.name] = n;
      }
      this.onInit();
    }, e.prototype.onInit = function () {}, e.prototype.getProxy = function (t) {
      return MVCObjectPool.getInstance().getProxy(t);
    }, e.prototype.dispacheDataEvent = function (t, e) {
      void 0 === e && (e = null), EventUtils.dispatchEvent(t, e);
    }, e.prototype.addDataEvent = function (t, e, i) {
      EventUtils.addEventListener(t, i, e);
    }, e.prototype.removeDataEvent = function (t, e, i) {
      EventUtils.removeEventListener(t, i, e);
    }, e.prototype.hasDataEvent = function (t) {
      return EventUtils.hasEventListener(t);
    }, e;
  }(fairygui.GComponent),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  MVCObjectPool = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.getInstance = function () {
      return null == this._instance && (this._instance = new e()), this._instance;
    }, e.prototype.addProxy = function (t) {
      Singleton.create(t);
    }, e.prototype.getProxy = function (t) {
      return Singleton.getInstance(t);
    }, e.prototype.removeProxy = function (t) {
      Singleton.remove(t);
    }, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ObjectPool = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.register = function (t, i) {
      e._classargDict[t] = i, e._content[t] = [];
    }, e.getObj = function (t) {
      if (e._content[t]) {
        if (0 == e._content[t].length) {
          return new(0, e._classargDict[t])();
        }
        return e._content[t].shift();
      }
      return Debuger.log("此key值对应的类未被注册"), null;
    }, e.clearObj = function (t, i) {
      e._content[t] && e._content[t].push(i);
    }, e._classargDict = {}, e._content = {}, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  Singleton = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.getInstance = function (t) {
      if (null == t.key) throw new Error("getinstance erro");
      return this._dict[t.key];
    }, e.getInstanceOrCreate = function (t) {
      if (null == t.key) throw new Error("getInstanceOrCreate erro");
      return this.create(t), this._dict[t.key];
    }, e.create = function (t) {
      if (null == t.key) throw new Error("create erro");
      return null == this._dict[t.key] && (this._dict[t.key] = new t()), this._dict[t.key];
    }, e.remove = function (t) {
      var e = t.key;
      null != this._dict[e] && this._dict[e].destory();
    }, e.prototype.destory = function () {}, e._dict = {}, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  Proxys = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._objectPool = MVCObjectPool.getInstance(), e.initProxy(), e;
    }
    return __extends(e, t), e.prototype.initProxy = function () {}, e.prototype.addDataEvent = function (t, e, i) {
      EventUtils.addEventListener(t, i, e);
    }, e.prototype.dispacheDataEvent = function (t, e) {
      void 0 === e && (e = null), EventUtils.dispatchEvent(t, e);
    }, e.prototype.removeDataEvent = function (t, e, i) {
      EventUtils.removeEventListener(t, i, e);
    }, e.prototype.getProxy = function (t) {
      return this._objectPool.getProxy(t);
    }, Object.defineProperty(e.prototype, "roleVO", {
      get: function () {
        return RoleVO.getInstance();
      },
      enumerable: !0,
      configurable: !0
    }), e;
  }(Singleton),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GameHttps = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._isrequesting = !1, e;
    }
    return __extends(e, t), e.getInstance = function () {
      return null == this._instance && (this._instance = new e()), this._instance;
    }, e.prototype.init = function () {
      this._callbackList = [], this.hr = new Laya.HttpRequest(), this.hr.http && (this.hr.http.timeout = 5e3), this.hr.on(Laya.Event.PROGRESS, this, this.onHttpRequestProgress), this.hr.on(Laya.Event.COMPLETE, this, this.onHttpRequestComplete), this.hr.on(Laya.Event.ERROR, this, this.onHttpRequestError);
    }, e.prototype.send = function (t, e, i, n, r) {
      void 0 === r && (r = !1);
      var a = {};
      a.act = t, a.data = e, a.callback = i, a.callbackobj = n, a.isShowWait = r, a.sendtype = "post", this._callbackList.push(a), this.sendByPost(t, e, i, n, r);
    }, e.prototype.sendByPost = function (t, e, i, n, r) {
      if (void 0 === r && (r = !1), !this._isrequesting)
        if (this._isrequesting = !0, r && fairygui.GRoot.inst.showModalWait(), Laya.Browser.window.BK) {
          var a = JSON.stringify(e);
          this.hr.send(Global.httpurl + t, a, "post", "json", ["Content-Type", "application/json"]);
        } else Debuger.log("http:" + Global.httpurl + t, e), this.hr.send(Global.httpurl + t, e, "post", "json", ["Content-Type", "application/json"]);
    }, e.prototype.sendbyget = function (t, e, i, n, r, a) {
      void 0 === e && (e = null), void 0 === i && (i = null), void 0 === n && (n = null), void 0 === r && (r = null), void 0 === a && (a = !1), a && fairygui.GRoot.inst.showModalWait();
      var s = "";
      if (i) {
        var o = 0;
        for (var h in i) 0 == o ? (o = 1, s += "?" + h + "=" + i[h]) : s += "&" + h + "=" + i[h];
      }
      Debuger.log("httpsendtypeget:" + t + e + s), this.hr.send(t + e + s, null, "get", "text");
    }, e.prototype.onHttpRequestError = function (t) {
      if (Debuger.log("********onHttpRequestError********"), t && Debuger.log(t), fairygui.GRoot.inst.closeModalWait(), this._callbackList.length > 0) {
        Debuger.log("http请求错误，模拟成功返回");
        var e = this._callbackList.shift(),
          i = e.callback,
          n = e.callbackobj;
        i && n && i.call(n, null);
      }
    }, e.prototype.onHttpRequestProgress = function (t) {
      Debuger.log(t);
    }, e.prototype.onHttpRequestComplete = function (t) {
      if (fairygui.GRoot.inst.closeModalWait(), Debuger.log("httpReceive:", this.hr.data), this._isrequesting = !1, this._callbackList.length > 0) {
        var e = this._callbackList.shift();
        if (this.hr.data) {
          var i = e.callback,
            n = e.callbackobj,
            r = this.hr.data;
          if (r.hasOwnProperty("result")) "ok" == r.result ? i && n && i.call(n, r) : (Debuger.log("失败，模拟成功"), i && n && i.call(n, null));
          else if (r.hasOwnProperty("error")) {
            0 == Number(r.error) ? i && n && i.call(n, r) : (Debuger.log("失败，模拟成功"), i && n && i.call(n, null));
          } else Debuger.log("失败3，模拟成功"), i && n && i.call(n, null);
        }
      }
      if (this._callbackList.length > 0) {
        var a = this._callbackList[0];
        "post" == a.sendtype && this.sendByPost(a.act, a.data, a.callback, a.callbackobj, a.isShowWait);
      }
    }, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  TongjiHttps = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.init(), e;
    }
    return __extends(e, t), e.getInstance = function () {
      return null == this._instance && (this._instance = new e()), this._instance;
    }, e.prototype.init = function () {
      this.hr = new Laya.HttpRequest(), this.hr.http && (this.hr.http.timeout = 5e3), this.hr.on(Laya.Event.COMPLETE, this, this.onHttpRequestComplete);
    }, e.prototype.send = function (t, e) {
      if (Laya.Browser.window.BK) {
        var i = JSON.stringify(e);
        this.hr.send(Global.httpurl + t, i, "post", "json", ["Content-Type", "application/json"]);
      } else Debuger.log("tongji_posthttp:" + Global.httpurl + t, e), this.hr.send(Global.httpurl + t, e, "post", "json", ["Content-Type", "application/json"]);
    }, e.prototype.sendbyget = function (t, e, i, n, r, a) {
      void 0 === e && (e = null), void 0 === i && (i = null), void 0 === n && (n = null), void 0 === r && (r = null), void 0 === a && (a = !1);
      var s = "";
      if (i) {
        var o = 0;
        for (var h in i) 0 == o ? (o = 1, s += "?" + h + "=" + i[h]) : s += "&" + h + "=" + i[h];
      }
      Debuger.log("tongji_getHttp:" + t + e + s), this.hr.send(t + e + s, null, "get", "text");
    }, e.prototype.onHttpRequestComplete = function (t) {}, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  BaseVO = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.setInfo = function (t) {
      if (t)
        for (var e in t) {
          null != this[e] && (this[e] = t[e]);
        }
    }, e.prototype.dispatchEvent = function (t, e) {
      this.event(t, e);
    }, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  CacheVO = function (t) {
    function e() {
      var e = null !== t && t.apply(this, arguments) || this;
      return e.ref = 0, e.time = 0, e.packageName = "", e;
    }
    return __extends(e, t), e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GameContents = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.configClass = {
        HelmetCFG: HelmetCFG,
        GunCFG: GunCFG,
        ResourceCFG: ResourceCFG,
        ScreeningCFG: ScreeningCFG,
        ArmorCFG: ArmorCFG,
        SettingCFG: SettingCFG
      }, e;
    }
    return __extends(e, t), e.prototype.initGame = function () {
      TimerService.getInastance().init(), GameLayerManager.getInstance().initlayer(), UiManager.getInstance().init(), RecConfigs.getInstance().init(), ResourceManager.getInstance().init(), ResDataManager.getInastance().init(), CacheManager.getInstance(), SoundssManager.getInstance().init(), BinderManager.binderAll(), this.initObjectPool(), this.initProxy(), this.beginLoadHandler();
    }, e.prototype.beginLoadHandler = function () {
      Laya.URL.rootPath = Laya.URL.basePath = Global.getBasePath(), Debuger.log(Laya.URL.rootPath);
      var t = [{
        url: PathConfig.getResConfig(),
        type: Loader.TEXT
      }];
      t.push({
        url: PathConfig.getConfig(),
        type: Loader.BUFFER
      }), ResourceManager.getInstance().Loaders(t, this, this.recloadComplete);
    }, e.prototype.initObjectPool = function () {}, e.prototype.initProxy = function () {
      MVCObjectPool.getInstance().addProxy(LoginProxy), MVCObjectPool.getInstance().addProxy(CacheProxy), MVCObjectPool.getInstance().addProxy(MainProxy), MVCObjectPool.getInstance().addProxy(ArmorProxy), MVCObjectPool.getInstance().addProxy(GunProxy), MVCObjectPool.getInstance().addProxy(HelmetProxy), MVCObjectPool.getInstance().addProxy(RoleProxy), MVCObjectPool.getInstance().addProxy(GuanQIaProxy), MVCObjectPool.getInstance().addProxy(DayProxy), MVCObjectPool.getInstance().addProxy(GoldBuzuProxy), MVCObjectPool.getInstance().addProxy(UpGunProxy), MVCObjectPool.getInstance().addProxy(MZQshiyongProxy), MVCObjectPool.getInstance().addProxy(ChoutiProxy);
    }, e.prototype.recloadComplete = function () {
      this.parseConfig();
      var t = ResDataManager.instance.getResByurl(PathConfig.getResConfig(), !1);
      RecConfigs.instance.initRec(t), ResourceManager.instance.loadGroup("loading", this, this.onPreLoaded, this.onPreprogress);
    }, e.prototype.onPreprogress = function (t) {}, e.prototype.onPreLoaded = function () {
      ResDataManager.instance.adduiPackage("loading", !0, !1), fairygui.UIConfig.globalModalWaiting = fairygui.UIPackage.getItemURL("loading", "GlobalWaiting"), fairygui.UIConfig.windowModalWaiting = fairygui.UIPackage.getItemURL("loading", "GlobalWaiting"), this.loadsubpackage();
    }, e.prototype.parseConfig = function () {
      for (var t = Loader.getRes(PathConfig.getConfig()), e = new Zlib.RawInflate(t).decompress(), i = new Laya.Byte(e), n = i.length; i.pos < n;) {
        var r = i.getInt32(),
          a = i.readUTFBytes(r),
          s = i.getInt32(),
          o = i.readUTFBytes(s),
          h = this.configClass[a];
        h ? h.initCfg(o) : Debuger.log("没有注册此类" + a);
      }
    }, e.prototype.loadsubpackage = function () {
      var t = UiManager.instance.add(LoadingView);
      t && t.showValue(0, "资源初始化中："), WXGamePlatform.getInstance().loadSubpackage("subpackage", this, this.loadendcallback, this.loadupdatecallback);
    }, e.prototype.loadendcallback = function () {
      this.startGame();
    }, e.prototype.loadupdatecallback = function (t) {
      var e = UiManager.getInstance().getView(LoadingView);
      e && e.showValue(Math.floor(t), "资源初始化中：");
    }, e.prototype.startGame = function () {
      MVCObjectPool.getInstance().getProxy(LoginProxy).startGame(), WXGamePlatform.checkUpdateVer();
    }, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ArmorProxy = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.inviteNum = 0, e;
    }
    return __extends(e, t), e.prototype.init = function () {
      this.armorList = [], this.armorDict = {}, this.cfgDict = {};
      var t;
      for (var e in ArmorCFG.dict) 1 == (t = ArmorCFG.dict[e]).show && (this.cfgDict[t.armorid] || (this.cfgDict[t.armorid] = {}), this.cfgDict[t.armorid][t.level] = t);
      for (var e in ArmorCFG.dict)
        if (1 == (t = ArmorCFG.dict[e]).show && !this.armorDict[t.armorid]) {
          var i = new ArmorVO();
          this.armorDict[t.armorid] = i, this.armorList.push(i);
          var n = CacheManager.getInstance().getGameCacheObj(RoleDataType.armorData + t.armorid);
          n.level ? i.updateData(t.armorid, n.level, this.cfgDict, !0, n.value) : i.updateData(t.armorid, 1, this.cfgDict, !1, 0);
        }
      var r = Number(CacheManager.getInstance().getCachestr(RoleDataType.user_armor)),
        a = !1;
      0 == r && (r = 1, a = !0), this.myarmorVo = this.armorDict[r], this.myarmorVo.isuser = !0, this.myarmorVo.updatehas(!0), a && this.myarmorVo.addCache();
    }, e.prototype.changetArmor = function (t) {
      this.myarmorVo.isuser = !1;
      var e = this.armorDict[t.cfg.armorid];
      this.myarmorVo = e, this.myarmorVo.isuser = !0, CacheManager.getInstance().addCachestr(RoleDataType.user_armor, this.myarmorVo.cfg.armorid), this.dispacheDataEvent(GameEvent.GameEvent_changeUserArmor), this.dispacheDataEvent(GameEvent.GameEvent_updateArmorList);
    }, e.prototype.ischanuplev = function () {
      return !(!this.myarmorVo || !this.myarmorVo.nextCfg || this.myarmorVo.nextCfg.type != GunType.GunType_1) && this.roleVO.gold >= this.myarmorVo.nextCfg.number;
    }, e.prototype.uplevarmor = function (t) {
      var e = this.armorDict[t.cfg.armorid];
      if (e) {
        e.uplev() ? (this.dispacheDataEvent(GameEvent.GameEvent_updateArmorList), WordTipsUtils.showWordTips("升级成功")) : WordTipsUtils.showWordTips("已经满级，无法升级");
      }
    }, e.prototype.buyarmor = function (t) {
      var e = this.armorDict[t.cfg.armorid];
      e && (e.updatehas(!0), e.addCache(), this.dispacheDataEvent(GameEvent.GameEvent_updateArmorList));
    }, e.prototype.addHasValue = function (t) {
      var e = this.armorDict[t.cfg.armorid];
      if (e) {
        var i = t.hasValue + 1;
        e.updateHasValue(i), this.dispacheDataEvent(GameEvent.GameEvent_updateArmorList);
      }
    }, e.prototype.setInviteNum = function (t) {
      this.inviteNum = t;
      var e;
      for (var i in this.armorDict)(e = this.armorDict[i]).cfg.type == GunType.GunType_2 && (e.hasValue = this.inviteNum);
    }, e.key = "ArmorProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ArmorVO = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.id = 0, e.level = 0, e.ishas = !1, e.isuser = !1, e.maxLevel = 0, e.hasValue = 0, e;
    }
    return __extends(e, t), e.prototype.updateData = function (t, e, i, n, r) {
      this._cfgDict = i, this.maxLevel = 0;
      var a = i[t];
      for (var s in a) this.maxLevel++;
      this.id = t, this.level = e, this.cfg = i[this.id][this.level], this.cfg.blood = Math.floor(this.cfg.blood), this.hasValue = r, 2 != this.cfg.type && 3 != this.cfg.type ? this.ishas = n : this.hasValue < this.cfg.number ? this.ishas = !1 : this.ishas = !0, this.updateNextCfg();
    }, e.prototype.updatehas = function (t) {
      this.ishas = t, this.updateNextCfg();
    }, e.prototype.updateHasValue = function (t) {
      this.nextCfg && (this.hasValue = t, this.hasValue >= this.nextCfg.number && (this.hasValue = this.nextCfg.number, this.updatehas(!0)), this.addCache());
    }, e.prototype.updateNextCfg = function () {
      this.ishas ? this.nextCfg = this._cfgDict[this.id][this.level + 1] : this.nextCfg = this._cfgDict[this.id][1];
    }, e.prototype.uplev = function () {
      return this.level < this.maxLevel ? (this.level++, this.cfg = this._cfgDict[this.id][this.level], this.cfg.blood = Math.floor(this.cfg.blood), this.addCache(), this.updateNextCfg(), !0) : (this.nextCfg = null, !1);
    }, e.prototype.addCache = function () {
      CacheManager.getInstance().addGameCacheObj(RoleDataType.armorData + this.cfg.armorid, {
        level: this.level,
        value: this.hasValue
      });
    }, e;
  }(BaseVO),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GQAwardView = function (t) {
    function e(e) {
      var i = t.call(this) || this;
      return i = t.call(this, "main", "getaward", !0) || this, i._guncfg = e, i;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      this.c1 = this.getpanelController("c1"), this.t1 = this.getTransitionByName("t1"), this.t1.playing = !0, this.t1.play(null, 1), this.text_word.text = "获得[color=#ffc730]" + this._guncfg.name + "[/color],可以来" + SettingCFG.dict[1].value + "发", this.load_icon.url = PathConfig.getgunicon(this._guncfg.resource2D), this.load_icon.rotation = 45, WXGamePlatform.getInstance().isshowShare ? this.c1.selectedIndex = 0 : this.c1.selectedIndex = 1, WXGamePlatform.getInstance().createBanner(BannerType.BannerType_gongxihuode);
    }, e.prototype.initEvent = function () {
      this.btn_close.onClick(this, this.onclosefun), this.btn_share.onClick(this, this.shareClick);
    }, e.prototype.onclosefun = function () {
      UiManager.instance.close(e);
    }, e.prototype.noclick = function () {
      UiManager.instance.close(e);
    }, e.prototype.shareClick = function () {
      1 == this.c1.selectedIndex ? WXGamePlatform.getInstance().playVideo(this, this.videosucceed, null, ShareType.ShareType_lingqiang) : WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_lingqiang, !0, this, this.gunsharesucceed);
    }, e.prototype.videosucceed = function () {
      this.getProxy(GunProxy).settryoutGun(this._guncfg.gunid, !1), UiManager.instance.close(e);
    }, e.prototype.gunsharesucceed = function () {
      this.getProxy(GunProxy).settryoutGun(this._guncfg.gunid, !0), UiManager.instance.close(e);
    }, e.prototype.clearEvent = function () {
      this.btn_close.offClick(this, this.onclosefun), this.btn_share.offClick(this, this.shareClick);
    }, e.prototype.destory = function () {
      WXGamePlatform.getInstance().hideBanner(BannerType.BannerType_gongxihuode), this.clearEvent(), t.prototype.destory.call(this), GameStateManager.getInstance().nextGame();
    }, e.key = "GQAwardView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  CacheProxy = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._saveTime = 1e4, e;
    }
    return __extends(e, t), e.prototype.initProxy = function () {}, e.prototype.init = function () {}, e.prototype.update = function (t) {}, e.key = "CacheProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  CameraMoveScript = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._state = 0, e._endPos = new Vector3(), e;
    }
    return __extends(e, t), e.prototype._load = function (t) {
      this.camera = t, this.camera.fieldOfView = 90;
    }, e.prototype._start = function (t) {
      this._scene3Dmanager = Scene3DManager.getInstance(), this._transform = this.camera.transform, this._disVector = new Laya.Vector3(0, 15, 6), this._upVecter = new Vector3(0, 1, 0), this._transform.rotate(new Laya.Vector3(-45, 0, 0), !0, !1), this.camera.clearColor = null;
    }, e.prototype._update = function (e) {
      if (t.prototype._update.call(this, e), this._scene3Dmanager.mainPlayer && 0 == this._state) {
        var i = new Vector3();
        Vector3.add(this._scene3Dmanager.mainPlayer.transform.position, this._disVector, i), this._transform.position = i;
      }
    }, e.prototype.setEquipLook = function () {
      if (this._scene3Dmanager.mainPlayer) {
        var t = this._scene3Dmanager.mainPlayer.transform.position;
        this.clearTween(), this._state = 1, this._nowNpcPos = this._transform.position.clone(), this._endPos.x = t.x, this._endPos.y = t.y + 4, this._endPos.z = t.z + 7, this._tween = Laya.Tween.to(this._nowNpcPos, {
          x: this._endPos.x,
          y: this._endPos.y,
          z: this._endPos.z
        }, 300, Laya.Ease.linearNone, Handler.create(this, this.movePosCallback), 0, !0), this._tween.update = Handler.create(this, function () {
          this._transform && (this._transform.position = this._nowNpcPos);
        }, null, !1);
      }
    }, e.prototype.movePosCallback = function () {}, e.prototype.hideequipLook = function (t, e, i) {
      if (this._scene3Dmanager.mainPlayer) {
        this._hcallobj = t, this._hcallback = e, this._hdata = i;
        this._scene3Dmanager.mainPlayer.transform.position;
        this.clearTween(), this._nowNpcPos = this._transform.position.clone(), Vector3.add(this._scene3Dmanager.mainPlayer.transform.position, this._disVector, this._endPos), this._tween = Laya.Tween.to(this._nowNpcPos, {
          x: this._endPos.x,
          y: this._endPos.y,
          z: this._endPos.z
        }, 300, Laya.Ease.linearNone, Handler.create(this, this.hidemovePosCallback), 0, !0), this._tween.update = Handler.create(this, function () {
          this._transform && (this._transform.position = this._nowNpcPos);
        }, null, !1);
      }
    }, e.prototype.hidemovePosCallback = function () {
      this._state = 0, this._hcallback && this._hcallobj && this._hcallback.call(this._hcallobj, this._hdata);
    }, e.prototype.clearTween = function () {
      this._tween && (this._tween.clear(), this._tween = null);
    }, e;
  }(Laya.Script),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  CGSucceedView = function (t) {
    function e() {
      var e = t.call(this, "main", "cgSucceedview") || this;
      return e._stateType = 0, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      this.c1 = this.getpanelController("c1"), this.c_btn = this.getpanelController("c_btn"), this._guqiaProxy = this.getProxy(GuanQIaProxy);
      var t = WXGamePlatform.getInstance().isshowShare;
      this.c1.selectedIndex = t ? 1 : 0;
    }, e.prototype.showData = function (t, e) {
      this._stateType = e, this._vo = t;
      var i = WXGamePlatform.getInstance().isshowShare;
      if (0 == this._stateType) {
        var n = GunCFG.dict[t.cfg.gunid];
        this.text_word.text = "获得[color=#ffc730]" + n.name + "[/color]!", i ? (this.btn_select.selected = !0, this.selectclick()) : this.c_btn.selectedIndex = 2, this.load_icon.url = PathConfig.getgunicon(n.resource2D), this.load_icon.rotation = 45;
      } else this.text_word.text = "获得[color=#ffc730]金币X" + t.getgold(this._guqiaProxy.selectGQType) + "[/color]!", this.load_icon.url = "ui://8aq1csefe4wy2j", i ? (this.btn_select.selected = !0, this.selectclick()) : this.c_btn.selectedIndex = 3;
    }, e.prototype.initEvent = function () {
      this.btn_close.onClick(this, this.closefun), this.btn_get.onClick(this, this.getClick), this.btn_select.onClick(this, this.selectclick);
    }, e.prototype.closefun = function () {
      var t = this._vo.getgold(this._guqiaProxy.selectGQType);
      this.getProxy(RoleProxy).addGold(t), this.closeview();
    }, e.prototype.selectclick = function () {
      this.btn_select.selected ? 0 == this._stateType ? this.c_btn.selectedIndex = 0 : this.c_btn.selectedIndex = 1 : 0 == this._stateType ? this.c_btn.selectedIndex = 2 : this.c_btn.selectedIndex = 3;
    }, e.prototype.getClick = function () {
      switch (this.c_btn.selectedIndex) {
        case 0:
          WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_chuangguan, !0, this, this.sharegungetsucceed);
          break;
        case 1:
          WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_chuangguan, !0, this, this.sharegoldgetsucceed);
          break;
        case 2:
          WXGamePlatform.getInstance().playVideo(this, this.videogungetsucceed, null, ShareType.ShareType_chuangguan);
          break;
        case 3:
          WXGamePlatform.getInstance().playVideo(this, this.videogoldgetsucceed, null, ShareType.ShareType_chuangguan);
      }
    }, e.prototype.videogungetsucceed = function () {
      this.gungetsucceed(!1);
    }, e.prototype.sharegungetsucceed = function () {
      this.gungetsucceed(!0);
    }, e.prototype.gungetsucceed = function (t) {
      var e = GunCFG.dict[this._vo.cfg.gunid];
      this.getProxy(GunProxy).buyGunById(e.gunid), this.closeview(), WordTipsUtils.showWordTips("获得" + e.name + "枪");
    }, e.prototype.videogoldgetsucceed = function () {
      this.goldgetsucceed(!1);
    }, e.prototype.sharegoldgetsucceed = function () {
      this.goldgetsucceed(!0);
    }, e.prototype.goldgetsucceed = function (t) {
      var e = this._vo.getgold(this._guqiaProxy.selectGQType);
      this.getProxy(RoleProxy).addGold(2 * e), this.closeview(), WordTipsUtils.showWordTips("获得" + 2 * e + "金币");
    }, e.prototype.closeview = function () {
      UiManager.instance.close(e), this._guqiaProxy.updateGuanqiaEnd(this._stateType);
    }, e.prototype.clearEvent = function () {
      this.btn_close.offClick(this, this.closefun), this.btn_get.offClick(this, this.getClick), this.btn_select.offClick(this, this.selectclick);
    }, e.prototype.destory = function () {
      this.clearEvent(), t.prototype.destory.call(this);
    }, e.key = "CGSucceedView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GameDescView = function (t) {
    function e() {
      return t.call(this, "main", "gamedesc") || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.btn_close.onClick(this, this.closefun);
    }, e.prototype.closefun = function () {
      UiManager.instance.close(e);
    }, e.prototype.destory = function () {
      this.btn_close.offClick(this, this.closefun), t.prototype.destory.call(this);
    }, e.key = "GameDescView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GameEvent = function (t) {
    function e() {
      return null !== t && t.apply(this, arguments) || this;
    }
    return __extends(e, t), e.GameEvent_logout = "GameEvent_logout", e.GameEvnt_enter = "GameEvnt_enter", e.GameEvent_changeGold = "GameEvent_changeGold", e.GameEvent_LevelUP = "GameEvent_LevelUP", e.GameEvent_expUpdate = "GameEvent_expUpdate", e.GameEvent_roleInfoUpdate = "GameEvent_roleInfoUpdate", e.GameEvent_goldUpdate = "GameEvent_goldUpdate", e.GameEvent_updateScore = "GameEvent_updateScore", e.GameEvent_updateGuaqiaShow = "GameEvent_updateGuaqiaShow", e.GameEvent_updateNpcPlan = "GameEvent_updateNpcPlan", e.GameEvent_updateTili = "GameEvent_updateTili", e.GameEvent_changeUserGun = "GameEvent_changeUserGun", e.GameEvent_changeUserHelmet = "GameEvent_changeUserHelmet", e.GameEvent_changeUserArmor = "GameEvent_changeUserArmor", e.GameEvent_upgunlev = "GameEvent_upgunlev", e.GameEvent_updateGunList = "GameEvent_updateGunList", e.GameEvent_updateHelmetList = "GameEvent_updateHelmetList", e.GameEvent_updateArmorList = "GameEvent_updateArmorList", e.GameEvent_startMainRightui = "GameEvent_startMainRightui", e.GameEvent_stopMainRightui = "GameEvent_stopMainRightui", e.GameEvent_gunShiyongLeftNum = "GameEvent_gunShiyongLeftNum", e.GameEvent_openequipUpdate = "GameEvent_openequipUpdate", e.GameEvent_openequipEnd = "GameEvent_openequipEnd", e.GameEvent_hideequip = "GameEvent_hideequip", e.GameEvent_showChaoyue = "GameEvent_showChaoyue", e.GameEvent_hideChaoyue = "GameEvent_hideChaoyue", e.GameEvent_updateChaoyue = "GameEvent_updateChaoyue", e.GameEvent_updateEquipTips = "GameEvent_updateEquipTips", e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GameResultView = function (t) {
    function e(e) {
      var i = t.call(this, "main", "gameresult") || this;
      return i._isdestory = !1, i._historyMaxScore = e, i;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      this._isdestory = !1, this.text_gerscore.text = GameStateManager.getInstance().nowScore.toString(), this.text_maxScore.text = "历史最高分:" + this._historyMaxScore;
      var t = new Laya.Rectangle();
      t.x = 0, t.y = (Global.curHeight() - Global.curWidth() / Global.initWidth * Global.initHeight) / 2, t.width = Global.curWidth(), t.height = Global.curHeight(), WXGamePlatform.getInstance().openFriendRank(RankType.RankType_show_result, "GameResultView", t), WXGamePlatform.getInstance().hideBanner(), this.list_chouti.setVirtual(), this.list_chouti.itemRenderer = Laya.Handler.create(this, this.listitemRender, null, !1), WXGamePlatform.getInstance().isshowChouti() ? (ADIGamePlatform.getInstance().getChoutiArr(this, this.choutiCallback), this.group_chouti.visible = !0) : this.group_chouti.visible = !1;
    }, e.prototype.choutiCallback = function (t) {
      this._isdestory || (this.choutiObj = t.concat(), this.list_chouti.numItems = this.choutiObj.length);
    }, e.prototype.listitemRender = function (t, e) {
      this.choutiObj && t < this.choutiObj.length && e.showData(this.choutiObj[t]);
    }, e.prototype.initEvent = function () {
      this.btn_rank.onClick(this, this.rankClick), this.btn_share.onClick(this, this.shareClick), this.btn_return.onClick(this, this.returnclick);
    }, e.prototype.rankClick = function () {
      UiManager.instance.add(RankView);
    }, e.prototype.shareClick = function () {
      this.returnclick(), WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_xuanyao, !1);
    }, e.prototype.returnclick = function () {
      UiManager.instance.close(e), this.getProxy(MainProxy).openShouYe();
    }, e.prototype.clearEvent = function () {
      this.btn_rank.offClick(this, this.rankClick), this.btn_share.offClick(this, this.shareClick), this.btn_return.offClick(this, this.returnclick);
    }, e.prototype.destory = function () {
      this._isdestory = !0, WXGamePlatform.getInstance().closeFriendRank("GameResultView"), this.clearEvent(), t.prototype.destory.call(this), WXGamePlatform.getInstance().createBanner();
    }, e.key = "GameResultView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GoldBuzuProxy = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._nowShareNum = 0, e.maxlingquNum = 4, e;
    }
    return __extends(e, t), e.prototype.init = function () {
      this.getProxy(DayProxy).isNewDay ? this.nowShareNum = 0 : this._nowShareNum = Number(CacheManager.getInstance().getCachestr(RoleDataType.Goldget_num));
    }, Object.defineProperty(e.prototype, "nowShareNum", {
      get: function () {
        return this._nowShareNum;
      },
      set: function (t) {
        this._nowShareNum != t && (this._nowShareNum = t, CacheManager.getInstance().addCachestr(RoleDataType.Goldget_num, this._nowShareNum.toString()));
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.openView = function (t, e) {
      UiManager.instance.add(GoldBuzuView).initCallback(t, e);
    }, e.prototype.getGold = function () {
      var t = 0;
      switch (this._nowShareNum) {
        case 0:
          t = 150;
          break;
        case 1:
          t = 100;
          break;
        case 2:
        default:
          t = 50;
      }
      return t;
    }, e.prototype.sharelingqugold = function (t) {
      if (this.nowShareNum >= this.maxlingquNum) WordTipsUtils.showWordTips("当天领取次数已经用完！");
      else {
        var e = this.getGold();
        WordTipsUtils.showWordTips("获得" + e + "金币"), this.getProxy(RoleProxy).addGold(e), this.nowShareNum++;
      }
      UiManager.instance.close(GoldBuzuView);
    }, e.key = "GoldBuzuProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GoldBuzuView = function (t) {
    function e() {
      return t.call(this, "main", "goldbuzu") || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initCallback = function (t, e) {
      this._callobj = t, this._callback = e;
    }, e.prototype.initView = function () {
      WXGamePlatform.getInstance().createBanner("GoldBuzuView"), this.c1 = this.getpanelController("c1"), this._goldbuzuProxy = this.getProxy(GoldBuzuProxy), this.text_word.text = "X" + this._goldbuzuProxy.getGold(), WXGamePlatform.getInstance().isshowShare ? (this.btn_select.visible = !0, this.btn_select.selected = !0) : (this.btn_select.visible = !1, this.btn_select.selected = !1);
    }, e.prototype.initEvent = function () {
      this.btn_0.onClick(this, this.btn0Click), this.btn_close.onClick(this, this.closefun);
    }, e.prototype.closefun = function () {
      UiManager.instance.close(e);
    }, e.prototype.btn0Click = function () {
      0 == this.c1.selectedIndex ? WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_jinbubuzu, !0, this, this.getsucceedfun) : WXGamePlatform.getInstance().playVideo(this, this.videoSucceed, null, ShareType.ShareType_jinbubuzu);
    }, e.prototype.videoSucceed = function () {
      this._goldbuzuProxy.sharelingqugold(!1);
    }, e.prototype.getsucceedfun = function () {
      this._goldbuzuProxy.sharelingqugold(!0);
    }, e.prototype.clearEvent = function () {
      this.btn_0.offClick(this, this.btn0Click);
    }, e.prototype.destory = function () {
      WXGamePlatform.getInstance().hideBanner("GoldBuzuView"), this.clearEvent(), t.prototype.destory.call(this), this._callobj && this._callback && this._callback.call(this._callobj);
    }, e.key = "GoldBuzuView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GuanQIaView = function (t) {
    function e() {
      var e = t.call(this, "main", "guanqia") || this;
      return e._time = 0, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      UiManager.instance.getView(MainView).c1.selectedIndex = 2, this._guanqiaProxy = this.getProxy(GuanQIaProxy), this.txt_gold.text = this._guanqiaProxy.roleVO.gold.toString(), this.list_0.setVirtual(), this.list_0.itemRenderer = Handler.create(this, this.listitemRender, null, !1), this.list_0.numItems = this._guanqiaProxy.showGuanqiaList.length, this.list_0.scrollItemToViewOnClick = !1;
      var t = this._guanqiaProxy.showGuanqiaList.length - 1 - Math.floor((this._guanqiaProxy.nowMaxGuanqia - 1) / this._guanqiaProxy.pageNums);
      t < 0 && (t = 0), t > this._guanqiaProxy.showGuanqiaList.length - 1 && (t = this._guanqiaProxy.showGuanqiaList.length - 1), this.list_0.scrollToView(t), this.text_jindu.text = this._guanqiaProxy.nowMaxGuanqia + "/" + this._guanqiaProxy.guanqiaList.length, TimerService.getInastance().addUpdateTarget(this), this.update(1001), this.updatetiliHandler(), WXGamePlatform.getInstance().createBanner(BannerType.BannerType_guanqia);
    }, e.prototype.initEvent = function () {
      this.btn_close.onClick(this, this.onclosefun), this.addDataEvent(GameEvent.GameEvent_updateTili, this, this.updatetiliHandler);
    }, e.prototype.updatetiliHandler = function () {
      this.txt_tili.text = this._guanqiaProxy.nowTili.toString();
    }, e.prototype.update = function (t) {
      this._time += t, this._time > 1e3 && (this._time = 0, this._guanqiaProxy._tililefttime > 0 ? this.text_left.text = TimeUtils.formatTime(this._guanqiaProxy.leftTime / 1e3) : this.text_left.text = "");
    }, e.prototype.listitemRender = function (t, e) {
      t < this._guanqiaProxy.showGuanqiaList.length && e.showData(this._guanqiaProxy.showGuanqiaList[t], t);
    }, e.prototype.onclosefun = function () {
      UiManager.instance.getView(MainView).c1.selectedIndex = 0, UiManager.instance.close(e), this.getProxy(MainProxy).openShouYe();
    }, e.prototype.clearEvent = function () {
      this.btn_close.offClick(this, this.onclosefun), this.removeDataEvent(GameEvent.GameEvent_updateTili, this, this.updatetiliHandler);
    }, e.prototype.destory = function () {
      WXGamePlatform.getInstance().hideBanner(BannerType.BannerType_guanqia), TimerService.getInastance().removeUpdateTarget(this), this.clearEvent(), t.prototype.destory.call(this);
    }, e.key = "GuanQIaView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GuanQiaItem = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this.c1 = this.getController("c1"), this._guanqiaProxy = this.getProxy(GuanQIaProxy);
    }, e.prototype.showData = function (t, e) {
      if (t) {
        var i = e % 4;
        this.c1.selectedIndex = i;
        for (var n = t.length, r = 0; r < this._guanqiaProxy.pageNums; r++) r < n ? (this["item_" + r].visible = !0, this["item_" + r].showData(t[r], this._guanqiaProxy.nowMaxGuanqia == t[r].cfg.screening)) : this["item_" + r].visible = !1;
      }
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GuanqiaItemState = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this.c1 = this.getController("c1"), this.onClick(this, this.onbtnClick);
    }, e.prototype.onbtnClick = function () {
      0 == this._vo.cfg.isopen ? WordTipsUtils.showWordTips("敬请期待") : this._vo.nowStateType == GuanQiaStateType.GuanQiaStateType_0 ? WordTipsUtils.showWordTips("未解锁") : UiManager.instance.add(SelectGuanqiaView, this._vo);
    }, e.prototype.showData = function (t, e) {
      this._vo = t, 1 == t.cfg.isopen ? (this.img_show.visible = !1, this.load_star.visible = !0, this.img_jqqd.visible = !1, this.text_lev.text = t.cfg.screening.toString(), this.c1.selectedIndex = t.nowStateType, this.img_show.visible = e) : (this.img_jqqd.visible = !0, this.img_show.visible = !1, this.load_star.visible = !1, this.c1.selectedIndex = 0, this.text_lev.text = "");
    }, e.prototype.dispose = function () {
      this.offClick(this, this.onbtnClick), t.prototype.dispose.call(this);
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GuanQIaProxy = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._recoverTime = 0, e._nowTili = 0, e.nowMaxGuanqia = 0, e.pageNums = 6, e._maxTili = 0, e._isfristplayguanqia = 0, e._tililefttime = 0, e.selectGQType = 0, e;
    }
    return __extends(e, t), e.prototype.initProxy = function () {}, e.prototype.init = function () {
      this._maxTili = SettingCFG.dict[8].value, this._recoverTime = 1e3 * SettingCFG.dict[9].value;
      if (this.getProxy(DayProxy).isNewDay ? this.nowTili = this._maxTili : this._nowTili = Number(CacheManager.getInstance().getCachestr(RoleDataType.tili)), Global.isceshi && (this.nowTili = 100), this.nowTili < this._maxTili) {
        var t = TimesTamper.getInstance().lastgameTime;
        if (0 != t) {
          var e = TimesTamper.getInstance().serverTime,
            i = Math.floor(1e3 * (e - t));
          if (i > 0)
            if (i < this._recoverTime) this._tililefttime = i;
            else {
              var n = Math.floor(i / this._recoverTime);
              this.nowTili + n >= this._maxTili ? this.nowTili = this._maxTili : (this.nowTili += n, this._tililefttime = i % this._recoverTime);
            }
        }
      }
      this.guanqiaList = [], this.guanqiaDict = {}, this.showGuanqiaList = [], this.cacheGuanqiaData = CacheManager.getInstance().getGameCacheObj(RoleDataType.Guanqiadata);
      var r, a = 0;
      for (a; a < ScreeningCFG.vec.length; a++) {
        r = ScreeningCFG.vec[a];
        var s = new GuanQIaVO();
        this.cacheGuanqiaData[r.screening] ? s.initData(r, this.cacheGuanqiaData[r.screening]) : s.initData(r, GuanQiaStateType.GuanQiaStateType_0), this.guanqiaList.push(s), this.guanqiaDict[r.screening] = s, s.nowStateType != GuanQiaStateType.GuanQiaStateType_0 && s.cfg.screening > this.nowMaxGuanqia && (this.nowMaxGuanqia = s.cfg.screening);
      }
      var o = {},
        h = 0;
      for (a = 0; a < this.guanqiaList.length; a++) o[h = Math.floor(a / this.pageNums)] || (o[h] = [], this.showGuanqiaList.push(o[h])), o[h].push(this.guanqiaList[a]);
      this.showGuanqiaList.reverse();
      var l = this.guanqiaDict[1];
      l.nowStateType == GuanQiaStateType.GuanQiaStateType_0 && this.updateStateTypebyId(l.cfg.screening, GuanQiaStateType.GuanQiaStateType_1), TimerService.getInastance().addUpdateTarget(this), this._isfristplayguanqia = Number(CacheManager.getInstance().getCachestr(RoleDataType.isfirstPlayGuanqia));
    }, e.prototype.update = function (t) {
      this._nowTili < this._maxTili ? (this._tililefttime += t, this._tililefttime > this._recoverTime && (this._tililefttime = 0, this._nowTili < this._maxTili && this.nowTili++)) : this._tililefttime = -1;
    }, Object.defineProperty(e.prototype, "leftTime", {
      get: function () {
        return this._recoverTime - this._tililefttime;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "nowTili", {
      get: function () {
        return this._nowTili;
      },
      set: function (t) {
        this._nowTili != t && (this._nowTili = t, CacheManager.getInstance().addCachestr(RoleDataType.tili, this._nowTili.toString()), this.dispacheDataEvent(GameEvent.GameEvent_updateTili));
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.updateStateTypebyId = function (t, e, i) {
      void 0 === i && (i = !0);
      var n = this.guanqiaDict[t];
      if (n && n.nowStateType != e) {
        switch (n.nowStateType = e, n.nowStateType) {
          case GuanQiaStateType.GuanQiaStateType_2:
            WordTipsUtils.showWordTips("恭喜完成简单模式，点亮了一颗星哦~");
            break;
          case GuanQiaStateType.GuanQiaStateType_3:
            WordTipsUtils.showWordTips("恭喜完成困难模式，点亮了两颗星哦~");
            break;
          case GuanQiaStateType.GuanQiaStateType_4:
            WordTipsUtils.showWordTips("恭喜完地狱模式，点亮了三颗星哦~");
        }
        this.cacheGuanqiaData[t] = e, i && CacheManager.getInstance().addGameCacheObj(RoleDataType.Guanqiadata, this.cacheGuanqiaData);
      }
    }, e.prototype.openView = function () {
      UiManager.instance.add(GuanQIaView);
    }, e.prototype.startGuanqiaGame = function (t, e) {
      this.nowTili <= 0 ? WordTipsUtils.showWordTips("体力不足") : (this.selectGQVo = t, this.selectGQType = e, this.nowTili--, GameStateManager.getInstance().startSelectGame(), UiManager.instance.close(GuanQIaView), 0 == this._isfristplayguanqia && (this._isfristplayguanqia = 1, CacheManager.getInstance().addCachestr(RoleDataType.isfirstPlayGuanqia, this._isfristplayguanqia.toString()), UiManager.instance.add(GameDescView)));
    }, e.prototype.GQSucceed = function () {
      if (this.selectGQVo) {
        if (WXGamePlatform.getInstance().storeResult(0, GameStateManager.getInstance().nowScore), this.selectGQVo.nowStateType == GuanQiaStateType.GuanQiaStateType_1) {
          var t = this.guanqiaDict[this.selectGQVo.cfg.screening + 1];
          t ? (this.updateStateTypebyId(this.selectGQVo.cfg.screening, this.selectGQType, !1), this.updateStateTypebyId(t.cfg.screening, GuanQiaStateType.GuanQiaStateType_1, !0), this.nowMaxGuanqia = t.cfg.screening) : this.updateStateTypebyId(this.selectGQVo.cfg.screening, this.selectGQType, !0);
        } else this.updateStateTypebyId(this.selectGQVo.cfg.screening, this.selectGQType, !0);
        var e = !1;
        switch (this.selectGQType) {
          case GuanQiaStateType.GuanQiaStateType_2:
            e = GameUtils.randRange(1, 100) <= 5;
            break;
          case GuanQiaStateType.GuanQiaStateType_3:
            e = GameUtils.randRange(1, 100) <= 10;
            break;
          case GuanQiaStateType.GuanQiaStateType_4:
            e = GameUtils.randRange(1, 100) <= 20;
        }
        var i = UiManager.instance.add(CGSucceedView);
        e ? i.showData(this.selectGQVo, 0) : i.showData(this.selectGQVo, 1);
      }
    }, e.prototype.updateGuanqiaEnd = function (t) {
      if (0 == t) {
        UiManager.instance.add(CGSucceedView).showData(this.selectGQVo, 1);
      } else this.openView(), GameStateManager.getInstance().resetInitgame();
    }, e.key = "GuanQIaProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GuanQIaVO = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.nowStateType = 0, e.kunnanGold = 0, e.diyuGold = 0, e;
    }
    return __extends(e, t), e.prototype.initData = function (t, e) {
      this.cfg = t, this.nowStateType = e, this.cfg.reward = Math.floor(this.cfg.reward), this.kunnanGold = Math.ceil(1.5 * this.cfg.reward), this.diyuGold = Math.ceil(1.5 * this.kunnanGold);
    }, e.prototype.getgold = function (t) {
      var e = 0;
      switch (t) {
        case GuanQiaStateType.GuanQiaStateType_2:
          e = this.cfg.reward;
          break;
        case GuanQiaStateType.GuanQiaStateType_3:
          e = this.kunnanGold;
          break;
        case GuanQiaStateType.GuanQiaStateType_4:
          e = this.diyuGold;
      }
      return e;
    }, e.prototype.getnpcblood = function (t) {
      var e = 0;
      switch (t) {
        case GuanQiaStateType.GuanQiaStateType_2:
          e = this.cfg.bool;
          break;
        case GuanQiaStateType.GuanQiaStateType_3:
          e = Math.ceil(1.1 * this.cfg.bool);
          break;
        case GuanQiaStateType.GuanQiaStateType_4:
          e = Math.ceil(1.1 * this.cfg.bool * 1.1);
      }
      return e;
    }, e.prototype.getbossblood = function (t) {
      var e = 0;
      switch (t) {
        case GuanQiaStateType.GuanQiaStateType_2:
          e = this.cfg.bossbool;
          break;
        case GuanQiaStateType.GuanQiaStateType_3:
          e = Math.ceil(1.1 * this.cfg.bossbool);
          break;
        case GuanQiaStateType.GuanQiaStateType_4:
          e = Math.ceil(1.1 * this.cfg.bossbool * 1.1);
      }
      return e;
    }, e.prototype.getdisZ = function (t, e) {
      void 0 === e && (e = !1);
      var i = 0;
      if (e) i = GameUtils.randRange1(this.cfg.bossdistance, this.cfg.bossdistancemax);
      else switch (t) {
        case GuanQiaStateType.GuanQiaStateType_2:
          i = GameUtils.randRange1(this.cfg.distance, this.cfg.distancemax);
          break;
        case GuanQiaStateType.GuanQiaStateType_3:
          i = GameUtils.randRange1(1.05 * this.cfg.distance, 1.05 * this.cfg.distancemax);
          break;
        case GuanQiaStateType.GuanQiaStateType_4:
          i = GameUtils.randRange1(1.05 * this.cfg.distance * 1.05, 1.05 * this.cfg.distancemax * 1.05);
      }
      return i;
    }, e;
  }(BaseVO),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GunProxy = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.inviteNum = 0, e._leftbulletNum = 0, e._leftMZNum = 0, e;
    }
    return __extends(e, t), e.prototype.init = function () {
      this.gunList = [], this.gunDict = {}, this.cfgDict = {}, this.boxGunList = [];
      var t;
      for (var e in GunCFG.dict) t = GunCFG.dict[e], this.cfgDict[t.gunid] || (this.cfgDict[t.gunid] = {}), this.cfgDict[t.gunid][t.level] = t, t.type == GunType.GunType_4 && this.boxGunList.push(t);
      for (var e in GunCFG.dict)
        if (t = GunCFG.dict[e], !this.gunDict[t.gunid]) {
          var i = new GunVO();
          this.gunDict[t.gunid] = i, this.gunList.push(i);
          var n = CacheManager.getInstance().getGameCacheObj(RoleDataType.gunData + t.gunid);
          n.level ? i.updateData(t.gunid, n.level, this.cfgDict, !0, n.value) : i.updateData(t.gunid, 1, this.cfgDict, !1, 0);
        }
      var r = Number(CacheManager.getInstance().getCachestr(RoleDataType.user_gun)),
        a = !1;
      0 == r && (r = 1001, a = !0), this.mygunVo = this.gunDict[r], this.mygunVo.updatehas(!0), this.mygunVo.isuser = !0, a && this.mygunVo.addCache(), this.gunList.sort(this.sortfun);
    }, e.prototype.sortfun = function (t, e) {
      return t.cfg.sort < e.cfg.sort ? -1 : 1;
    }, e.prototype.settryoutGun = function (t, e) {
      this._tryoutGunCfg = this.cfgDict[t][1], this.leftbulletNum = SettingCFG.dict[1].value, this.dispacheDataEvent(GameEvent.GameEvent_changeUserGun), e ? WordTipsUtils.showWordTips("获得" + this._tryoutGunCfg.name + "枪试用") : WordTipsUtils.showWordTips("获得试用" + this._tryoutGunCfg.name + "枪");
    }, Object.defineProperty(e.prototype, "leftbulletNum", {
      get: function () {
        return this._leftbulletNum;
      },
      set: function (t) {
        this._leftbulletNum != t && (this._leftbulletNum = t, this.dispacheDataEvent(GameEvent.GameEvent_gunShiyongLeftNum));
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.shootBullet = function () {
      this._leftbulletNum > 0 ? this.leftbulletNum-- : (this._tryoutGunCfg = null, this.leftbulletNum = 0), this._leftMZNum--, this._leftMZNum < -1 && (this._leftMZNum = -1);
    }, e.prototype.setInviteNum = function (t) {
      this.inviteNum = t;
      var e;
      for (var i in this.gunDict)(e = this.gunDict[i]).cfg.type == GunType.GunType_2 && (e.hasValue = this.inviteNum);
    }, e.prototype.updateBullet = function () {
      this._leftbulletNum <= 0 && (this._tryoutGunCfg && (this._tryoutGunCfg = null, this.dispacheDataEvent(GameEvent.GameEvent_changeUserGun)), this.leftbulletNum = 0), 0 == this._leftMZNum && (this.dispacheDataEvent(GameEvent.GameEvent_upgunlev), this._leftMZNum = -1);
    }, Object.defineProperty(e.prototype, "leftMZNum", {
      get: function () {
        return this._leftMZNum;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.getNowUserGuncfg = function () {
      return this._tryoutGunCfg ? this._tryoutGunCfg : this.mygunVo.cfg;
    }, e.prototype.recoverGUn = function () {
      this._leftMZNum = -1, this._tryoutGunCfg && (this._tryoutGunCfg = null, this.leftbulletNum = 0), this.dispacheDataEvent(GameEvent.GameEvent_changeUserGun);
    }, e.prototype.recovergunInfo = function () {
      this.recoverGUn();
    }, e.prototype.gethurtvalue = function () {
      if (this._tryoutGunCfg) {
        return this._tryoutGunCfg.hurt;
      }
      return this.mygunVo.cfg.hurt;
    }, e.prototype.changeGun = function (t) {
      this._tryoutGunCfg = null, this.leftbulletNum = 0, this._leftMZNum = -1, this.mygunVo.isuser = !1;
      var e = this.gunDict[t.cfg.gunid];
      e.updatehas(!0), this.mygunVo = e, this.mygunVo.isuser = !0, CacheManager.getInstance().addCachestr(RoleDataType.user_gun, this.mygunVo.cfg.gunid), this.dispacheDataEvent(GameEvent.GameEvent_changeUserGun), this.dispacheDataEvent(GameEvent.GameEvent_updateGunList);
    }, e.prototype.ischanuplev = function () {
      return !(!this.mygunVo || !this.mygunVo.nextCFg || this.mygunVo.nextCFg.type != GunType.GunType_1) && this.roleVO.gold >= this.mygunVo.nextCFg.need;
    }, e.prototype.uplevGun = function (t) {
      var e = this.gunDict[t.cfg.gunid];
      if (e) {
        if (e.uplev()) {
          e.isuser && this.dispacheDataEvent(GameEvent.GameEvent_upgunlev), this.dispacheDataEvent(GameEvent.GameEvent_updateGunList);
          var i = this.cfgDict[e.id][e.cfg.level - 1],
            n = e.cfg.hurt - i.hurt;
          WordTipsUtils.showWordTips(e.cfg.name + "升为" + e.cfg.level + "级，攻击力提高" + n);
        } else WordTipsUtils.showWordTips("已经满级，无法升级");
      }
    }, e.prototype.setMiaozhunToNpc = function (t) {
      this._leftMZNum = t, GameStateManager.getInstance().setMiaozhuToNpc();
    }, e.prototype.buyGun = function (t) {
      var e = this.gunDict[t.cfg.gunid];
      e && (e.updatehas(!0), e.addCache(), this.dispacheDataEvent(GameEvent.GameEvent_updateGunList));
    }, e.prototype.addHasValue = function (t) {
      var e = this.gunDict[t.cfg.gunid];
      if (e) {
        var i = t.hasValue + 1;
        e.updateHasValue(i), this.dispacheDataEvent(GameEvent.GameEvent_updateGunList);
      }
    }, e.prototype.buyGunById = function (t) {
      var e = this.gunDict[t];
      this.buyGun(e);
    }, e.key = "GunProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GunVO = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.id = 0, e.level = 0, e.ishas = !1, e.isuser = !1, e.hasValue = 0, e.maxLevel = 0, e.isshiyong = !1, e;
    }
    return __extends(e, t), e.prototype.updateData = function (t, e, i, n, r) {
      this._cfgdict = i, this.maxLevel = 0;
      var a = i[t];
      for (var s in a) this.maxLevel++;
      this.id = t, this.level = e, this.cfg = i[this.id][this.level], this.hasValue = r, 2 != this.cfg.type && 3 != this.cfg.type ? this.ishas = n : this.hasValue < this.cfg.need ? this.ishas = !1 : this.ishas = !0, this.updateNextCfg();
    }, e.prototype.updatehas = function (t) {
      this.ishas = t, this.updateNextCfg();
    }, e.prototype.updateHasValue = function (t) {
      this.nextCFg && (this.hasValue = t, this.hasValue >= this.nextCFg.need && (this.hasValue = this.nextCFg.need, this.updatehas(!0)), this.addCache());
    }, e.prototype.updateNextCfg = function () {
      this.ishas ? this.nextCFg = this._cfgdict[this.id][this.level + 1] : this.nextCFg = this._cfgdict[this.id][1];
    }, e.prototype.uplev = function () {
      return this.level < this.maxLevel ? (this.level++, this.cfg = this._cfgdict[this.id][this.level], this.addCache(), this.updateNextCfg(), !0) : (this.nextCFg = null, !1);
    }, e.prototype.addCache = function () {
      CacheManager.getInstance().addGameCacheObj(RoleDataType.gunData + this.cfg.gunid, {
        level: this.level,
        value: this.hasValue
      });
    }, e;
  }(BaseVO),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  HelmetProxy = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.inviteNum = 0, e;
    }
    return __extends(e, t), e.prototype.init = function () {
      this.helmetList = [], this.helmetDict = {}, this.cfgDict = {};
      var t;
      for (var e in HelmetCFG.dict) 1 == (t = HelmetCFG.dict[e]).show && (this.cfgDict[t.helmetid] || (this.cfgDict[t.helmetid] = {}), this.cfgDict[t.helmetid][t.level] = t);
      for (var e in HelmetCFG.dict)
        if (1 == (t = HelmetCFG.dict[e]).show && !this.helmetDict[t.helmetid]) {
          var i = new HelmetVO();
          this.helmetDict[t.helmetid] = i, this.helmetList.push(i);
          var n = CacheManager.getInstance().getGameCacheObj(RoleDataType.helmetData + t.helmetid);
          n.level ? i.updateData(t.helmetid, n.level, this.cfgDict, !0, n.value) : i.updateData(t.helmetid, 1, this.cfgDict, !1, 0);
        }
      var r = Number(CacheManager.getInstance().getCachestr(RoleDataType.user_helmet)),
        a = !1;
      0 == r && (r = 1, a = !0), this.myhelmetVo = this.helmetDict[r], this.myhelmetVo.updatehas(!0), this.myhelmetVo.isuser = !0, a && this.myhelmetVo.addCache();
    }, e.prototype.changeHelmet = function (t) {
      this.myhelmetVo.isuser = !1;
      var e = this.helmetDict[t.cfg.helmetid];
      this.myhelmetVo = e, this.myhelmetVo.isuser = !0, CacheManager.getInstance().addCachestr(RoleDataType.user_helmet, this.myhelmetVo.cfg.helmetid), this.dispacheDataEvent(GameEvent.GameEvent_changeUserHelmet), this.dispacheDataEvent(GameEvent.GameEvent_updateHelmetList), this.changeHelmetForModel();
    }, e.prototype.ischanuplev = function () {
      return !(!this.myhelmetVo || !this.myhelmetVo.nextCfg || this.myhelmetVo.nextCfg.type != GunType.GunType_1) && this.roleVO.gold >= this.myhelmetVo.nextCfg.number;
    }, e.prototype.changeHelmetForModel = function () {}, e.prototype.uplevhelmet = function (t) {
      var e = this.helmetDict[t.cfg.helmetid];
      if (e) {
        e.uplev() ? (this.dispacheDataEvent(GameEvent.GameEvent_updateHelmetList), WordTipsUtils.showWordTips("升级成功")) : WordTipsUtils.showWordTips("已经满级，无法升级");
      }
    }, e.prototype.buyhelmet = function (t) {
      var e = this.helmetDict[t.cfg.helmetid];
      e && (e.updatehas(!0), e.addCache(), this.dispacheDataEvent(GameEvent.GameEvent_updateHelmetList));
    }, e.prototype.addHasValue = function (t) {
      var e = this.helmetDict[t.cfg.helmetid];
      if (e) {
        var i = t.hasValue + 1;
        e.updateHasValue(i), this.dispacheDataEvent(GameEvent.GameEvent_updateHelmetList);
      }
    }, e.prototype.setInviteNum = function (t) {
      this.inviteNum = t;
      var e;
      for (var i in this.helmetDict)(e = this.helmetDict[i]).cfg.type == GunType.GunType_2 && (e.hasValue = this.inviteNum);
    }, e.key = "HelmetProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  HelmetVO = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.id = 0, e.level = 0, e.ishas = !1, e.isuser = !1, e.maxLevel = 0, e.hasValue = 0, e;
    }
    return __extends(e, t), e.prototype.updateData = function (t, e, i, n, r) {
      this._cfgDict = i, this.maxLevel = 0;
      var a = i[t];
      for (var s in a) this.maxLevel++;
      this.id = t, this.level = e, this.cfg = i[this.id][this.level], this.hasValue = r, 2 != this.cfg.type && 3 != this.cfg.type ? this.ishas = n : this.hasValue < this.cfg.number ? this.ishas = !1 : this.ishas = !0, this.cfg.blood = Math.floor(this.cfg.blood), this.updateNextCfg();
    }, e.prototype.updatehas = function (t) {
      this.ishas = t, this.updateNextCfg();
    }, e.prototype.updateHasValue = function (t) {
      this.nextCfg && (this.hasValue = t, this.hasValue >= this.nextCfg.number && (this.hasValue = this.nextCfg.number, this.updatehas(!0)), this.addCache());
    }, e.prototype.updateNextCfg = function () {
      this.ishas ? this.nextCfg = this._cfgDict[this.id][this.level + 1] : this.nextCfg = this._cfgDict[this.id][1];
    }, e.prototype.uplev = function () {
      return this.level < this.maxLevel ? (this.level++, this.cfg = this._cfgDict[this.id][this.level], this.cfg.blood = Math.floor(this.cfg.blood), this.addCache(), this.updateNextCfg(), !0) : (this.nextCfg = null, !1);
    }, e.prototype.addCache = function () {
      CacheManager.getInstance().addGameCacheObj(RoleDataType.helmetData + this.cfg.helmetid, {
        level: this.level,
        value: this.hasValue
      });
    }, e;
  }(BaseVO),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  AlertView = function (t) {
    function e(e) {
      var i = t.call(this, "loading", "alertview", !0) || this;
      return i.titleStr = "", i.descStr = "", i.type = 1, i.closeAsCancel = !1, i.titleStr = e.titleStr, i.descStr = e.descStr, i.callback = e.callback, i.type = e.type, i.MethodObj = e.MethodObj, i.itemData = e.itemData, i.cancelStr = e.cancelStr, i.okstr = e.okstr, i.closeAsCancel = e.closeAsCancel, i;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.c_type = this.getpanelController("c_type"), this.btn_quxiao.onClick(this, this.handleClose), this.btn_ok.onClick(this, this.onAcceptBtnTouchTap), this.btn_ok.text = this.okstr, this.btn_quxiao.text = this.cancelStr, "" != this.descStr && (this.txt_info.text = this.descStr), 1 == this.type ? this.c_type.selectedIndex = 0 : this.c_type.selectedIndex = 1;
    }, e.prototype.onCancelBtnTouchTap = function () {
      null != this.callback && this.MethodObj && (1 == this.type ? this.callback.apply(this.MethodObj) : this.itemData ? this.callback.apply(this.MethodObj, [e.NO, this.itemData]) : this.callback.apply(this.MethodObj, [e.NO])), this.onClose();
    }, e.prototype.onAcceptBtnTouchTap = function () {
      null != this.callback && this.MethodObj && (this.itemData ? this.callback.apply(this.MethodObj, [e.YES, this.itemData]) : this.callback.apply(this.MethodObj, [e.YES])), this.onClose();
    }, e.prototype.handleClose = function () {
      null != this.callback && this.MethodObj && (this.itemData ? this.callback.apply(this.MethodObj, [e.NO, this.itemData]) : this.callback.apply(this.MethodObj, [e.NO])), this.onClose();
    }, e.prototype.onClose = function () {
      UiManager.getInstance().close(e);
    }, e.prototype.destory = function () {
      this.btn_quxiao.offClick(this, this.handleClose), this.btn_ok.offClick(this, this.onAcceptBtnTouchTap), t.prototype.destory.call(this);
    }, e.key = "AlertView", e.YES = "YES", e.NO = "NO", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GlobalWaiting = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.constructFromXML = function (e) {
      this.setSize(fairygui.GRoot.inst.width, fairygui.GRoot.inst.height), t.prototype.constructFromXML.call(this, e), this.img_0 = this.getChild("img_0").asImage, this.on(laya.events.Event.DISPLAY, this, this.onAddedToStage), this.on(laya.events.Event.UNDISPLAY, this, this.onRemoveFromStage);
    }, e.prototype.onAddedToStage = function () {
      Laya.timer.frameLoop(2, this, this.onTimer);
    }, e.prototype.onTimer = function () {
      var t = this.img_0.rotation;
      (t += 10) > 360 && (t %= 360), this.img_0.rotation = t;
    }, e.prototype.onRemoveFromStage = function () {
      Laya.timer.clear(this, this.onTimer);
    }, e;
  }(fairygui.GComponent),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  LoadingView = function (t) {
    function e() {
      return t.call(this, "loading", "loadingview", !0) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.showValue(0);
    }, e.prototype.morefun = function () {
      WXGamePlatform.getInstance().moreGame();
    }, e.prototype.showValue = function (t, e) {
      void 0 === e && (e = "资源加载中:"), this.text_word.text = e + t + "%";
    }, e.prototype.destory = function () {
      t.prototype.destory.call(this);
    }, e.key = "LoadingView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  LoginView = function (t) {
    function e() {
      return t.call(this, "loading", "loginview", !0) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView();
    }, e.prototype.succeedcallback = function (t) {
      void 0 === t && (t = null), this.initEvent();
    }, e.prototype.initView = function () {
      this._loginProxy = this.getProxy(LoginProxy);
    }, e.prototype.initEvent = function () {
      this.btn_login.onClick(this, this.loginfun);
    }, e.prototype.loginfun = function () {
      this.getProxy(MainProxy).enterMain();
    }, e.prototype.clearEvent = function () {
      this.btn_login.offClick(this, this.loginfun);
    }, e.prototype.destory = function () {
      this.clearEvent(), t.prototype.destory.call(this);
    }, e.key = "LoginView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  LoginProxy = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.initProxy = function () {}, e.prototype.startGame = function () {
      GameHttps.getInstance().init(), this.getProxy(CacheProxy).init(), TimesTamper.getInstance().init(), TimesTamper.getInstance().updateServiceTime(Laya.Browser.now() / 1e3), this.getProxy(DayProxy).init(), WXGamePlatform.getInstance().init(), ADIGamePlatform.getInstance().init(), this.roleVO.init(), this.getProxy(MainProxy).init(), this.getProxy(ArmorProxy).init(), this.getProxy(GunProxy).init(), this.getProxy(HelmetProxy).init(), this.getProxy(RoleProxy).init(), this.getProxy(GuanQIaProxy).init(), this.getProxy(GoldBuzuProxy).init(), this.getProxy(MZQshiyongProxy).init(), this.getProxy(ChoutiProxy).init(), this.getProxy(MainProxy).enterMain();
    }, e.key = "LoginProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  WordTipsView = function (t) {
    function e() {
      var e = t.call(this, "loading", "wordTips") || this;
      return e.nowword = "", e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.t1 = this.item_panel.getTransition("t1");
    }, e.prototype.showWord = function (t) {
      this.nowword = t, this.text_word.text = t, this.t1.playing = !0, this.t1.play(Handler.create(this, this.playEndCallback), 1);
    }, e.prototype.playEndCallback = function () {
      WordTipsUtils.addwordList(this);
    }, e.key = "WordTipsView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  AdiComView = function (t) {
    function e() {
      return t.call(this, "main", "adicomview") || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), ADIGamePlatform.getInstance().addADI(ADIType.ADIType_shouye, this.item_adi.displayObject);
    }, e.key = "AdiComView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  AddBloodItem = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this.t0 = this.getTransition("t0");
    }, e.prototype.play = function (t) {
      this.text_word.text = "+" + t, this.t0.playing = !0, this.t0.play(Handler.create(this, this.playEndfun), 1);
    }, e.prototype.playEndfun = function () {
      ValueFlyManager.getInstance().removeaddBloodEffect(this);
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  BaoTouItem = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this.t0 = this.getTransition("t0"), this.visible = !1;
    }, e.prototype.play = function (t) {
      this.text_word.text = t.toString(), this.visible = !0, this.t0.playing = !0, this.t0.play(Handler.create(this, this.playendfun), 1);
    }, e.prototype.playendfun = function () {
      this.visible = !1;
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  BloodTipsItem = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this.t0 = this.getTransition("t0");
    }, e.prototype.play = function (t) {
      this.text_word.text = Math.floor(t).toString(), this.t0.playing = !0, this.t0.play(Handler.create(this, this.playEndfun), 1);
    }, e.prototype.playEndfun = function () {
      ValueFlyManager.getInstance().removeBloodEffect(this);
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  BossTipsItem = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this.t0 = this.getTransition("t0");
    }, e.prototype.play = function () {
      this.img_0.visible = !0, this.t0.playing = !0, this.t0.play(null, 1);
    }, e.prototype.stopeffect = function () {
      this.t0.playing && this.t0.stop(!0), this.img_0.visible = !1;
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  EquipItem = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.constructFromXML = function (e) {
      t.prototype.constructFromXML.call(this, e);
      for (var i in this._children) {
        var n = this._children[i];
        this[n.name] = n;
      }
      this.onInit();
    }, e.prototype.onInit = function () {
      this.t0 = this.getTransition("t0"), this.img_hx.visible = !1, this._roleProxy = MVCObjectPool.getInstance().getProxy(RoleProxy), this._gunProxy = MVCObjectPool.getInstance().getProxy(GunProxy), this._helmetProxy = MVCObjectPool.getInstance().getProxy(HelmetProxy), this._armorProxy = MVCObjectPool.getInstance().getProxy(ArmorProxy), this.c_state = this.getController("c_state"), this.c_btn = this.getController("c_btn"), this.c_item = this.getController("c_item"), this.btn_0.onClick(this, this.btnClick);
    }, e.prototype.btnClick = function () {
      switch (this.c_btn.selectedIndex) {
        case 0:
          this._roleProxy.changeEquip(this._type, this.itemvo);
          break;
        case 1:
          this._roleProxy.uplevEquip(this._type, this.itemvo);
          break;
        case 2:
          this._roleProxy.buyEquip(this._type, this.itemvo);
          break;
        case 3:
          this._roleProxy.invitefriendsgetEquip(this._type, this.itemvo);
          break;
        case 4:
          this._roleProxy.lookshipingetEquip(this._type, this.itemvo);
          break;
        case 5:
          this._roleProxy.tiaozhangetEquip();
          break;
        case 6:
          Debuger.log("满级了");
          break;
        case 7:
          WXGamePlatform.getInstance().playVideo(this, this.videosucceed);
      }
    }, e.prototype.videosucceed = function () {
      var t = this.itemvo;
      t && t.shiyongcfg && MVCObjectPool.getInstance().getProxy(GunProxy).settryoutGun(t.shiyongcfg.gunid, !1);
      var e = UiManager.instance.getView(MainView);
      e && e.item_equip && e.item_equip.closeEquip();
    }, e.prototype.showData = function (t, e) {
      this.itemvo = t, this._type = e, e == EquipType.EquipType_gun ? this.c_item.selectedIndex = 0 : e == EquipType.EquipType_helmet ? this.c_item.selectedIndex = 1 : e == EquipType.EquipType_armor && (this.c_item.selectedIndex = 2);
      var i = !1,
        n = !1,
        r = !1,
        a = 0,
        s = 0,
        o = 0,
        h = !1;
      switch (e) {
        case EquipType.EquipType_gun:
          var l = t;
          if (l.isshiyong) {
            h = !0;
            var u = l.shiyongcfg;
            u && (this.text_lv.text = u.level + "级", this.text_name0.text = u.name, this.text_hurt0.text = "伤害：" + u.hurt, this.text_mzx0.text = "瞄准线长度：" + Math.floor(u.length), this.text_baotou0.text = "爆头率:" + u.CF + "%", this.c_btn.selectedIndex = 7, this.img_hx.visible = !0, this.t0.play(null, -1));
          } else this.text_lv.text = l.level + "级", this.text_name0.text = l.cfg.name, this.text_hurt0.text = "伤害：" + l.cfg.hurt, this.text_mzx0.text = "瞄准线长度：" + Math.floor(l.cfg.length), this.text_baotou0.text = "爆头率:" + l.cfg.CF + "%", this.img_hx.visible = !1, this.t0.stop();
          i = l.ishas, n = l.isuser, (r = !l.nextCFg) ? this.img_tips.visible = !1 : (a = l.nextCFg.need, o = l.nextCFg.type, this.img_tips.visible = !!n && this._gunProxy.ischanuplev()), s = l.hasValue, this.load_icon.url = PathConfig.getgunicon(l.cfg.resource2D);
          break;
        case EquipType.EquipType_helmet:
          this.img_hx.visible = !1, this.t0.stop();
          var c = t;
          this.text_lv.text = c.level + "级", this.text_name1.text = c.cfg.name, this.text_blood1.text = "血量：" + c.cfg.blood, i = c.ishas, n = c.isuser, (r = !c.nextCfg) ? this.img_tips.visible = !1 : (a = c.nextCfg.number, o = c.nextCfg.type, this.img_tips.visible = !!n && this._helmetProxy.ischanuplev()), s = c.hasValue, this.load_icon.url = PathConfig.getheadicon(c.cfg.resource2D);
          break;
        case EquipType.EquipType_armor:
          this.img_hx.visible = !1, this.t0.stop();
          var _ = t;
          this.text_lv.text = _.level + "级", this.text_name1.text = _.cfg.name, this.text_blood1.text = "血量：" + _.cfg.blood, i = _.ishas, n = _.isuser, (r = !_.nextCfg) ? this.img_tips.visible = !1 : (a = _.nextCfg.number, o = _.nextCfg.type, this.img_tips.visible = !!n && this._armorProxy.ischanuplev()), s = _.hasValue, this.load_icon.url = PathConfig.getbodyicon(_.cfg.resource2D);
      }
      if (h) this.img_tips.visible = !1;
      else if (this.c_state.selectedIndex = n ? 1 : 0, r) this.c_btn.selectedIndex = n ? 6 : 0;
      else switch (o) {
        case GunType.GunType_1:
          i ? n ? (this.c_btn.selectedIndex = 1, this.text_need.text = a.toString()) : this.c_btn.selectedIndex = 0 : (this.c_btn.selectedIndex = 2, this.text_need.text = a.toString());
          break;
        case GunType.GunType_2:
          s >= a ? n ? (this.c_btn.selectedIndex = 1, this.text_need.text = a.toString()) : this.c_btn.selectedIndex = 0 : (WXGamePlatform.getInstance().checkEnable() ? this.c_btn.selectedIndex = 4 : this.c_btn.selectedIndex = 3, this.text_need.text = s + "/" + a);
          break;
        case GunType.GunType_3:
          this.c_btn.selectedIndex = 4, this.text_need.text = s + "/" + a;
          break;
        case GunType.GunType_4:
          this.c_btn.selectedIndex = 5;
      }
    }, e.prototype.dispose = function () {
      this.btn_0.offClick(this, this.btnClick), t.prototype.dispose.call(this);
    }, e;
  }(fairygui.GButton),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ItemBlood = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.maxBlood = 0, e.nowBlood = 0, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this.touchable = !1, this._lineList = [], this.item_lefttime.visible = !1;
    }, e.prototype.updateLeftTime = function (t, e) {
      this.item_lefttime.visible || (this.item_lefttime.visible = !0), this.item_lefttime.value = t, this.item_lefttime.text_time.text = e.toString();
    }, e.prototype.initBlood = function (t, e) {
      this.maxBlood = t, this.nowBlood = e, this.pro_blood.value = Math.floor(this.nowBlood / this.maxBlood * 100), this.updateLine();
    }, e.prototype.updateLine = function () {
      var t = 0,
        e = 0;
      if (this.maxBlood > 100) {
        var i = 100;
        this.maxBlood > 1500 && (i = this.maxBlood / 15), t = Math.ceil(this.maxBlood / i) - 1;
        var n = 0;
        for (e; e < t; e++) {
          var r;
          e < this._lineList.length ? (r = this._lineList[e]).visible = !0 : (r = fairygui.UIPackage.createObject("main", "img_lines").asImage, this.addChild(r), this._lineList.push(r), r.setPivot(.5, .5, !0), r.setSize(2, 10), r.y = 11), n += this.width / this.maxBlood * i, r.x = n;
        }
        if (e + 1 < this._lineList.length)
          for (e += 1; e < this._lineList.length; e++) this._lineList[e].visible = !1;
      } else
        for (e = 0; e < this._lineList.length; e++) this._lineList[e].visible = !1;
    }, e.prototype.updateBloodValue = function (t) {
      return this.nowBlood += t, this.nowBlood > this.maxBlood && (this.nowBlood = this.maxBlood, this.updateLine()), this.nowBlood < 0 && (this.nowBlood = 0), this.pro_blood.value = Math.floor(this.nowBlood / this.maxBlood * 100), this.nowBlood;
    }, e.prototype.dispose = function () {
      for (var e = this._lineList.length - 1; e >= 0; e--) {
        var i = this._lineList[e];
        i && (i.dispose(), i = null), this._lineList.splice(e, 1);
      }
      this._lineList = null, t.prototype.dispose.call(this);
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ItemGuaQia = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.constructFromXML = function (e) {
      t.prototype.constructFromXML.call(this, e);
      for (var i in this._children) {
        var n = this._children[i];
        this[n.name] = n;
      }
      this.onInit();
    }, e.prototype.onInit = function () {
      this.c1 = this.getController("c1");
    }, e.prototype.showData = function (t) {
      switch (t.type) {
        case GamesType.GuaQiaType_guaqia:
          this.c1.selectedIndex = 0;
          break;
        case GamesType.GuaQiaType_jijiangkaiq:
          this.c1.selectedIndex = 2;
          break;
        case GamesType.GuaQiaType_wujin:
          this.c1.selectedIndex = 1;
      }
    }, e;
  }(fairygui.GButton),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  LeftTimeItem = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._radius = 0, e._value = 0, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this._itemMask = new Laya.Sprite(), this._radius = this.width / 2, this._itemMask.graphics.drawPie(this._radius, this._radius, this._radius + 20, -90, -90, "#000000"), this.img_show.displayObject.mask = this._itemMask, this.value = 100;
    }, Object.defineProperty(e.prototype, "value", {
      get: function () {
        return this._value;
      },
      set: function (t) {
        if (this._value != t) {
          t > 100 ? t = 100 : t < 0 && (t = 0), this._value = t;
          var e = -90 + Math.ceil(360 * t / 100);
          this._itemMask.graphics.clear(), 270 == e && (e = 269.9), this._itemMask.graphics.drawPie(this._radius, this._radius, this._radius, -90, e, "#000000");
        }
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.dispose = function () {
      this._itemMask && (this._itemMask.graphics.clear(), this._itemMask.destroy(), this._itemMask = null), this.img_show.displayObject.mask = null, t.prototype.dispose.call(this);
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  MainRIghtBtnItem = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.nowvalue = 0, e._time = 0, e;
    }
    return __extends(e, t), e.prototype.init = function (t, e, i) {
      this._type = t, this._callback = i, this._callobj = e;
    }, Object.defineProperty(e.prototype, "ishasShare", {
      get: function () {
        return this._ishasShare;
      },
      set: function (t) {
        this._ishasShare = t, this._ishasShare && (this._ishasLook || this._callobj && this._callback && (this.stop(), this._callback.call(this._callobj, this._type, 1)));
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "ishasLook", {
      get: function () {
        return this._ishasLook;
      },
      set: function (t) {
        this._ishasLook = t, this._ishasLook && (this._ishasShare || this._callobj && this._callback && (this.stop(), this._callback.call(this._callobj, this._type, 0)));
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.start = function () {
      this._time = 0, this._ishasShare = !1, this._ishasLook = !1, this.nowvalue = 0, TimerService.getInastance().addUpdateTarget(this);
    }, e.prototype.stop = function () {
      TimerService.getInastance().removeUpdateTarget(this);
    }, e.prototype.update = function (t) {
      this._time += t, this._time > 15e3 && (this._time = 0, 0 == this.nowvalue ? this.nowvalue = 1 : this.nowvalue = 0, this._callobj && this._callback && this._callback.call(this._callobj, this._type, this.nowvalue));
    }, e;
  }(fairygui.GButton),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  EquipView = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._isopen = !1, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      this._gunproxy = this.getProxy(GunProxy), this._helmetProxy = this.getProxy(HelmetProxy), this._armorProxy = this.getProxy(ArmorProxy), this.t0 = this.getTransition("t0"), this.t1 = this.getTransition("t1"), this.btn_0 = this.item_panel.getChild("btn_0").asButton, this.btn_1 = this.item_panel.getChild("btn_1").asButton, this.btn_2 = this.item_panel.getChild("btn_2").asButton, this.btn_return = this.item_panel.getChild("btn_return").asButton, this.list_2 = this.item_panel.getChild("list_2").asList, this.list_1 = this.item_panel.getChild("list_1").asList, this.list_0 = this.item_panel.getChild("list_0").asList, this.group_aword = this.item_panel.getChild("group_aword").asGroup, this.text_word = this.item_panel.getChild("text_word").asTextField, this.c1 = this.item_panel.getController("c1"), this.img_wuqitips = this.item_panel.getChild("img_wuqitips").asImage, this.img_toukuitips = this.item_panel.getChild("img_toukuitips").asImage, this.img_hujiatips = this.item_panel.getChild("img_hujiatips").asImage, this.list_2.setVirtual(), this.list_1.setVirtual(), this.list_0.setVirtual(), this.list_0.itemRenderer = Handler.create(this, this.list0itemrender, null, !1), this.list_1.itemRenderer = Handler.create(this, this.list1itemrender, null, !1), this.list_2.itemRenderer = Handler.create(this, this.list2itemrender, null, !1), this.list_0.numItems = 0, this.list_1.numItems = 0, this.list_2.numItems = 0, this.group_aword.visible = !1;
    }, e.prototype.initEvent = function () {
      this.btn_return.onClick(this, this.closeEquip), this.addDataEvent(GameEvent.GameEvent_updateGunList, this, this.updategunlistHandler), this.addDataEvent(GameEvent.GameEvent_updateHelmetList, this, this.updateHelmetListHandler), this.addDataEvent(GameEvent.GameEvent_updateArmorList, this, this.updateArmorListHandler), this.list_0.on(fairygui.Events.CLICK_ITEM, this, this.list_0Click), this.list_1.on(fairygui.Events.CLICK_ITEM, this, this.list_1Click), this.list_2.on(fairygui.Events.CLICK_ITEM, this, this.list_2Click);
    }, e.prototype.list_0Click = function (t) {
      var e = t.itemvo;
      this.showGun(e.cfg);
    }, e.prototype.list_1Click = function (t) {
      var e = t.itemvo;
      this.showhead(e.cfg);
    }, e.prototype.list_2Click = function (t) {
      var e = t.itemvo;
      this.showBody(e.cfg);
    }, e.prototype.updategunlistHandler = function () {
      this.list_0.numItems = this._gunproxy.gunList.length, this.updateEquiptips();
    }, e.prototype.updateHelmetListHandler = function () {
      this.list_1.numItems = this._helmetProxy.helmetList.length, this.updateEquiptips();
    }, e.prototype.updateArmorListHandler = function () {
      this.list_2.numItems = this._armorProxy.armorList.length, this.updateEquiptips();
    }, e.prototype.list0itemrender = function (t, e) {
      t < this._gunproxy.gunList.length && e.showData(this._gunproxy.gunList[t], EquipType.EquipType_gun);
    }, e.prototype.list1itemrender = function (t, e) {
      t < this._helmetProxy.helmetList.length && e.showData(this._helmetProxy.helmetList[t], EquipType.EquipType_helmet);
    }, e.prototype.list2itemrender = function (t, e) {
      t < this._armorProxy.armorList.length && e.showData(this._armorProxy.armorList[t], EquipType.EquipType_armor);
    }, e.prototype.btnclick = function () {}, e.prototype.openEquip = function (t, e, i) {
      var n = {
        state: e,
        cfg: i
      };
      this._nowstate = e, this._gunCfg = i, t == EquipType.EquipType_gun ? this.c1.selectedIndex = 0 : t == EquipType.EquipType_helmet ? this.c1.selectedIndex = 1 : t == EquipType.EquipType_armor && (this.c1.selectedIndex = 2), this.dispacheDataEvent(GameEvent.GameEvent_openequipUpdate, n);
      var r = 0,
        a = 0;
      if (2 == e && i)
        for (this.group_aword.visible = !0, this.text_word.text = "获得[color=#ffc730]" + i.name + "[/color],可以来" + SettingCFG.dict[1].value + "发", r; r < this._gunproxy.gunList.length; r++) this._gunproxy.gunList[r].cfg.id == i.id ? (this._gunproxy.gunList[r].isshiyong = !0, this._gunproxy.gunList[r].shiyongcfg = i, a = r) : this._gunproxy.gunList[r].isshiyong = !1;
      else
        for (this.group_aword.visible = !1, r; r < this._gunproxy.gunList.length; r++) this._gunproxy.gunList[r].isshiyong = !1;
      this.list_0.numItems = this._gunproxy.gunList.length, this.list_0.scrollToView(a), this.list_1.numItems = this._helmetProxy.helmetList.length, this.list_2.numItems = this._armorProxy.armorList.length, this._isopen = !0, this.showGun(this._gunproxy.mygunVo.cfg), this.showBody(this._armorProxy.myarmorVo.cfg), this.showhead(this._helmetProxy.myhelmetVo.cfg), WXGamePlatform.getInstance().hideBanner(), this.t0.playing = !0, this.t0.play(Handler.create(this, this.openEquipEnd), 1), this.updateEquiptips();
    }, e.prototype.updateEquiptips = function () {
      this.img_wuqitips.visible = this._gunproxy.ischanuplev(), this.img_toukuitips.visible = this._helmetProxy.ischanuplev(), this.img_hujiatips.visible = this._armorProxy.ischanuplev();
    }, e.prototype.openEquipEnd = function () {
      var t = {
        state: this._nowstate,
        cfg: this._gunCfg
      };
      this.dispacheDataEvent(GameEvent.GameEvent_openequipEnd, t);
    }, e.prototype.showGun = function (t) {}, e.prototype.showhead = function (t) {}, e.prototype.showBody = function (t) {}, e.prototype.closeEquip = function () {
      this.t1.playing = !0, this.t1.play(Handler.create(this, this.closecalback), 1), this._isopen = !1, WXGamePlatform.getInstance().createBanner(), this.dispacheDataEvent(GameEvent.GameEvent_hideequip, this._nowstate);
    }, e.prototype.closecalback = function () {}, e;
  }(ChildBaseView),
  GameStateManager = function () {
    function t() {
      this.nowLevelNpcNum = 0, this.nowAliveNpcIndex = 0, this.isstartGame = !1, this._mainIsCanShoot = !1, this._nowScore = 0, this._nowGuanQia = 0, this._nowReviveNums = 0, this._lxbaotouNum = 0, this._isupdatemzxTime = !1, this._mzxtimeMax = 0, this._nowwujinLev = 1, this._nowwujinscore = 0, this._nowwjBlood = 0, this._equipiselect = !1, this._wujinfirstmzxIndex = -1, this._shoottime = 0, this._shootLefttime = 0, this.nowleftBulletNums = 0, this._nowShootTargetName = "", this._bulletName = "", this._getBloodValue = 0, this._nowNeedAddGold = 0;
    }
    return t.getInstance = function () {
      return this._instance || (this._instance = new t()), this._instance;
    }, t.prototype.init = function () {
      this._guanqiaProxy = MVCObjectPool.getInstance().getProxy(GuanQIaProxy), this._mainProxy = MVCObjectPool.getInstance().getProxy(MainProxy), this._roleProxy = MVCObjectPool.getInstance().getProxy(RoleProxy), this._gunProxy = MVCObjectPool.getInstance().getProxy(GunProxy), this._helmetproxy = MVCObjectPool.getInstance().getProxy(HelmetProxy), this._armorproxy = MVCObjectPool.getInstance().getProxy(ArmorProxy), this._scene3Dmanager = Scene3DManager.getInstance(), this.initEvent(), this.npcList = [], this.bossList = [];
      var t;
      for (var e in ResourceCFG.dict) 1 == (t = ResourceCFG.dict[e]).type ? this.npcList.push(t) : this.bossList.push(t);
      this._mzxtimeMax = SettingCFG.dict[18].value;
      var i = CacheManager.getInstance().getGameCacheObj(RoleDataType.nowwjinfo);
      i.hasOwnProperty("lev") ? this._nowwujinLev = Number(i.lev) : this._nowwujinLev = 1, i.hasOwnProperty("score") ? this._nowwujinscore = Number(i.score) : this._nowwujinscore = 0, i.hasOwnProperty("blood") ? this._nowwjBlood = Number(i.blood) : this._nowwjBlood = 0;
    }, t.prototype.initEvent = function () {
      EventUtils.addEventListener(GameEvent.GameEvent_changeUserHelmet, this.changeUserHelmetHandler, this), EventUtils.addEventListener(GameEvent.GameEvent_changeUserArmor, this.changeUserArmoHandler, this), EventUtils.addEventListener(GameEvent.GameEvent_changeUserGun, this.changeUserGunHandler, this), EventUtils.addEventListener(GameEvent.GameEvent_upgunlev, this.upgunlevHandler, this), EventUtils.addEventListener(GameEvent.GameEvent_openequipUpdate, this.openequipHandler, this), EventUtils.addEventListener(GameEvent.GameEvent_hideequip, this.hideequipHandler, this), EventUtils.addEventListener(GameEvent.GameEvent_openequipEnd, this.openequipendHandler, this);
    }, t.prototype.openequipHandler = function (t) {
      var e = t.state;
      t.cfg;
      this._equipiselect = !0, 0 != e && (this.isstartGame = !1), this._scene3Dmanager.mainPlayerScript && this._scene3Dmanager.mainPlayerScript.updateAngle(200), this._scene3Dmanager.cameraScript && this._scene3Dmanager.cameraScript.setEquipLook();
    }, t.prototype.openequipendHandler = function (t) {}, t.prototype.hideequipHandler = function (t) {
      this._scene3Dmanager.mainPlayerScript && this._scene3Dmanager.mainPlayerScript.updateAngle(0), this._scene3Dmanager.cameraScript && this._scene3Dmanager.cameraScript.hideequipLook(this, this.hideequipend, t), this._equipiselect = !1;
    }, t.prototype.hideequipend = function (e) {
      void 0 === e && (e = 0), 1 == e ? this.isstartGame = !0 : 2 == e && (this.changeUserGunHandler(), t.getInstance().nextGame());
    }, t.prototype.upgunlevHandler = function () {
      if (this._scene3Dmanager.mainPlayerScript) {
        var t = this._gunProxy.getNowUserGuncfg();
        this._gunProxy.leftMZNum > 0 ? this._scene3Dmanager.mainPlayerScript.upgunLev(t, !1, 0) : this._scene3Dmanager.mainPlayerScript.upgunLev(t, !0, t.length);
      }
    }, t.prototype.changeUserHelmetHandler = function () {
      this._scene3Dmanager.mainPlayerScript && this._scene3Dmanager.mainPlayerScript.changeHelmet(this._helmetproxy.myhelmetVo.cfg);
    }, t.prototype.changeUserArmoHandler = function () {
      this._scene3Dmanager.mainPlayerScript && this._scene3Dmanager.mainPlayerScript.changeArmor(this._armorproxy.myarmorVo.cfg);
    }, t.prototype.changeUserGunHandler = function () {
      if (this._scene3Dmanager.mainPlayerScript)
        if (this._gunProxy.leftMZNum > 0 && this._scene3Dmanager.nowNpc) {
          var t = this.getMainNPCdis();
          this._scene3Dmanager.mainPlayerScript.changeGun(this._gunProxy.getNowUserGuncfg(), !0, t);
        } else {
          var e = this._gunProxy.getNowUserGuncfg();
          this._scene3Dmanager.mainPlayerScript.changeGun(e, !0, e.length, !1);
        }
    }, t.prototype.getMainNPCdis = function () {
      if (this._scene3Dmanager.mainPlayerScript && this._scene3Dmanager.nowNpcScript) {
        var t = this._scene3Dmanager.mainPlayer.transform.position,
          e = this._scene3Dmanager.nowNpcScript.playerinitPos,
          i = Vector3.distance(t, e);
        return i = 100 * i + 1;
      }
      return 0;
    }, t.prototype.startSelectGame = function () {
      this._lxbaotouNum = 0;
      switch (0 == Number(CacheManager.getInstance().getCachestr(RoleDataType.isfirstEnterGame)) && (CacheManager.getInstance().addCachestr(RoleDataType.isfirstEnterGame, "1"), UiManager.instance.add(GuideView)), this._nowReviveNums = 0, this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          this.nowGuanQia = this._nowwujinLev, this.nowScore = this._nowwujinscore, 1 == this.nowGuanQia && UiManager.instance.add(GameDescView), this.initstartGame(), 0 == this._nowwjBlood && (this._nowwjBlood = this._roleProxy.getHeroBlood()), this._scene3Dmanager.mainPlayerScript.initBlood(this._roleProxy.getHeroBlood(), this._nowwjBlood);
          break;
        case GamesType.GuaQiaType_guaqia:
          this.nowScore = 0;
          var t = this._guanqiaProxy.selectGQVo.cfg;
          if (this._guanqiaspecialDict = {}, 0 != t.type) {
            var e = 0,
              i = [];
            for (e = 0; e < t.number; e++) i.push(e + 1);
            for (e = 0; e < t.dirennumber; e++) {
              var n = GameUtils.randRange(0, i.length - 1);
              if (t.type != SpecialTypes.SpecialTypes_3) this._guanqiaspecialDict[i[n]] = t.type;
              else {
                var r = GameUtils.randRange(1, 100);
                this._guanqiaspecialDict[i[n]] = r <= 50 ? SpecialTypes.SpecialTypes_1 : SpecialTypes.SpecialTypes_2;
              }
              i.splice(n, 1);
            }
          }
          this.nowGuanQia = t.screening, this.initstartGame(), this._scene3Dmanager.mainPlayerScript.initBlood(this._roleProxy.getHeroBlood());
      }
      EventUtils.dispatchEvent(GameEvent.GameEvent_startMainRightui), EventUtils.dispatchEvent(GameEvent.GameEvent_updateGuaqiaShow);
    }, t.prototype.initstartGame = function () {
      this._scene3Dmanager.removeNpc(), this.isstartGame = !0;
      var t = UiManager.instance.getView(MainView);
      switch (t && t.startGamefun(), this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          this.nowLevelNpcNum = 4 + Math.floor(this.nowGuanQia / SettingCFG.dict[19].value) * SettingCFG.dict[20].value, this.nowLevelNpcNum += 1, 1 == this._nowGuanQia ? (this._wujinfirstmzxIndex = -1, MVCObjectPool.getInstance().getProxy(GunProxy).setMiaozhunToNpc(this.nowLevelNpcNum - 1)) : 2 == this._nowGuanQia ? this._wujinfirstmzxIndex = this.nowLevelNpcNum : this._nowGuanQia % 2 == 0 ? this._wujinfirstmzxIndex = GameUtils.randRange(2, this.nowLevelNpcNum) : this._wujinfirstmzxIndex = -1, this._wujinspecialDict = {};
          var e = 0;
          if ((e = this.nowGuanQia >= 5 && this.nowGuanQia < 10 ? 1 : Math.floor(this._nowGuanQia / SettingCFG.dict[23].value) * SettingCFG.dict[24].value) > 0) {
            var i = SettingCFG.dict[25].value,
              n = 0,
              r = [];
            for (n = 0; n < this.nowLevelNpcNum - 1; n++) r.push(n + 1);
            for (n = 0; n < e; n++) {
              var a = GameUtils.randRange(0, r.length - 1);
              if (i != SpecialTypes.SpecialTypes_3) this._wujinspecialDict[r[a]] = i;
              else {
                var s = GameUtils.randRange(1, 100);
                this._wujinspecialDict[r[a]] = s <= 50 ? SpecialTypes.SpecialTypes_1 : SpecialTypes.SpecialTypes_2;
              }
              r.splice(a, 1);
            }
          }
          EventUtils.dispatchEvent(GameEvent.GameEvent_showChaoyue);
          break;
        case GamesType.GuaQiaType_guaqia:
          this.nowLevelNpcNum = this._guanqiaProxy.selectGQVo.cfg.number + 1;
      }
      this.nowAliveNpcIndex = 0, this._scene3Dmanager.initStartGame(), EventUtils.dispatchEvent(GameEvent.GameEvent_updateNpcPlan), this.updateNPc(), this.showWord();
    }, t.prototype.initwujininfo = function () {
      this.nowGuanQia = 1, this.nowScore = 0, this._nowwujinLev = this.nowGuanQia, this._nowwujinscore = this.nowScore, this._nowwjBlood = 0, this.cachewujininfo();
    }, t.prototype.cachewujininfo = function () {
      CacheManager.getInstance().addGameCacheObj(RoleDataType.nowwjinfo, {
        lev: this._nowGuanQia,
        score: this._nowScore,
        blood: this._nowwjBlood
      });
    }, t.prototype.showWord = function () {
      var t = UiManager.instance.getView(MainView);
      t && t.starthowWord(this._nowGuanQia);
    }, t.prototype.resetInitgame = function () {
      this._lxbaotouNum = 0, this._scene3Dmanager.removeNpc(), this._scene3Dmanager.initStartGame();
    }, Object.defineProperty(t.prototype, "nowGuanQia", {
      get: function () {
        return this._nowGuanQia;
      },
      set: function (t) {
        this._nowGuanQia != t && (this._nowGuanQia = t, EventUtils.dispatchEvent(GameEvent.GameEvent_updateGuaqiaShow));
      },
      enumerable: !0,
      configurable: !0
    }), t.prototype.nextGame = function () {
      switch (this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          this.nowGuanQia++, this._nowwujinLev = this.nowGuanQia, this._nowwujinscore = this._nowScore, this._nowwjBlood = this._scene3Dmanager.mainPlayerScript.nowBlood, this.cachewujininfo(), this.initstartGame();
          break;
        case GamesType.GuaQiaType_guaqia:
      }
    }, t.prototype.reviveGame = function () {
      this.isstartGame = !0, this._mainIsCanShoot = !0, this._scene3Dmanager.mainPlayerScript.setIsScan(!0), this._scene3Dmanager.mainPlayerScript.updateAlive(!0), this._scene3Dmanager.mainPlayerScript.initBlood(this._roleProxy.getHeroBlood()), this._mainProxy.nowGamesType == GamesType.GuaQiaType_wujin && EventUtils.dispatchEvent(GameEvent.GameEvent_showChaoyue), this.setSpecialType2();
    }, Object.defineProperty(t.prototype, "mainIsCanShoot", {
      get: function () {
        return this._mainIsCanShoot;
      },
      enumerable: !0,
      configurable: !0
    }), t.prototype.updateNPc = function () {
      this.nowAliveNpcIndex++;
      var t = this.getShowNpcDisZ();
      if (this.nowAliveNpcIndex <= this.nowLevelNpcNum) {
        var e = 0;
        switch (this._mainProxy.nowGamesType) {
          case GamesType.GuaQiaType_wujin:
            this.nowAliveNpcIndex == this._wujinfirstmzxIndex && (t = GameUtils.randRange(SettingCFG.dict[15].value, SettingCFG.dict[17].value)), this._wujinspecialDict && this._wujinspecialDict[this.nowAliveNpcIndex] && (e = this._wujinspecialDict[this.nowAliveNpcIndex]);
            break;
          case GamesType.GuaQiaType_guaqia:
            this._guanqiaspecialDict[this.nowAliveNpcIndex] && (e = this._guanqiaspecialDict[this.nowAliveNpcIndex]);
        }
        var i;
        this.nowAliveNpcIndex == this.nowLevelNpcNum ? (i = this.bossList[GameUtils.randRange(0, this.bossList.length - 1)], Scene3DManager.getInstance().addBoss(this.nowAliveNpcIndex, this, this.npcinitEnd, t, i, 0)) : (i = this.npcList[GameUtils.randRange(0, this.npcList.length - 1)], Scene3DManager.getInstance().addNpc(this.nowAliveNpcIndex, this, this.npcinitEnd, t, i, e));
      } else switch (this.setJoyTouchUp(), Debuger.log("过关，，，，，"), this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          var n = UiManager.instance.getView(MainView);
          n && n.playyunEffect(this, this.showgqawardview);
          break;
        case GamesType.GuaQiaType_guaqia:
          this._guanqiaProxy.GQSucceed();
      }
    }, t.prototype.showgqawardview = function () {
      var t = this.getTryGunCfg();
      this._mainProxy.openEquip(EquipType.EquipType_gun, 2, t);
    }, t.prototype.getTryGunCfg = function () {
      return this._gunProxy.boxGunList[GameUtils.randRange(0, this._gunProxy.boxGunList.length - 1)];
    }, t.prototype.isBoss = function () {
      return this.nowAliveNpcIndex == this.nowLevelNpcNum;
    }, t.prototype.setNpcBlood = function () {
      var t = this.isBoss();
      switch (this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          if (t) {
            var e = SettingCFG.dict[7].value + Math.floor((this.nowGuanQia - 1) / SettingCFG.dict[31].value) * SettingCFG.dict[32].value;
            e > SettingCFG.dict[14].value && (e = SettingCFG.dict[14].value), Scene3DManager.getInstance().nowNpcScript.initBlood(e);
          } else {
            var i = SettingCFG.dict[2].value + Math.floor(this.nowGuanQia / SettingCFG.dict[21].value) * SettingCFG.dict[22].value;
            i > SettingCFG.dict[26].value && (i = SettingCFG.dict[26].value), Scene3DManager.getInstance().nowNpcScript.initBlood(i);
          }
          break;
        case GamesType.GuaQiaType_guaqia:
          t ? Scene3DManager.getInstance().nowNpcScript.initBlood(this._guanqiaProxy.selectGQVo.getbossblood(this._guanqiaProxy.selectGQType)) : Scene3DManager.getInstance().nowNpcScript.initBlood(this._guanqiaProxy.selectGQVo.getnpcblood(this._guanqiaProxy.selectGQType));
      }
    }, t.prototype.getShowNpcDisZ = function () {
      var t = 0;
      switch (this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          var e = (this.nowGuanQia - 1) * SettingCFG.dict[5].value,
            i = SettingCFG.dict[3].value + e;
          i > SettingCFG.dict[6].value && (i = SettingCFG.dict[6].value);
          var n = SettingCFG.dict[4].value + e;
          n > SettingCFG.dict[6].value && (n = SettingCFG.dict[6].value), t = GameUtils.randRange1(i, n);
          break;
        case GamesType.GuaQiaType_guaqia:
          t = this._guanqiaProxy.selectGQVo.getdisZ(this._guanqiaProxy.selectGQType, this.isBoss());
      }
      return t;
    }, t.prototype.npcinitEnd = function () {
      switch (this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          this.nowAliveNpcIndex == this._wujinfirstmzxIndex && this.openmzxshiyongView();
      }
      this.bulletName = "bulletname" + this.nowAliveNpcIndex, this.setNpcBlood(), this._scene3Dmanager.nowNpc.transform.position.x > this._scene3Dmanager.mainPlayer.transform.position.x ? this._scene3Dmanager.mainPlayerScript.changeGunByhand(0) : this._scene3Dmanager.mainPlayerScript.changeGunByhand(1), this._mainIsCanShoot = !0;
      var t = Scene3DManager.getInstance().mainPlayerScript;
      t && t.setIsScan(!0), this.setMiaozhuToNpc(), this.setSpecialType2();
    }, t.prototype.openmzxshiyongView = function () {
      if (this.isstartGame) {
        this.setJoyTouchUp();
        var t = this.getMainNPCdis();
        this._scene3Dmanager.mainPlayerScript.setmzToPos(t), MVCObjectPool.getInstance().getProxy(MZQshiyongProxy).openview();
      }
    }, t.prototype.setSpecialType2 = function () {
      this._scene3Dmanager.nowNpcScript && this._scene3Dmanager.nowNpcScript.specialType == SpecialTypes.SpecialTypes_2 && (this._shoottime = 0, this._shootLefttime = this._scene3Dmanager.nowNpcScript.shootleftTime, TimerService.getInastance().addUpdateTarget(this));
    }, t.prototype.update = function (t) {
      this._shoottime += t, this._shootLefttime -= t, this._shoottime > 150 && (this._shoottime = 0, this._scene3Dmanager.nowNpcScript && this._scene3Dmanager.nowNpcScript.specialType == SpecialTypes.SpecialTypes_2 && (this._shootLefttime <= 0 ? (this._shootLefttime = 0, this._scene3Dmanager.nowNpcScript.updateDaojishi(this._shootLefttime), this._shootLefttime = this._scene3Dmanager.nowNpcScript.shootleftTime, this.npcStartShoot()) : this._scene3Dmanager.nowNpcScript.updateDaojishi(this._shootLefttime)));
    }, t.prototype.mouseDownClick = function () {
      if (Debuger.log("mouseDownClick:", this.isstartGame, this._mainIsCanShoot), this.isstartGame && this._mainIsCanShoot) {
        var t = Scene3DManager.getInstance().mainPlayerScript;
        t && (Debuger.log("发射子弹"), this._nowShootTargetName = "", this._gunProxy.shootBullet(), this.nowleftBulletNums = this._gunProxy.getNowUserGuncfg().number, t.startShoot(this.bulletName), this._mainIsCanShoot = !1);
      }
    }, t.prototype.bulletEventEnd = function (t, e, i, n, r, a) {
      if (void 0 === i && (i = null), void 0 === n && (n = null), void 0 === r && (r = null), void 0 === a && (a = null), t == this.bulletName && (this.updatenowLeftBulletNums(), this.nowleftBulletNums <= 0 && "mainPlayer" == e && this._gunProxy.updateBullet(), this.isstartGame)) {
        if (null != i)
          if (this._nowShootTargetName = i, this._forward = r, this._bulletPos = a, this._scene3Dmanager.playBloodEffect(a, r), this._scene3Dmanager.nowNpcName == this._nowShootTargetName) {
            var n = !1,
              s = this._gunProxy.getNowUserGuncfg();
            GameUtils.randRange(1, 100) <= s.CF ? n = !0 : this._lxbaotouNum = 0, this._scene3Dmanager.nowNpcScript.bloodWidthRed(), this.changegetScore(n);
            h = this._gunProxy.gethurtvalue();
            n && (h *= SettingCFG.dict[33].value);
            var o = this.vectorToPoint(this._scene3Dmanager.nowNpc.transform.position);
            ValueFlyManager.getInstance().playBloodEffect(o, -h);
            this._scene3Dmanager.nowNpcScript.updateBlood(-h) <= 0 && (this.bulletName = "", this.nowleftBulletNums = 0, this._gunProxy.updateBullet(), TimerService.getInastance().removeUpdateTarget(this), EventUtils.dispatchEvent(GameEvent.GameEvent_updateNpcPlan), this.isBoss() ? this._deadNpcNowPos = this._scene3Dmanager.nowNpc.transform.position.clone() : this._deadNpcNowPos = this._scene3Dmanager.nowNpcScript.playerinitPos.clone(), this._scene3Dmanager.nowNpcScript.die(this._forward), this._scene3Dmanager.mainPlayerScript.setIsScan(!1), this.hitDeadNpc(this._deadNpcNowPos));
          } else {
            this._scene3Dmanager.mainPlayerScript.bloodWidthRed(), Debuger.log("打中主角");
            var h = this._scene3Dmanager.resourceCfg.hurt1,
              l = this._scene3Dmanager.mainPlayerScript.updateBlood(-h),
              u = this.vectorToPoint(this._scene3Dmanager.mainPlayer.transform.position);
            if (ValueFlyManager.getInstance().playBloodEffect(u, -h), l <= 0) switch (TimerService.getInastance().removeUpdateTarget(this), this.setJoyTouchUp(), Debuger.log("主角死亡"), this._scene3Dmanager.mainPlayerScript.setIsScan(!1), this._scene3Dmanager.mainPlayerScript.updateAlive(!1), this._mainProxy.nowGamesType) {
              case GamesType.GuaQiaType_wujin:
                EventUtils.dispatchEvent(GameEvent.GameEvent_hideChaoyue), this.endGame();
                break;
              case GamesType.GuaQiaType_guaqia:
                this.isstartGame = !1, UiManager.instance.add(UpGunView);
            }
          }
        if (this.nowleftBulletNums <= 0)
          if ("mainPlayer" == e)
            if (null == i && (this._lxbaotouNum = 0), !this._scene3Dmanager.nowNpcScript || this._scene3Dmanager.nowNpcScript.nowBlood <= 0) this._scene3Dmanager.mainPlayerScript.moveToPos(this._deadNpcNowPos, this, this.mainplayermoveEnd);
            else switch (this._mainProxy.nowGamesType) {
              case GamesType.GuaQiaType_wujin:
                if (this._scene3Dmanager.nowNpc)
                  if (this._scene3Dmanager.nowNpcScript.specialType == SpecialTypes.SpecialTypes_2) this._mainIsCanShoot = !0;
                  else if ("" == this._nowShootTargetName) this.npcStartShoot();
                else {
                  (c = this.isBoss()) ? this.bossStartMove(): this._mainIsCanShoot = !0;
                }
                break;
              case GamesType.GuaQiaType_guaqia:
                if (this._scene3Dmanager.nowNpc)
                  if (this._scene3Dmanager.nowNpcScript.specialType == SpecialTypes.SpecialTypes_2) this._mainIsCanShoot = !0;
                  else if ("" == this._nowShootTargetName) this.npcStartShoot();
                else {
                  var c = this.isBoss();
                  c ? this.bossStartMove() : this._mainIsCanShoot = !0;
                }
            } else if (this._scene3Dmanager.mainPlayerScript && this._scene3Dmanager.mainPlayerScript.nowBlood > 0) switch (this._mainProxy.nowGamesType) {
              case GamesType.GuaQiaType_wujin:
                this._mainIsCanShoot = !0;
                break;
              case GamesType.GuaQiaType_guaqia:
                this.isBoss() ? this.bossStartMove() : this._mainIsCanShoot = !0;
            }
      }
    }, t.prototype.bossMoveEnd = function () {
      this._scene3Dmanager.nowNpcScript.setLookAt(this._scene3Dmanager.nowNpcScript.lastPos), this._scene3Dmanager.mainPlayerScript.moveToPos(this._scene3Dmanager.nowNpcScript.lastPos, this, this.mainmoveToBossend);
    }, t.prototype.mainmoveToBossend = function () {
      this._scene3Dmanager.setMainInitLookAt(), this._mainIsCanShoot = !0;
    }, t.prototype.bossStartMove = function () {
      this._mainIsCanShoot = !1;
      var t = this.getShowNpcDisZ();
      Scene3DManager.getInstance().nowNpcScript.moveToPos(PosType.getStandPos(!0, t), this, this.bossMoveEnd);
    }, t.prototype.setJoyTouchUp = function () {
      var t = UiManager.instance.getView(MainView);
      t && t.setjoystickTouchUp();
    }, t.prototype.updatenowLeftBulletNums = function () {
      this.nowleftBulletNums--;
    }, t.prototype.npcStartShoot = function () {
      this._nowShootTargetName = "", this._mainIsCanShoot = !1;
      var t = new Vector3(),
        e = !0;
      switch (this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          1 == this.nowGuanQia && this.nowAliveNpcIndex < this.nowLevelNpcNum ? (Vector3.add(this._scene3Dmanager.mainPlayer.transform.position.clone(), new Vector3(0, 4, 0), t), e = !1) : (t = this._scene3Dmanager.mainPlayer.transform.position.clone()).y = Scene3DManager.standY;
          break;
        case GamesType.GuaQiaType_guaqia:
          this.nowAliveNpcIndex < 4 && 1 == this.nowGuanQia ? (Vector3.add(this._scene3Dmanager.mainPlayer.transform.position.clone(), new Vector3(0, 4, 0), t), e = !1) : (t = this._scene3Dmanager.mainPlayer.transform.position.clone()).y = Scene3DManager.standY;
      }
      this.nowleftBulletNums = this._scene3Dmanager.nowNpcGunCfg.number, this._scene3Dmanager.nowNpcScript.startShoot(this.bulletName, t, e);
    }, Object.defineProperty(t.prototype, "bulletName", {
      get: function () {
        return this._bulletName;
      },
      set: function (t) {
        this._bulletName = t;
      },
      enumerable: !0,
      configurable: !0
    }), t.prototype.updateMainPlayerAngle = function (t) {
      this._scene3Dmanager.mainPlayerScript && (this._equipiselect ? this._scene3Dmanager.mainPlayerScript.updateAngle(180 - t) : this._scene3Dmanager.mainPlayerScript.updateAngle(t));
    }, t.prototype.changegetScore = function (t) {
      if (t) {
        this._lxbaotouNum++;
        var e = UiManager.instance.getView(MainView);
        e && e.playBaotou(this._lxbaotouNum);
      }
      switch (this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          this.nowScore += t ? 2 * this.nowGuanQia : 1 * this.nowGuanQia;
          break;
        case GamesType.GuaQiaType_guaqia:
          var i = 0;
          switch (this._guanqiaProxy.selectGQType) {
            case GuanQiaStateType.GuanQiaStateType_2:
              i = this.nowGuanQia;
              break;
            case GuanQiaStateType.GuanQiaStateType_3:
              i = Math.ceil(1.5 * this.nowGuanQia);
              break;
            case GuanQiaStateType.GuanQiaStateType_4:
              i = Math.ceil(1.5 * this.nowGuanQia * 1.5);
          }
          this.nowScore += t ? 2 * i : i;
      }
    }, t.prototype.setMiaozhuToNpc = function () {
      if (this._scene3Dmanager.nowNpc && this._scene3Dmanager.mainPlayerScript && this._gunProxy.leftMZNum > 0) {
        var t = this.getMainNPCdis();
        this._scene3Dmanager.mainPlayerScript.setmzToPos(t);
      }
    }, t.prototype.hitDeadNpc = function (t) {
      var e = this.isBoss();
      switch (this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          if (e) {
            n = this.nowGuanQia - 1 + 10;
            this.addBoxGold(n, t), this.addBoxGun(t);
            (i = GameUtils.randRange(1, 100)) <= 10 ? this.addBloodBox(Scene3DManager.getInstance().mainPlayerScript.maxBlood * SettingCFG.dict[10].value, t) : this._getBloodValue = 0;
          } else {
            if ((r = GameUtils.randRange(1, 100)) <= 25 ? this.addBoxGold(1, t) : this._nowNeedAddGold = 0, 1 == this.nowGuanQia && this.nowAliveNpcIndex < 4) this.addBloodBox(Scene3DManager.getInstance().mainPlayerScript.maxBlood * SettingCFG.dict[10].value, t);
            else {
              var i = GameUtils.randRange(1, 100);
              i <= 3 ? this.addBloodBox(Scene3DManager.getInstance().mainPlayerScript.maxBlood * SettingCFG.dict[10].value, t) : this._getBloodValue = 0;
            }
          }
          break;
        case GamesType.GuaQiaType_guaqia:
          if (e) {
            var n = GameUtils.randRange(3, 6);
            this.addBoxGold(n, t);
          } else {
            var r = GameUtils.randRange(1, 100);
            r <= 25 ? this.addBoxGold(1, t) : this._nowNeedAddGold = 0;
          }
      }
    }, t.prototype.addBoxGold = function (t, e) {
      this._nowNeedAddGold = t, Debuger.log("添加金币宝箱"), this.addBoxGoldOrBlood(e);
    }, t.prototype.addBloodBox = function (t, e) {
      this._getBloodValue = t, Debuger.log("添加血量宝箱"), this.addBoxGoldOrBlood(e);
    }, t.prototype.addBoxGoldOrBlood = function (t) {
      this._boxGold || (this._boxGold = ResDataManager.getInastance().getResByurl(PathConfig.geteffect("box_gold")).clone(), Scene3DManager.getInstance().nowScene.addChild(this._boxGold), this._boxGold.transform.scale = new Vector3(2, 2, 2)), this._boxGold.transform.position = t.clone();
    }, t.prototype.removeBoxGoldorBlood = function () {
      this._boxGold && (Debuger.log("移除金币宝箱"), this._boxGold.destroy(), this._boxGold = null);
    }, t.prototype.vectorToPoint = function (t) {
      var e = new Point(),
        i = new Vector3(),
        n = Scene3DManager.getInstance().camera;
      return n.viewport.project(t, n.projectionViewMatrix, i), e.x = i.x / Laya.stage.clientScaleX, e.y = i.y / Laya.stage.clientScaleY, e;
    }, t.prototype.addBoxGun = function (t) {
      this.removeBoxGun(), this._boxGun = ResDataManager.getInastance().getResByurl(PathConfig.geteffect("box_gun")).clone(), Scene3DManager.getInstance().nowScene.addChild(this._boxGun), this._boxGun.transform.scale = new Vector3(2, 2, 2), this._boxGun.transform.position = t.clone(), this._scene3Dmanager.playGunboxEffect(t);
    }, t.prototype.removeBoxGun = function () {
      this._boxGun && (this._boxGun.destroy(), this._boxGun = null, this._scene3Dmanager.removeGunboxEffect());
    }, t.prototype.addMainPlayerBlood = function (t) {
      this._scene3Dmanager.mainPlayerScript && this._scene3Dmanager.mainPlayerScript.updateBlood(t);
    }, t.prototype.endGame = function () {
      UiManager.instance.close(MZQshiyongView), this.removeBoxGoldorBlood(), this.removeBoxGun(), this.isstartGame = !1, this._nowReviveNums <= 1 ? (this._nowReviveNums++, UiManager.instance.add(ReviveView)) : (this._scene3Dmanager.removeNpc(), this._mainProxy.endGame());
    }, t.prototype.returntoShouye = function () {
      this.mainIsCanShoot ? (this._mainProxy.updateStoryResult(), this.removeBoxGoldorBlood(), this.removeBoxGun(), this.isstartGame = !1, this.resetInitgame(), this._gunProxy.recovergunInfo(), this._mainProxy.openShouYe(), this._mainProxy.nowGamesType == GamesType.GuaQiaType_wujin && EventUtils.dispatchEvent(GameEvent.GameEvent_hideChaoyue)) : WordTipsUtils.showWordTips("战斗中无法返回首页!");
    }, t.prototype.mainplayermoveEnd = function () {
      if (this.isstartGame) {
        if (this.removeBoxGoldorBlood(), this.removeBoxGun(), this._nowNeedAddGold > 0) {
          t = this.vectorToPoint(this._scene3Dmanager.mainPlayer.transform.position);
          ValueFlyManager.getInstance().addGoldfly(t, this._nowNeedAddGold), this._roleProxy.addGold(this._nowNeedAddGold);
        }
        if (this._getBloodValue > 0) {
          Scene3DManager.getInstance().mainPlayerScript.updateBlood(this._getBloodValue);
          var t = this.vectorToPoint(Scene3DManager.getInstance().mainPlayer.transform.position);
          ValueFlyManager.getInstance().playAddBloodEffect(t, this._getBloodValue), this._getBloodValue = 0;
        }
        this.updateNPc();
      }
    }, Object.defineProperty(t.prototype, "nowScore", {
      get: function () {
        return this._nowScore;
      },
      set: function (t) {
        this._nowScore != t && (this._nowScore = t, EventUtils.dispatchEvent(GameEvent.GameEvent_updateScore));
      },
      enumerable: !0,
      configurable: !0
    }), t;
  }(),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GuideView = function (t) {
    function e() {
      return t.call(this, "main", "guide") || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.t0 = this.getpanelTransition("t0"), this.t0.play(null, -1), this.onClick(this, this.closefun);
    }, e.prototype.closefun = function () {
      UiManager.instance.close(e);
    }, e.prototype.destory = function () {
      this.offClick(this, this.closefun), t.prototype.destory.call(this);
    }, e.key = "GuideView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ItemJJCY = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.addDataEvent(GameEvent.GameEvent_showChaoyue, this, this.showchaoyueHandler), this.addDataEvent(GameEvent.GameEvent_hideChaoyue, this, this.hidechaoyueHandler), this.addDataEvent(GameEvent.GameEvent_updateChaoyue, this, this.updatechaoyueHandler), this.visible = !1;
    }, e.prototype.showchaoyueHandler = function () {
      this.showRank();
    }, e.prototype.hidechaoyueHandler = function () {
      this.hideRank();
    }, e.prototype.updatechaoyueHandler = function () {}, e.prototype.showRank = function () {
      this.visible = !0;
      var t = new Laya.Rectangle();
      t.x = 0, t.y = 0, t.width = this.width, t.height = this.height, Debuger.log("chaoyuehaoyouddd", t.x, t.y, t.width, t.height);
      var e = GameStateManager.getInstance().nowGuanQia;
      WXGamePlatform.getInstance().openFriendRank(RankType.show_chaoyue_game, "chaoyuehaoyou", t, this.displayObject, {
        score: e
      });
    }, e.prototype.hideRank = function () {
      this.visible && (this.visible = !1, WXGamePlatform.getInstance().closeFriendRank("chaoyuehaoyou"));
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  JoystickModule = function (t) {
    function e(e, i, n) {
      var r = t.call(this) || this;
      return r.dis = 0, r.degree = 0, r.angle = 0, r._iacanCallback = !1, r._clickpanel = e, r._button = i, r._button.changeStateOnClick = !1, r.touchId = -1, r._center = n, r.radius = r._center.width / 2, r._center.visible = !1, r._curPos = new laya.maths.Point(), r._clickpanel.on(laya.events.Event.MOUSE_DOWN, r, r.onTouchDown), r;
    }
    return __extends(e, t), e.prototype.setEventCallback = function (t, e, i) {
      this._callobj = t, this._movecallback = e, this._updatecallback = i;
    }, e.prototype.Trigger = function (t) {
      this.onTouchDown(t);
    }, e.prototype.onTouchDown = function (t) {
      if (-1 == this.touchId) {
        this.touchId = t.touchId, fairygui.GRoot.inst.globalToLocal(Laya.stage.mouseX, Laya.stage.mouseY, this._curPos);
        var e = this._curPos.x,
          i = this._curPos.y;
        this._button.selected = !0, this._lastStageX = e, this._lastStageY = i, this._startStageX = e, this._startStageY = i, this._center.visible = !0, this._center.x = e - this._center.width / 2, this._center.y = i - this._center.height / 2, this._button.x = e - this._button.width / 2, this._button.y = i - this._button.height / 2, this._clickpanel.on(laya.events.Event.MOUSE_MOVE, this, this.OnTouchMove), this._clickpanel.on(laya.events.Event.MOUSE_UP, this, this.OnTouchUp), this._clickpanel.on(laya.events.Event.MOUSE_OUT, this, this.OnTouchUp);
      }
    }, e.prototype.OnTouchUp = function (t) {
      void 0 === t && (t = null), -1 != this.touchId && t.touchId == this.touchId && (this.touchId = -1, this._button.selected = !1, this._clickpanel.off(laya.events.Event.MOUSE_MOVE, this, this.OnTouchMove), this._clickpanel.off(laya.events.Event.MOUSE_UP, this, this.OnTouchUp), this._clickpanel.off(laya.events.Event.MOUSE_OUT, this, this.OnTouchUp), this._center.visible = !1, this._callobj && this._updatecallback && this._updatecallback.call(this._callobj), this.degree = 0);
    }, e.prototype.touchup = function () {
      this.touchId = -1, this._center.visible = !1, this._button.selected = !1, this._clickpanel.off(laya.events.Event.MOUSE_MOVE, this, this.OnTouchMove), this._clickpanel.off(laya.events.Event.MOUSE_UP, this, this.OnTouchUp), this._clickpanel.off(laya.events.Event.MOUSE_OUT, this, this.OnTouchUp), this._iacanCallback = !1, this.degree = 0;
    }, e.prototype.OnTouchMove = function (t) {
      if (-1 != this.touchId && t.touchId == this.touchId) {
        var e = Laya.stage.mouseX,
          i = Laya.stage.mouseY,
          n = e - this._lastStageX,
          r = i - this._lastStageY;
        this._lastStageX = e, this._lastStageY = i;
        var a = this._button.x + n,
          s = this._button.y + r,
          o = a + this._button.width / 2 - this._startStageX,
          h = s + this._button.height / 2 - this._startStageY,
          l = 0;
        if (0 == o && 0 == h) return;
        o > 0 ? o > this.radius ? (l = this.radius, this.angle = 90) : (l = this.radius - o, this.angle = 90 - l / this.radius * 90) : 0 == o ? this.angle = 0 : -o > this.radius ? (l = this.radius, this.angle = -90) : (l = this.radius + o, this.angle = -(90 - l / this.radius * 90));
        var u = Math.atan2(h, o);
        this.degree = u;
        var c = this.radius * Math.cos(u),
          _ = this.radius * Math.sin(u);
        Math.abs(o) > Math.abs(c) && (o = c), Math.abs(h) > Math.abs(_) && (h = _), a = this._startStageX + o, s = this._startStageY + h, a < 0 && (a = 0), s > fairygui.GRoot.inst.height && (s = fairygui.GRoot.inst.height), this._button.x = a - this._button.width / 2, this._button.y = s - this._button.height / 2, this.dis = Math.sqrt(o * o + h * h), this._iacanCallback = !0, this._callobj && this._movecallback && this._iacanCallback && this._movecallback.call(this._callobj);
      }
    }, e.prototype.dispose = function () {
      this._clickpanel.off(laya.events.Event.MOUSE_DOWN, this, this.onTouchDown);
    }, e.JoystickMoving = "JoystickMoving", e.JoystickUp = "JoystickUp", e;
  }(laya.events.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  MainRightUi = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this._mainProxy = this.getProxy(MainProxy), this.c_blood = this.getController("c_blood"), this.c_gun = this.getController("c_gun"), this.c_miaozhun = this.getController("c_miaozhun"), this.t0 = this.getTransition("t0"), this.c_show = this.getController("c_show"), this.t0.playing = !0, this.t0.play(null, -1);
      WXGamePlatform.getInstance().checkEnable() ? (this.c_blood.selectedIndex = 1, this.c_miaozhun.selectedIndex = 1, this.c_gun.selectedIndex = 1) : (this.c_blood.selectedIndex = 0, this.c_miaozhun.selectedIndex = 0, this.c_gun.selectedIndex = 0, this.btn_getblood.init(BtnGetType.BtnGetType_getblood, this, this.btnupdateShow), this.btn_getgun.init(BtnGetType.BtnGetType_getgun, this, this.btnupdateShow), this.btn_getmiaozhun.init(BtnGetType.BtnGetType_getmiaozhun, this, this.btnupdateShow)), this.initEvent();
    }, e.prototype.initEvent = function () {
      this.btn_getblood.onClick(this, this.getbloodfun), this.btn_getgun.onClick(this, this.gegunfun), this.btn_getmiaozhun.onClick(this, this.getmiaozhunfun), this.addDataEvent(GameEvent.GameEvent_startMainRightui, this, this.startUiShowHandler), this.addDataEvent(GameEvent.GameEvent_stopMainRightui, this, this.stopUiShowHandler);
    }, e.prototype.stopUiShowHandler = function () {
      this.btn_getblood.stop(), this.btn_getgun.stop(), this.btn_getmiaozhun.stop();
    }, e.prototype.startUiShowHandler = function () {
      switch (WXGamePlatform.getInstance().checkEnable() || (this.btn_getblood.start(), this.btn_getgun.start(), this.btn_getmiaozhun.start()), this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          this.c_show.selectedIndex = 0;
          break;
        case GamesType.GuaQiaType_guaqia:
          this.c_show.selectedIndex = 1;
      }
      this.t0.playing = !0, this.t0.play(null, -1);
    }, e.prototype.btnupdateShow = function (t, e) {
      switch (t) {
        case BtnGetType.BtnGetType_getblood:
          this.c_blood.selectedIndex = e;
          break;
        case BtnGetType.BtnGetType_getgun:
          this.c_gun.selectedIndex = e;
          break;
        case BtnGetType.BtnGetType_getmiaozhun:
          this.c_miaozhun.selectedIndex = e;
      }
    }, e.prototype.getbloodfun = function () {
      WXGamePlatform.getInstance().checkEnable() ? WXGamePlatform.getInstance().playVideo(this, this.videobloodssucceed, null, ShareType.ShareType_lingxueliang) : 0 == this.c_blood.selectedIndex ? WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_lingxueliang, !0, this, this.bloodshareSucceed) : WXGamePlatform.getInstance().playVideo(this, this.videobloodssucceed, null, ShareType.ShareType_lingxueliang);
    }, e.prototype.videobloodssucceed = function () {
      this.bloodgetSucceed(!1);
    }, e.prototype.bloodshareSucceed = function () {
      this.bloodgetSucceed(!0);
    }, e.prototype.bloodgetSucceed = function (t) {
      if (Scene3DManager.getInstance().mainPlayerScript) {
        var e = Scene3DManager.getInstance().mainPlayerScript.maxBlood * SettingCFG.dict[10].value;
        WordTipsUtils.showWordTips("获得" + e + "血量"), GameStateManager.getInstance().addMainPlayerBlood(e);
      }
      this.btn_getblood.ishasShare = !0;
    }, e.prototype.gegunfun = function () {
      WXGamePlatform.getInstance().checkEnable() ? WXGamePlatform.getInstance().playVideo(this, this.videogunssucceed, null, ShareType.ShareType_shouyelingqiang) : 0 == this.c_gun.selectedIndex ? WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_shouyelingqiang, !0, this, this.gunsharesucceed) : WXGamePlatform.getInstance().playVideo(this, this.videogunssucceed, null, ShareType.ShareType_shouyelingqiang);
    }, e.prototype.videogunssucceed = function () {
      this.gunsSucceed(!1);
    }, e.prototype.gunsharesucceed = function () {
      this.gunsSucceed(!0);
    }, e.prototype.gunsSucceed = function (t) {
      var e = GameStateManager.getInstance().getTryGunCfg();
      this.getProxy(GunProxy).settryoutGun(e.gunid, t), this.btn_getgun.ishasShare = !0;
    }, e.prototype.getmiaozhunfun = function () {
      WXGamePlatform.getInstance().checkEnable() ? WXGamePlatform.getInstance().playVideo(this, this.videomzxsucceed, null, ShareType.ShareType_miaozhunqi) : 0 == this.c_miaozhun.selectedIndex ? WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_miaozhunqi, !0, this, this.mzqShareSucceed) : WXGamePlatform.getInstance().playVideo(this, this.videomzxsucceed, null, ShareType.ShareType_miaozhunqi);
    }, e.prototype.videomzxsucceed = function () {
      this.mzxsucceed(!1);
    }, e.prototype.mzqShareSucceed = function () {
      this.mzxsucceed(!0);
    }, e.prototype.mzxsucceed = function (t) {
      this.getProxy(GunProxy).setMiaozhunToNpc(SettingCFG.dict[11].value), this.btn_getmiaozhun.ishasShare = !0, WordTipsUtils.showWordTips("获得瞄准器试用");
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  MainShouyeUi = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._nowSelectIndex = 0, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      this._mainProxy = this.getProxy(MainProxy), this._gunProxy = this.getProxy(GunProxy), this._armorProxy = this.getProxy(ArmorProxy), this._helmetproxy = this.getProxy(HelmetProxy), this.list_guanka.setVirtualAndLoop(), this.list_guanka.itemRenderer = Handler.create(this, this.renderListItem, null, !1), this.list_guanka.numItems = this._mainProxy.guaqiaList.length, this.doSpecialEffect(), this.updatetips();
    }, e.prototype.renderListItem = function (t, e) {
      t < this._mainProxy.guaqiaList.length && e.showData(this._mainProxy.guaqiaList[t]);
    }, e.prototype.initEvent = function () {
      this.btn_toukui.onClick(this, this.toukuiClick), this.btn_hujia.onClick(this, this.hujiaClick), this.btn_wuqiku.onClick(this, this.wuqikuClick), this.btn_startgame.onClick(this, this.startgameClick), this.btn_music.onClick(this, this.musicClick), this.btn_rank.onClick(this, this.rankclick), this.btn_share.onClick(this, this.shareclick), this.list_guanka.on(fairygui.Events.SCROLL, this, this.doSpecialEffect);
    }, e.prototype.musicClick = function () {
      SoundssManager.getInstance().isAllOpen = !this.btn_music.selected;
    }, e.prototype.rankclick = function () {
      UiManager.instance.add(RankView);
    }, e.prototype.shareclick = function () {
      WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_shouyefenxiang, !1);
    }, e.prototype.doSpecialEffect = function () {
      for (var t = this.list_guanka.scrollPane.posX + this.list_guanka.viewWidth / 2, e = this.list_guanka.numChildren, i = 0; i < e; i++) {
        var n = this.list_guanka.getChildAt(i),
          r = Math.abs(t - n.x - n.width / 2);
        if (r > n.width) n.setScale(1, 1);
        else {
          var a = 1 + .24 * (1 - r / n.width);
          n.setScale(a, a);
        }
      }
      this._nowSelectIndex = (this.list_guanka.getFirstChildInView() + 1) % this.list_guanka.numItems;
    }, e.prototype.startgameClick = function () {
      var t = this._mainProxy.guaqiaList[this._nowSelectIndex];
      this._mainProxy.startGame(t.type), WXGamePlatform.getInstance().uploadQuDaoInfo();
    }, e.prototype.toukuiClick = function () {
      this._mainProxy.openEquip(EquipType.EquipType_helmet, 0, null);
    }, e.prototype.hujiaClick = function () {
      this._mainProxy.openEquip(EquipType.EquipType_armor, 0, null);
    }, e.prototype.wuqikuClick = function () {
      this._mainProxy.openEquip(EquipType.EquipType_gun, 0, null);
    }, e.prototype.updatetips = function () {
      this.img_wuqikutip.visible = this._gunProxy.ischanuplev(), this.img_hujiatip.visible = this._armorProxy.ischanuplev(), this.img_toukuitip.visible = this._helmetproxy.ischanuplev();
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  MainTopUI = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this._mainProxy = this.getProxy(MainProxy), this._gunProxy = this.getProxy(GunProxy), this.c1 = this.getController("c1"), this.updateGold(), this.updateJifen(), this.updateGuaqiaShowHandler(), this.updateNpcPlanHandler(), this.shiyongleftNumHandler(), this.initEvent();
    }, e.prototype.initEvent = function () {
      this.addDataEvent(GameEvent.GameEvent_goldUpdate, this, this.updateGold), this.addDataEvent(GameEvent.GameEvent_updateScore, this, this.updateJifen), this.addDataEvent(GameEvent.GameEvent_updateGuaqiaShow, this, this.updateGuaqiaShowHandler), this.addDataEvent(GameEvent.GameEvent_updateNpcPlan, this, this.updateNpcPlanHandler), this.addDataEvent(GameEvent.GameEvent_gunShiyongLeftNum, this, this.shiyongleftNumHandler);
    }, e.prototype.shiyongleftNumHandler = function () {
      this._gunProxy.leftbulletNum <= 0 ? this.c1.selectedIndex = 0 : this.c1.selectedIndex = this._gunProxy.leftbulletNum;
    }, e.prototype.updateGuaqiaShowHandler = function () {
      switch (this._mainProxy.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          this.text_0.text = "level " + GameStateManager.getInstance().nowGuanQia;
          break;
        case GamesType.GuaQiaType_guaqia:
          this.text_0.text = "第" + GameStateManager.getInstance().nowGuanQia + "关";
      }
    }, e.prototype.updateNpcPlanHandler = function () {
      this.pro_0.value = Math.floor(GameStateManager.getInstance().nowAliveNpcIndex / GameStateManager.getInstance().nowLevelNpcNum * 100);
    }, e.prototype.updateGold = function () {
      this.txt_gold.text = this._mainProxy.roleVO.gold.toString();
    }, e.prototype.updateJifen = function () {
      this.text_jifen.text = GameStateManager.getInstance().nowScore.toString();
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  MainView = function (t) {
    function e() {
      var e = t.call(this, "main", "mainview", !0) || this;
      return e.wordArr = ["瞄准敌人，点击屏幕开枪。", "给武器升级，攻击力越高，瞄准线越长哦~", "升级护甲和头盔，可增加血量哦~", "级数越高，武器伤害越高", "级数越高，护甲和头盔伤害越高哦~", "关卡模式是回合制，如果不能一枪制敌，小心被打哦"], e._nowangle = 0, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      this._gunProxy = this.getProxy(GunProxy), this._helmetProxy = this.getProxy(HelmetProxy), this._armorProxy = this.getProxy(ArmorProxy), this.img_equipTips = this.btn_equip.getChild("img_equipTips").asImage, this.item_yun.visible = !1, this.t_yun = this.item_yun.getTransition("t_yun"), this.c1 = this.getControllerByBame("c1"), this._mainProxy = this.getProxy(MainProxy), this._joystick = new JoystickModule(this.load_clickshoot, this.btn_circle, this.img_center), SoundssManager.getInstance().playbgSound("sound_bg"), WXGamePlatform.getInstance().createBanner(BannerType.BannerType_shouye), this.btn_return.visible = !1;
    }, e.prototype.initEvent = function () {
      this.btn_equip.onClick(this, this.equipClick), this._joystick.setEventCallback(this, this.onJoystickMoving, this.shootClick), this.btn_return.onClick(this, this.returnshouyeClick), this.addDataEvent(GameEvent.GameEvent_openequipUpdate, this, this.openequidHandler), this.addDataEvent(GameEvent.GameEvent_hideequip, this, this.hideequipHandler), this.addDataEvent(GameEvent.GameEvent_goldUpdate, this, this.updateequiptips);
    }, e.prototype.updateequiptips = function () {
      var t = !1;
      (t = this._gunProxy.ischanuplev()) || (t = this._helmetProxy.ischanuplev()), t || (t = this._armorProxy.ischanuplev()), this.img_equipTips.visible = t, this.item_shouye.updatetips();
    }, e.prototype.openequidHandler = function (t) {
      0 == t.state && (this.c1.selectedIndex = 2), this.btn_return.visible = !1;
    }, e.prototype.hideequipHandler = function (t) {
      0 == t ? this.c1.selectedIndex = 0 : this.btn_return.visible = !0;
    }, e.prototype.returnshouyeClick = function () {
      GameStateManager.getInstance().returntoShouye();
    }, e.prototype.playyunEffect = function (t, e) {
      this._callobj = t, this._callback = e, this.item_yun.visible = !0, this.t_yun.playing = !0, this.t_yun.play(Handler.create(this, this.yuneffectend), 1);
    }, e.prototype.yuneffectend = function () {
      this.item_yun.visible = !1, this._callobj && this._callback && this._callback.call(this._callobj);
    }, e.prototype.setjoystickTouchUp = function () {
      this._joystick && this._joystick.touchup();
    }, e.prototype.playBaotou = function (t) {
      this.item_baotoueffect.play(t);
    }, e.prototype.onJoystickMoving = function () {
      this._nowangle = this._joystick.angle, GameStateManager.getInstance().updateMainPlayerAngle(this._nowangle);
    }, e.prototype.shootClick = function () {
      GameStateManager.getInstance().mouseDownClick();
    }, e.prototype.startGamefun = function () {
      this.btn_return.visible = !0, this.c1.selectedIndex = 1, WXGamePlatform.getInstance().hideBanner(BannerType.BannerType_shouye), this._joystick && this._joystick.touchup(), WXGamePlatform.getInstance().createBanner(BannerType.BannerType_gameing, {
        left: 0,
        bottom: 0
      }), this.updateequiptips();
    }, e.prototype.showShouye = function () {
      this.btn_return.visible = !1, WXGamePlatform.getInstance().createBanner(BannerType.BannerType_shouye), Laya.timer.clear(this, this.clearWord), this.c1.selectedIndex = 0, this._joystick && this._joystick.touchup(), this.bosstipsitem.stopeffect(), this.item_shouye.updatetips();
    }, e.prototype.equipClick = function () {
      0 == this.c1.selectedIndex ? this.showEquip(EquipType.EquipType_gun, 0, null) : 1 == this.c1.selectedIndex && this._mainProxy.openEquip(EquipType.EquipType_gun, 1, null);
    }, e.prototype.showEquip = function (t, e, i) {
      this.item_equip.openEquip(t, e, i);
    }, e.prototype.closeEquip = function () {
      this.item_equip.closeEquip();
    }, e.prototype.starthowWord = function (t) {
      this.text_desc.text = 1 == t ? this.wordArr[0] : this.wordArr[GameUtils.randRange(0, this.wordArr.length - 1)], Laya.timer.once(1e4, this, this.clearWord);
    }, e.prototype.clearWord = function () {
      this.text_desc.text = "";
    }, e.prototype.showBossEffect = function () {
      this.bosstipsitem.play();
    }, e.prototype.clearEvent = function () {}, e.prototype.desotry = function () {
      this.clearEvent(), t.prototype.destory.call(this);
    }, e.key = "MainView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  MainProxy = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._historyMaxGQ = -1, e;
    }
    return __extends(e, t), e.prototype.initProxy = function () {}, e.prototype.init = function () {
      this._gunProxy = this.getProxy(GunProxy), this._helmetProxy = this.getProxy(HelmetProxy), this._armorProxy = this.getProxy(ArmorProxy), this.guaqiaList = [];
      var t = {};
      t[GamesType.GuaQiaType_guaqia] = {
        type: GamesType.GuaQiaType_guaqia,
        word: "关卡模式",
        issaveLevel: !0
      }, t[GamesType.GuaQiaType_wujin] = {
        type: GamesType.GuaQiaType_wujin,
        word: "无限模式",
        issaveLevel: !1
      }, t[GamesType.GuaQiaType_jijiangkaiq] = {
        type: GamesType.GuaQiaType_jijiangkaiq,
        word: "即将开启",
        issaveLevel: !1
      };
      for (var e in t) {
        var i = new GuaQiaVO();
        i.init(t[e]), this.guaqiaList.push(i);
      }
    }, e.prototype.enterMain = function () {
      GameStateManager.getInstance().init();
      var t = UiManager.getInstance().getView(LoadingView);
      t && t.showValue(0), WXGamePlatform.getInstance().login(this, this.loginSucceedfun);
    }, e.prototype.loginSucceedfun = function () {
      this.startLoadGameResouce();
    }, e.prototype.setinvitemInfo = function (t) {}, e.prototype.startLoadGameResouce = function () {
      var t = [];
      t.push({
        url: PathConfig.getscene(1),
        type: Laya.Sprite3D
      }), t.push({
        url: PathConfig.getgunlh("bullet"),
        type: Laya.Sprite3D
      }), t.push({
        url: PathConfig.getequipslh("manbone"),
        type: Laya.Sprite3D
      }), t.push({
        url: PathConfig.getgunlh("miaozhun"),
        type: Laya.Sprite3D
      });
      var e = this._armorProxy.myarmorVo.cfg;
      t = t.concat(PathConfig.getEquipMeshAndMaterial(e.mesh, e.resource));
      var i = this._helmetProxy.myhelmetVo.cfg;
      t = t.concat(PathConfig.getEquipMeshAndMaterial(i.mesh, i.resource));
      var n = this._gunProxy.mygunVo.cfg;
      t.push({
        url: PathConfig.getgunlh(n.resource),
        type: Laya.Sprite3D
      });
      var r;
      for (var a in ResourceCFG.dict) {
        r = ResourceCFG.dict[a];
        var s = ArmorCFG.dict[r.resourceBody],
          o = HelmetCFG.dict[r.resourcehead];
        t = (t = t.concat(PathConfig.getEquipMeshAndMaterial(s.mesh, s.resource))).concat(PathConfig.getEquipMeshAndMaterial(o.mesh, o.resource));
      }
      t.push({
        url: PathConfig.geteffect("effect_blood"),
        type: Laya.Sprite3D
      }), t.push({
        url: PathConfig.geteffect("effect_gray"),
        type: Laya.Sprite3D
      }), t.push({
        url: PathConfig.geteffect("effect_green"),
        type: Laya.Sprite3D
      }), t.push({
        url: PathConfig.geteffect("box_gold"),
        type: Laya.Sprite3D
      }), t.push({
        url: PathConfig.geteffect("box_gun"),
        type: Laya.Sprite3D
      }), t.push({
        url: PathConfig.geteffect("effect_fire"),
        type: Laya.Sprite3D
      }), ResourceManager.getInstance().loader3DArr(t, this, this.load3Dcomplete, this.loadprogress);
    }, e.prototype.load3Dcomplete = function () {
      var t = [];
      (t = t.concat(RecConfigs.getInstance().groupdict.main)).push({
        url: ADIGamePlatform.getInstance().adiUrl,
        type: Loader.JSON
      }), t.push({
        url: WXGamePlatform.shareUrl,
        type: Loader.JSON
      }), ResourceManager.getInstance().loaderArr(t, this, this.loadcomplete, this.loadprogress);
    }, e.prototype.loadcomplete = function () {
      Debuger.log("加载完成"), Laya.timer.once(100, this, this.loadComplete);
    }, e.prototype.loadComplete = function () {
      ResDataManager.getInastance().adduiPackage("main", !0), Scene3DManager.getInstance().loadScene("1"), UiManager.instance.close(LoadingView), UiManager.instance.add(MainView), this.getProxy(ChoutiProxy).showChouti(), UiManager.instance.add(AdiComView), WXGamePlatform.getInstance().onShow(), WXGamePlatform.getInstance().initShareAppMessage();
    }, e.prototype.loadprogress = function (t) {
      var e = UiManager.instance.getView(LoadingView);
      e && e.showValue(t);
    }, e.prototype.startGame = function (t) {
      switch (this.nowGamesType = t, t) {
        case GamesType.GuaQiaType_wujin:
          GameStateManager.getInstance().startSelectGame();
          break;
        case GamesType.GuaQiaType_guaqia:
          this.getProxy(GuanQIaProxy).openView();
          break;
        default:
          Debuger.log("暂未开启"), WordTipsUtils.showWordTips("暂未开启");
      }
    }, e.prototype.endGame = function (t) {
      switch (void 0 === t && (t = !0), this.nowGamesType) {
        case GamesType.GuaQiaType_wujin:
          this.updateStoryResult(), t && UiManager.instance.add(GameResultView, this.historyMaxGQ), this.getProxy(GunProxy).recoverGUn(), GameStateManager.getInstance().initwujininfo();
          break;
        case GamesType.GuaQiaType_guaqia:
          this.getProxy(GuanQIaProxy).openView();
      }
      GameStateManager.getInstance().resetInitgame(), this.dispacheDataEvent(GameEvent.GameEvent_stopMainRightui);
    }, e.prototype.updateStoryResult = function () {
      this.historyMaxGQ = GameStateManager.getInstance().nowGuanQia;
    }, Object.defineProperty(e.prototype, "historyMaxGQ", {
      get: function () {
        return this._historyMaxGQ;
      },
      set: function (t) {
        this._historyMaxGQ != t && (this._historyMaxGQ = t, WXGamePlatform.getInstance().storeResult(this._historyMaxGQ, 0));
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.openShouYe = function () {
      var t = UiManager.instance.getView(MainView);
      t && t.showShouye();
    }, e.prototype.openEquip = function (t, e, i) {
      var n = UiManager.instance.getView(MainView);
      n && (1 == e ? GameStateManager.getInstance().isstartGame && GameStateManager.getInstance().mainIsCanShoot ? n.showEquip(t, e, i) : WordTipsUtils.showWordTips("战斗中无法查看装备库!") : n.showEquip(t, e, i));
    }, e.prototype.updateSeletEquipList = function (t) {}, e.prototype.closeEquip = function () {
      var t = UiManager.instance.getView(MainView);
      t && t.closeEquip();
    }, e.key = "MainProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GuaQiaVO = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.type = "", e.word = "", e;
    }
    return __extends(e, t), e.prototype.init = function (t) {
      this.type = t.type, this.word = t.word, this.issaveLevel = t.issaveLevel;
    }, e;
  }(BaseVO),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  BulletScript = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.life = 40, e.speedV3 = new Laya.Vector3(), e._isstart = !1, e._isdestorys = !1, e;
    }
    return __extends(e, t), e.prototype._load = function (t) {
      this.bullet = this.owner;
    }, e.prototype._start = function (t) {}, e.prototype.setShootDirection = function (t, e, i, n) {
      this._targetName = i, this._bulletname = t, Laya.Vector3.normalize(e, this.speedV3), n && (this.speedV3.y = 0), Vector3.scale(this.speedV3, 1, this.speedV3), this._isstart = !0;
    }, e.prototype._update = function (t) {
      this._isstart && !this._isdestorys && (this.bullet.transform.translate(this.speedV3, !1), this.life--, this.life < 0 && !this._isdestorys && this.destory());
    }, e.prototype.onTriggerEnter = function (t) {
      var e = t.owner;
      Debuger.log("onTriggerEnter:", e.name), this._targetName != e.name && (-1 != e.name.indexOf("npc") ? (Debuger.log("打中npc：", e.name), GameStateManager.getInstance().bulletEventEnd(this._bulletname, this._targetName, e.name, !1, this.speedV3.clone(), this.bullet.transform.position.clone()), this.destory(!1)) : -1 != e.name.indexOf("mainPlayer") && (Debuger.log("打中主角：", e.name), GameStateManager.getInstance().bulletEventEnd(this._bulletname, this._targetName, e.name, !1, this.speedV3.clone(), this.bullet.transform.position.clone()), this.destory(!1)));
    }, e.prototype.destory = function (t) {
      void 0 === t && (t = !0), this._isdestorys = !0, Laya.timer.frameOnce(1, this, function () {
        this.bullet.destroy();
      }), t && GameStateManager.getInstance().bulletEventEnd(this._bulletname, this._targetName);
    }, e;
  }(Laya.Script),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  DrawBoxColliderScript = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._isDraw = !1, e._corners = new Array(), e._color = new Laya.Vector4(1, 1, 0, 1), e._corners[0] = new Laya.Vector3(), e._corners[1] = new Laya.Vector3(), e._corners[2] = new Laya.Vector3(), e._corners[3] = new Laya.Vector3(), e._corners[4] = new Laya.Vector3(), e._corners[5] = new Laya.Vector3(), e._corners[6] = new Laya.Vector3(), e._corners[7] = new Laya.Vector3(), e.phasorSpriter3D = new Laya.PhasorSpriter3D(), e;
    }
    return __extends(e, t), e.prototype._start = function (t) {
      this._postRenderUpdate();
    }, e.prototype._postRenderUpdate = function () {
      if (!this._isDraw) {
        this._isDraw = !0;
        this._owner.getComponentByType(Laya.BoxCollider).boundBox.getCorners(this._corners), this.phasorSpriter3D.begin(Laya.WebGLContext.LINES, Scene3DManager.getInstance().camera), this.phasorSpriter3D.line(this._corners[0], this._color, this._corners[1], this._color), this.phasorSpriter3D.line(this._corners[1], this._color, this._corners[2], this._color), this.phasorSpriter3D.line(this._corners[2], this._color, this._corners[3], this._color), this.phasorSpriter3D.line(this._corners[3], this._color, this._corners[0], this._color), this.phasorSpriter3D.line(this._corners[4], this._color, this._corners[5], this._color), this.phasorSpriter3D.line(this._corners[5], this._color, this._corners[6], this._color), this.phasorSpriter3D.line(this._corners[6], this._color, this._corners[7], this._color), this.phasorSpriter3D.line(this._corners[7], this._color, this._corners[4], this._color), this.phasorSpriter3D.line(this._corners[0], this._color, this._corners[4], this._color), this.phasorSpriter3D.line(this._corners[1], this._color, this._corners[5], this._color), this.phasorSpriter3D.line(this._corners[2], this._color, this._corners[6], this._color), this.phasorSpriter3D.line(this._corners[3], this._color, this._corners[7], this._color), this.phasorSpriter3D.end();
      }
    }, e;
  }(Laya.Script),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  SceneScript = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._isshow = !0, e._index = 0, e;
    }
    return __extends(e, t), e.prototype.setIndex = function (t) {
      this._index = t;
    }, e.prototype._load = function (t) {
      this._box = t;
    }, e.prototype._start = function (t) {
      this._scene3dmanager = Scene3DManager.getInstance(), this._transform = this._box.transform, this._isshow = !0;
    }, e.prototype._update = function (e) {
      t.prototype._update.call(this, e), this._scene3dmanager.camera && this._scene3dmanager.camera.position.z + 44 < this._transform.position.z && this._isshow && (this._isshow = !1, this._scene3dmanager.updateNowScenePos(this._index), this._isshow = !0);
    }, e;
  }(Laya.Script),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  WeaponScript = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._isaddMiaozhun = !1, e._miaozhunqiLength = 0, e._nowBulletNums = 0, e._nowbulletType = 0, e._time = 0, e;
    }
    return __extends(e, t), e.prototype._load = function (t) {
      this._box = t;
    }, e.prototype.playFire = function () {
      if (!this._effectfireSprite) {
        this._effectfireSprite = Laya.Sprite3D.instantiate(ResDataManager.getInastance().getResByurl(PathConfig.geteffect("effect_fire")));
        var t = this._effectfireSprite.getChildAt(0);
        this._bullet_point.addChild(this._effectfireSprite), this._effectfiresystem = t._geometryFilter, this._effectfiresystem.looping = !1;
      }
      this._effectfiresystem._currentTime = 0, this._effectfiresystem.play();
    }, e.prototype.setGunCfg = function (t, e, i) {
      this._miaozhunqiLength = i, this._isaddMiaozhun = e, this._guncfg = t, this.initMiaozhunXian();
    }, e.prototype.upGunLev = function (t, e, i) {
      this._guncfg = t, e && (this._miaozhunqiLength = i, this.updateMiaozhunxian());
    }, e.prototype._start = function (t) {
      this._box.getChildAt(0) ? (this._childbox = this._box.getChildAt(0).getChildByName("bulletpos"), this._childbox.meshRender.enable = !1, this._bullet_point = this._box.getChildAt(0).getChildByName("bullet_point"), this.initMiaozhunXian()) : Debuger.log("weaponScript start erro chidbox is null");
    }, e.prototype.initMiaozhunXian = function () {
      if (this._guncfg && this._bullet_point && !this._miaozhun && this._isaddMiaozhun) {
        var t = ResDataManager.getInastance().getResByurl(PathConfig.getgunlh("miaozhun"));
        this._miaozhun = Laya.Sprite3D.instantiate(t.getChildAt(0)), this._bullet_point.addChild(this._miaozhun);
        this._miaozhun.meshRender.material.albedo = new Laya.Vector4(0, 0, 1, 1);
        this._miaozhun.getChildAt(0).meshRender.material.albedo = new Laya.Vector4(0, 0, 1, 1);
      }
      this.updateMiaozhunxian();
    }, e.prototype.updateMiaozhunxian = function () {
      this._miaozhun && this._guncfg && this.setMiaozhunScale(this._miaozhunqiLength);
    }, e.prototype.setMiaozhunScale = function (t) {
      this._miaozhunqiLength = t, this._miaozhun && 0 != this._miaozhunqiLength && (this._miaozhunqiLength = Math.floor(this._miaozhunqiLength), this._miaozhun.transform.localScale = new Vector3(this._miaozhunqiLength / 100, .13, .13), this._miaozhun.transform.localPosition = new Vector3(this._miaozhunqiLength / 100 / 2, 0, 0));
    }, e.prototype.updateMiaozhuIsAlive = function (t) {
      this._miaozhun && (this._miaozhun.active = t);
    }, e.prototype.removeMiaozhun = function () {
      this._miaozhun && (this._miaozhun.destroy(), this._miaozhun = null);
    }, e.prototype.shoot = function (t, e, i, n) {
      if (this._targetname = t, this._forwordVec = e, this._bulletName = n, this._childbox && this._guncfg) switch (this.playFire(), this._nowbulletType = this._guncfg.trajectory, this._nowBulletNums = this._guncfg.number, this._guncfg.trajectory) {
        case BulletType.BulletType_danfa:
          this.createbullet(this._targetname, this._forwordVec, i);
          break;
        case BulletType.BulletType_lianfa1:
        case BulletType.BulletType_lianfa2:
          this.createbullet(this._targetname, this._forwordVec, i), this._nowBulletNums > 0 && (this._time = 0, TimerService.getInastance().addUpdateTarget(this));
          break;
        case BulletType.BulletType_sandan:
          if (this.createbullet(this._targetname, this._forwordVec, i), 2 == this._nowBulletNums) {
            var r = new Laya.Quaternion(),
              a = GameUtils.randRange(0, 10) * Math.PI / 180;
            Laya.Quaternion.createFromAxisAngle(new Vector3(0, 1, 0), a, r);
            o = new Vector3();
            Vector3.transformQuat(this._forwordVec, r, o);
            a = -GameUtils.randRange(0, 10) * Math.PI / 180;
            Laya.Quaternion.createFromAxisAngle(new Vector3(0, 1, 0), a, r);
            var s = new Vector3();
            Vector3.transformQuat(this._forwordVec, r, s), this.createbullet(this._targetname, o, i), this.createbullet(this._targetname, s, i);
          } else if (1 == this._nowBulletNums) {
            var r = new Laya.Quaternion(),
              a = GameUtils.randRange(0, 10) * Math.PI / 180;
            Laya.Quaternion.createFromAxisAngle(new Vector3(0, 1, 0), a, r);
            var o = new Vector3();
            Vector3.transformQuat(this._forwordVec, r, o), this.createbullet(this._targetname, o, i);
          }
      }
    }, e.prototype.createbullet = function (t, e, i) {
      if (this._childbox && this._childbox.transform) {
        WXGamePlatform.getInstance().vibrateShort(), SoundssManager.getInstance().playGameSound("shoot");
        var n = Scene3DManager.getInstance().bullet.getChildAt(0).clone();
        Scene3DManager.getInstance().nowScene.addChild(n);
        var r = this._childbox.transform.position.clone();
        n.transform.position = r;
        return n.addComponent(BulletScript).setShootDirection(this._bulletName, e, t, i), this._nowBulletNums--, this._nowBulletNums <= 0 && TimerService.getInastance().removeUpdateTarget(this), n;
      }
    }, e.prototype.update = function (t) {
      if (this._time += t, this._time > 100) switch (this._time = 0, this._nowbulletType) {
        case BulletType.BulletType_lianfa1:
        case BulletType.BulletType_lianfa2:
          this.createbullet(this._targetname, this._forwordVec, !0);
      }
    }, e.prototype.removeTimer = function () {
      TimerService.getInastance().removeUpdateTarget(this);
    }, e.prototype.dispose = function () {
      this._effectfireSprite && (this._effectfireSprite.destroy(), this._effectfireSprite = null, this._effectfiresystem = null), this.removeMiaozhun(), this._bullet_point = null, this.removeMiaozhun(), Laya.timer.frameOnce(1, this, function () {
        this._box.destroy();
      });
    }, e;
  }(Laya.Script),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  MZQshiyongProxy = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.mzqindex = 0, e;
    }
    return __extends(e, t), e.prototype.init = function () {
      this.mzqindex = Number(CacheManager.getInstance().getCachestr(RoleDataType.firstSendmzq));
    }, e.prototype.openview = function () {
      UiManager.instance.add(MZQshiyongView);
    }, e.prototype.getMzx = function () {
      WordTipsUtils.showWordTips("恭喜获得八倍镜试用"), this.getProxy(GunProxy).setMiaozhunToNpc(SettingCFG.dict[16].value), this.setmzxindexend(), this.closeview();
    }, e.prototype.closeview = function (t) {
      void 0 === t && (t = !1), UiManager.instance.close(MZQshiyongView);
      this.getProxy(MainProxy).nowGamesType == GamesType.GuaQiaType_wujin && 2 == GameStateManager.getInstance().nowGuanQia && this.setmzxindexend(), t && this.dispacheDataEvent(GameEvent.GameEvent_upgunlev);
    }, e.prototype.setmzxindexend = function () {
      0 == this.mzqindex && (this.mzqindex = 1, CacheManager.getInstance().addCachestr(RoleDataType.firstSendmzq, this.mzqindex.toString()));
    }, e.key = "MZQshiyongProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  MZQshiyongView = function (t) {
    function e() {
      return t.call(this, "main", "mzqshiyong") || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      WXGamePlatform.getInstance().hideBanner(), this.c1 = this.getControllerByBame("c1"), this.c2 = this.getControllerByBame("c2"), this._mzqproxy = this.getProxy(MZQshiyongProxy), 0 == this._mzqproxy.mzqindex ? (this.c2.selectedIndex = 0, this.btn_share.visible = !1, this.btn_close.visible = !1) : (this.c2.selectedIndex = 1, WXGamePlatform.getInstance().isshowShare ? (this.btn_share.selected = !0, this.c1.selectedIndex = 1) : (this.c1.selectedIndex = 0, this.btn_share.visible = !1, this.btn_share.selected = !1));
    }, e.prototype.initEvent = function () {
      this.btn_0.onClick(this, this.btn0Click), this.btn_close.onClick(this, this.closefun), this.btn_mianfei.onClick(this, this.mianfeiClick);
    }, e.prototype.mianfeiClick = function () {
      this._mzqproxy.getMzx();
    }, e.prototype.btn0Click = function () {
      0 == this.c1.selectedIndex ? WXGamePlatform.getInstance().playVideo(this, this.videsmzxsucceed, null, ShareType.ShareType_miaozhunqishiyong) : WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_miaozhunqishiyong, !0, this, this.sharesucceedfun);
    }, e.prototype.videsmzxsucceed = function () {
      this._mzqproxy.getMzx();
    }, e.prototype.sharesucceedfun = function () {
      this._mzqproxy.getMzx();
    }, e.prototype.closefun = function () {
      this._mzqproxy.closeview(!0);
    }, e.prototype.clearEvent = function () {
      this.btn_0.offClick(this, this.btn0Click), this.btn_close.offClick(this, this.closefun), this.btn_mianfei.offClick(this, this.mianfeiClick);
    }, e.prototype.destory = function () {
      WXGamePlatform.getInstance().createBanner(), this.clearEvent(), t.prototype.destory.call(this);
    }, e.key = "MZQshiyongView", e;
  }(BaseView),
  ADIGamePlatform = function () {
    function t() {
      this.adiUrl = "", this.randomVersion = 0, this._time = 0;
    }
    return t.getInstance = function () {
      return this._instance || (this._instance = new t()), this._instance;
    }, t.prototype.init = function () {
      this._adidict = {}, this.randomVersion = Math.random();
      var t = WXGamePlatform.getInstance().getSystemInfoSync();
      this.adiUrl = "https://tyalw.top/Game/game/全民枪神吃鸡战场/dl.json";
    }, t.prototype.addADI = function (e, i) {
      ResourceManager.getInstance().Loader(this.adiUrl, Laya.Loader.JSON, this, function () {
        var n = ResDataManager.getInastance().getResByurl(this.adiUrl);
        if (n && n[e]) {
          var r = n[e],
            a = n.url_prefix;
          if (r) {
            var s = new ADIconView(i, r, a);
            this._adidict[e] = s, t.getInstance().nowAidconview = s, t.getInstance().sendADCountEvent(), TimerService.instance.addUpdateTarget(this);
          }
        }
      }, null, !1);
    }, t.prototype.sendADCountEvent = function () {
      var t = this.nowAidconview;
      if (t && t.currentData) {
        var e = {},
          i = t.currentData.ad_pos,
          n = t.currentData.id;
        e.appId = Global.getappid(), e.uid = WXGamePlatform.uid, e.ad_pos = i, e.ad_id = n, TongjiHttps.getInstance().send("c=xyx&a=adExposureNum", e);
      }
    }, t.prototype.update = function (t) {
      if (this._time += t, this._time > 15e3 && (this._time = 0, this._adidict)) {
        var e;
        for (var i in this._adidict)(e = this._adidict[i]) && e.nextAdv();
      }
    }, t.prototype.sendTongji = function (t) {
      if (t) {
        console.log(t)
        // var e = t.ad_pos,
        //   i = t.id,
           n = t.url_page + t.url_path,
           r = t.url_appId,
           a = t.url_tiao,
        //   s = t.qrcode,
        //   o = "https://click.xyx.bkdau.cn/click/" + Global.appid + "/" + e + "/" + i;
        // TongjiHttps.getInstance().sendbyget(o, "", null),
       //  this.sendDRTongji(e, i, n, r),
        //  0 == a ? WXGamePlatform.getInstance().openMiniPrograme("wx641598c6b2c2e309", n) : 
        //  1 == a ?
           WXGamePlatform.getInstance().openMiniPrograme(r, n);
           //:
        //   2 == a &&
       //    WXGamePlatform.getInstance().showPreviewImage(s);
      }
    }, t.prototype.sendDRTongji = function (t, e, i, n) {
      var r = {};
      r.appId = Global.getappid(), r.uid = WXGamePlatform.uid, r.ad_pos = t, r.ad_id = e, TongjiHttps.getInstance().send("c=xyx&a=rmDuplicateClick", r);
    }, t.prototype.closeAdi = function (t) {
      if (this._adidict && this._adidict[t]) {
        var e = this._adidict[t];
        e.dispose(), e = null, delete this._adidict[t];
      }
    }, t.prototype.getChoutiArr = function (e, i) {
      var n = [];
      "" != this.adiUrl ? ResourceManager.getInstance().Loader(this.adiUrl, Laya.Loader.JSON, this, function () {
        var r = t.getInstance().adiUrl,
          a = ResDataManager.getInastance().getResByurl(r);
        a && a.chouti && (n = a.chouti).sort(t.getInstance().sortFun), i && e && i.call(e, n);
      }) : i && e && i.call(e, n);
    }, t.prototype.sortFun = function (t, e) {
      return Number(t.score) < Number(e.score) ? 1 : -1;
    }, t;
  }(),
  ADIType = function () {
    function t() {}
    return t.ADIType_shouye = "shouye", t;
  }(),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ChoutiIconView = function (t) {
    function e() {
      return t.call(this, "loading", "choutiIconView", !0) || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.btn_chouti.onClick(this, this.openchoutiClick);
    }, e.prototype.openchoutiClick = function () {
      this.getProxy(RoleProxy).roleVO;
      ChoutiProxy.shiwanjiangli = 1e3, UiManager.instance.add(ChouTiView);
    }, e.prototype.clearEvent = function () {
      this.btn_chouti.offClick(this, this.openchoutiClick);
    }, e.prototype.destory = function () {
      this.clearEvent(), t.prototype.destory.call(this);
    }, e.key = "ChoutiIconView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ChouTiItem = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._iscangetGold = !1, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      this._iscangetGold = !1, this.onClick(this, this.advHandler);
    }, e.prototype.showData = function (t, e) {
      if (void 0 === e && (e = !1), this._iscangetGold = e, this._itemd = t, this.load_0.url = t.btn.imgs[0], this.text_0.text = t.game_name + "", this.text_getgold && (this.text_getgold.text = ChoutiProxy.shiwanjiangli.toString()), this.img_tag)
        if (null != t.chouti_tag) {
          var i = Number(t.chouti_tag);
          this.img_tag.visible = 0 != i;
        } else this.img_tag.visible = !1;
    }, e.prototype.advHandler = function () {
      this.getProxy(ChoutiProxy).jumptoOtherGame(this._itemd, this._iscangetGold, ChoutiProxy.shiwanjiangli);
    }, e.prototype.dispose = function () {
      this.offClick(this, this.advHandler), t.prototype.dispose.call(this);
    }, e;
  }(ChildBaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ChouTiView = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._chouti1Index = 1, e._chouti1Max = 0, e._time = 0, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      fairygui.UIObjectFactory.setPackageItemExtension("ui://dxoo04z1ldeg9", ChouTiItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://dxoo04z1ldeg2", ChouTiItem), this.loadUi("chouti", this, this.loadcomplete);
    }, e.prototype.loadcomplete = function () {
      this.parseUi("chouti", "chouti", !0), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      this.list_0.setVirtual(), this.list_0.itemRenderer = Laya.Handler.create(this, this.listitemRender, null, !1), this.list_1.setVirtual(), this.list_1.itemRenderer = Laya.Handler.create(this, this.listitemRender1, null, !1);
      var t = ADIGamePlatform.getInstance().adiUrl;
      ResourceManager.getInstance().Loader(t, Laya.Loader.JSON, this, this.loadCallback);
    }, e.prototype.listitemRender1 = function (t, e) {
      this._nowchouti1 && t < this._nowchouti1.length && e.showData(this._nowchouti1[t], !1);
    }, e.prototype.listitemRender = function (t, e) {
      this.choutiObj && t < this.choutiObj.length && e.showData(this.choutiObj[t], !0);
    }, e.prototype.loadCallback = function () {
      this.choutiObj = [], this.choutiObj1 = {}, this._nowchouti1 = [], this._chouti1Index = 1, this._chouti1Max = 0;
      var t = ADIGamePlatform.getInstance().adiUrl,
        e = ResDataManager.getInastance().getResByurl(t);
      if (e && e.chouti) {
        var i, n = this.sortData(e.chouti),
          r = 0,
          a = [];
        for (r = 0; r < n.length; r++) i = n[r], Number(i.score) <= 10 ? this.choutiObj.length < 4 && this.choutiObj.push(i) : a.push(i);
        if (a.length > 0) {
          var s = 0;
          for (r = 0; r < a.length; r++) r % 7 == 0 && (s++, this.choutiObj1[s] = []), this.choutiObj1[s.toString()].push(a[r]);
          this._chouti1Max = s;
        }
      }
      this.list_0.numItems = this.choutiObj.length, 0 == this._chouti1Max ? this.list_1.numItems = 0 : 1 == this._chouti1Max ? this.showlist1Data() : (this.showlist1Data(), TimerService.getInastance().addUpdateTarget(this));
    }, e.prototype.update = function (t) {
      this._time += t, this._time > 3e3 && (this._time = 0, this._chouti1Index >= this._chouti1Max ? this._chouti1Index = 1 : this._chouti1Index++, this.showlist1Data());
    }, e.prototype.showlist1Data = function () {
      this.choutiObj1 && this.choutiObj1.hasOwnProperty(this._chouti1Index.toString()) && (this._nowchouti1 = this.choutiObj1[this._chouti1Index.toString()], this.list_1.numItems = this._nowchouti1.length);
    }, e.prototype.sortData = function (t) {
      return t.sort(this.sortFun), t;
    }, e.prototype.sortFun = function (t, e) {
      return Number(t.score) < Number(e.score) ? 1 : -1;
    }, e.prototype.initEvent = function () {
      this.btn_close.onClick(this, this.oncloseClick);
    }, e.prototype.oncloseClick = function () {
      UiManager.instance.close(e);
    }, e.prototype.clearEvent = function () {
      this.btn_close.offClick(this, this.oncloseClick);
    }, e.prototype.destory = function () {
      TimerService.getInastance().removeUpdateTarget(this), this.clearEvent(), t.prototype.destory.call(this);
    }, e.key = "ChouTiView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ChoutiProxy = function (t) {
    function e() {
      var e = null !== t && t.apply(this, arguments) || this;
      return e._nowStartTime = 0, e._isneedaddTime = !1, e._nowgetGold = 0, e._disTime = 15, e;
    }
    return __extends(e, t), e.prototype.initProxy = function () {
      this.addDataEvent(GameEvent.GameEvnt_enter, this, this.enterHandler), this.addDataEvent(GameEvent.GameEvent_logout, this, this.logoutHandler);
    }, e.prototype.init = function () {
      this._dayProxy = this.getProxy(DayProxy), this._dayProxy.isNewDay ? (this._cacheData = {}, this.addCache()) : this._cacheData = CacheManager.getInstance().getGameCacheObj(RoleDataType.choutid);
    }, e.prototype.addCache = function () {
      CacheManager.getInstance().addGameCacheObj(RoleDataType.choutid, this._cacheData);
    }, e.prototype.showChouti = function () {
      WXGamePlatform.getInstance().isshowChouti() && UiManager.getInstance().add(ChoutiIconView, null, LayerNotify.LAYER_MAXTOP);
    }, e.prototype.logoutHandler = function () {}, e.prototype.enterHandler = function () {
      if (this._isneedaddTime && this._nowSelectData) {
        var t = this._nowSelectData.url_appId;
        if (this._cacheData || (this._cacheData = {}), this._cacheData.hasOwnProperty(t)) WordTipsUtils.showWordTips("此游戏当天奖励已经领取");
        else {
          var e = TimesTamper.getInstance().serverTime - this._nowStartTime;
          Debuger.log("间隔世界：", e), e >= 15 ? (this._cacheData[t] = 1, this.addCache(), this.dispacheDataEvent(GameEvent.GameEvent_changeGold, this._nowgetGold)) : WordTipsUtils.showWordTips("请试玩15秒以上，即可领奖");
        }
      }
    }, e.prototype.jumptoOtherGame = function (t, e, i) {
      if (void 0 === e && (e = !1), void 0 === i && (i = 0), t) {
        this._isneedaddTime = e, this._isneedaddTime && (this._nowStartTime = TimesTamper.getInstance().serverTime, this._nowSelectData = t, this._nowgetGold = i);
        t.url_page, t.url_path;
        ADIGamePlatform.getInstance().sendTongji(t);
      }
    }, e.key = "ChoutiProxy", e.shiwanjiangli = 0, e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  PlayerScript = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._speed = 15, e._nowAniName = "", e._ismoveing = !1, e._scanVecright = new Vector3(0, 3, 0), e._rotationAngle = .7, e._nowAngle = 0, e._isdestorys = !1, e._isStart = !1, e._nowGunId = "", e._nowHelmetId = "", e._nowArmorId = "", e.specialType = 0, e._gunInit = !1, e._isaddMiaozhun = !1, e._mzqlength = 0, e._helmetisInit = !1, e._armorInit = !1, e._outPos = new Vector3(), e.upvec = new Vector3(0, 1, 0), e.isxuanzhuan = !0, e._iscanScan = !1, e._distime = 20, e._isdieing = !1, e._time = 1e3, e._ismove = !1, e.istoright = !0, e.shootleftTime = 0, e;
    }
    return __extends(e, t), e.prototype._load = function (t) {
      this._box = t, this._itemblood = fairygui.UIPackage.createObject("main", "itemblood"), GameLayerManager.getInstance().blood.addChild(this._itemblood), this._itemblood.visible = !1;
    }, e.prototype._start = function (t) {
      this._transform = this._box.transform, this._nowPostion = this._transform.position;
      var e = this._box.getChildAt(0);
      this._weaponrightContainer = e.getChildByName("item_rightwuqi"), this._weaponrightContainer.getChildByName("gun").active = !1, this._weaponleftContainer = e.getChildByName("item_leftwuqi"), this._weaponleftContainer.getChildByName("gun").active = !1, this._nowGunconContainer = this._weaponrightContainer, this._ani = e.getComponentByType(Laya.Animator), this._ani.on(Laya.Event.COMPLETE, this, this.onAniComplete);
      var i = this._box.getChildAt(0).getChildAt(0).getChildByName("body");
      this._bodySkinnedMesh = i.getChildAt(0), this._bodyani = i.getComponentByType(Laya.Animator);
      var n = this._box.getChildAt(0).getChildAt(0).getChildByName("head");
      this._headani = n.getComponentByType(Laya.Animator), this._headSkinnedMesh = n.getChildAt(0), this.changeAction(ActionType.ActionType_stand), this._isStart = !0, this._nowhelmetCfg && !this._helmetisInit && this.changeHelmet(this._nowhelmetCfg), this._nowarmorCfg && !this._armorInit && this.changeArmor(this._nowarmorCfg), this._gunCfg && !this._gunInit && this.changeGun(this._gunCfg, this._isaddMiaozhun, this._mzqlength);
    }, e.prototype.bloodWidthRed = function () {
      if (!this._isdestorys) {
        var t = !1;
        if (this._headSkinnedMesh) {
          t = !0;
          this._headSkinnedMesh.skinnedMeshRender.material.albedo = new Laya.Vector4(1, 0, 0, 1);
        }
        if (this._bodySkinnedMesh) {
          t = !0;
          this._bodySkinnedMesh.skinnedMeshRender.material.albedo = new Laya.Vector4(1, 0, 0, 1);
        }
        t && Laya.timer.once(100, this, this.restMaterialfun, null, !0);
      }
    }, e.prototype.restMaterialfun = function () {
      if (!this._isdestorys) {
        if (this._headSkinnedMesh) {
          this._headSkinnedMesh.skinnedMeshRender.material.albedo = new Laya.Vector4(1, 1, 1, 1);
        }
        if (this._bodySkinnedMesh) {
          this._bodySkinnedMesh.skinnedMeshRender.material.albedo = new Laya.Vector4(1, 1, 1, 1);
        }
      }
    }, e.prototype.changeGun = function (t, e, i, n) {
      void 0 === n && (n = !0), this._isaddMiaozhun = e, this._mzqlength = i;
      var r = !0;
      n || this._gunCfg == t && (r = !1), r && (this._gunCfg = t, this._isStart && (this._gunInit = !0, ResourceManager.getInstance().Loader3D(PathConfig.getgunlh(this._gunCfg.resource), Laya.Sprite3D, this, this.gunLoadfun, null, !0)));
    }, e.prototype.gunLoadfun = function () {
      this._isdestorys || (this.removeGun(), Laya.timer.once(50, this, this.creategun));
    }, e.prototype.creategun = function () {
      this._nowweapon = Laya.Sprite3D.instantiate(Laya.loader.getRes(PathConfig.getgunlh(this._gunCfg.resource))), this._weaponScript = this._nowweapon.addComponent(WeaponScript), this._nowGunconContainer.addChild(this._nowweapon), this._isaddMiaozhun ? this._weaponScript.setGunCfg(this._gunCfg, this._isaddMiaozhun, this._mzqlength) : this._weaponScript.setGunCfg(this._gunCfg, this._isaddMiaozhun, 0);
    }, e.prototype.upgunLev = function (t, e, i) {
      this._weaponScript && this._weaponScript.upGunLev(t, e, i);
    }, e.prototype.setmzToPos = function (t) {
      this._weaponScript && this._weaponScript.setMiaozhunScale(t);
    }, e.prototype.removeGun = function () {
      this._weaponScript && (this._weaponScript.dispose(), this._weaponScript = null, this._nowweapon = null);
    }, e.prototype.changeHelmet = function (t) {
      this._nowhelmetCfg = t, this._isStart && (this._helmetisInit = !0, ResourceManager.getInstance().loader3DArr(PathConfig.getEquipMeshAndMaterial(this._nowhelmetCfg.mesh, this._nowhelmetCfg.resource), this, this.helmetLoadfun, null, !0));
    }, e.prototype.helmetLoadfun = function () {
      !this._isdestorys && this._headSkinnedMesh && (this._headSkinnedMesh.meshFilter.sharedMesh = ResDataManager.getInastance().getResByurl(PathConfig.getequipsMesh(this._nowhelmetCfg.mesh)), this._headSkinnedMesh.skinnedMeshRender.material = ResDataManager.getInastance().getResByurl(PathConfig.getequipsMaterials(this._nowhelmetCfg.resource)));
    }, e.prototype.changeArmor = function (t) {
      this._nowarmorCfg = t, this._isStart && (this._armorInit = !0, ResourceManager.getInstance().loader3DArr(PathConfig.getEquipMeshAndMaterial(this._nowarmorCfg.mesh, this._nowarmorCfg.resource), this, this.armorLoadfun, null, !0));
    }, e.prototype.armorLoadfun = function () {
      !this._isdestorys && this._bodySkinnedMesh && (this._bodySkinnedMesh.meshFilter.sharedMesh = ResDataManager.getInastance().getResByurl(PathConfig.getequipsMesh(this._nowarmorCfg.mesh)), this._bodySkinnedMesh.skinnedMeshRender.material = ResDataManager.getInastance().getResByurl(PathConfig.getequipsMaterials(this._nowarmorCfg.resource)));
    }, e.prototype.updateBloodPos = function () {
      if (this._itemblood && this._box) {
        var t = Scene3DManager.getInstance().camera;
        t.viewport.project(this._box.transform.position, t.projectionViewMatrix, this._outPos), this._itemblood.x = this._outPos.x / Laya.stage.clientScaleX, this._itemblood.y = this._outPos.y / Laya.stage.clientScaleY - 150;
      }
    }, e.prototype.initPos = function (t) {
      this._box && (this._nowPostion = t, this._box.transform.position = t, this.playerinitPos = t.clone()), this.updateBloodPos();
    }, e.prototype.onAniComplete = function () {
      this._nowAniName == ActionType.ActionType_shoot && (this._ismoveing ? this.changeAction(ActionType.ActionType_walk) : this.changeAction(ActionType.ActionType_stand));
    }, e.prototype._update = function (e) {
      if (t.prototype._update.call(this, e), !this._isdestorys) {
        if (this._nowPostion && (this._transform.position = this._nowPostion), this._iscanScan && (this.isxuanzhuan ? (this._nowAngle += .01, this._nowAngle > this._rotationAngle && (this._nowAngle = this._rotationAngle, this.isxuanzhuan = !1), this._transform.rotate(new Vector3(0, .01, 0))) : (this._nowAngle -= .01, this._nowAngle < -this._rotationAngle && (this._nowAngle = -this._rotationAngle, this.isxuanzhuan = !0), this._transform.rotate(new Vector3(0, -.01, 0)))), this._isdieing) {
          this._transform.rotate(new Vector3(.1, 0, 0)), this._time += Laya.timer.delta;
          var i = 1 - 5 * this._time / 1e3;
          this._transform.translate(this._dieForword, !1), this._transform.translate(new Vector3(0, i, 0), !1), this._transform.position.y < 0 && (this._isdieing = !1, this.destory());
        }
        this._ismove && (this.changeAction(ActionType.ActionType_walk, !0), this.istoright ? (this._transform.translate(new Laya.Vector3(.02, 0, 0), !1), this._transform.position.x >= this.rightVec.x && (this.istoright = !1), this._transform.lookAt(this.rightVec, this.upvec)) : (this._transform.translate(new Laya.Vector3(-.02, 0, 0), !1), this._transform.position.x <= this.leftVev.x && (this.istoright = !0), this._transform.lookAt(this.leftVev, this.upvec))), this.updateBloodPos();
      }
    }, e.prototype.TurnAngle = function (t) {}, e.prototype.moveToPos = function (t, e, i, n) {
      void 0 === e && (e = null), void 0 === i && (i = null), void 0 === n && (n = null), this.clearTween(), this.lastPos = this._nowPostion.clone(), this.updateMiaozhuIsAlive(!1), this._iscanScan = !1, this._moveendObj = e, this._endCallback = i, this._callbackData = n, this._ismoveing = !0, this.changeAction(ActionType.ActionType_walk);
      var r = Vector3.distance(this._transform.position, t),
        a = Math.floor(r / this._speed * 1e3);
      t.y = Scene3DManager.standY, Laya.Tween.to(this._nowPostion, {
        x: t.x,
        y: t.y,
        z: t.z
      }, a, Laya.Ease.linearNone, Handler.create(this, this.moveendCallback), 0, !0), this._transform.lookAt(t, new Vector3(0, 1, 0));
    }, e.prototype.clearTween = function () {}, e.prototype.moveendCallback = function () {
      this.updateMiaozhuIsAlive(!0), this._ismoveing = !1, this.changeAction(ActionType.ActionType_stand), this._endCallback && this._moveendObj && this._endCallback.call(this._moveendObj, this._callbackData);
    }, e.prototype.changeAction = function (t, e) {
      if (void 0 === e && (e = !1), !this._isdestorys) {
        if (e && t == this._nowAniName) return;
        switch (this._nowAniName = t, t) {
          case ActionType.ActionType_stand:
          case ActionType.ActionType_walk:
          case ActionType.ActionType_shoot:
        }
        this._ani.play(t), this._bodyani.play(t), this._headani.play(t);
      }
    }, e.prototype.startShoot = function (t, e, i) {
      if (void 0 === e && (e = null), void 0 === i && (i = !0), this._weaponScript && !this._isdestorys && this._weaponScript._childbox) {
        this._iscanScan = !1;
        var n = new Vector3();
        if (this.changeAction(ActionType.ActionType_shoot), e) {
          this._transform.lookAt(new Vector3(e.x, Scene3DManager.standY, e.z), this.upvec);
          var r = this._weaponScript._childbox.transform.position;
          Vector3.subtract(e, new Vector3(r.x, Scene3DManager.standY, r.z), n);
        } else n = new Vector3(this._box.transform.forward.x, 0, this._box.transform.forward.z);
        this._ismove && Laya.timer.once(500, this, this.huifumove), this._ismove = !1, this._weaponScript.shoot(this._box.name, n, i, t);
      }
    }, e.prototype.huifumove = function () {
      this._isdestorys || (this._ismove = !0);
    }, e.prototype.setLookAt = function (t) {
      if (!this._isdestorys) {
        var e = new Vector3(t.x, this._transform.position.y, t.z);
        this._transform.lookAt(e, this.upvec), this._nowAngle = 0, this.isxuanzhuan = !0;
      }
    }, e.prototype.changeGunByhand = function (t) {}, e.prototype.setIsScan = function (t) {}, e.prototype.updateAngle = function (t) {
      this._transform && (this._nowquaternion || (this._nowquaternion = new Laya.Quaternion()), Laya.Quaternion.createFromAxisAngle(this.upvec, -t * Math.PI / 180, this._nowquaternion), this._transform.rotation = this._nowquaternion);
    }, e.prototype.onTriggerEnter = function (t) {
      Debuger.log("playerScript onTriggerEnter");
    }, e.prototype.initBlood = function (t, e) {
      void 0 === e && (e = 0), t = Math.floor(t), 0 == e && (e = t), this._itemblood.visible || (this._itemblood.visible = !0), this._itemblood && this._itemblood.initBlood(t, e);
    }, e.prototype.updateBlood = function (t) {
      return this._itemblood ? this._itemblood.updateBloodValue(t) : 0;
    }, Object.defineProperty(e.prototype, "nowBlood", {
      get: function () {
        return this._itemblood ? this._itemblood.nowBlood : 0;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "maxBlood", {
      get: function () {
        return this._itemblood ? this._itemblood.maxBlood : 0;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.updateAlive = function (t) {
      this._box.active != t && Laya.timer.frameOnce(1, this, function () {
        this._box.active = t, this._itemblood && (this._itemblood.visible = t);
      });
    }, e.prototype.die = function (t) {
      this._time = 0, this._dieForword = t, Vector3.normalize(this._dieForword, this._dieForword), Vector3.scale(this._dieForword, 2, this._dieForword), this._isdieing = !0, this._ismove = !1, this._distime = 20;
    }, e.prototype.setismove = function (t, e) {
      this._ismove = t;
      var i = 2 * PosType.halfwidth / 7;
      this._nowPostion.x < e.x ? (this.leftVev = this._nowPostion.clone(), this.rightVec = new Vector3(this._nowPostion.x + i, this._nowPostion.y, this._nowPostion.z), this.istoright = !0) : (this.leftVev = new Vector3(this._nowPostion.x - i, this._nowPostion.y, this._nowPostion.z), this.rightVec = this._nowPostion.clone(), this.istoright = !1);
    }, e.prototype.setDaojishi = function (t) {
      this._itemblood && this._itemblood.updateLeftTime(100, t), this.shootleftTime = 1e3 * t;
    }, e.prototype.updateDaojishi = function (t) {
      this._itemblood && this._itemblood.updateLeftTime(Math.floor(t / this.shootleftTime * 100), Math.ceil(t / 1e3));
    }, e.prototype.updateMiaozhuIsAlive = function (t) {
      this._weaponScript && this._weaponScript.updateMiaozhuIsAlive(t);
    }, e.prototype.destory = function (t) {
      void 0 === t && (t = !0), this.clearTween(), Laya.timer.clear(this, this.restMaterialfun), this._ismove = !1, this._itemblood && (this._itemblood.dispose(), this._itemblood = null), this.removeGun(), this._isdestorys = !0, Laya.timer.frameOnce(1, this, function () {
        this._box.destroy();
      });
    }, e;
  }(Laya.Script),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  RankView = function (t) {
    function e() {
      return t.call(this, "main", "rank") || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      var t = new Laya.Rectangle();
      t.x = 0, t.y = (Global.curHeight() - Global.curWidth() / Global.initWidth * Global.initHeight) / 2, t.width = Global.curWidth(), t.height = Global.curHeight(), WXGamePlatform.getInstance().openFriendRank(RankType.RankType_show_friend_rank, "RankView", t), this._nowStr = this.btn_0.name, WXGamePlatform.getInstance().createBanner(BannerType.BannerType_rank);
    }, e.prototype.initEvent = function () {
      this.btn_pre.onClick(this, this.preclick), this.btn_next.onClick(this, this.nextClick), this.btn_return.onClick(this, this.returnClick), this.btn_share.onClick(this, this.shareclick), this.btn_0.onClick(this, this.btn0click), this.btn_1.onClick(this, this.btn1click);
    }, e.prototype.btn0click = function () {
      this._nowStr != this.btn_0.name && (this._nowStr = this.btn_0.name, WXGamePlatform.getInstance().changeFriendRank("group_week_result"));
    }, e.prototype.btn1click = function () {
      this._nowStr != this.btn_1.name && (this._nowStr = this.btn_1.name, WXGamePlatform.getInstance().changeFriendRank("group_total_result"));
    }, e.prototype.preclick = function () {
      WXGamePlatform.getInstance().prePageRank();
    }, e.prototype.nextClick = function () {
      WXGamePlatform.getInstance().nextPageRank();
    }, e.prototype.returnClick = function () {
      UiManager.instance.close(e);
    }, e.prototype.shareclick = function () {
      WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_default, !1);
    }, e.prototype.clearEvent = function () {
      this.btn_pre.offClick(this, this.preclick), this.btn_next.offClick(this, this.nextClick), this.btn_return.offClick(this, this.returnClick), this.btn_share.offClick(this, this.shareclick), this.btn_0.offClick(this, this.btn0click), this.btn_1.offClick(this, this.btn1click);
    }, e.prototype.destory = function () {
      WXGamePlatform.getInstance().closeFriendRank("RankView"), this.clearEvent(), t.prototype.destory.call(this), WXGamePlatform.getInstance().hideBanner(BannerType.BannerType_rank);
    }, e.key = "RankView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ReviveView = function (t) {
    function e() {
      var e = t.call(this, "main", "revive") || this;
      return e._index = 0, e._leftTime = 15, e._time = 0, e;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      this.c1 = this.getpanelController("c1"), this.c2 = this.getpanelController("c2"), this.text_score.text = "第" + GameStateManager.getInstance().nowGuanQia + "关";
      var t = WXGamePlatform.getInstance().checkEnable();
      this.c1.selectedIndex = t ? 0 : 1, this.btn_select.selected = !t, this._index = t ? 1 : 0, this.text_leftTime.text = this._leftTime.toString(), TimerService.getInastance().addUpdateTarget(this), WXGamePlatform.getInstance().createBanner(BannerType.BannerType_revive);
    }, e.prototype.initEvent = function () {
      this.btn_fuhuo.onClick(this, this.fuhuoclick), this.btn_close.onClick(this, this.closefun), this.btn_toequip.onClick(this, this.toequipclick), this.btn_toguanqia.onClick(this, this.toguanqiaClick);
    }, e.prototype.toequipclick = function () {
      var t = this.getProxy(MainProxy);
      UiManager.instance.close(e), t.endGame(!1), t.openEquip(EquipType.EquipType_gun, 0, null);
    }, e.prototype.toguanqiaClick = function () {
      UiManager.instance.close(e), this.getProxy(MainProxy).endGame(!1), this.getProxy(GuanQIaProxy).openView();
    }, e.prototype.update = function (t) {
      this._time += t, this._time > 1e3 && (this._time = 0, this._leftTime--, this._leftTime <= 0 ? (this._leftTime = 0, this.text_leftTime.text = this._leftTime.toString(), 0 == this._index ? this.shipinview() : (TimerService.getInastance().removeUpdateTarget(this), this.closefun())) : this.text_leftTime.text = this._leftTime.toString());
    }, e.prototype.shipinview = function () {
      this._index = 1, this._leftTime = 15, this.btn_select.selected = !1, this.btn_select.visible = !1;
    }, e.prototype.fuhuoclick = function () {
      console.log("fuhuoclick")
      WXGamePlatform.getInstance().checkEnable() ? (TimerService.getInastance().removeUpdateTarget(this), WXGamePlatform.getInstance().playVideo(this, this.videsrevivesucceed, this.videofailcallback, ShareType.ShareType_fuhuo)) : 0 == this.c2.selectedIndex ? (TimerService.getInastance().removeUpdateTarget(this), WXGamePlatform.getInstance().playVideo(this, this.videsrevivesucceed, this.videofailcallback, ShareType.ShareType_fuhuo)) : WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_fuhuo, !0, this, this.shareCallback);
    }, e.prototype.videofailcallback = function () {
      TimerService.getInastance().addUpdateTarget(this);
    }, e.prototype.videsrevivesucceed = function () {
      this.fuhuosucceed(), WordTipsUtils.showWordTips("恭喜复活");
    }, e.prototype.shareCallback = function () {
      this.fuhuosucceed(), WordTipsUtils.showWordTips("恭喜复活");
    }, e.prototype.looksucceedfun = function () {
      this.fuhuosucceed();
    }, e.prototype.fuhuosucceed = function () {
      UiManager.instance.close(e), GameStateManager.getInstance().reviveGame();
    }, e.prototype.closefun = function () {
      WXGamePlatform.getInstance().checkEnable() ? (UiManager.instance.close(e), this.getProxy(MainProxy).endGame()) : 0 == this._index ? this.shipinview() : (UiManager.instance.close(e), this.getProxy(MainProxy).endGame());
    }, e.prototype.clearEvent = function () {
      this.btn_fuhuo.offClick(this, this.fuhuoclick), this.btn_close.offClick(this, this.closefun), this.btn_toequip.offClick(this, this.toequipclick), this.btn_toguanqia.offClick(this, this.toguanqiaClick);
    }, e.prototype.destory = function () {
      TimerService.getInastance().removeUpdateTarget(this), this.clearEvent(), t.prototype.destory.call(this), WXGamePlatform.getInstance().hideBanner(BannerType.BannerType_revive);
    }, e.key = "ReviveView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  DayProxy = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.init = function () {
      var t = CacheManager.getInstance().getCachestr(RoleDataType.lastDay),
        e = TimeUtils.formatYearMonthDate1(TimesTamper.getInstance().serverTime);
      t != e ? (CacheManager.getInstance().addCachestr(RoleDataType.lastDay, e), this.isNewDay = !0) : this.isNewDay = !1;
    }, e.key = "DayProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  RoleDataType = function (t) {
    function e() {
      return null !== t && t.apply(this, arguments) || this;
    }
    return __extends(e, t), e.choutid = "choutid", e.gameData = "gameData", e.userinfo = "userinfo", e.lev = "lev", e.gold = "gold", e.user_armor = "user_armor", e.user_gun = "user_gun", e.user_helmet = "user_helmet", e.armorData = "armorData", e.gunData = "gunData", e.helmetData = "helmetData", e.tili = "tili", e.lastDay = "lastDay", e.Guanqiadata = "Guanqiadata", e.Goldget_num = "Goldget_num", e.isfirstEnterGame = "isfirstEnterGame", e.isShowDjsNpc = "isShowDjsNpc", e.firstSendmzq = "firstSendmzq", e.lastGameTime = "lastGameTime", e.isfirstPlayGuanqia = "isfirstPlayGuanqia", e.nowwjinfo = "nowwjinfo", e.nowdayShare = "nowdayShare", e.nowdayVideo = "nowdayVideo", e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  RoleProxy = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.initProxy = function () {
      this.addDataEvent(GameEvent.GameEvent_changeGold, this, this.changegoldHandler);
    }, e.prototype.init = function () {
      this._gunProxy = this.getProxy(GunProxy), this._helmetProxy = this.getProxy(HelmetProxy), this._armorProxy = this.getProxy(ArmorProxy);
    }, e.prototype.getHeroBlood = function () {
      return this._helmetProxy.myhelmetVo.cfg.blood + this._armorProxy.myarmorVo.cfg.blood;
    }, e.prototype.changegoldHandler = function (t) {
      this.addGold(t), WordTipsUtils.showWordTips("获得" + t + "金币");
    }, e.prototype.addGold = function (t) {
      this.roleVO.gold += t;
    }, e.prototype.changeEquip = function (t, e) {
      switch (t) {
        case EquipType.EquipType_gun:
          this._gunProxy.changeGun(e);
          break;
        case EquipType.EquipType_helmet:
          this._helmetProxy.changeHelmet(e);
          break;
        case EquipType.EquipType_armor:
          this._armorProxy.changetArmor(e);
      }
    }, e.prototype.uplevEquip = function (t, e, i, n) {
      void 0 === i && (i = null), void 0 === n && (n = null);
      var r = 0;
      switch (t) {
        case EquipType.EquipType_gun:
          if (!e.nextCFg) return WordTipsUtils.showWordTips("已经满级，无法升级"), void(i && n && n.call(i));
          r = e.nextCFg.need;
          break;
        case EquipType.EquipType_helmet:
        case EquipType.EquipType_armor:
          if (!e.nextCfg) return void WordTipsUtils.showWordTips("已经满级，无法升级");
          r = e.nextCfg.number;
      }
      if (r <= this.roleVO.gold) {
        switch (this.roleVO.gold -= r, t) {
          case EquipType.EquipType_gun:
            this._gunProxy.uplevGun(e);
            break;
          case EquipType.EquipType_helmet:
            this._helmetProxy.uplevhelmet(e);
            break;
          case EquipType.EquipType_armor:
            this._armorProxy.uplevarmor(e);
        }
        i && n && n.call(i);
      } else this.getProxy(GoldBuzuProxy).openView(i, n);
    }, e.prototype.buyEquip = function (t, e) {
      var i = 0;
      switch (t) {
        case EquipType.EquipType_gun:
          i = e.nextCFg.need;
          break;
        case EquipType.EquipType_helmet:
        case EquipType.EquipType_armor:
          i = e.nextCfg.number;
      }
      if (i <= this.roleVO.gold) switch (this.roleVO.gold -= i, t) {
        case EquipType.EquipType_gun:
          this._gunProxy.buyGun(e);
          break;
        case EquipType.EquipType_helmet:
          this._helmetProxy.buyhelmet(e);
          break;
        case EquipType.EquipType_armor:
          this._armorProxy.buyarmor(e);
      } else this.getProxy(GoldBuzuProxy).openView(null, null);
    }, e.prototype.invitefriendsgetEquip = function (t, e) {
      switch (this._shareType = t, this._shareVo = e, t) {
        case EquipType.EquipType_gun:
          WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_equiplingqiang, !0, this, this.sharegetequipend);
          break;
        case EquipType.EquipType_helmet:
          WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_equiplinghelmet, !0, this, this.sharegetequipend);
          break;
        case EquipType.EquipType_armor:
          WXGamePlatform.getInstance().startShareApp(ShareType.ShareType_equiplingarmor, !0, this, this.sharegetequipend);
      }
    }, e.prototype.sharegetequipend = function () {
      if (this._shareType && "" != this._shareType && this._shareVo) switch (this._shareType) {
        case EquipType.EquipType_gun:
          this._gunProxy.addHasValue(this._shareVo);
          break;
        case EquipType.EquipType_helmet:
          this._helmetProxy.addHasValue(this._shareVo);
          break;
        case EquipType.EquipType_armor:
          this._armorProxy.addHasValue(this._shareVo);
      }
    }, e.prototype.lookshipingetEquip = function (t, e) {
      this._spType = t, this._spvo = e, WXGamePlatform.getInstance().playVideo(this, this.videosucceed);
    }, e.prototype.videosucceed = function () {
      if (this._spType && "" != this._spType && this._spvo) switch (this._spType) {
        case EquipType.EquipType_gun:
          this._gunProxy.addHasValue(this._spvo);
          break;
        case EquipType.EquipType_helmet:
          this._helmetProxy.addHasValue(this._spvo);
          break;
        case EquipType.EquipType_armor:
          this._armorProxy.addHasValue(this._spvo);
      }
    }, e.prototype.tiaozhangetEquip = function () {
      GameStateManager.getInstance().isstartGame ? WordTipsUtils.showWordTips("当前在游戏中") : (this.getProxy(GuanQIaProxy).openView(), this.getProxy(MainProxy).closeEquip());
    }, e.key = "RoleProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  RoleVO = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._gold = 0, e._level = 0, e;
    }
    return __extends(e, t), e.getInstance = function () {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.init = function () {
      this._cacheproxy = MVCObjectPool.getInstance().getProxy(CacheProxy), this.gold = Number(CacheManager.getInstance().getCachestr(RoleDataType.gold)), this.level = Number(CacheManager.getInstance().getCachestr(RoleDataType.lev)), 0 == this.level && (this.level = 1);
    }, Object.defineProperty(e.prototype, "level", {
      get: function () {
        return this._level;
      },
      set: function (t) {
        this._level != t && (this._level = t);
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "gold", {
      get: function () {
        return this._gold;
      },
      set: function (t) {
        this._gold != t && (this._gold = t, CacheManager.getInstance().addCachestr(RoleDataType.gold, this._gold), EventUtils.dispatchEvent(GameEvent.GameEvent_goldUpdate));
      },
      enumerable: !0,
      configurable: !0
    }), e;
  }(BaseVO),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  SelectGuanqiaView = function (t) {
    function e(e) {
      var i = t.call(this, "main", "selectguanqia") || this;
      return i._vo = e, i;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {
      this._guanqiaproxy = this.getProxy(GuanQIaProxy), this.c2 = this.getpanelController("c2"), this.c2.selectedIndex = 0, this.text_golddesc0.text = "X" + this._vo.cfg.reward, this.text_golddesc1.text = "X" + this._vo.kunnanGold, this.text_golddesc2.text = "X" + this._vo.diyuGold, this.text_qiangdesc0.text = "10%概率", this.text_qiangdesc1.text = "20%概率", this.text_qiangdesc2.text = "30%概率", this.text_guaqia.text = this._vo.cfg.screening.toString();
      var t = GunCFG.dict[this._vo.cfg.gunid];
      this.load_0.url = this.load_1.url = this.load_2.url = PathConfig.getgunicon(t.resource2D), this.updateStateShow();
    }, e.prototype.initEvent = function () {
      this.btn_close.onClick(this, this.onclosefun), this.btn_start.onClick(this, this.startgamefun), this.btn_0.onClick(this, this.btnClick), this.btn_1.onClick(this, this.btnClick), this.btn_2.onClick(this, this.btnClick);
    }, e.prototype.btnClick = function () {
      this.updateStateShow();
    }, e.prototype.onclosefun = function () {
      UiManager.instance.close(e);
    }, e.prototype.startgamefun = function () {
      var t = 0;
      t = 0 == this.c2.selectedIndex ? GuanQiaStateType.GuanQiaStateType_2 : 1 == this.c2.selectedIndex ? GuanQiaStateType.GuanQiaStateType_3 : GuanQiaStateType.GuanQiaStateType_4, this._guanqiaproxy.startGuanqiaGame(this._vo, t), this.onclosefun();
    }, e.prototype.updateStateShow = function () {
      switch (this.c2.selectedIndex) {
        case 0:
          this.text_desc.text = "简单难度可获得" + this._vo.cfg.reward + "金币，有10%概率获得枪支~";
          break;
        case 1:
          this.text_desc.text = "简单难度可获得" + this._vo.kunnanGold + "金币，有20%概率获得枪支~";
          break;
        case 2:
          this.text_desc.text = "简单难度可获得" + this._vo.diyuGold + "金币，有30%概率获得枪支~";
      }
    }, e.prototype.clearEvent = function () {
      this.btn_close.offClick(this, this.onclosefun), this.btn_start.offClick(this, this.startgamefun), this.btn_0.offClick(this, this.btnClick), this.btn_1.offClick(this, this.btnClick), this.btn_2.offClick(this, this.btnClick);
    }, e.prototype.destory = function () {
      this.clearEvent(), t.prototype.destory.call(this);
    }, e.key = "SelectGuanqiaView", e;
  }(BaseView),
  TimesTamper = function () {
    function t() {
      this.lastgameTime = 0, this._serverTime = 0, this.iscan = !1, this._time = 0;
    }
    return t.getInstance = function () {
      return this._instance || (this._instance = new t()), this._instance;
    }, t.prototype.init = function () {
      this._cacheProxy = MVCObjectPool.getInstance().getProxy(CacheProxy), this.lastgameTime = Number(CacheManager.getInstance().getCachestr(RoleDataType.lastGameTime)), Laya.timer.frameLoop(1, this, this.update);
    }, t.prototype.updateServiceTime = function (t) {
      this._serverTime = Number(t), this.iscan = !0, CacheManager.getInstance().addCachestr(RoleDataType.lastGameTime, this.serverTime);
    }, t.prototype.update = function () {
      this.iscan && (this._time += Laya.timer.delta, this._serverTime += Laya.timer.delta / 1e3, this._time >= 3e4 && (this._time = 0, CacheManager.getInstance().addCachestr(RoleDataType.lastGameTime, this.serverTime)));
    }, Object.defineProperty(t.prototype, "serverTime", {
      get: function () {
        return this._serverTime;
      },
      enumerable: !0,
      configurable: !0
    }), t;
  }(),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  UpGunProxy = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.prototype.upgun = function () {
      UiManager.instance.close(UpGunView);
      var t = this.getProxy(GunProxy);
      this.getProxy(RoleProxy).uplevEquip(EquipType.EquipType_gun, t.mygunVo, this, this.upEnd);
    }, e.prototype.upEnd = function () {
      GameStateManager.getInstance().endGame();
    }, e.key = "UpGunProxy", e;
  }(Proxys),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  UpGunView = function (t) {
    function e() {
      return t.call(this, "main", "upgun") || this;
    }
    return __extends(e, t), e.prototype.onInit = function () {
      t.prototype.onInit.call(this), this.initView(), this.initEvent();
    }, e.prototype.initView = function () {}, e.prototype.initEvent = function () {
      this.btn_close.onClick(this, this.onclosefun), this.btn_ok.onClick(this, this.upfun);
    }, e.prototype.onclosefun = function () {
      UiManager.instance.close(e), GameStateManager.getInstance().endGame();
    }, e.prototype.upfun = function () {
      this.getProxy(UpGunProxy).upgun();
    }, e.prototype.clearEvent = function () {
      this.btn_close.offClick(this, this.onclosefun), this.btn_ok.offClick(this, this.upfun);
    }, e.prototype.destory = function () {
      this.clearEvent(), t.prototype.destory.call(this);
    }, e.key = "UpGunView", e;
  }(BaseView),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  BinderManager = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.binderAll = function () {
      this.binderFairygui(), this.binderGComponent();
    }, e.binderFairygui = function () {
      fairygui.UIConfig.gameLoaderManager = ResourceManager.getInstance(), fairygui.UIConfig.gameEffectDict = {};
    }, e.binderGComponent = function () {
      fairygui.UIObjectFactory.setPackageItemExtension("ui://qoid9c8lo9ps2", GlobalWaiting), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefwd1s2", MainShouyeUi), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefldgux", ItemGuaQia), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefwd1s1", MainTopUI), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefldegba", ChouTiItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefe4wy2u", ItemBlood), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefd9e73r", GuanQiaItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefd9e73q", GuanqiaItemState), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefp3md63", EquipView), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefp3md6s", EquipItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefe4wy19", MainRightUi), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefo2tp77", MainRIghtBtnItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefo2tp78", MainRIghtBtnItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefo2tp79", MainRIghtBtnItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefjgmk7i", BloodTipsItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefjgmk7k", BossTipsItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefjx8u9o", AddBloodItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csef7p969s", LeftTimeItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefql4ia5", BaoTouItem), fairygui.UIObjectFactory.setPackageItemExtension("ui://8aq1csefs3nlaz", ItemJJCY);
    }, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  CacheManager = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.getInstance = function () {
      return this.instance || (this.instance = new e()), this.instance;
    }, e.prototype.init = function () {}, e.prototype.addGameCacheObj = function (t, e) {
      Laya.Browser.window.wx ? WXGamePlatform.getInstance().setStorageSync(t, e) : Laya.LocalStorage.setJSON(t, e);
    }, e.prototype.getGameCacheObj = function (t) {
      var e;
      return null != (e = Laya.Browser.window.wx ? WXGamePlatform.getInstance().getStorageSync(t) : Laya.LocalStorage.getJSON(t)) && void 0 != e && "" != e || (e = {}), e;
    }, e.prototype.addCachestr = function (t, e) {
      Laya.Browser.window.wx ? WXGamePlatform.getInstance().setStorageSync(t, e) : Laya.LocalStorage.setItem(t, e);
    }, e.prototype.getCachestr = function (t) {
      e = "0";
      if (Laya.Browser.window.wx) e = WXGamePlatform.getInstance().getStorageSync(t);
      else {
        var e;
        null != (e = Laya.LocalStorage.getItem(t)) && "" != e || (e = "0");
      }
      return e;
    }, e.prototype.removeCache = function (t) {
      Laya.Browser.window.wx ? WXGamePlatform.getInstance().removeStorage(t) : Laya.LocalStorage.removeItem(t);
    }, e.prototype.clearAll = function () {
      Laya.Browser.window.wx ? WXGamePlatform.getInstance().clearStorage() : (Laya.LocalStorage.clear(), Laya.LocalStorage.removeItem(RoleDataType.gameData));
    }, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  GameLayerManager = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e.background = new fairygui.GComponent(), e.blood = new fairygui.GComponent(), e.uiLayer = new fairygui.GComponent(), e.topLayer = new fairygui.GComponent(), e.maxTopLayer = new fairygui.GComponent(), e;
    }
    return __extends(e, t), e.getInstance = function () {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.initlayer = function () {
      Global.stage.addChild(fairygui.GRoot.inst.displayObject), fairygui.GRoot.inst.addChild(this.background), fairygui.GRoot.inst.addChild(this.blood), fairygui.GRoot.inst.addChild(this.uiLayer), fairygui.GRoot.inst.addChild(this.topLayer), fairygui.GRoot.inst.addChild(this.maxTopLayer), fairygui.UIConfig.maskLayer = this.topLayer;
    }, e;
  }(Laya.EventDispatcher),
  ResDataManager = function () {
    function t() {
      this._clearTime = 6e5, this._time = 0;
    }
    return t.getInastance = function () {
      return null == this.instance && (this.instance = new t()), this.instance;
    }, t.prototype.init = function () {
      this._resourceurlPool = {}, this._pkgPool = {}, this.nocacheDict = {
        loading: !0,
        mainView: !0,
        uicomponent: !0,
        fightloading: !0,
        guide: !0
      }, TimerService.getInastance().addUpdateTarget(this);
    }, t.prototype.update = function (t) {
      if (this._time += t, this._time > 6e4) {
        if (ResourceManager.instance.running) return void(this._time -= 1e3);
        this.updateGroupPool(), this._time = 0;
      }
    }, t.prototype.updateGroupPool = function () {
      var t = Laya.Browser.now();
      if (this._pkgPool) {
        var e;
        for (var i in this._pkgPool)(e = this._pkgPool[i]).ref <= 0 && t - e.time > this._clearTime && (Debuger.log("清理cache:" + e.packageName), this.removePackage(e.packageName, !0), this.removeCacheVO(e.packageName));
      }
    }, t.prototype.addCacheVO = function (t, e) {
      if (e && !this.nocacheDict.hasOwnProperty(t)) {
        var i;
        this._pkgPool.hasOwnProperty(t) ? i = this._pkgPool[t] : ((i = new CacheVO()).packageName = t, this._pkgPool[t] = i), i.ref++, i.time = Laya.Browser.now();
      }
    }, t.prototype.removeCacheVO = function (t) {
      this._pkgPool[t] && delete this._pkgPool[t];
    }, t.prototype.adduiPackage = function (t, e, i) {
      void 0 === e && (e = !0), void 0 === i && (i = !0), e && ("loading" == t || "rank" == t || "chouti" == t ? fairygui.UIPackage.addPackage(PathConfig.wxlocal + PathConfig.ui + t, t) : fairygui.UIPackage.addPackage(PathConfig.assetHost + PathConfig.ui + t, t)), this.addCacheVO(t, i);
    }, t.prototype.addPlayerPackage = function (t, e, i) {
      void 0 === e && (e = !0), void 0 === i && (i = !0), e && fairygui.UIPackage.addPackage(PathConfig.assetHost + "avaters/" + t, t), this.addCacheVO(t, i);
    }, t.prototype.addavaterPackage = function (t, e, i) {
      void 0 === e && (e = !0), void 0 === i && (i = !0), e && fairygui.UIPackage.addPackage(PathConfig.assetHost + "avaters/" + t, t), this.addCacheVO(t, i);
    }, t.prototype.addPackage = function (t, e, i, n) {
      void 0 === i && (i = !0), void 0 === n && (n = !0), i && fairygui.UIPackage.addPackage(t + e, e), this.addCacheVO(e, n);
    }, t.prototype.removePackage = function (t, e) {
      if (void 0 === e && (e = !1), "" != t && null != t)
        if (e) fairygui.UIPackage.removePackage(t), this._pkgPool.hasOwnProperty(t) && delete this._pkgPool[t];
        else if (this._pkgPool.hasOwnProperty(t)) {
        var i = this._pkgPool[t];
        i && i.ref--;
      }
    }, t.prototype.getResByurl = function (t, e) {
      return void 0 === e && (e = !0), e && (null == this._resourceurlPool[t] && (this._resourceurlPool[t] = 0), this._resourceurlPool[t]++), Laya.loader.getRes(t);
    }, t.prototype.clearResByUrl = function (t, e) {
      void 0 === e && (e = !1), this._resourceurlPool[t] ? (this._resourceurlPool[t]--, (e || this._resourceurlPool[t] <= 0) && (Laya.loader.clearRes(t, !0), delete this._resourceurlPool[t])) : Laya.loader.clearRes(t, !0);
    }, t.prototype.clearResByArrUrls = function (t, e) {
      void 0 === e && (e = ""), "" != e && fairygui.UIPackage.removePackage(e);
      for (var i in t) this.clearResByUrl(t[i].url, !0);
    }, t.prototype.addEffectPackage = function (t, e, i) {
      void 0 === e && (e = !0), void 0 === i && (i = !0), e && fairygui.UIPackage.addPackage(PathConfig.assetHost + PathConfig.ui + t, t), this.addCacheVO(t, i);
    }, t;
  }(),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  ResourceManager = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._groupIndex = 0, e.running = !1, e._loadNum = 0, e._loadedNum = 0, e._preloadNum = 0, e._cut = 0, e._nowLoadArr = null, e;
    }
    return __extends(e, t), e.getInstance = function () {
      return null == this.instance && (this.instance = new e()), this.instance;
    }, e.prototype.init = function () {
      this._configs = new Array(), this._groups = {}, Laya.loader.on(Laya.Event.ERROR, this, this.onError);
    }, e.prototype.onLoadConfigComplete = function () {
      null != this._onConfigCompleteTarget && null != this._onConfigComplete && this._onConfigComplete.call(this._onConfigCompleteTarget);
    }, e.prototype.loadGroup = function (t, e, i, n, r, a) {
      void 0 === n && (n = null), void 0 === r && (r = !0), void 0 === a && (a = null), Debuger.log(t);
      var s = {};
      s.complete = i, s.completeTarget = e, s.progress = n, s.urls = RecConfigs.getInstance().groupdict[t], s.isShow = r, s.args = a, s.type = "group", s.resouseType = "2D", this._configs.push(s), this.loadStart();
    }, e.prototype.Loader = function (t, e, i, n, r, a) {
      void 0 === r && (r = null), void 0 === a && (a = !0);
      var s = {};
      s.complete = n, s.completeTarget = i, s.progress = r, s.urls = [{
        url: t,
        type: e
      }], s.isShow = a, s.type = "single", s.resouseType = "2D", this._configs.push(s), this.loadStart();
    }, e.prototype.Loaders = function (t, e, i, n, r, a) {
      void 0 === n && (n = null), void 0 === r && (r = !0), void 0 === a && (a = null);
      var s = {};
      s.complete = i, s.completeTarget = e, s.progress = n, s.urls = t, s.isShow = r, s.type = "arr", s.args = a, s.resouseType = "2D", this._configs.push(s), this.loadStart();
    }, e.prototype.loaderArr = function (t, e, i, n, r) {
      void 0 === n && (n = null), void 0 === r && (r = 3);
      var a = {};
      a.complete = i, a.completeTarget = e, a.progress = n, a.urls = t, a.isShow = !1, a.type = "loaderArr", a.cut = r, a.resouseType = "2D", this._configs.push(a), this.startLoad1();
    }, e.prototype.startLoad1 = function () {
      !this.running && this._configs.length > 0 && (this._nowLoadData = this._configs.shift(), this._nowLoadArr = this._nowLoadData.urls.concat().reverse(), this._loadNum = this._nowLoadArr.length, this._loadedNum = 0, this._preloadNum = this._loadedNum, this._cut = Number(this._nowLoadData.cut), this.loadStart1());
    }, e.prototype.loadStart1 = function () {
      if (!this.running)
        if (this._nowLoadArr && this._nowLoadArr.length > 0) {
          this.running = !0;
          var t;
          t = this._nowLoadArr.length > this._cut ? this._nowLoadArr.splice(0, this._cut) : this._nowLoadArr.splice(0), this._cut = t.length, this._preloadNum = this._loadedNum, this.onLoadingArr(0);
          var e = this._nowLoadData.resouseType;
          "2D" == e || null == e ? Laya.loader.load(t, Handler.create(this, this.onLoadCompleteArr), Handler.create(this, this.onLoadingArr, null, !1)) : Laya.loader.create(t, Handler.create(this, this.onLoadCompleteArr), Handler.create(this, this.onLoadingArr, null, !1));
        } else this._nowLoadData = null, this.startLoad1();
    }, e.prototype.onLoadingArr = function (t) {
      if (this._loadedNum = this._preloadNum + t * this._cut, this._nowLoadData) {
        var e = Math.ceil(this._loadedNum / this._loadNum * 100);
        null != this._nowLoadData.progress && this._nowLoadData.progress.call(this._nowLoadData.completeTarget, e, Math.floor(100 * t));
      }
    }, e.prototype.onLoadCompleteArr = function () {
      this.onLoadingArr(1), this._loadedNum = this._preloadNum + this._cut, this.running = !1, this._loadedNum == this._loadNum && this._nowLoadData && this._nowLoadData.complete && this._nowLoadData.complete.call(this._nowLoadData.completeTarget), Laya.timer.callLater(this, this.loadStart1);
    }, e.prototype.loadStart = function () {
      if (!this.running && 0 != this._configs.length) {
        this.running = !0, this._nowLoadData = this._configs[0];
        var t = this._nowLoadData.urls;
        this._nowLoadData.isShow && fairygui.GRoot.inst.showModalWait();
        var e = this._nowLoadData.resouseType;
        null != t && ("2D" == e || null == e ? Laya.loader.load(t, Handler.create(this, this.onLoadComplete), Handler.create(this, this.onLoading, null, !1)) : Laya.loader.create(t, Handler.create(this, this.onLoadComplete), Handler.create(this, this.onLoading, null, !1)));
      }
    }, e.prototype.onLoading = function (t) {
      this._nowLoadData && (t = Math.ceil(Number(100 * t)), null != this._nowLoadData.progress && this._nowLoadData.progress.call(this._nowLoadData.completeTarget, t));
    }, e.prototype.onLoadComplete = function (t) {
      void 0 === t && (t = null), fairygui.GRoot.inst.closeModalWait(), this._nowLoadData && this._nowLoadData.complete && (this._nowLoadData.args ? this._nowLoadData.complete.call(this._nowLoadData.completeTarget, this._nowLoadData.args) : this._nowLoadData.complete.call(this._nowLoadData.completeTarget)), this.running = !1, this._nowLoadData = null, this._configs.shift(), this.loadStart();
    }, e.prototype.onError = function (t) {
      fairygui.GRoot.inst.closeModalWait(), Debuger.log("加载失败: " + t);
    }, e.prototype.loadEffect = function (t, e, i, n) {
      void 0 === n && (n = null);
      var r = RecConfigs.getInstance().groupdict[t];
      r && r.length > 0 && Laya.loader.load(r, Handler.create(e, i, [n]));
    }, e.prototype.addeffectPackage = function (t, e) {
      void 0 === e && (e = !0), Debuger.log("addeffectPackage:" + t), ResDataManager.getInastance().addEffectPackage(t, e);
    }, e.prototype.removeeffectpackage = function (t, e) {
      void 0 === e && (e = !1), Debuger.log("removeeffectpackage:" + t), ResDataManager.getInastance().removePackage(t, e);
    }, e.prototype.Loader3D = function (t, e, i, n, r, a) {
      void 0 === r && (r = null), void 0 === a && (a = !0);
      var s = {};
      s.complete = n, s.completeTarget = i, s.progress = r, s.urls = [{
        url: t,
        type: e
      }], s.isShow = a, s.type = "single", s.resouseType = "3D", this._configs.push(s), this.loadStart();
    }, e.prototype.loadGroup3D = function (t, e, i, n, r, a) {
      void 0 === n && (n = null), void 0 === r && (r = !0), void 0 === a && (a = null), Debuger.log(t);
      var s = {};
      s.complete = i, s.completeTarget = e, s.progress = n, s.urls = RecConfigs.getInstance().groupdict[t], s.isShow = r, s.args = a, s.type = "group", s.resouseType = "3D", this._configs.push(s), this.loadStart();
    }, e.prototype.loader3DArr = function (t, e, i, n, r) {
      void 0 === n && (n = null), void 0 === r && (r = !1);
      var a = {};
      a.complete = i, a.completeTarget = e, a.progress = n, a.urls = t, a.isShow = r, a.type = "loaderArr", a.resouseType = "3D", this._configs.push(a), this.loadStart();
    }, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  SoundssManager = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._isbgOpen = !0, e._gamesoundOpen = !0, e._isAllOpen = !0, e._nowBgName = "", e._isopenNum = 0, e;
    }
    return __extends(e, t), e.getInstance = function () {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.init = function () {
      Laya.SoundManager.autoReleaseSound = !1, Laya.SoundManager.autoStopMusic = !0;
    }, Object.defineProperty(e.prototype, "gamesoundOpen", {
      get: function () {
        return this._gamesoundOpen;
      },
      set: function (t) {
        this._gamesoundOpen = t, Laya.SoundManager.soundMuted = !t, fairygui.UIConfig.buttonSoundVolumeScale = 1 == t ? 1 : 0;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "isbgOpen", {
      get: function () {
        return this._isbgOpen;
      },
      set: function (t) {
        this._isbgOpen = t, Laya.SoundManager.musicMuted = !t;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "isAllOpen", {
      get: function () {
        return this._isAllOpen;
      },
      set: function (t) {
        this._isAllOpen = t, t ? (this._isopenNum--, this._isopenNum < 0 && (this._isopenNum = 0), 0 == this._isopenNum && (this.setGameVolume(1), this.playbgSound(this._nowBgName), fairygui.UIConfig.buttonSoundVolumeScale = 1)) : (this._isopenNum++, this.setGameVolume(0), this.stopbgSound(), fairygui.UIConfig.buttonSoundVolumeScale = 0);
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "bgSoundVolume", {
      get: function () {
        return Laya.SoundManager.musicVolume;
      },
      set: function (t) {
        Laya.SoundManager.setMusicVolume(t);
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "soundVolume", {
      get: function () {
        return Laya.SoundManager.soundVolume;
      },
      set: function (t) {
        Laya.SoundManager.setSoundVolume(t);
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.setGameVolume = function (t) {
      this.bgSoundVolume = .2 * t, this.soundVolume = t;
    }, e.prototype.playbgSound = function (t) {
      this._nowBgName = t, this._isAllOpen && "" != this._nowBgName && Laya.SoundManager.playMusic(PathConfig.getsound(this._nowBgName));
    }, e.prototype.stopbgSound = function () {
      Laya.SoundManager.stopMusic();
    }, e.prototype.playGameSound = function (t, e) {
      void 0 === e && (e = 1), this._isAllOpen && "" != t && Laya.SoundManager.playSound(PathConfig.getsound(t), e);
    }, e.prototype.stopGameSound = function () {
      Laya.SoundManager.stopAllSound();
    }, e.prototype.stopAll = function () {
      Laya.SoundManager.stopAll();
    }, e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  TimerService = function (t) {
    function e() {
      var e = t.call(this) || this;
      return e._timeScale = 1, e._unscalableList = [], e;
    }
    return __extends(e, t), e.getInastance = function () {
      return null == this.instance && (this.instance = new e()), this.instance;
    }, e.prototype.init = function () {
      Laya.timer.frameLoop(1, this, this.onTimer);
    }, e.prototype.onTimer = function () {
      var t = 0;
      for (t = 0; t < this._unscalableList.length; t++) this._unscalableList[t].update(Laya.timer.delta * this._timeScale);
    }, e.prototype.hasUpdataTarget = function (t) {
      return -1 != this._unscalableList.indexOf(t);
    }, e.prototype.addUpdateTarget = function (t) {
      -1 == this._unscalableList.indexOf(t) && this._unscalableList.push(t);
    }, e.prototype.removeUpdateTarget = function (t) {
      var e = this._unscalableList.indexOf(t); - 1 != e && this._unscalableList.splice(e, 1);
    }, Object.defineProperty(e.prototype, "timeScale", {
      get: function () {
        return this._timeScale;
      },
      set: function (t) {
        (t < 0 || isNaN(t)) && (t = 1), this._timeScale = t;
      },
      enumerable: !0,
      configurable: !0
    }), e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  UiAlignType = function (t) {
    function e() {
      return null !== t && t.apply(this, arguments) || this;
    }
    return __extends(e, t), e.align_top = "align_top", e.align_Down = "align_Down", e.align_Center = "align_Center", e.align_None = "align_None", e.align_top_left = "align_top_left", e.align_top_right = "align_top_right", e.align_down_left = "align_down_left", e.align_down_right = "align_down_right", e.align_top_center = "align_top_center", e.align_down_center = "align_down_center", e.align_middle_center = "align_middle_center", e;
  }(Laya.EventDispatcher),
  __extends = this && this.__extends || function () {
    var t = function (e, i) {
      return (t = Object.setPrototypeOf || {
          __proto__: []
        }
        instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        })(e, i);
    };
    return function (e, i) {
      function n() {
        this.constructor = e;
      }
      t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
    };
  }(),
  UiManager = function (t) {
    function e() {
      return t.call(this) || this;
    }
    return __extends(e, t), e.getInstance = function () {
      return this.instance || (this.instance = new e()), this.instance;
    }, e.prototype.init = function () {
      this._views = {};
    }, e.prototype.add = function (t, e, i) {
      if (void 0 === e && (e = null), void 0 === i && (i = LayerNotify.LAYER_UILAYER), null == t.key) throw new Error("view have no key");
      var n = t.key;
      if (this._views[n]) {
        var r = this._views[n];
        return r.parent && r.parent.setChildIndex(r, r.parent.numChildren - 1), r;
      }
      var a;
      return a = null != e ? new t(e) : new t(), a.viewKey = t, i == LayerNotify.LAYER_BACKGROUND ? GameLayerManager.getInstance().background.addChild(a) : i == LayerNotify.LAYER_UILAYER ? GameLayerManager.getInstance().uiLayer.addChild(a) : i == LayerNotify.LAYER_TOPLAYER ? GameLayerManager.getInstance().topLayer.addChild(a) : i == LayerNotify.LAYER_MAXTOP && GameLayerManager.getInstance().maxTopLayer.addChild(a), this._views[n] = a, a;
    }, e.prototype.close = function (t) {
      var e = t.key,
        i = this._views[e];
      i && (i.destory(), i = null, delete this._views[e]);
    }, e.prototype.onresize = function (t, e) {
      if (null != this._views) {
        var i;
        for (var n in this._views)(i = this._views[n]).setSize(t, e), i.layout();
      }
    }, e.prototype.getView = function (t) {
      var e = t.key;
      return this._views[e];
    }, e;
  }(Laya.EventDispatcher),
  Stage = Laya.Stage,
  Point = Laya.Point,
  HttpRequest = Laya.HttpRequest,
  Loader = laya.net.Loader,
  Handler = laya.utils.Handler,
  Skeleton = Laya.Skeleton,
  Templet = Laya.Templet,
  Sprite = Laya.Sprite,
  Vector3 = Laya.Vector3,
  Sprite3D = Laya.Sprite3D,
  GameMain = function () {
    function t() {
      Laya.MiniAdpter.init(!0), Laya3D.init(Global.initWidth, Global.initHeight, !0), Laya.stage.scaleMode = Stage.SCALE_FIXED_WIDTH, Laya.stage.alignH = Stage.ALIGN_CENTER, Laya.stage.alignV = Stage.ALIGN_TOP, Laya.stage.screenMode = Stage.SCREEN_VERTICAL, Laya.stage.bgColor = "#6cbdf4", Laya.stage.on("resize", this, this.onResize);
    }
    return t.prototype.onResize = function () {
      Laya.stage.off("resize", this, this.onResize), Global.setVars(), PathConfig.init(), fairygui.UIConfig.packageFileExtension = "bin", fairygui.UIConfig.textureLinearSampling = !0, fairygui.UIConfig.versions = Global.versions, fairygui.UIConfig.disTips = 1e3, fairygui.UIConfig.defaultFont = "黑体";
      new GameContents().initGame();
    }, t;
  }();
new GameMain();